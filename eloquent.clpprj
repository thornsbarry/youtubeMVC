<?xml version="1.0" encoding="utf-8"?>
<project name="D:\OSPanel\domains\localhost\eloquent\eloquent.clpprj">
	<settings><PM_URL><![CDATA[D:/OSPanel/domains/tlaravel.loc/]]></PM_URL><PM_HOME_URL><![CDATA[D:/OSPanel/domains/tlaravel.loc/]]></PM_HOME_URL><PM_LIBS><![CDATA[]]></PM_LIBS><PM_FTP_CONNECTION><![CDATA[]]></PM_FTP_CONNECTION><PM_FTP_DIR><![CDATA[]]></PM_FTP_DIR><PM_FTP_UPLOAD_ON_SAVE><![CDATA[INT:0]]></PM_FTP_UPLOAD_ON_SAVE></settings><removed value=";"/><added value=""/><lastopfiles>
		<file name="D:\OSPanel\domains\localhost\eloquent\composer.json"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\index.php"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\config.php"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\app\models\Database.php"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\app\models\User.php"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\app\models\Article.php"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\app\controllers\Users.php"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\app\controllers\Articles.php"/>
	</lastopfiles>
	<codestructure version="5.8">
		<phptree>
			<treenode node="Application;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Foundation\Application.php;f0;6;1;99;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Console\Application.php;f0;4;1;21;;;;vpos;;vContainer;;c;;r;;d0,7;;b0,0;;m">
				<treenode node="basePath;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Foundation\Application.php;f11;20;30;20;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the base path of the Laravel installation.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="boot;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Foundation\Application.php;f11;68;26;68;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Boot the application's service providers.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="booted;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Foundation\Application.php;f11;84;37;84;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Register a new &quot;booted&quot; listener.&#xA;&#xA;Parameters:&#xA;    mixed $callback;;d-1,-1;;b1,0;;mmixed $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Foundation\Application.php;f27;84;36;84;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="booting;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Foundation\Application.php;f11;76;38;76;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Register a new boot listener.&#xA;&#xA;Parameters:&#xA;    mixed $callback;;d-1,-1;;b1,0;;mmixed $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Foundation\Application.php;f28;76;37;76;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="call;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Console\Application.php;f11;13;58;13;;;;vpos;;vint;;r&#xA;Description&#xA;     Call a console application command.&#xA;&#xA;Parameters:&#xA;    string $command&#xA;    array $parameters;;d-1,-1;;b1,0;;mstring $command;;parray $parameters;;p">
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Console\Application.php;f25;13;33;13;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Console\Application.php;f41;13;52;13;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="environment;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Foundation\Application.php;f11;28;33;28;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get or check the current application environment.&#xA;&#xA;Parameters:&#xA;    mixed;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="getCachedCompilePath;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Foundation\Application.php;f11;91;42;91;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the path to the cached &quot;compiled.php&quot; file.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="getCachedServicesPath;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Foundation\Application.php;f11;98;43;98;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the path to the cached services.json file.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="isDownForMaintenance;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Foundation\Application.php;f11;35;42;35;;;;vpos;;vbool;;r&#xA;Description&#xA;     Determine if the application is currently down for maintenance.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="output;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Console\Application.php;f11;20;28;20;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the output from the last command.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="register;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Foundation\Application.php;f11;52;70;52;;;;vpos;;v;;r&#xA;Description&#xA;     Register a service provider with the application.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\ServiceProvider|string $provider&#xA;    array $options&#xA;    bool $force;;d-1,-1;;b1,0;;m\Illuminate\Support\ServiceProvider|string $provider;;parray $options;;pbool $force;;p">
					<treenode node="force;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Foundation\Application.php;f55;52;61;52;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Foundation\Application.php;f40;52;48;52;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="provider;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Foundation\Application.php;f29;52;38;52;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="registerConfiguredProviders;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Foundation\Application.php;f11;42;49;42;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Register all of the configured providers.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="registerDeferredProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Foundation\Application.php;f11;61;72;61;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Register a deferred provider and service.&#xA;&#xA;Parameters:&#xA;    string $provider&#xA;    string $service;;d-1,-1;;b1,0;;mstring $provider;;pstring $service;;p">
					<treenode node="provider;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Foundation\Application.php;f45;61;54;61;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="service;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Foundation\Application.php;f56;61;64;61;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="version;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Foundation\Application.php;f11;13;29;13;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the version number of the application.;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Arrayable;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\Arrayable.php;f0;4;1;12;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="toArray;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\Arrayable.php;f11;11;29;11;;;;vpos;;varray;;r&#xA;Description&#xA;     Get the instance as an array.;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Authenticatable;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Authenticatable.php;f0;4;1;41;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="getAuthIdentifier;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Authenticatable.php;f11;11;39;11;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Get the unique identifier for the user.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="getAuthPassword;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Authenticatable.php;f11;18;37;18;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the password for the user.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="getRememberToken;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Authenticatable.php;f11;25;38;25;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the token value for the &quot;remember me&quot; session.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="getRememberTokenName;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Authenticatable.php;f11;40;42;40;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the column name for the &quot;remember me&quot; token.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="setRememberToken;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Authenticatable.php;f11;33;44;33;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Set the token value for the &quot;remember me&quot; session.&#xA;&#xA;Parameters:&#xA;    string $value;;d-1,-1;;b1,0;;mstring $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Authenticatable.php;f37;33;43;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="Authorizable;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Access\Authorizable.php;f0;4;1;14;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="can;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Access\Authorizable.php;f11;13;50;13;;;;vpos;;vbool;;r&#xA;Description&#xA;     Determine if the entity has a given ability.&#xA;&#xA;Parameters:&#xA;    string $ability&#xA;    array|mixed $arguments;;d-1,-1;;b1,0;;mstring $ability;;parray|mixed $arguments;;p">
					<treenode node="ability;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Access\Authorizable.php;f24;13;32;13;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="arguments;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Access\Authorizable.php;f34;13;44;13;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="Broadcaster;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Broadcasting\Broadcaster.php;f0;4;1;15;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="broadcast;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Broadcasting\Broadcaster.php;f11;14;75;14;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Broadcast the given event.&#xA;&#xA;Parameters:&#xA;    array $channels&#xA;    string $event&#xA;    array $payload;;d-1,-1;;b1,0;;marray $channels;;pstring $event;;parray $payload;;p">
					<treenode node="channels;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Broadcasting\Broadcaster.php;f36;14;45;14;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="event;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Broadcasting\Broadcaster.php;f47;14;53;14;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="payload;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Broadcasting\Broadcaster.php;f61;14;69;14;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="CanResetPassword;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\CanResetPassword.php;f0;4;1;12;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="getEmailForPasswordReset;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\CanResetPassword.php;f11;11;46;11;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the e-mail address where password reset links are sent.;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ChoiceMessageFormatterInterface;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Formatter\ChoiceMessageFormatterInterface.php;f0;16;1;29;;;;vpos;;v;;r&#xA;Definition&#xA;    interface ChoiceMessageFormatterInterface&#xA;&#xA;Description&#xA;      author Abdellatif Ait boudad &lt;a.aitboudad gmail.com&gt;;;d0,17;;b0,0;;m">
				<treenode node="choiceFormat;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Formatter\ChoiceMessageFormatterInterface.php;f11;28;89;28;;;;vpos;;vstring;;r&#xA;Description&#xA;     Formats a localized message pattern with given arguments.&#xA;&#xA;Parameters:&#xA;    string $message - The message (may also be an object that can be cast to string)&#xA;    int $number - The number to use to find the indice of the message&#xA;    string $locale - The message locale&#xA;    array $parameters - An array of parameters for the message;;d-1,-1;;b1,0;;mstring $message;;pint $number;;pstring $locale;;parray $parameters;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Formatter\ChoiceMessageFormatterInterface.php;f52;28;59;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Formatter\ChoiceMessageFormatterInterface.php;f33;28;41;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="number;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Formatter\ChoiceMessageFormatterInterface.php;f43;28;50;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Formatter\ChoiceMessageFormatterInterface.php;f67;28;78;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="Cloud;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Cloud.php;f0;4;1;7;;;;vpos;;vFilesystem;;c;;r;;d0,5;;b0,0;;m">
			</treenode>
			<treenode node="config.php;PHP:PHP Include;D:\OSPanel\domains\localhost\eloquent\index.php;f9;2;19;2;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="ConnectionInterface;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f0;6;1;148;;;;vpos;;v;;r;;d0,7;;b0,0;;m">
				<treenode node="affectingStatement;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f11;85;62;85;;;;vpos;;vint;;r&#xA;Description&#xA;     Run an SQL statement and get the number of rows affected.&#xA;&#xA;Parameters:&#xA;    string $query&#xA;    array $bindings;;d-1,-1;;b1,0;;mstring $query;;parray $bindings;;p">
					<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f47;85;56;85;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f39;85;45;85;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="beginTransaction;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f11;118;38;118;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Start a new database transaction.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="commit;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f11;125;28;125;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Commit the active database transaction.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="delete;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f11;67;50;67;;;;vpos;;vint;;r&#xA;Description&#xA;     Run a delete statement against the database.&#xA;&#xA;Parameters:&#xA;    string $query&#xA;    array $bindings;;d-1,-1;;b1,0;;mstring $query;;parray $bindings;;p">
					<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f35;67;44;67;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f27;67;33;67;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="insert;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f11;49;50;49;;;;vpos;;vbool;;r&#xA;Description&#xA;     Run an insert statement against the database.&#xA;&#xA;Parameters:&#xA;    string $query&#xA;    array $bindings;;d-1,-1;;b1,0;;mstring $query;;parray $bindings;;p">
					<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f35;49;44;49;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f27;49;33;49;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="prepareBindings;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f11;101;52;101;;;;vpos;;varray;;r&#xA;Description&#xA;     Prepare the query bindings for execution.&#xA;&#xA;Parameters:&#xA;    array $bindings;;d-1,-1;;b1,0;;marray $bindings;;p">
					<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f42;101;51;101;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="pretend;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f11;147;46;147;;;;vpos;;varray;;r&#xA;Description&#xA;     Execute the given callback in &quot;dry run&quot; mode.&#xA;&#xA;Parameters:&#xA;    \Closure $callback;;d-1,-1;;b1,0;;m\Closure $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f36;147;45;147;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="raw;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f11;22;31;22;;;;vpos;;v;;r&#xA;Description&#xA;     Get a new raw query expression.&#xA;&#xA;Parameters:&#xA;    mixed $value;;d-1,-1;;b1,0;;mmixed $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f24;22;30;22;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="rollBack;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f11;132;30;132;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Rollback the active database transaction.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="select;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f11;40;50;40;;;;vpos;;varray;;r&#xA;Description&#xA;     Run a select statement against the database.&#xA;&#xA;Parameters:&#xA;    string $query&#xA;    array $bindings;;d-1,-1;;b1,0;;mstring $query;;parray $bindings;;p">
					<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f35;40;44;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f27;40;33;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="selectOne;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f11;31;53;31;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Run a select statement and return a single result.&#xA;&#xA;Parameters:&#xA;    string $query&#xA;    array $bindings;;d-1,-1;;b1,0;;mstring $query;;parray $bindings;;p">
					<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f38;31;47;31;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f30;31;36;31;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="statement;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f11;76;53;76;;;;vpos;;vbool;;r&#xA;Description&#xA;     Execute an SQL statement and return the boolean result.&#xA;&#xA;Parameters:&#xA;    string $query&#xA;    array $bindings;;d-1,-1;;b1,0;;mstring $query;;parray $bindings;;p">
					<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f38;76;47;76;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f30;76;36;76;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="table;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f11;14;33;14;;;;vpos;;v;;r&#xA;Description&#xA;     Begin a fluent query against a database table.&#xA;&#xA;Parameters:&#xA;    string $table;;d-1,-1;;b1,0;;mstring $table;;p">
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f26;14;32;14;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="transaction;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f11;111;50;111;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Execute a Closure within a transaction.&#xA;&#xA;Parameters:&#xA;    \Closure $callback;;d-1,-1;;b1,0;;m\Closure $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f40;111;49;111;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="transactionLevel;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f11;139;38;139;;;;vpos;;vint;;r&#xA;Description&#xA;     Get the number of active transactions.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="unprepared;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f11;93;38;93;;;;vpos;;vbool;;r&#xA;Description&#xA;     Run a raw, unprepared query against the PDO connection.&#xA;&#xA;Parameters:&#xA;    string $query;;d-1,-1;;b1,0;;mstring $query;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f31;93;37;93;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="update;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f11;58;50;58;;;;vpos;;vint;;r&#xA;Description&#xA;     Run an update statement against the database.&#xA;&#xA;Parameters:&#xA;    string $query&#xA;    array $bindings;;d-1,-1;;b1,0;;mstring $query;;parray $bindings;;p">
					<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f35;58;44;58;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php;f27;58;33;58;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="ConnectionResolverInterface;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionResolverInterface.php;f0;4;1;28;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="connection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionResolverInterface.php;f11;12;44;12;;;;vpos;;v;;r&#xA;Description&#xA;     Get a database connection instance.&#xA;&#xA;Parameters:&#xA;    string $name;;d-1,-1;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionResolverInterface.php;f31;12;36;12;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getDefaultConnection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionResolverInterface.php;f11;19;42;19;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the default connection name.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="setDefaultConnection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionResolverInterface.php;f11;27;47;27;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Set the default connection name.&#xA;&#xA;Parameters:&#xA;    string $name;;d-1,-1;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionResolverInterface.php;f41;27;46;27;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="ConnectorInterface;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectorInterface.php;f0;4;1;13;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="connect;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectorInterface.php;f11;12;42;12;;;;vpos;;v;;r&#xA;Description&#xA;     Establish a database connection.&#xA;&#xA;Parameters:&#xA;    array $config;;d-1,-1;;b1,0;;marray $config;;p">
					<treenode node="config;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectorInterface.php;f34;12;41;12;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="Container;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f0;6;1;143;;;;vpos;;v;;r;;d0,7;;b0,0;;m">
				<treenode node="afterResolving;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f11;142;71;142;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Register a new after resolving callback.&#xA;&#xA;Parameters:&#xA;    string $abstract&#xA;    \Closure|null $callback;;d-1,-1;;b1,0;;mstring $abstract;;p\Closure|null $callback;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f35;142;44;142;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f54;142;63;142;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="alias;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f11;23;44;23;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Alias a type to a different name.&#xA;&#xA;Parameters:&#xA;    string $abstract&#xA;    string $alias;;d-1,-1;;b1,0;;mstring $abstract;;pstring $alias;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f26;23;35;23;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="alias;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f37;23;43;23;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="bind;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f11;50;70;50;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Register a binding with the container.&#xA;&#xA;Parameters:&#xA;    string|array $abstract&#xA;    \Closure|string|null $concrete&#xA;    bool $shared;;d-1,-1;;b1,0;;mstring|array $abstract;;p\Closure|string|null $concrete;;pbool $shared;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f25;50;34;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="concrete;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f36;50;45;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="shared;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f54;50;61;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="bindIf;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f11;60;72;60;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Register a binding if it hasn't already been registered.&#xA;&#xA;Parameters:&#xA;    string $abstract&#xA;    \Closure|string|null $concrete&#xA;    bool $shared;;d-1,-1;;b1,0;;mstring $abstract;;p\Closure|string|null $concrete;;pbool $shared;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f27;60;36;60;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="concrete;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f38;60;47;60;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="shared;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f56;60;63;60;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="bound;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f11;14;36;14;;;;vpos;;vbool;;r&#xA;Description&#xA;     Determine if the given abstract type has been bound.&#xA;&#xA;Parameters:&#xA;    string $abstract;;d-1,-1;;b1,0;;mstring $abstract;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f26;14;35;14;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="call;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f11;116;82;116;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Call the given Closure / class method and inject its dependencies.&#xA;&#xA;Parameters:&#xA;    callable|string $callback&#xA;    array $parameters&#xA;    string|null $defaultMethod;;d-1,-1;;b1,0;;mcallable|string $callback;;parray $parameters;;pstring|null $defaultMethod;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f25;116;34;116;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="defaultMethod;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f60;116;74;116;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f42;116;53;116;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="extend;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f11;80;55;80;;;;vpos;;vvoid;;r&#xA;Description&#xA;     &quot;Extend&quot; an abstract type in the container.&#xA;&#xA;Parameters:&#xA;    string $abstract&#xA;    \Closure $closure;;d-1,-1;;b1,0;;mstring $abstract;;p\Closure $closure;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f27;80;36;80;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="closure;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f46;80;54;80;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="instance;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f11;89;50;89;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Register an existing instance as shared in the container.&#xA;&#xA;Parameters:&#xA;    string $abstract&#xA;    mixed $instance;;d-1,-1;;b1,0;;mstring $abstract;;pmixed $instance;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f29;89;38;89;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="instance;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f40;89;49;89;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="make;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f11;106;59;106;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Resolve the given type from the container.&#xA;&#xA;Parameters:&#xA;    string $abstract&#xA;    array $parameters;;d-1,-1;;b1,0;;mstring $abstract;;parray $parameters;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f25;106;34;106;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f42;106;53;106;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="resolved;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f11;124;39;124;;;;vpos;;vbool;;r&#xA;Description&#xA;     Determine if the given abstract type has been resolved.&#xA;&#xA;Parameters:&#xA;    string $abstract;;d-1,-1;;b1,0;;mstring $abstract;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f29;124;38;124;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="resolving;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f11;133;66;133;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Register a new resolving callback.&#xA;&#xA;Parameters:&#xA;    string $abstract&#xA;    \Closure|null $callback;;d-1,-1;;b1,0;;mstring $abstract;;p\Closure|null $callback;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f30;133;39;133;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f49;133;58;133;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="singleton;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f11;69;58;69;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Register a shared binding in the container.&#xA;&#xA;Parameters:&#xA;    string|array $abstract&#xA;    \Closure|string|null $concrete;;d-1,-1;;b1,0;;mstring|array $abstract;;p\Closure|string|null $concrete;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f30;69;39;69;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="concrete;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f41;69;50;69;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="tag;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f11;32;42;32;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Assign a set of tags to a given binding.&#xA;&#xA;Parameters:&#xA;    array|string $abstracts&#xA;    array|mixed - ...$tags;;d-1,-1;;b1,0;;marray|string $abstracts;;parray|mixed;;p">
					<treenode node="abstracts;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f24;32;34;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="tags;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f36;32;41;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="tagged;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f11;40;32;40;;;;vpos;;varray;;r&#xA;Description&#xA;     Resolve all of the bindings for a given tag.&#xA;&#xA;Parameters:&#xA;    array $tag;;d-1,-1;;b1,0;;marray $tag;;p">
					<treenode node="tag;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f27;40;31;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="when;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f11;97;35;97;;;;vpos;;v;;r&#xA;Description&#xA;     Define a contextual binding.&#xA;&#xA;Parameters:&#xA;    string $concrete;;d-1,-1;;b1,0;;mstring $concrete;;p">
					<treenode node="concrete;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php;f25;97;34;97;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="ContextualBindingBuilder;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\ContextualBindingBuilder.php;f0;4;1;21;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="give;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\ContextualBindingBuilder.php;f11;20;41;20;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Define the implementation for the contextual binding.&#xA;&#xA;Parameters:&#xA;    \Closure|string $implementation;;d-1,-1;;b1,0;;m\Closure|string $implementation;;p">
					<treenode node="implementation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\ContextualBindingBuilder.php;f25;20;40;20;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="needs;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\ContextualBindingBuilder.php;f11;12;36;12;;;;vpos;;v;;r&#xA;Description&#xA;     Define the abstract target that depends on the context.&#xA;&#xA;Parameters:&#xA;    string $abstract;;d-1,-1;;b1,0;;mstring $abstract;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\ContextualBindingBuilder.php;f26;12;35;12;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="Database;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Redis\Database.php;f0;4;1;14;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="command;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Redis\Database.php;f11;13;60;13;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Run a command against the Redis database.&#xA;&#xA;Parameters:&#xA;    string $method&#xA;    array $parameters;;d-1,-1;;b1,0;;mstring $method;;parray $parameters;;p">
					<treenode node="method;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Redis\Database.php;f28;13;35;13;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Redis\Database.php;f43;13;54;13;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="DBDRIVER;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\Codelobster0.php;f30;2;38;2;;;;vpos;;v;;r&quot;mysql&quot;;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="DBHOST;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\Codelobster0.php;f28;3;34;3;;;;vpos;;v;;r&quot;localhost&quot;;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="DBNAME;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\Codelobster0.php;f28;4;34;4;;;;vpos;;v;;r&quot;eloquent&quot;;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="DBPASS;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\Codelobster0.php;f28;6;34;6;;;;vpos;;v;;r&quot;&quot;;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="DBUSER;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\Codelobster0.php;f28;5;34;5;;;;vpos;;v;;r&quot;root&quot;;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="Dispatcher;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Events\Dispatcher.php;f0;4;1;89;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Bus\Dispatcher.php;f0;7;1;53;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="dispatch;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Bus\Dispatcher.php;f11;35;70;35;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Dispatch a command to its appropriate handler.&#xA;&#xA;Parameters:&#xA;    mixed $command&#xA;    \Closure|null $afterResolving;;d-1,-1;;b1,0;;mmixed $command;;p\Closure|null $afterResolving;;p">
					<treenode node="afterResolving;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Bus\Dispatcher.php;f47;35;62;35;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Bus\Dispatcher.php;f29;35;37;35;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dispatchFrom;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Bus\Dispatcher.php;f11;26;83;26;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Marshal a command and dispatch it to its appropriate handler.&#xA;&#xA;Parameters:&#xA;    mixed $command&#xA;    \ArrayAccess $source&#xA;    array $extras;;d-1,-1;;b1,0;;mmixed $command;;p\ArrayAccess $source;;parray $extras;;p">
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Bus\Dispatcher.php;f33;26;41;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="extras;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Bus\Dispatcher.php;f70;26;77;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="source;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Bus\Dispatcher.php;f55;26;62;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dispatchFromArray;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Bus\Dispatcher.php;f11;16;61;16;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Marshal a command and dispatch it to its appropriate handler.&#xA;&#xA;Parameters:&#xA;    mixed $command&#xA;    array $array;;d-1,-1;;b1,0;;mmixed $command;;parray $array;;p">
					<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Bus\Dispatcher.php;f54;16;60;16;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Bus\Dispatcher.php;f38;16;46;16;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dispatchNow;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Bus\Dispatcher.php;f11;44;73;44;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Dispatch a command to its appropriate handler in the current process.&#xA;&#xA;Parameters:&#xA;    mixed $command&#xA;    \Closure|null $afterResolving;;d-1,-1;;b1,0;;mmixed $command;;p\Closure|null $afterResolving;;p">
					<treenode node="afterResolving;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Bus\Dispatcher.php;f50;44;65;44;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Bus\Dispatcher.php;f32;44;40;44;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fire;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Events\Dispatcher.php;f11;66;62;66;;;;vpos;;varray;;r&#xA;Description&#xA;     Fire an event and call the listeners.&#xA;&#xA;Parameters:&#xA;    string|object $event&#xA;    mixed $payload&#xA;    bool $halt&#xA;&#xA;Return:&#xA;   |null;;d-1,-1;;b1,0;;mstring|object $event;;pmixed $payload;;pbool $halt;;p">
					<treenode node="event;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Events\Dispatcher.php;f25;66;31;66;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="halt;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Events\Dispatcher.php;f48;66;53;66;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="payload;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Events\Dispatcher.php;f33;66;41;66;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="firing;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Events\Dispatcher.php;f11;73;28;73;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the event that is currently firing.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="flush;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Events\Dispatcher.php;f11;56;33;56;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Flush a set of pushed events.&#xA;&#xA;Parameters:&#xA;    string $event;;d-1,-1;;b1,0;;mstring $event;;p">
					<treenode node="event;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Events\Dispatcher.php;f26;56;32;56;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="forget;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Events\Dispatcher.php;f11;81;34;81;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Remove a set of listeners from the dispatcher.&#xA;&#xA;Parameters:&#xA;    string $event;;d-1,-1;;b1,0;;mstring $event;;p">
					<treenode node="event;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Events\Dispatcher.php;f27;81;33;81;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="forgetPushed;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Events\Dispatcher.php;f11;88;34;88;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Forget all of the queued listeners.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasListeners;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Events\Dispatcher.php;f11;22;44;22;;;;vpos;;vbool;;r&#xA;Description&#xA;     Determine if a given event has listeners.&#xA;&#xA;Parameters:&#xA;    string $eventName;;d-1,-1;;b1,0;;mstring $eventName;;p">
					<treenode node="eventName;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Events\Dispatcher.php;f33;22;43;22;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="listen;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Events\Dispatcher.php;f11;14;61;14;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Register an event listener with the dispatcher.&#xA;&#xA;Parameters:&#xA;    string|array $events&#xA;    mixed $listener&#xA;    int $priority;;d-1,-1;;b1,0;;mstring|array $events;;pmixed $listener;;pint $priority;;p">
					<treenode node="events;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Events\Dispatcher.php;f27;14;34;14;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="listener;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Events\Dispatcher.php;f36;14;45;14;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="priority;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Events\Dispatcher.php;f47;14;56;14;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="pipeThrough;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Bus\Dispatcher.php;f11;52;45;52;;;;vpos;;v;;r&#xA;Description&#xA;     Set the pipes commands should be piped through before dispatching.&#xA;&#xA;Parameters:&#xA;    array $pipes;;d-1,-1;;b1,0;;marray $pipes;;p">
					<treenode node="pipes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Bus\Dispatcher.php;f38;52;44;52;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="push;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Events\Dispatcher.php;f11;31;47;31;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Register an event and payload to be fired later.&#xA;&#xA;Parameters:&#xA;    string $event&#xA;    array $payload;;d-1,-1;;b1,0;;mstring $event;;parray $payload;;p">
					<treenode node="event;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Events\Dispatcher.php;f25;31;31;31;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="payload;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Events\Dispatcher.php;f33;31;41;31;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subscribe;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Events\Dispatcher.php;f11;39;42;39;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Register an event subscriber with the dispatcher.&#xA;&#xA;Parameters:&#xA;    object|string $subscriber;;d-1,-1;;b1,0;;mobject|string $subscriber;;p">
					<treenode node="subscriber;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Events\Dispatcher.php;f30;39;41;39;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="until;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Events\Dispatcher.php;f11;48;48;48;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Fire an event until the first non-null response is returned.&#xA;&#xA;Parameters:&#xA;    string $event&#xA;    array $payload;;d-1,-1;;b1,0;;mstring $event;;parray $payload;;p">
					<treenode node="event;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Events\Dispatcher.php;f26;48;32;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="payload;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Events\Dispatcher.php;f34;48;42;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="DumperInterface;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\DumperInterface.php;f0;21;1;30;;;;vpos;;v;;r&#xA;Definition&#xA;    interface DumperInterface&#xA;&#xA;Description&#xA;     DumperInterface is the interface implemented by all translation dumpers. There is no common option.;;d0,22;;b0,0;;m">
				<treenode node="dump;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\DumperInterface.php;f11;29;72;29;;;;vpos;;v;;r&#xA;Description&#xA;     Dumps the message catalogue.&#xA;&#xA;Parameters:&#xA;    MessageCatalogue $messages - The message catalogue&#xA;    array $options - Options that are used by the dumper;;d-1,-1;;b1,0;;mMessageCatalogue $messages;;parray $options;;p">
					<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\DumperInterface.php;f42;29;51;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\DumperInterface.php;f53;29;61;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="Encrypter;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Encryption\Encrypter.php;f0;4;1;21;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="decrypt;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Encryption\Encrypter.php;f11;20;37;20;;;;vpos;;vstring;;r&#xA;Description&#xA;     Decrypt the given value.&#xA;&#xA;Parameters:&#xA;    string $payload;;d-1,-1;;b1,0;;mstring $payload;;p">
					<treenode node="payload;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Encryption\Encrypter.php;f28;20;36;20;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="encrypt;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Encryption\Encrypter.php;f11;12;35;12;;;;vpos;;vstring;;r&#xA;Description&#xA;     Encrypt the given value.&#xA;&#xA;Parameters:&#xA;    string $value;;d-1,-1;;b1,0;;mstring $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Encryption\Encrypter.php;f28;12;34;12;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="EntityResolver;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\EntityResolver.php;f0;4;1;14;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="resolve;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\EntityResolver.php;f11;13;39;13;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Resolve the entity for the given ID.&#xA;&#xA;Parameters:&#xA;    string $type&#xA;    mixed $id;;d-1,-1;;b1,0;;mstring $type;;pmixed $id;;p">
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\EntityResolver.php;f35;13;38;13;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\EntityResolver.php;f28;13;33;13;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="ExceptionHandler;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Debug\ExceptionHandler.php;f0;6;1;33;;;;vpos;;v;;r;;d0,7;;b0,0;;m">
				<treenode node="render;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Debug\ExceptionHandler.php;f11;23;50;23;;;;vpos;;v;;r&#xA;Description&#xA;     Render an exception into an HTTP response.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Http\Request $request&#xA;    \Exception $e;;d-1,-1;;b1,0;;m\Illuminate\Http\Request $request;;p\Exception $e;;p">
					<treenode node="e;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Debug\ExceptionHandler.php;f47;23;49;23;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="request;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Debug\ExceptionHandler.php;f27;23;35;23;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="renderForConsole;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Debug\ExceptionHandler.php;f11;32;59;32;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Render an exception to the console.&#xA;&#xA;Parameters:&#xA;    \Symfony\Component\Console\Output\OutputInterface $output&#xA;    \Exception $e;;d-1,-1;;b1,0;;m\Symfony\Component\Console\Output\OutputInterface $output;;p\Exception $e;;p">
					<treenode node="e;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Debug\ExceptionHandler.php;f56;32;58;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="output;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Debug\ExceptionHandler.php;f37;32;44;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="report;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Debug\ExceptionHandler.php;f11;14;40;14;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Report or log an exception.&#xA;&#xA;Parameters:&#xA;    \Exception $e;;d-1,-1;;b1,0;;m\Exception $e;;p">
					<treenode node="e;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Debug\ExceptionHandler.php;f37;14;39;14;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="ExceptionInterface;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Exception\ExceptionInterface.php;f0;18;1;20;;;;vpos;;v;;r&#xA;Definition&#xA;    interface ExceptionInterface&#xA;&#xA;Description&#xA;     Exception interface for all exceptions thrown by the component.;;d0,19;;b0,0;;m">
			</treenode>
			<treenode node="ExtractorInterface;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\ExtractorInterface.php;f0;21;1;37;;;;vpos;;v;;r&#xA;Definition&#xA;    interface ExtractorInterface&#xA;&#xA;Description&#xA;     Extracts translation messages from a directory or files to the catalogue. New found messages are injected to the catalogue using the prefix.;;d0,22;;b0,0;;m">
				<treenode node="extract;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\ExtractorInterface.php;f11;29;67;29;;;;vpos;;v;;r&#xA;Description&#xA;     Extracts translation messages from files, a file or a directory to the catalogue.&#xA;&#xA;Parameters:&#xA;    string|array $resource - Files, a file or a directory&#xA;    MessageCatalogue $catalogue - The catalogue;;d-1,-1;;b1,0;;mstring|array $resource;;pMessageCatalogue $catalogue;;p">
					<treenode node="catalogue;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\ExtractorInterface.php;f56;29;66;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="resource;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\ExtractorInterface.php;f28;29;37;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setPrefix;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\ExtractorInterface.php;f11;36;38;36;;;;vpos;;v;;r&#xA;Description&#xA;     Sets the prefix that should be used for new found messages.&#xA;&#xA;Parameters:&#xA;    string $prefix - The prefix;;d-1,-1;;b1,0;;mstring $prefix;;p">
					<treenode node="prefix;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\ExtractorInterface.php;f30;36;37;36;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="Factory;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\View\Factory.php;f0;4;1;70;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\Factory.php;f0;4;1;45;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Factory.php;f0;4;1;13;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Factory.php;f0;4;1;13;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cookie\Factory.php;f0;4;1;42;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Factory.php;f0;4;1;13;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Broadcasting\Factory.php;f0;4;1;13;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="addNamespace;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\View\Factory.php;f11;69;52;69;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Add a new namespace to the loader.&#xA;&#xA;Parameters:&#xA;    string $namespace&#xA;    string|array $hints;;d-1,-1;;b1,0;;mstring $namespace;;pstring|array $hints;;p">
					<treenode node="hints;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\View\Factory.php;f45;69;51;69;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="namespace;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\View\Factory.php;f33;69;43;69;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="composer;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\View\Factory.php;f11;51;65;51;;;;vpos;;varray;;r&#xA;Description&#xA;     Register a view composer event.&#xA;&#xA;Parameters:&#xA;    array|string $views&#xA;    \Closure|string $callback&#xA;    int|null $priority;;d-1,-1;;b1,0;;marray|string $views;;p\Closure|string $callback;;pint|null $priority;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\View\Factory.php;f37;51;46;51;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="priority;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\View\Factory.php;f48;51;57;51;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="views;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\View\Factory.php;f29;51;35;51;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="connection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Factory.php;f11;12;44;12;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Broadcasting\Factory.php;f11;12;44;12;;;;vpos;;v;;r&#xA;Description&#xA;     Resolve a queue connection instance.&#xA;&#xA;Parameters:&#xA;    string $name;;d-1,-1;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Factory.php;f31;12;36;12;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Broadcasting\Factory.php;f31;12;36;12;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="creator;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\View\Factory.php;f11;60;46;60;;;;vpos;;varray;;r&#xA;Description&#xA;     Register a view creator event.&#xA;&#xA;Parameters:&#xA;    array|string $views&#xA;    \Closure|string $callback;;d-1,-1;;b1,0;;marray|string $views;;p\Closure|string $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\View\Factory.php;f36;60;45;60;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="views;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\View\Factory.php;f28;60;34;60;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="disk;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Factory.php;f11;12;38;12;;;;vpos;;v;;r&#xA;Description&#xA;     Get a filesystem implementation.&#xA;&#xA;Parameters:&#xA;    string $name;;d-1,-1;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Factory.php;f25;12;30;12;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="exists;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\View\Factory.php;f11;12;33;12;;;;vpos;;vbool;;r&#xA;Description&#xA;     Determine if a given view exists.&#xA;&#xA;Parameters:&#xA;    string $view;;d-1,-1;;b1,0;;mstring $view;;p">
					<treenode node="view;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\View\Factory.php;f27;12;32;12;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="extend;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\Factory.php;f11;25;62;25;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Register a custom validator extension.&#xA;&#xA;Parameters:&#xA;    string $rule&#xA;    \Closure|string $extension&#xA;    string $message;;d-1,-1;;b1,0;;mstring $rule;;p\Closure|string $extension;;pstring $message;;p">
					<treenode node="extension;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\Factory.php;f34;25;44;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\Factory.php;f46;25;54;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="rule;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\Factory.php;f27;25;32;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="extendImplicit;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\Factory.php;f11;35;70;35;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Register a custom implicit validator extension.&#xA;&#xA;Parameters:&#xA;    string $rule&#xA;    \Closure|string $extension&#xA;    string $message;;d-1,-1;;b1,0;;mstring $rule;;p\Closure|string $extension;;pstring $message;;p">
					<treenode node="extension;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\Factory.php;f42;35;52;35;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\Factory.php;f54;35;62;35;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="rule;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\Factory.php;f35;35;40;35;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="file;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\View\Factory.php;f11;22;60;22;;;;vpos;;v;;r&#xA;Description&#xA;     Get the evaluated view contents for the given path.&#xA;&#xA;Parameters:&#xA;    string $path&#xA;    array $data&#xA;    array $mergeData;;d-1,-1;;b1,0;;mstring $path;;parray $data;;parray $mergeData;;p">
					<treenode node="data;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\View\Factory.php;f32;22;37;22;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="mergeData;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\View\Factory.php;f44;22;54;22;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\View\Factory.php;f25;22;30;22;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="forever;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cookie\Factory.php;f11;31;107;31;;;;vpos;;v;;r&#xA;Description&#xA;     Create a cookie that lasts &quot;forever&quot; (five years).&#xA;&#xA;Parameters:&#xA;    string $name&#xA;    string $value&#xA;    string $path&#xA;    string $domain&#xA;    bool $secure&#xA;    bool $httpOnly;;d-1,-1;;b1,0;;mstring $name;;pstring $value;;pstring $path;;pstring $domain;;pbool $secure;;pbool $httpOnly;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cookie\Factory.php;f57;31;64;31;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="httpOnly;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cookie\Factory.php;f90;31;99;31;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cookie\Factory.php;f28;31;33;31;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cookie\Factory.php;f43;31;48;31;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="secure;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cookie\Factory.php;f73;31;80;31;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cookie\Factory.php;f35;31;41;31;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="forget;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cookie\Factory.php;f11;41;63;41;;;;vpos;;v;;r&#xA;Description&#xA;     Expire the given cookie.&#xA;&#xA;Parameters:&#xA;    string $name&#xA;    string $path&#xA;    string $domain;;d-1,-1;;b1,0;;mstring $name;;pstring $path;;pstring $domain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cookie\Factory.php;f48;41;55;41;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cookie\Factory.php;f27;41;32;41;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cookie\Factory.php;f34;41;39;41;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="make;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\View\Factory.php;f11;32;60;32;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\Factory.php;f11;15;103;15;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cookie\Factory.php;f11;18;118;18;;;;vpos;;v;;r&#xA;Description&#xA;     Get the evaluated view contents for the given view.&#xA;&#xA;Parameters:&#xA;    string $view&#xA;    array $data&#xA;    array $mergeData;;d-1,-1;;b1,0;;mstring $view;;parray $data;;parray $mergeData;;p">
					<treenode node="customAttributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\Factory.php;f80;15;97;15;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="data;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\View\Factory.php;f32;32;37;32;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\Factory.php;f31;15;36;15;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cookie\Factory.php;f68;18;75;18;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="httpOnly;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cookie\Factory.php;f101;18;110;18;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="mergeData;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\View\Factory.php;f44;32;54;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\Factory.php;f58;15;67;15;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="minutes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cookie\Factory.php;f40;18;48;18;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cookie\Factory.php;f25;18;30;18;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cookie\Factory.php;f54;18;59;18;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="rules;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\Factory.php;f44;15;50;15;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="secure;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cookie\Factory.php;f84;18;91;18;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cookie\Factory.php;f32;18;38;18;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="view;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\View\Factory.php;f25;32;30;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="replacer;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\Factory.php;f11;44;46;44;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Register a custom implicit validator message replacer.&#xA;&#xA;Parameters:&#xA;    string $rule&#xA;    \Closure|string $replacer;;d-1,-1;;b1,0;;mstring $rule;;p\Closure|string $replacer;;p">
					<treenode node="replacer;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\Factory.php;f36;44;45;44;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="rule;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\Factory.php;f29;44;34;44;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="share;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\View\Factory.php;f11;41;46;41;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Add a piece of shared data to the environment.&#xA;&#xA;Parameters:&#xA;    array|string $key&#xA;    mixed $value;;d-1,-1;;b1,0;;marray|string $key;;pmixed $value;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\View\Factory.php;f26;41;30;41;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\View\Factory.php;f32;41;38;41;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="store;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Factory.php;f11;12;39;12;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Get a cache store instance by name.&#xA;&#xA;Parameters:&#xA;    string|null $name;;d-1,-1;;b1,0;;mstring|null $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Factory.php;f26;12;31;12;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="Filesystem;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f0;4;1;174;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="VISIBILITY_PRIVATE;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f9;18;28;18;;;;vposstring;;v;;r'private';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="VISIBILITY_PUBLIC;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f9;11;27;11;;;;vposstring;;v;;r'public';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="allDirectories;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f11;157;53;157;;;;vpos;;varray;;r&#xA;Description&#xA;     Get all (recursive) of the directories within a given directory.&#xA;&#xA;Parameters:&#xA;    string|null $directory;;d-1,-1;;b1,0;;mstring|null $directory;;p">
					<treenode node="directory;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f35;157;45;157;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="allFiles;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f11;140;47;140;;;;vpos;;varray;;r&#xA;Description&#xA;     Get all of the files from the given directory (recursive).&#xA;&#xA;Parameters:&#xA;    string|null $directory;;d-1,-1;;b1,0;;mstring|null $directory;;p">
					<treenode node="directory;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f29;140;39;140;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="append;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f11;81;40;81;;;;vpos;;vint;;r&#xA;Description&#xA;     Append to a file.&#xA;&#xA;Parameters:&#xA;    string $path&#xA;    string $data;;d-1,-1;;b1,0;;mstring $path;;pstring $data;;p">
					<treenode node="data;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f34;81;39;81;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f27;81;32;81;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="copy;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f11;98;36;98;;;;vpos;;vbool;;r&#xA;Description&#xA;     Copy a file to a new location.&#xA;&#xA;Parameters:&#xA;    string $from&#xA;    string $to;;d-1,-1;;b1,0;;mstring $from;;pstring $to;;p">
					<treenode node="from;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f25;98;30;98;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="to;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f32;98;35;98;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="delete;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f11;89;34;89;;;;vpos;;vbool;;r&#xA;Description&#xA;     Delete the file at a given path.&#xA;&#xA;Parameters:&#xA;    string|array $paths;;d-1,-1;;b1,0;;mstring|array $paths;;p">
					<treenode node="paths;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f27;89;33;89;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="deleteDirectory;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f11;173;47;173;;;;vpos;;vbool;;r&#xA;Description&#xA;     Recursively delete a directory.&#xA;&#xA;Parameters:&#xA;    string $directory;;d-1,-1;;b1,0;;mstring $directory;;p">
					<treenode node="directory;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f36;173;46;173;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="directories;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f11;149;70;149;;;;vpos;;varray;;r&#xA;Description&#xA;     Get all of the directories within a given directory.&#xA;&#xA;Parameters:&#xA;    string|null $directory&#xA;    bool $recursive;;d-1,-1;;b1,0;;mstring|null $directory;;pbool $recursive;;p">
					<treenode node="directory;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f32;149;42;149;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="recursive;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f51;149;61;149;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="exists;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f11;26;33;26;;;;vpos;;vbool;;r&#xA;Description&#xA;     Determine if a file exists.&#xA;&#xA;Parameters:&#xA;    string $path;;d-1,-1;;b1,0;;mstring $path;;p">
					<treenode node="path;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f27;26;32;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="files;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f11;132;64;132;;;;vpos;;varray;;r&#xA;Description&#xA;     Get an array of all files in a directory.&#xA;&#xA;Parameters:&#xA;    string|null $directory&#xA;    bool $recursive;;d-1,-1;;b1,0;;mstring|null $directory;;pbool $recursive;;p">
					<treenode node="directory;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f26;132;36;132;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="recursive;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f45;132;55;132;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="get;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f11;36;30;36;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the contents of a file.&#xA;&#xA;Parameters:&#xA;    string $path;;d-1,-1;;b1,0;;mstring $path;;p">
					<treenode node="path;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f24;36;29;36;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getVisibility;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f11;54;40;54;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the visibility for the given path.&#xA;&#xA;Parameters:&#xA;    string $path;;d-1,-1;;b1,0;;mstring $path;;p">
					<treenode node="path;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f34;54;39;54;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="lastModified;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f11;123;39;123;;;;vpos;;vint;;r&#xA;Description&#xA;     Get the file's last modification time.&#xA;&#xA;Parameters:&#xA;    string $path;;d-1,-1;;b1,0;;mstring $path;;p">
					<treenode node="path;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f33;123;38;123;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="makeDirectory;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f11;165;40;165;;;;vpos;;vbool;;r&#xA;Description&#xA;     Create a directory.&#xA;&#xA;Parameters:&#xA;    string $path;;d-1,-1;;b1,0;;mstring $path;;p">
					<treenode node="path;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f34;165;39;165;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="move;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f11;107;36;107;;;;vpos;;vbool;;r&#xA;Description&#xA;     Move a file to a new location.&#xA;&#xA;Parameters:&#xA;    string $from&#xA;    string $to;;d-1,-1;;b1,0;;mstring $from;;pstring $to;;p">
					<treenode node="from;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f25;107;30;107;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="to;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f32;107;35;107;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="prepend;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f11;72;41;72;;;;vpos;;vint;;r&#xA;Description&#xA;     Prepend to a file.&#xA;&#xA;Parameters:&#xA;    string $path&#xA;    string $data;;d-1,-1;;b1,0;;mstring $path;;pstring $data;;p">
					<treenode node="data;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f35;72;40;72;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f28;72;33;72;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="put;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f11;46;61;46;;;;vpos;;vbool;;r&#xA;Description&#xA;     Write the contents of a file.&#xA;&#xA;Parameters:&#xA;    string $path&#xA;    string|resource $contents&#xA;    string $visibility;;d-1,-1;;b1,0;;mstring $path;;pstring|resource $contents;;pstring $visibility;;p">
					<treenode node="contents;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f31;46;40;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f24;46;29;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="visibility;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f42;46;53;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setVisibility;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f11;63;53;63;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Set the visibility for the given path.&#xA;&#xA;Parameters:&#xA;    string $path&#xA;    string $visibility;;d-1,-1;;b1,0;;mstring $path;;pstring $visibility;;p">
					<treenode node="path;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f34;63;39;63;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="visibility;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f41;63;52;63;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="size;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f11;115;31;115;;;;vpos;;vint;;r&#xA;Description&#xA;     Get the file size of a given file.&#xA;&#xA;Parameters:&#xA;    string $path;;d-1,-1;;b1,0;;mstring $path;;p">
					<treenode node="path;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php;f25;115;30;115;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="Gate;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Access\Gate.php;f0;4;1;40;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="check;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Access\Gate.php;f11;39;52;39;;;;vpos;;vbool;;r&#xA;Description&#xA;     Determine if the given ability should be granted.&#xA;&#xA;Parameters:&#xA;    string $ability&#xA;    array|mixed $arguments;;d-1,-1;;b1,0;;mstring $ability;;parray|mixed $arguments;;p">
					<treenode node="ability;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Access\Gate.php;f26;39;34;39;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="arguments;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Access\Gate.php;f36;39;46;39;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="define;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Access\Gate.php;f11;21;47;21;;;;vpos;;v;;r&#xA;Description&#xA;     Define a new ability.&#xA;&#xA;Parameters:&#xA;    string $ability&#xA;    callable|string $callback;;d-1,-1;;b1,0;;mstring $ability;;pcallable|string $callback;;p">
					<treenode node="ability;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Access\Gate.php;f27;21;35;21;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Access\Gate.php;f37;21;46;21;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="has;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Access\Gate.php;f11;12;33;12;;;;vpos;;vbool;;r&#xA;Description&#xA;     Determine if a given ability has been defined.&#xA;&#xA;Parameters:&#xA;    string $ability;;d-1,-1;;b1,0;;mstring $ability;;p">
					<treenode node="ability;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Access\Gate.php;f24;12;32;12;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="policy;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Access\Gate.php;f11;30;43;30;;;;vpos;;v;;r&#xA;Description&#xA;     Define a policy class for a given class type.&#xA;&#xA;Parameters:&#xA;    string $class&#xA;    string $policy;;d-1,-1;;b1,0;;mstring $class;;pstring $policy;;p">
					<treenode node="class;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Access\Gate.php;f27;30;33;30;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="policy;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Access\Gate.php;f35;30;42;30;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="Guard;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Guard.php;f0;4;1;100;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="attempt;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Guard.php;f11;43;86;43;;;;vpos;;vbool;;r&#xA;Description&#xA;     Attempt to authenticate a user using the given credentials.&#xA;&#xA;Parameters:&#xA;    array $credentials&#xA;    bool $remember&#xA;    bool $login;;d-1,-1;;b1,0;;marray $credentials;;pbool $remember;;pbool $login;;p">
					<treenode node="credentials;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Guard.php;f34;43;46;43;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="login;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Guard.php;f72;43;78;43;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="remember;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Guard.php;f53;43;62;43;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="basic;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Guard.php;f11;51;43;51;;;;vpos;;v;;r&#xA;Description&#xA;     Attempt to authenticate using HTTP Basic Auth.&#xA;&#xA;Parameters:&#xA;    string $field;;d-1,-1;;b1,0;;mstring $field;;p">
					<treenode node="field;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Guard.php;f26;51;32;51;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="check;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Guard.php;f11;11;27;11;;;;vpos;;vbool;;r&#xA;Description&#xA;     Determine if the current user is authenticated.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="guest;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Guard.php;f11;18;27;18;;;;vpos;;vbool;;r&#xA;Description&#xA;     Determine if the current user is a guest.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="login;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Guard.php;f11;76;67;76;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Log a user into the application.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Contracts\Auth\Authenticatable $user&#xA;    bool $remember;;d-1,-1;;b1,0;;m\Illuminate\Contracts\Auth\Authenticatable $user;;pbool $remember;;p">
					<treenode node="remember;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Guard.php;f49;76;58;76;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="user;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Guard.php;f42;76;47;76;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="loginUsingId;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Guard.php;f11;85;56;85;;;;vpos;;v;;r&#xA;Description&#xA;     Log the given user ID into the application.&#xA;&#xA;Parameters:&#xA;    mixed $id&#xA;    bool $remember;;d-1,-1;;b1,0;;mmixed $id;;pbool $remember;;p">
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Guard.php;f33;85;36;85;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="remember;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Guard.php;f38;85;47;85;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="logout;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Guard.php;f11;99;28;99;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Log the user out of the application.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="once;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Guard.php;f11;33;49;33;;;;vpos;;vbool;;r&#xA;Description&#xA;     Log a user into the application without sessions or cookies.&#xA;&#xA;Parameters:&#xA;    array $credentials;;d-1,-1;;b1,0;;marray $credentials;;p">
					<treenode node="credentials;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Guard.php;f31;33;43;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="onceBasic;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Guard.php;f11;59;47;59;;;;vpos;;v;;r&#xA;Description&#xA;     Perform a stateless HTTP Basic login attempt.&#xA;&#xA;Parameters:&#xA;    string $field;;d-1,-1;;b1,0;;mstring $field;;p">
					<treenode node="field;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Guard.php;f30;59;36;59;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="user;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Guard.php;f11;25;26;25;;;;vpos;;v;;r&#xA;Description&#xA;     Get the currently authenticated user.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="validate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Guard.php;f11;67;53;67;;;;vpos;;vbool;;r&#xA;Description&#xA;     Validate a user's credentials.&#xA;&#xA;Parameters:&#xA;    array $credentials;;d-1,-1;;b1,0;;marray $credentials;;p">
					<treenode node="credentials;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Guard.php;f35;67;47;67;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="viaRemember;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Guard.php;f11;92;33;92;;;;vpos;;vbool;;r&#xA;Description&#xA;     Determine if the user was authenticated via &quot;remember me&quot; cookie.;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="HandlerResolver;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Bus\HandlerResolver.php;f0;6;1;47;;;;vpos;;v;;r;;d0,7;;b0,0;;m">
				<treenode node="getHandlerClass;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Bus\HandlerResolver.php;f11;22;45;22;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the handler class for the given command.&#xA;&#xA;Parameters:&#xA;    mixed $command;;d-1,-1;;b1,0;;mmixed $command;;p">
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Bus\HandlerResolver.php;f36;22;44;22;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getHandlerMethod;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Bus\HandlerResolver.php;f11;30;46;30;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the handler method for the given command.&#xA;&#xA;Parameters:&#xA;    mixed $command;;d-1,-1;;b1,0;;mmixed $command;;p">
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Bus\HandlerResolver.php;f37;30;45;30;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="maps;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Bus\HandlerResolver.php;f11;38;41;38;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Register command to handler mappings.&#xA;&#xA;Parameters:&#xA;    array $commands;;d-1,-1;;b1,0;;marray $commands;;p">
					<treenode node="commands;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Bus\HandlerResolver.php;f31;38;40;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mapUsing;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Bus\HandlerResolver.php;f11;46;45;46;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Register a fallback mapper callback.&#xA;&#xA;Parameters:&#xA;    \Closure $mapper;;d-1,-1;;b1,0;;m\Closure $mapper;;p">
					<treenode node="mapper;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Bus\HandlerResolver.php;f37;46;44;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="resolveHandler;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Bus\HandlerResolver.php;f11;14;44;14;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Get the handler instance for the given command.&#xA;&#xA;Parameters:&#xA;    mixed $command;;d-1,-1;;b1,0;;mmixed $command;;p">
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Bus\HandlerResolver.php;f35;14;43;14;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="Hasher;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Hashing\Hasher.php;f0;4;1;33;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="check;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Hashing\Hasher.php;f11;23;68;23;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check the given plain value against a hash.&#xA;&#xA;Parameters:&#xA;    string $value&#xA;    string $hashedValue&#xA;    array $options;;d-1,-1;;b1,0;;mstring $value;;pstring $hashedValue;;parray $options;;p">
					<treenode node="hashedValue;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Hashing\Hasher.php;f34;23;46;23;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Hashing\Hasher.php;f54;23;62;23;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Hashing\Hasher.php;f26;23;32;23;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="make;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Hashing\Hasher.php;f11;13;53;13;;;;vpos;;vstring;;r&#xA;Description&#xA;     Hash the given value.&#xA;&#xA;Parameters:&#xA;    string $value&#xA;    array $options;;d-1,-1;;b1,0;;mstring $value;;parray $options;;p">
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Hashing\Hasher.php;f39;13;47;13;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Hashing\Hasher.php;f25;13;31;13;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="needsRehash;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Hashing\Hasher.php;f11;32;66;32;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check if the given hash has been hashed using the given options.&#xA;&#xA;Parameters:&#xA;    string $hashedValue&#xA;    array $options;;d-1,-1;;b1,0;;mstring $hashedValue;;parray $options;;p">
					<treenode node="hashedValue;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Hashing\Hasher.php;f32;32;44;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Hashing\Hasher.php;f52;32;60;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="Htmlable;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\Htmlable.php;f0;4;1;12;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="toHtml;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\Htmlable.php;f11;11;28;11;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get content as a string of HTML.;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Hub;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pipeline\Hub.php;f0;4;1;14;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="pipe;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pipeline\Hub.php;f11;13;51;13;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Send an object through one of the available pipelines.&#xA;&#xA;Parameters:&#xA;    mixed $object&#xA;    string|null $pipeline;;d-1,-1;;b1,0;;mmixed $object;;pstring|null $pipeline;;p">
					<treenode node="object;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pipeline\Hub.php;f25;13;32;13;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="pipeline;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pipeline\Hub.php;f34;13;43;13;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="Job;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Job.php;f0;4;1;48;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="attempts;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Job.php;f11;33;30;33;;;;vpos;;vint;;r&#xA;Description&#xA;     Get the number of times the job has been attempted.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="delete;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Job.php;f11;18;28;18;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Delete the job from the queue.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="fire;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Job.php;f11;11;26;11;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Fire the job.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="getName;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Job.php;f11;40;29;40;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the name of the queued job class.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="getQueue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Job.php;f11;47;30;47;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the name of the queue the job belongs to.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="release;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Job.php;f11;26;39;26;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Release the job back into the queue.&#xA;&#xA;Parameters:&#xA;    int $delay;;d-1,-1;;b1,0;;mint $delay;;p">
					<treenode node="delay;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Job.php;f28;26;34;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="Jsonable;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\Jsonable.php;f0;4;1;13;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="toJson;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\Jsonable.php;f11;12;40;12;;;;vpos;;vstring;;r&#xA;Description&#xA;     Convert the object to its JSON representation.&#xA;&#xA;Parameters:&#xA;    int $options;;d-1,-1;;b1,0;;mint $options;;p">
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\Jsonable.php;f27;12;35;12;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="JsonSerializable;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\JsonSerializable.php;f0;2;1;15;;;;vpos;;v;;r;;d0,3;;b0,0;;m">
				<treenode node="jsonSerialize;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\JsonSerializable.php;f11;14;35;14;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Specify data which should be serialized to JSON.&#xA;&#xA;Return:&#xA;   data which can be serialized by &lt;b&gt;json_encode&lt;/b&gt;,;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Kernel;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Http\Kernel.php;f0;4;1;36;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Console\Kernel.php;f0;4;1;46;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="all;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Console\Kernel.php;f11;38;25;38;;;;vpos;;varray;;r&#xA;Description&#xA;     Get all of the commands registered with the console.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="bootstrap;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Http\Kernel.php;f11;11;31;11;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Bootstrap the application for HTTP requests.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="call;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Console\Kernel.php;f11;22;58;22;;;;vpos;;vint;;r&#xA;Description&#xA;     Run an Artisan console command by name.&#xA;&#xA;Parameters:&#xA;    string $command&#xA;    array $parameters;;d-1,-1;;b1,0;;mstring $command;;parray $parameters;;p">
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Console\Kernel.php;f25;22;33;22;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Console\Kernel.php;f41;22;52;22;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getApplication;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Http\Kernel.php;f11;35;36;35;;;;vpos;;v;;r&#xA;Description&#xA;     Get the Laravel application instance.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="handle;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Http\Kernel.php;f11;19;36;19;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Console\Kernel.php;f11;13;50;13;;;;vpos;;v;;r&#xA;Description&#xA;     Handle an incoming HTTP request.&#xA;&#xA;Parameters:&#xA;    \Symfony\Component\HttpFoundation\Request $request;;d-1,-1;;b1,0;;m\Symfony\Component\HttpFoundation\Request $request;;p">
					<treenode node="input;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Console\Kernel.php;f27;13;33;13;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="output;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Console\Kernel.php;f35;13;42;13;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="request;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Http\Kernel.php;f27;19;35;19;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="output;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Console\Kernel.php;f11;45;28;45;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the output for the last run command.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="queue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Console\Kernel.php;f11;31;59;31;;;;vpos;;vint;;r&#xA;Description&#xA;     Queue an Artisan console command by name.&#xA;&#xA;Parameters:&#xA;    string $command&#xA;    array $parameters;;d-1,-1;;b1,0;;mstring $command;;parray $parameters;;p">
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Console\Kernel.php;f26;31;34;31;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Console\Kernel.php;f42;31;53;31;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="terminate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Http\Kernel.php;f11;28;50;28;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Perform any final actions for the request lifecycle.&#xA;&#xA;Parameters:&#xA;    \Symfony\Component\HttpFoundation\Request $request&#xA;    \Symfony\Component\HttpFoundation\Response $response;;d-1,-1;;b1,0;;m\Symfony\Component\HttpFoundation\Request $request;;p\Symfony\Component\HttpFoundation\Response $response;;p">
					<treenode node="request;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Http\Kernel.php;f30;28;38;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="response;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Http\Kernel.php;f40;28;49;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="LengthAwarePaginator;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pagination\LengthAwarePaginator.php;f0;4;1;19;;;;vpos;;vPaginator;;c;;r;;d0,5;;b0,0;;m">
				<treenode node="lastPage;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pagination\LengthAwarePaginator.php;f11;18;30;18;;;;vpos;;vint;;r&#xA;Description&#xA;     Get the page number of the last available page.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="total;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pagination\LengthAwarePaginator.php;f11;11;27;11;;;;vpos;;vint;;r&#xA;Description&#xA;     Determine the total number of items in the data store.;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="lib/byte_safe_strings.php;PHP:PHP Include;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\psalm-autoload.php;f14;2;39;2;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="lib/cast_to_int.php;PHP:PHP Include;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\psalm-autoload.php;f14;3;33;3;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="lib/error_polyfill.php;PHP:PHP Include;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\psalm-autoload.php;f14;4;36;4;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="lib/random.php;PHP:PHP Include;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\psalm-autoload.php;f14;6;28;6;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="LoaderInterface;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\LoaderInterface.php;f0;22;1;37;;;;vpos;;v;;r&#xA;Definition&#xA;    interface LoaderInterface&#xA;&#xA;Description&#xA;     LoaderInterface is the interface implemented by all translation loaders.;;d0,23;;b0,0;;m">
				<treenode node="load;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\LoaderInterface.php;f11;36;66;36;;;;vpos;;vMessageCatalogue;;r&#xA;Description&#xA;     Loads a locale.&#xA;&#xA;Parameters:&#xA;    mixed $resource - A resource&#xA;    string $locale - A locale&#xA;    string $domain - The domain&#xA;&#xA;Return:&#xA;   A MessageCatalogue instance;;d-1,-1;;b1,0;;mmixed $resource;;pstring $locale;;pstring $domain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\LoaderInterface.php;f45;36;52;36;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\LoaderInterface.php;f36;36;43;36;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="resource;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\LoaderInterface.php;f25;36;34;36;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="Log;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Logging\Log.php;f0;4;1;97;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="alert;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Logging\Log.php;f11;13;56;13;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Log an alert message to the logs.&#xA;&#xA;Parameters:&#xA;    string $message&#xA;    array $context;;d-1,-1;;b1,0;;mstring $message;;parray $context;;p">
					<treenode node="context;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Logging\Log.php;f42;13;50;13;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Logging\Log.php;f26;13;34;13;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="critical;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Logging\Log.php;f11;22;59;22;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Log a critical message to the logs.&#xA;&#xA;Parameters:&#xA;    string $message&#xA;    array $context;;d-1,-1;;b1,0;;mstring $message;;parray $context;;p">
					<treenode node="context;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Logging\Log.php;f45;22;53;22;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Logging\Log.php;f29;22;37;22;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="debug;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Logging\Log.php;f11;67;56;67;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Log a debug message to the logs.&#xA;&#xA;Parameters:&#xA;    string $message&#xA;    array $context;;d-1,-1;;b1,0;;mstring $message;;parray $context;;p">
					<treenode node="context;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Logging\Log.php;f42;67;50;67;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Logging\Log.php;f26;67;34;67;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="error;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Logging\Log.php;f11;31;56;31;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Log an error message to the logs.&#xA;&#xA;Parameters:&#xA;    string $message&#xA;    array $context;;d-1,-1;;b1,0;;mstring $message;;parray $context;;p">
					<treenode node="context;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Logging\Log.php;f42;31;50;31;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Logging\Log.php;f26;31;34;31;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="info;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Logging\Log.php;f11;58;55;58;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Log an informational message to the logs.&#xA;&#xA;Parameters:&#xA;    string $message&#xA;    array $context;;d-1,-1;;b1,0;;mstring $message;;parray $context;;p">
					<treenode node="context;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Logging\Log.php;f41;58;49;58;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Logging\Log.php;f25;58;33;58;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="log;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Logging\Log.php;f11;77;62;77;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Log a message to the logs.&#xA;&#xA;Parameters:&#xA;    string $level&#xA;    string $message&#xA;    array $context;;d-1,-1;;b1,0;;mstring $level;;pstring $message;;parray $context;;p">
					<treenode node="context;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Logging\Log.php;f48;77;56;77;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="level;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Logging\Log.php;f24;77;30;77;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Logging\Log.php;f32;77;40;77;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="notice;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Logging\Log.php;f11;49;57;49;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Log a notice to the logs.&#xA;&#xA;Parameters:&#xA;    string $message&#xA;    array $context;;d-1,-1;;b1,0;;mstring $message;;parray $context;;p">
					<treenode node="context;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Logging\Log.php;f43;49;51;49;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Logging\Log.php;f27;49;35;49;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="useDailyFiles;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Logging\Log.php;f11;96;69;96;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Register a daily file log handler.&#xA;&#xA;Parameters:&#xA;    string $path&#xA;    int $days&#xA;    string $level;;d-1,-1;;b1,0;;mstring $path;;pint $days;;pstring $level;;p">
					<treenode node="days;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Logging\Log.php;f41;96;46;96;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="level;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Logging\Log.php;f52;96;58;96;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Logging\Log.php;f34;96;39;96;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="useFiles;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Logging\Log.php;f11;86;53;86;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Register a file log handler.&#xA;&#xA;Parameters:&#xA;    string $path&#xA;    string $level;;d-1,-1;;b1,0;;mstring $path;;pstring $level;;p">
					<treenode node="level;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Logging\Log.php;f36;86;42;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Logging\Log.php;f29;86;34;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="warning;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Logging\Log.php;f11;40;58;40;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Log a warning message to the logs.&#xA;&#xA;Parameters:&#xA;    string $message&#xA;    array $context;;d-1,-1;;b1,0;;mstring $message;;parray $context;;p">
					<treenode node="context;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Logging\Log.php;f44;40;52;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Logging\Log.php;f28;40;36;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="Mailer;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Mail\Mailer.php;f0;4;1;31;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="failures;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Mail\Mailer.php;f11;30;30;30;;;;vpos;;varray;;r&#xA;Description&#xA;     Get the array of failed recipients.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="raw;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Mail\Mailer.php;f11;13;41;13;;;;vpos;;vint;;r&#xA;Description&#xA;     Send a new message when only a raw text part.&#xA;&#xA;Parameters:&#xA;    string $text&#xA;    \Closure|string $callback;;d-1,-1;;b1,0;;mstring $text;;p\Closure|string $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Mail\Mailer.php;f31;13;40;13;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="text;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Mail\Mailer.php;f24;13;29;13;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="send;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Mail\Mailer.php;f11;23;55;23;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Send a new message using a view.&#xA;&#xA;Parameters:&#xA;    string|array $view&#xA;    array $data&#xA;    \Closure|string $callback;;d-1,-1;;b1,0;;mstring|array $view;;parray $data;;p\Closure|string $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Mail\Mailer.php;f45;23;54;23;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="data;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Mail\Mailer.php;f38;23;43;23;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="view;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Mail\Mailer.php;f25;23;30;23;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="MailQueue;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Mail\MailQueue.php;f0;4;1;28;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="later;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Mail\MailQueue.php;f11;27;79;27;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Queue a new e-mail message for sending after (n) seconds.&#xA;&#xA;Parameters:&#xA;    int $delay&#xA;    string|array $view&#xA;    array $data&#xA;    \Closure|string $callback&#xA;    string $queue;;d-1,-1;;b1,0;;mint $delay;;pstring|array $view;;parray $data;;p\Closure|string $callback;;pstring $queue;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Mail\MailQueue.php;f54;27;63;27;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="data;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Mail\MailQueue.php;f47;27;52;27;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="delay;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Mail\MailQueue.php;f26;27;32;27;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="queue;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Mail\MailQueue.php;f65;27;71;27;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="view;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Mail\MailQueue.php;f34;27;39;27;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="queue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Mail\MailQueue.php;f11;15;71;15;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Queue a new e-mail message for sending.&#xA;&#xA;Parameters:&#xA;    string|array $view&#xA;    array $data&#xA;    \Closure|string $callback&#xA;    string $queue;;d-1,-1;;b1,0;;mstring|array $view;;parray $data;;p\Closure|string $callback;;pstring $queue;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Mail\MailQueue.php;f46;15;55;15;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="data;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Mail\MailQueue.php;f39;15;44;15;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="queue;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Mail\MailQueue.php;f57;15;63;15;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="view;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Mail\MailQueue.php;f26;15;31;15;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="MB_CASE_LOWER;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f12;15;25;15;;;;vpos;;v;;r1;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="MB_CASE_TITLE;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f12;16;25;16;;;;vpos;;v;;r2;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="MB_CASE_UPPER;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f12;14;25;14;;;;vpos;;v;;r0;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="MessageBag;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\MessageBag.php;f0;4;1;99;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="add;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\MessageBag.php;f11;20;39;20;;;;vpos;;v;;r&#xA;Description&#xA;     Add a message to the bag.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    string $message;;d-1,-1;;b1,0;;mstring $key;;pstring $message;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\MessageBag.php;f24;20;28;20;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\MessageBag.php;f30;20;38;20;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="all;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\MessageBag.php;f11;62;39;62;;;;vpos;;varray;;r&#xA;Description&#xA;     Get all of the messages for every key in the bag.&#xA;&#xA;Parameters:&#xA;    string $format;;d-1,-1;;b1,0;;mstring $format;;p">
					<treenode node="format;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\MessageBag.php;f24;62;31;62;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="count;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\MessageBag.php;f11;91;27;91;;;;vpos;;vint;;r&#xA;Description&#xA;     Get the number of messages in the container.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="first;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\MessageBag.php;f11;45;54;45;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the first message from the bag for a given key.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    string $format;;d-1,-1;;b1,0;;mstring $key;;pstring $format;;p">
					<treenode node="format;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\MessageBag.php;f39;45;46;45;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\MessageBag.php;f26;45;30;45;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="get;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\MessageBag.php;f11;54;45;54;;;;vpos;;varray;;r&#xA;Description&#xA;     Get all of the messages from the bag for a given key.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    string $format;;d-1,-1;;b1,0;;mstring $key;;pstring $format;;p">
					<treenode node="format;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\MessageBag.php;f30;54;37;54;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\MessageBag.php;f24;54;28;54;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getFormat;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\MessageBag.php;f11;69;31;69;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the default message format.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="has;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\MessageBag.php;f11;36;36;36;;;;vpos;;vbool;;r&#xA;Description&#xA;     Determine if messages exist for a given key.&#xA;&#xA;Parameters:&#xA;    string $key;;d-1,-1;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\MessageBag.php;f24;36;28;36;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isEmpty;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\MessageBag.php;f11;84;29;84;;;;vpos;;vbool;;r&#xA;Description&#xA;     Determine if the message bag has any messages.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="keys;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\MessageBag.php;f11;11;26;11;;;;vpos;;varray;;r&#xA;Description&#xA;     Get the keys present in the message bag.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="merge;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\MessageBag.php;f11;28;36;28;;;;vpos;;v;;r&#xA;Description&#xA;     Merge a new array of messages into the bag.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Contracts\Support\MessageProvider|array $messages;;d-1,-1;;b1,0;;m\Illuminate\Contracts\Support\MessageProvider|array $messages;;p">
					<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\MessageBag.php;f26;28;35;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setFormat;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\MessageBag.php;f11;77;51;77;;;;vpos;;v;;r&#xA;Description&#xA;     Set the default message format.&#xA;&#xA;Parameters:&#xA;    string $format;;d-1,-1;;b1,0;;mstring $format;;p">
					<treenode node="format;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\MessageBag.php;f30;77;37;77;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="toArray;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\MessageBag.php;f11;98;29;98;;;;vpos;;varray;;r&#xA;Description&#xA;     Get the instance as an array.;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MessageCatalogueInterface;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogueInterface.php;f0;20;1;135;;;;vpos;;v;;r&#xA;Definition&#xA;    interface MessageCatalogueInterface&#xA;&#xA;Description&#xA;     MessageCatalogueInterface.;;d0,21;;b0,0;;m">
				<treenode node="add;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogueInterface.php;f11;100;56;100;;;;vpos;;v;;r&#xA;Description&#xA;     Adds translations for a given domain.&#xA;&#xA;Parameters:&#xA;    array $messages - An array of translations&#xA;    string $domain - The domain name;;d-1,-1;;b1,0;;marray $messages;;pstring $domain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogueInterface.php;f35;100;42;100;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogueInterface.php;f24;100;33;100;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogueInterface.php;f11;107;70;107;;;;vpos;;v;;r&#xA;Description&#xA;     Merges translations from the given Catalogue into the current one.;;d-1,-1;;b1,0;;mcatalogue;;p">
					<treenode node="catalogue;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogueInterface.php;f59;107;69;107;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addFallbackCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogueInterface.php;f11;115;78;115;;;;vpos;;v;;r&#xA;Description&#xA;     Merges translations from the given Catalogue into the current one only when the translation does not exist.;;d-1,-1;;b1,0;;mcatalogue;;p">
					<treenode node="catalogue;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogueInterface.php;f67;115;77;115;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addResource;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogueInterface.php;f11;134;60;134;;;;vpos;;v;;r&#xA;Description&#xA;     Adds a resource for this collection.;;d-1,-1;;b1,0;;mresource;;p">
					<treenode node="resource;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogueInterface.php;f50;134;59;134;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="all;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogueInterface.php;f11;45;39;45;;;;vpos;;varray;;r&#xA;Description&#xA;     Gets the messages within a given domain.&#xA;&#xA;Parameters:&#xA;    string $domain - The domain name&#xA;&#xA;Return:&#xA;   An array of messages;;d-1,-1;;b1,0;;mstring $domain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogueInterface.php;f24;45;31;45;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="defines;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogueInterface.php;f11;74;54;74;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks if a message has a translation (it does not take into account the fallback mechanism).&#xA;&#xA;Parameters:&#xA;    string $id - The message id&#xA;    string $domain - The domain name&#xA;&#xA;Return:&#xA;   true if the message has a translation, false otherwise;;d-1,-1;;b1,0;;mstring $id;;pstring $domain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogueInterface.php;f33;74;40;74;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogueInterface.php;f28;74;31;74;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="get;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogueInterface.php;f11;84;50;84;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets a message translation.&#xA;&#xA;Parameters:&#xA;    string $id - The message id&#xA;    string $domain - The domain name&#xA;&#xA;Return:&#xA;   The message translation;;d-1,-1;;b1,0;;mstring $id;;pstring $domain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogueInterface.php;f29;84;36;84;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogueInterface.php;f24;84;27;84;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getDomains;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogueInterface.php;f11;34;32;34;;;;vpos;;varray;;r&#xA;Description&#xA;     Gets the domains.&#xA;&#xA;Return:&#xA;   An array of domains;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="getFallbackCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogueInterface.php;f11;122;42;122;;;;vpos;;vself;;r&#xA;Description&#xA;     Gets the fallback catalogue.&#xA;&#xA;Return:&#xA;   |null A MessageCatalogueInterface instance or null when no fallback has been set;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="getLocale;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogueInterface.php;f11;27;31;27;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets the catalogue locale.&#xA;&#xA;Return:&#xA;   The locale;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="getResources;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogueInterface.php;f11;129;34;129;;;;vpos;;vResourceInterface;;r&#xA;Description&#xA;     Returns an array of resources loaded to build this collection.&#xA;&#xA;Return:&#xA;   [] An array of resources;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="has;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogueInterface.php;f11;64;50;64;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks if a message has a translation.&#xA;&#xA;Parameters:&#xA;    string $id - The message id&#xA;    string $domain - The domain name&#xA;&#xA;Return:&#xA;   true if the message has a translation, false otherwise;;d-1,-1;;b1,0;;mstring $id;;pstring $domain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogueInterface.php;f29;64;36;64;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogueInterface.php;f24;64;27;64;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="replace;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogueInterface.php;f11;92;60;92;;;;vpos;;v;;r&#xA;Description&#xA;     Sets translations for a given domain.&#xA;&#xA;Parameters:&#xA;    array $messages - An array of translations&#xA;    string $domain - The domain name;;d-1,-1;;b1,0;;marray $messages;;pstring $domain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogueInterface.php;f39;92;46;92;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogueInterface.php;f28;92;37;92;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="set;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogueInterface.php;f11;54;64;54;;;;vpos;;v;;r&#xA;Description&#xA;     Sets a message translation.&#xA;&#xA;Parameters:&#xA;    string $id - The message id&#xA;    string $translation - The messages translation&#xA;    string $domain - The domain name;;d-1,-1;;b1,0;;mstring $id;;pstring $translation;;pstring $domain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogueInterface.php;f43;54;50;54;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogueInterface.php;f24;54;27;54;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="translation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogueInterface.php;f29;54;41;54;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="MessageFormatterInterface;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Formatter\MessageFormatterInterface.php;f0;17;1;29;;;;vpos;;v;;r&#xA;Definition&#xA;    interface MessageFormatterInterface&#xA;&#xA;Description&#xA;      author Guilherme Blanco &lt;guilhermeblanco hotmail.com&gt;;;d0,18;;b0,0;;m">
				<treenode node="format;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Formatter\MessageFormatterInterface.php;f11;28;74;28;;;;vpos;;vstring;;r&#xA;Description&#xA;     Formats a localized message pattern with given arguments.&#xA;&#xA;Parameters:&#xA;    string $message - The message (may also be an object that can be cast to string)&#xA;    string $locale - The message locale&#xA;    array $parameters - An array of parameters for the message;;d-1,-1;;b1,0;;mstring $message;;pstring $locale;;parray $parameters;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Formatter\MessageFormatterInterface.php;f37;28;44;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Formatter\MessageFormatterInterface.php;f27;28;35;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Formatter\MessageFormatterInterface.php;f52;28;63;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="MessageProvider;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\MessageProvider.php;f0;4;1;12;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="getMessageBag;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\MessageProvider.php;f11;11;35;11;;;;vpos;;v;;r&#xA;Description&#xA;     Get the messages for the instance.;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MetadataAwareInterface;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MetadataAwareInterface.php;f0;18;1;53;;;;vpos;;v;;r&#xA;Definition&#xA;    interface MetadataAwareInterface&#xA;&#xA;Description&#xA;     MetadataAwareInterface.;;d0,19;;b0,0;;m">
				<treenode node="deleteMetadata;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MetadataAwareInterface.php;f11;52;67;52;;;;vpos;;v;;r&#xA;Description&#xA;     Deletes metadata for the given key and domain.&#xA;&#xA;Parameters:&#xA;    string $key - The key&#xA;    string $domain - The domain name;;d-1,-1;;b1,0;;mstring $key;;pstring $domain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MetadataAwareInterface.php;f46;52;53;52;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MetadataAwareInterface.php;f35;52;39;52;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getMetadata;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MetadataAwareInterface.php;f11;32;64;32;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Gets metadata for the given domain and key.&#xA;&#xA;Parameters:&#xA;    string $key - The key&#xA;    string $domain - The domain name&#xA;&#xA;Return:&#xA;   The value that was set or an array with the domains/keys or null;;d-1,-1;;b1,0;;mstring $key;;pstring $domain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MetadataAwareInterface.php;f43;32;50;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MetadataAwareInterface.php;f32;32;36;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setMetadata;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MetadataAwareInterface.php;f11;41;67;41;;;;vpos;;v;;r&#xA;Description&#xA;     Adds metadata to a message domain.&#xA;&#xA;Parameters:&#xA;    string $key - The key&#xA;    mixed $value - The value&#xA;    string $domain - The domain name;;d-1,-1;;b1,0;;mstring $key;;pmixed $value;;pstring $domain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MetadataAwareInterface.php;f46;41;53;41;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MetadataAwareInterface.php;f32;41;36;41;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MetadataAwareInterface.php;f38;41;44;41;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="Middleware;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\Middleware.php;f0;9;1;19;;;;vpos;;v;;r&#xA;Definition&#xA;    interface Middleware&#xA;&#xA;Description&#xA;      deprecated since version 5.1.;;d0,10;;b0,0;;m">
				<treenode node="handle;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\Middleware.php;f11;18;51;18;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Handle an incoming request.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Http\Request $request&#xA;    \Closure $next;;d-1,-1;;b1,0;;m\Illuminate\Http\Request $request;;p\Closure $next;;p">
					<treenode node="next;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\Middleware.php;f45;18;50;18;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="request;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\Middleware.php;f27;18;35;18;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="MigrationRepositoryInterface;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationRepositoryInterface.php;f0;4;1;65;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="createRepository;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationRepositoryInterface.php;f11;49;38;49;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Create the migration repository data store.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="delete;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationRepositoryInterface.php;f11;35;38;35;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Remove a migration from the log.&#xA;&#xA;Parameters:&#xA;    object $migration;;d-1,-1;;b1,0;;mobject $migration;;p">
					<treenode node="migration;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationRepositoryInterface.php;f27;35;37;35;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getLast;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationRepositoryInterface.php;f11;18;29;18;;;;vpos;;varray;;r&#xA;Description&#xA;     Get the last migration batch.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="getNextBatchNumber;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationRepositoryInterface.php;f11;42;40;42;;;;vpos;;vint;;r&#xA;Description&#xA;     Get the next migration batch number.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="getRan;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationRepositoryInterface.php;f11;11;28;11;;;;vpos;;varray;;r&#xA;Description&#xA;     Get the ran migrations for a given package.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="log;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationRepositoryInterface.php;f11;27;38;27;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Log that a migration was run.&#xA;&#xA;Parameters:&#xA;    string $file&#xA;    int $batch;;d-1,-1;;b1,0;;mstring $file;;pint $batch;;p">
					<treenode node="batch;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationRepositoryInterface.php;f31;27;37;27;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="file;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationRepositoryInterface.php;f24;27;29;27;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="repositoryExists;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationRepositoryInterface.php;f11;56;38;56;;;;vpos;;vbool;;r&#xA;Description&#xA;     Determine if the migration repository exists.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="setSource;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationRepositoryInterface.php;f11;64;36;64;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Set the information source to gather data.&#xA;&#xA;Parameters:&#xA;    string $name;;d-1,-1;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationRepositoryInterface.php;f30;64;35;64;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="Monitor;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Monitor.php;f0;4;1;29;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="failing;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Monitor.php;f11;20;38;20;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Register a callback to be executed when a job fails after the maximum amount of retries.&#xA;&#xA;Parameters:&#xA;    mixed $callback;;d-1,-1;;b1,0;;mmixed $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Monitor.php;f28;20;37;20;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="looping;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Monitor.php;f11;12;38;12;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Register a callback to be executed on every iteration through the queue loop.&#xA;&#xA;Parameters:&#xA;    mixed $callback;;d-1,-1;;b1,0;;mmixed $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Monitor.php;f28;12;37;12;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="stopping;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Monitor.php;f11;28;39;28;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Register a callback to be executed when a daemon queue is stopping.&#xA;&#xA;Parameters:&#xA;    mixed $callback;;d-1,-1;;b1,0;;mmixed $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Monitor.php;f29;28;38;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="OperationInterface;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\OperationInterface.php;f0;34;1;76;;;;vpos;;v;;r&#xA;Definition&#xA;    interface OperationInterface&#xA;&#xA;Description&#xA;     Represents an operation on catalogue(s).;;d0,35;;b0,0;;m">
				<treenode node="getDomains;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\OperationInterface.php;f11;41;32;41;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns domains affected by operation.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="getMessages;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\OperationInterface.php;f11;50;40;50;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns all valid messages ('all') after operation.&#xA;&#xA;Parameters:&#xA;    string $domain;;d-1,-1;;b1,0;;mstring $domain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\OperationInterface.php;f32;50;39;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getNewMessages;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\OperationInterface.php;f11;59;43;59;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns new messages ('new') after operation.&#xA;&#xA;Parameters:&#xA;    string $domain;;d-1,-1;;b1,0;;mstring $domain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\OperationInterface.php;f35;59;42;59;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getObsoleteMessages;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\OperationInterface.php;f11;68;48;68;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns obsolete messages ('obsolete') after operation.&#xA;&#xA;Parameters:&#xA;    string $domain;;d-1,-1;;b1,0;;mstring $domain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\OperationInterface.php;f40;68;47;68;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getResult;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\OperationInterface.php;f11;75;31;75;;;;vpos;;vMessageCatalogueInterface;;r&#xA;Description&#xA;     Returns resulting catalogue ('result').;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="other/ide_stubs/libsodium.php;PHP:PHP Include;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\psalm-autoload.php;f14;5;43;5;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="Paginator;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pagination\Paginator.php;f0;4;1;108;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="appends;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pagination\Paginator.php;f11;21;48;21;;;;vpos;;v;;r&#xA;Description&#xA;     Add a set of query string values to the paginator.&#xA;&#xA;Parameters:&#xA;    array|string $key&#xA;    string|null $value;;d-1,-1;;b1,0;;marray|string $key;;pstring|null $value;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pagination\Paginator.php;f28;21;32;21;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pagination\Paginator.php;f34;21;40;21;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="currentPage;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pagination\Paginator.php;f11;78;33;78;;;;vpos;;vint;;r&#xA;Description&#xA;     Determine the current page being paginated.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="firstItem;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pagination\Paginator.php;f11;57;31;57;;;;vpos;;vint;;r&#xA;Description&#xA;     Get the &quot;index&quot; of the first item being paginated.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="fragment;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pagination\Paginator.php;f11;29;46;29;;;;vpos;;v;;r&#xA;Description&#xA;     Get / set the URL fragment to be appended to URLs.&#xA;&#xA;Parameters:&#xA;    string|null $fragment;;d-1,-1;;b1,0;;mstring|null $fragment;;p">
					<treenode node="fragment;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pagination\Paginator.php;f29;29;38;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hasMorePages;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pagination\Paginator.php;f11;92;34;92;;;;vpos;;vbool;;r&#xA;Description&#xA;     Determine if there is more items in the data store.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasPages;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pagination\Paginator.php;f11;85;30;85;;;;vpos;;vbool;;r&#xA;Description&#xA;     Determine if there are enough items to split into multiple pages.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="isEmpty;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pagination\Paginator.php;f11;99;29;99;;;;vpos;;vbool;;r&#xA;Description&#xA;     Determine if the list of items is empty or not.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="items;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pagination\Paginator.php;f11;50;27;50;;;;vpos;;varray;;r&#xA;Description&#xA;     Get all of the items being paginated.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="lastItem;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pagination\Paginator.php;f11;64;30;64;;;;vpos;;vint;;r&#xA;Description&#xA;     Get the &quot;index&quot; of the last item being paginated.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="nextPageUrl;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pagination\Paginator.php;f11;36;33;36;;;;vpos;;vstring;;r&#xA;Description&#xA;     The the URL for the next page, or null.&#xA;&#xA;Return:&#xA;   |null;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="perPage;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pagination\Paginator.php;f11;71;29;71;;;;vpos;;vint;;r&#xA;Description&#xA;     Determine how many items are being shown per page.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="previousPageUrl;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pagination\Paginator.php;f11;43;37;43;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the URL for the previous page, or null.&#xA;&#xA;Return:&#xA;   |null;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="render;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pagination\Paginator.php;f11;107;55;107;;;;vpos;;vstring;;r&#xA;Description&#xA;     Render the paginator using a given Presenter.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Contracts\Pagination\Presenter|null $presenter;;d-1,-1;;b1,0;;m\Illuminate\Contracts\Pagination\Presenter|null $presenter;;p">
					<treenode node="presenter;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pagination\Paginator.php;f37;107;47;107;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="url;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pagination\Paginator.php;f11;12;30;12;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the URL for a given page.&#xA;&#xA;Parameters:&#xA;    int $page;;d-1,-1;;b1,0;;mint $page;;p">
					<treenode node="page;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pagination\Paginator.php;f24;12;29;12;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="PasswordBroker;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\PasswordBroker.php;f0;6;1;76;;;;vpos;;v;;r;;d0,7;;b0,0;;m">
				<treenode node="INVALID_PASSWORD;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\PasswordBroker.php;f9;34;26;34;;;;vposstring;;v;;r'passwords.password';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="INVALID_TOKEN;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\PasswordBroker.php;f9;41;23;41;;;;vposstring;;v;;r'passwords.token';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="INVALID_USER;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\PasswordBroker.php;f9;27;22;27;;;;vposstring;;v;;r'passwords.user';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="PASSWORD_RESET;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\PasswordBroker.php;f9;20;24;20;;;;vposstring;;v;;r'passwords.reset';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="RESET_LINK_SENT;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\PasswordBroker.php;f9;13;25;13;;;;vposstring;;v;;r'passwords.sent';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="reset;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\PasswordBroker.php;f11;59;64;59;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Reset the password for the given token.&#xA;&#xA;Parameters:&#xA;    array $credentials&#xA;    \Closure $callback;;d-1,-1;;b1,0;;marray $credentials;;p\Closure $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\PasswordBroker.php;f54;59;63;59;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="credentials;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\PasswordBroker.php;f32;59;44;59;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="sendResetLink;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\PasswordBroker.php;f11;50;79;50;;;;vpos;;vstring;;r&#xA;Description&#xA;     Send a password reset link to a user.&#xA;&#xA;Parameters:&#xA;    array $credentials&#xA;    \Closure|null $callback;;d-1,-1;;b1,0;;marray $credentials;;p\Closure|null $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\PasswordBroker.php;f62;50;71;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="credentials;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\PasswordBroker.php;f40;50;52;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="validateNewPassword;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\PasswordBroker.php;f11;75;59;75;;;;vpos;;vbool;;r&#xA;Description&#xA;     Determine if the passwords match for the request.&#xA;&#xA;Parameters:&#xA;    array $credentials;;d-1,-1;;b1,0;;marray $credentials;;p">
					<treenode node="credentials;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\PasswordBroker.php;f46;75;58;75;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="validator;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\PasswordBroker.php;f11;67;48;67;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Set a custom password validator.&#xA;&#xA;Parameters:&#xA;    \Closure $callback;;d-1,-1;;b1,0;;m\Closure $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\PasswordBroker.php;f38;67;47;67;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="PHP_VERSION_ID;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\random.php;f9;35;23;35;;;;vpos;;v;;r$RandomCompatversion[0;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="Pipeline;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pipeline\Pipeline.php;f0;6;1;39;;;;vpos;;v;;r;;d0,7;;b0,0;;m">
				<treenode node="send;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pipeline\Pipeline.php;f11;14;35;14;;;;vpos;;v;;r&#xA;Description&#xA;     Set the traveler object being sent on the pipeline.&#xA;&#xA;Parameters:&#xA;    mixed $traveler;;d-1,-1;;b1,0;;mmixed $traveler;;p">
					<treenode node="traveler;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pipeline\Pipeline.php;f25;14;34;14;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="then;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pipeline\Pipeline.php;f11;38;46;38;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Run the pipeline with a final destination callback.&#xA;&#xA;Parameters:&#xA;    \Closure $destination;;d-1,-1;;b1,0;;m\Closure $destination;;p">
					<treenode node="destination;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pipeline\Pipeline.php;f33;38;45;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="through;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pipeline\Pipeline.php;f11;22;35;22;;;;vpos;;v;;r&#xA;Description&#xA;     Set the stops of the pipeline.&#xA;&#xA;Parameters:&#xA;    dynamic|array $stops;;d-1,-1;;b1,0;;mdynamic|array $stops;;p">
					<treenode node="stops;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pipeline\Pipeline.php;f28;22;34;22;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="via;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pipeline\Pipeline.php;f11;30;32;30;;;;vpos;;v;;r&#xA;Description&#xA;     Set the method to call on the stops.&#xA;&#xA;Parameters:&#xA;    string $method;;d-1,-1;;b1,0;;mstring $method;;p">
					<treenode node="method;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pipeline\Pipeline.php;f24;30;31;30;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="Presenter;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pagination\Presenter.php;f0;4;1;19;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="hasPages;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pagination\Presenter.php;f11;18;30;18;;;;vpos;;vbool;;r&#xA;Description&#xA;     Determine if the underlying paginator being presented has pages to show.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="render;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pagination\Presenter.php;f11;11;28;11;;;;vpos;;vstring;;r&#xA;Description&#xA;     Render the given paginator.;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Queue;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Queue.php;f0;4;1;65;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="later;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Queue.php;f11;35;66;35;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Push a new job onto the queue after a delay.&#xA;&#xA;Parameters:&#xA;    \DateTime|int $delay&#xA;    string $job&#xA;    mixed $data&#xA;    string $queue;;d-1,-1;;b1,0;;m\DateTime|int $delay;;pstring $job;;pmixed $data;;pstring $queue;;p">
					<treenode node="data;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Queue.php;f40;35;45;35;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="delay;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Queue.php;f26;35;32;35;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="job;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Queue.php;f34;35;38;35;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="queue;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Queue.php;f52;35;58;35;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="laterOn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Queue.php;f11;56;61;56;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Push a new job onto the queue after a delay.&#xA;&#xA;Parameters:&#xA;    string $queue&#xA;    \DateTime|int $delay&#xA;    string $job&#xA;    mixed $data;;d-1,-1;;b1,0;;mstring $queue;;p\DateTime|int $delay;;pstring $job;;pmixed $data;;p">
					<treenode node="data;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Queue.php;f50;56;55;56;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="delay;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Queue.php;f36;56;42;56;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="job;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Queue.php;f44;56;48;56;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="queue;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Queue.php;f28;56;34;56;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="pop;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Queue.php;f11;64;38;64;;;;vpos;;v;;r&#xA;Description&#xA;     Pop the next job off of the queue.&#xA;&#xA;Parameters:&#xA;    string $queue;;d-1,-1;;b1,0;;mstring $queue;;p">
					<treenode node="queue;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Queue.php;f24;64;30;64;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="push;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Queue.php;f11;14;57;14;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Push a new job onto the queue.&#xA;&#xA;Parameters:&#xA;    string $job&#xA;    mixed $data&#xA;    string $queue;;d-1,-1;;b1,0;;mstring $job;;pmixed $data;;pstring $queue;;p">
					<treenode node="data;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Queue.php;f31;14;36;14;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="job;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Queue.php;f25;14;29;14;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="queue;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Queue.php;f43;14;49;14;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="pushOn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Queue.php;f11;45;52;45;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Push a new job onto the queue.&#xA;&#xA;Parameters:&#xA;    string $queue&#xA;    string $job&#xA;    mixed $data;;d-1,-1;;b1,0;;mstring $queue;;pstring $job;;pmixed $data;;p">
					<treenode node="data;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Queue.php;f41;45;46;45;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="job;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Queue.php;f35;45;39;45;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="queue;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Queue.php;f27;45;33;45;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="pushRaw;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Queue.php;f11;24;73;24;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Push a raw payload onto the queue.&#xA;&#xA;Parameters:&#xA;    string $payload&#xA;    string $queue&#xA;    array $options;;d-1,-1;;b1,0;;mstring $payload;;pstring $queue;;parray $options;;p">
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Queue.php;f59;24;67;24;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="payload;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Queue.php;f28;24;36;24;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="queue;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Queue.php;f38;24;44;24;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="QueueableEntity;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\QueueableEntity.php;f0;4;1;12;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="getQueueableId;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\QueueableEntity.php;f11;11;36;11;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Get the queueable identity for the entity.;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="QueueingDispatcher;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Bus\QueueingDispatcher.php;f0;4;1;13;;;;vpos;;vDispatcher;;c;;r;;d0,5;;b0,0;;m">
				<treenode node="dispatchToQueue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Bus\QueueingDispatcher.php;f11;12;45;12;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Dispatch a command to its appropriate handler behind a queue.&#xA;&#xA;Parameters:&#xA;    mixed $command;;d-1,-1;;b1,0;;mmixed $command;;p">
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Bus\QueueingDispatcher.php;f36;12;44;12;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="QueueingFactory;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cookie\QueueingFactory.php;f0;4;1;27;;;;vpos;;vFactory;;c;;r;;d0,5;;b0,0;;m">
				<treenode node="getQueuedCookies;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cookie\QueueingFactory.php;f11;26;38;26;;;;vpos;;varray;;r&#xA;Description&#xA;     Get the cookies which have been queued for the next request.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="queue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cookie\QueueingFactory.php;f11;12;27;12;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Queue a cookie to send with the next response.&#xA;&#xA;Parameters:&#xA;    mixed;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="unqueue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cookie\QueueingFactory.php;f11;19;34;19;;;;vpos;;v;;r&#xA;Description&#xA;     Remove a cookie from the queue.&#xA;&#xA;Parameters:&#xA;    string $name;;d-1,-1;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cookie\QueueingFactory.php;f28;19;33;19;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="RANDOM_COMPAT_READ_BUFFER;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\random_bytes_dev_urandom.php;f12;29;37;29;;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\random.php;f12;51;37;51;;;;vpos;;v;;r&#xA;Description&#xA;     Random_* Compatibility Library for using the new PHP 7 random_* API in PHP 5 projects;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="Registrar;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\Registrar.php;f0;6;1;90;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Registrar.php;f0;4;1;21;;;;vpos;;v;;r;;d0,7;;b0,0;;m">
				<treenode node="create;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Registrar.php;f11;20;39;20;;;;vpos;;v;;r&#xA;Description&#xA;     Create a new user instance after a valid registration.&#xA;&#xA;Parameters:&#xA;    array $data;;d-1,-1;;b1,0;;marray $data;;p">
					<treenode node="data;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Registrar.php;f33;20;38;20;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="delete;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\Registrar.php;f11;42;41;42;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Register a new DELETE route with the router.&#xA;&#xA;Parameters:&#xA;    string $uri&#xA;    \Closure|array|string $action;;d-1,-1;;b1,0;;mstring $uri;;p\Closure|array|string $action;;p">
					<treenode node="action;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\Registrar.php;f33;42;40;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="uri;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\Registrar.php;f27;42;31;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="get;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\Registrar.php;f11;15;38;15;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Register a new GET route with the router.&#xA;&#xA;Parameters:&#xA;    string $uri&#xA;    \Closure|array|string $action;;d-1,-1;;b1,0;;mstring $uri;;p\Closure|array|string $action;;p">
					<treenode node="action;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\Registrar.php;f30;15;37;15;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="uri;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\Registrar.php;f24;15;28;15;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="group;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\Registrar.php;f11;89;63;89;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Create a route group with shared attributes.&#xA;&#xA;Parameters:&#xA;    array $attributes&#xA;    \Closure $callback;;d-1,-1;;b1,0;;marray $attributes;;p\Closure $callback;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\Registrar.php;f32;89;43;89;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\Registrar.php;f53;89;62;89;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="match;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\Registrar.php;f11;70;50;70;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Register a new route with the given verbs.&#xA;&#xA;Parameters:&#xA;    array|string $methods&#xA;    string $uri&#xA;    \Closure|array|string $action;;d-1,-1;;b1,0;;marray|string $methods;;pstring $uri;;p\Closure|array|string $action;;p">
					<treenode node="action;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\Registrar.php;f42;70;49;70;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="methods;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\Registrar.php;f26;70;34;70;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="uri;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\Registrar.php;f36;70;40;70;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="options;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\Registrar.php;f11;60;42;60;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Register a new OPTIONS route with the router.&#xA;&#xA;Parameters:&#xA;    string $uri&#xA;    \Closure|array|string $action;;d-1,-1;;b1,0;;mstring $uri;;p\Closure|array|string $action;;p">
					<treenode node="action;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\Registrar.php;f34;60;41;60;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="uri;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\Registrar.php;f28;60;32;60;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="patch;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\Registrar.php;f11;51;40;51;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Register a new PATCH route with the router.&#xA;&#xA;Parameters:&#xA;    string $uri&#xA;    \Closure|array|string $action;;d-1,-1;;b1,0;;mstring $uri;;p\Closure|array|string $action;;p">
					<treenode node="action;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\Registrar.php;f32;51;39;51;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="uri;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\Registrar.php;f26;51;30;51;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="post;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\Registrar.php;f11;24;39;24;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Register a new POST route with the router.&#xA;&#xA;Parameters:&#xA;    string $uri&#xA;    \Closure|array|string $action;;d-1,-1;;b1,0;;mstring $uri;;p\Closure|array|string $action;;p">
					<treenode node="action;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\Registrar.php;f31;24;38;24;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="uri;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\Registrar.php;f25;24;29;24;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="put;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\Registrar.php;f11;33;38;33;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Register a new PUT route with the router.&#xA;&#xA;Parameters:&#xA;    string $uri&#xA;    \Closure|array|string $action;;d-1,-1;;b1,0;;mstring $uri;;p\Closure|array|string $action;;p">
					<treenode node="action;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\Registrar.php;f30;33;37;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="uri;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\Registrar.php;f24;33;28;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="resource;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\Registrar.php;f11;80;69;80;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Route a resource to a controller.&#xA;&#xA;Parameters:&#xA;    string $name&#xA;    string $controller&#xA;    array $options;;d-1,-1;;b1,0;;mstring $name;;pstring $controller;;parray $options;;p">
					<treenode node="controller;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\Registrar.php;f36;80;47;80;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\Registrar.php;f29;80;34;80;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\Registrar.php;f55;80;63;80;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="validator;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Registrar.php;f11;12;42;12;;;;vpos;;v;;r&#xA;Description&#xA;     Get a validator for an incoming registration request.&#xA;&#xA;Parameters:&#xA;    array $data;;d-1,-1;;b1,0;;marray $data;;p">
					<treenode node="data;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Registrar.php;f36;12;41;12;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="Renderable;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\Renderable.php;f0;4;1;12;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="render;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\Renderable.php;f11;11;28;11;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the evaluated contents of the object.;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Repository;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Config\Repository.php;f0;4;1;56;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Repository.php;f0;6;1;98;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="add;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Repository.php;f11;52;47;52;;;;vpos;;vbool;;r&#xA;Description&#xA;     Store an item in the cache if the key does not exist.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    mixed $value&#xA;    \DateTime|int $minutes;;d-1,-1;;b1,0;;mstring $key;;pmixed $value;;p\DateTime|int $minutes;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Repository.php;f24;52;28;52;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="minutes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Repository.php;f38;52;46;52;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Repository.php;f30;52;36;52;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="all;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Config\Repository.php;f11;28;25;28;;;;vpos;;varray;;r&#xA;Description&#xA;     Get all of the configuration items for the application.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="forever;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Repository.php;f11;61;41;61;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Store an item in the cache indefinitely.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    mixed $value;;d-1,-1;;b1,0;;mstring $key;;pmixed $value;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Repository.php;f28;61;32;61;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Repository.php;f34;61;40;61;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="forget;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Repository.php;f11;97;32;97;;;;vpos;;vbool;;r&#xA;Description&#xA;     Remove an item from the cache.&#xA;&#xA;Parameters:&#xA;    string $key;;d-1,-1;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Repository.php;f27;97;31;97;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="get;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Config\Repository.php;f11;21;46;21;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Repository.php;f11;23;46;23;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Get the specified configuration value.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    mixed $default;;d-1,-1;;b1,0;;mstring $key;;pmixed $default;;p">
					<treenode node="default;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Config\Repository.php;f30;21;38;21;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Repository.php;f30;23;38;23;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Config\Repository.php;f24;21;28;21;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Repository.php;f24;23;28;23;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="has;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Config\Repository.php;f11;12;29;12;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Repository.php;f11;14;29;14;;;;vpos;;vbool;;r&#xA;Description&#xA;     Determine if the given configuration value exists.&#xA;&#xA;Parameters:&#xA;    string $key;;d-1,-1;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Config\Repository.php;f24;12;28;12;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Repository.php;f24;14;28;14;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="prepend;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Config\Repository.php;f11;46;41;46;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Prepend a value onto an array configuration value.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    mixed $value;;d-1,-1;;b1,0;;mstring $key;;pmixed $value;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Config\Repository.php;f28;46;32;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Config\Repository.php;f34;46;40;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="pull;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Repository.php;f11;32;47;32;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Retrieve an item from the cache and delete it.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    mixed $default;;d-1,-1;;b1,0;;mstring $key;;pmixed $default;;p">
					<treenode node="default;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Repository.php;f31;32;39;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Repository.php;f25;32;29;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="push;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Config\Repository.php;f11;55;38;55;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Push a value onto an array configuration value.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    mixed $value;;d-1,-1;;b1,0;;mstring $key;;pmixed $value;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Config\Repository.php;f25;55;29;55;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Config\Repository.php;f31;55;37;55;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="put;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Repository.php;f11;42;47;42;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Store an item in the cache.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    mixed $value&#xA;    \DateTime|int $minutes;;d-1,-1;;b1,0;;mstring $key;;pmixed $value;;p\DateTime|int $minutes;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Repository.php;f24;42;28;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="minutes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Repository.php;f38;42;46;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Repository.php;f30;42;36;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="remember;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Repository.php;f11;71;63;71;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Get an item from the cache, or store the default value.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    \DateTime|int $minutes&#xA;    \Closure $callback;;d-1,-1;;b1,0;;mstring $key;;p\DateTime|int $minutes;;p\Closure $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Repository.php;f53;71;62;71;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Repository.php;f29;71;33;71;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="minutes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Repository.php;f35;71;43;71;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="rememberForever;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Repository.php;f11;89;60;89;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Get an item from the cache, or store the default value forever.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    \Closure $callback;;d-1,-1;;b1,0;;mstring $key;;p\Closure $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Repository.php;f50;89;59;89;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Repository.php;f36;89;40;89;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="sear;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Repository.php;f11;80;49;80;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Get an item from the cache, or store the default value forever.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    \Closure $callback;;d-1,-1;;b1,0;;mstring $key;;p\Closure $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Repository.php;f39;80;48;80;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Repository.php;f25;80;29;80;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="set;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Config\Repository.php;f11;37;44;37;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Set a given configuration value.&#xA;&#xA;Parameters:&#xA;    array|string $key&#xA;    mixed $value;;d-1,-1;;b1,0;;marray|string $key;;pmixed $value;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Config\Repository.php;f24;37;28;37;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Config\Repository.php;f30;37;36;37;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="ResponseFactory;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f0;4;1;125;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="download;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f11;69;99;69;;;;vpos;;v;;r&#xA;Description&#xA;     Create a new file download response.&#xA;&#xA;Parameters:&#xA;    \SplFileInfo|string $file&#xA;    string $name&#xA;    array $headers&#xA;    string|null $disposition;;d-1,-1;;b1,0;;m\SplFileInfo|string $file;;pstring $name;;parray $headers;;pstring|null $disposition;;p">
					<treenode node="disposition;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f71;69;83;69;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="file;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f29;69;34;69;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="headers;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f56;69;64;69;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f36;69;41;69;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="json;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f11;36;86;36;;;;vpos;;v;;r&#xA;Description&#xA;     Return a new JSON response from the application.&#xA;&#xA;Parameters:&#xA;    string|array $data&#xA;    int $status&#xA;    array $headers&#xA;    int $options;;d-1,-1;;b1,0;;mstring|array $data;;pint $status;;parray $headers;;pint $options;;p">
					<treenode node="data;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f25;36;30;36;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="headers;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f58;36;66;36;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f73;36;81;36;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="status;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f37;36;44;36;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="jsonp;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f11;48;98;48;;;;vpos;;v;;r&#xA;Description&#xA;     Return a new JSONP response from the application.&#xA;&#xA;Parameters:&#xA;    string $callback&#xA;    string|array $data&#xA;    int $status&#xA;    array $headers&#xA;    int $options;;d-1,-1;;b1,0;;mstring $callback;;pstring|array $data;;pint $status;;parray $headers;;pint $options;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f26;48;35;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="data;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f37;48;42;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="headers;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f70;48;78;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f85;48;93;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="status;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f49;48;56;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="make;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f11;14;75;14;;;;vpos;;v;;r&#xA;Description&#xA;     Return a new response from the application.&#xA;&#xA;Parameters:&#xA;    string $content&#xA;    int $status&#xA;    array $headers;;d-1,-1;;b1,0;;mstring $content;;pint $status;;parray $headers;;p">
					<treenode node="content;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f25;14;33;14;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="headers;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f61;14;69;14;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="status;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f40;14;47;14;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="redirectGuest;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f11;113;86;113;;;;vpos;;v;;r&#xA;Description&#xA;     Create a new redirect response, while putting the current URL in the session.&#xA;&#xA;Parameters:&#xA;    string $path&#xA;    int $status&#xA;    array $headers&#xA;    bool|null $secure;;d-1,-1;;b1,0;;mstring $path;;pint $status;;parray $headers;;pbool|null $secure;;p">
					<treenode node="headers;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f56;113;64;113;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f34;113;39;113;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="secure;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f71;113;78;113;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="status;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f41;113;48;113;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="redirectTo;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f11;80;83;80;;;;vpos;;v;;r&#xA;Description&#xA;     Create a new redirect response to the given path.&#xA;&#xA;Parameters:&#xA;    string $path&#xA;    int $status&#xA;    array $headers&#xA;    bool|null $secure;;d-1,-1;;b1,0;;mstring $path;;pint $status;;parray $headers;;pbool|null $secure;;p">
					<treenode node="headers;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f53;80;61;80;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f31;80;36;80;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="secure;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f68;80;75;80;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="status;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f38;80;45;80;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="redirectToAction;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f11;102;93;102;;;;vpos;;v;;r&#xA;Description&#xA;     Create a new redirect response to a controller action.&#xA;&#xA;Parameters:&#xA;    string $action&#xA;    array $parameters&#xA;    int $status&#xA;    array $headers;;d-1,-1;;b1,0;;mstring $action;;parray $parameters;;pint $status;;parray $headers;;p">
					<treenode node="action;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f37;102;44;102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="headers;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f79;102;87;102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f46;102;57;102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="status;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f64;102;71;102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="redirectToIntended;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f11;124;100;124;;;;vpos;;v;;r&#xA;Description&#xA;     Create a new redirect response to the previously intended location.&#xA;&#xA;Parameters:&#xA;    string $default&#xA;    int $status&#xA;    array $headers&#xA;    bool|null $secure;;d-1,-1;;b1,0;;mstring $default;;pint $status;;parray $headers;;pbool|null $secure;;p">
					<treenode node="default;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f39;124;47;124;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="headers;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f70;124;78;124;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="secure;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f85;124;92;124;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="status;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f55;124;62;124;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="redirectToRoute;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f11;91;91;91;;;;vpos;;v;;r&#xA;Description&#xA;     Create a new redirect response to a named route.&#xA;&#xA;Parameters:&#xA;    string $route&#xA;    array $parameters&#xA;    int $status&#xA;    array $headers;;d-1,-1;;b1,0;;mstring $route;;parray $parameters;;pint $status;;parray $headers;;p">
					<treenode node="headers;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f77;91;85;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f44;91;55;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="route;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f36;91;42;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="status;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f62;91;69;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="stream;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f11;58;73;58;;;;vpos;;v;;r&#xA;Description&#xA;     Return a new streamed response from the application.&#xA;&#xA;Parameters:&#xA;    \Closure $callback&#xA;    int $status&#xA;    array $headers;;d-1,-1;;b1,0;;m\Closure $callback;;pint $status;;parray $headers;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f27;58;36;58;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="headers;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f59;58;67;58;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="status;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f38;58;45;58;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="view;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f11;25;79;25;;;;vpos;;v;;r&#xA;Description&#xA;     Return a new view response from the application.&#xA;&#xA;Parameters:&#xA;    string $view&#xA;    array $data&#xA;    int $status&#xA;    array $headers;;d-1,-1;;b1,0;;mstring $view;;parray $data;;pint $status;;parray $headers;;p">
					<treenode node="data;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f32;25;37;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="headers;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f65;25;73;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="status;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f44;25;51;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="view;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php;f25;25;30;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="ScopeInterface;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\ScopeInterface.php;f0;4;1;24;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="apply;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\ScopeInterface.php;f11;13;57;13;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Apply the scope to a given Eloquent query builder.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $builder&#xA;    \Illuminate\Database\Eloquent\Model $model;;d-1,-1;;b1,0;;m\Illuminate\Database\Eloquent\Builder $builder;;p\Illuminate\Database\Eloquent\Model $model;;p">
					<treenode node="builder;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\ScopeInterface.php;f34;13;42;13;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\ScopeInterface.php;f50;13;56;13;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="remove;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\ScopeInterface.php;f11;23;58;23;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Remove the scope from the given Eloquent query builder.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $builder&#xA;    \Illuminate\Database\Eloquent\Model $model;;d-1,-1;;b1,0;;m\Illuminate\Database\Eloquent\Builder $builder;;p\Illuminate\Database\Eloquent\Model $model;;p">
					<treenode node="builder;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\ScopeInterface.php;f35;23;43;23;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\ScopeInterface.php;f51;23;57;23;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="SelfHandling;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Bus\SelfHandling.php;f0;4;1;7;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
			</treenode>
			<treenode node="ShouldBeQueued;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\ShouldBeQueued.php;f0;7;1;10;;;;vpos;;vShouldQueue;;c;;r&#xA;Definition&#xA;    interface ShouldBeQueued extends ShouldQueue&#xA;&#xA;Description&#xA;      deprecated since version 5.1. Use the ShouldQueue interface.;;d0,8;;b0,0;;m">
			</treenode>
			<treenode node="ShouldBroadcast;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Broadcasting\ShouldBroadcast.php;f0;4;1;12;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="broadcastOn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Broadcasting\ShouldBroadcast.php;f11;11;33;11;;;;vpos;;varray;;r&#xA;Description&#xA;     Get the channels the event should broadcast on.;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ShouldBroadcastNow;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Broadcasting\ShouldBroadcastNow.php;f0;4;1;7;;;;vpos;;vShouldBroadcast;;c;;r;;d0,5;;b0,0;;m">
			</treenode>
			<treenode node="ShouldQueue;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\ShouldQueue.php;f0;4;1;7;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
			</treenode>
			<treenode node="Store;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Store.php;f0;4;1;72;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="decrement;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Store.php;f11;40;47;40;;;;vpos;;vint;;r&#xA;Description&#xA;     Decrement the value of an item in the cache.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    mixed $value&#xA;&#xA;Return:&#xA;   |bool;;d-1,-1;;b1,0;;mstring $key;;pmixed $value;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Store.php;f30;40;34;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Store.php;f36;40;42;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="flush;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Store.php;f11;64;27;64;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Remove all items from the cache.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="forever;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Store.php;f11;49;41;49;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Store an item in the cache indefinitely.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    mixed $value;;d-1,-1;;b1,0;;mstring $key;;pmixed $value;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Store.php;f28;49;32;49;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Store.php;f34;49;40;49;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="forget;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Store.php;f11;57;32;57;;;;vpos;;vbool;;r&#xA;Description&#xA;     Remove an item from the cache.&#xA;&#xA;Parameters:&#xA;    string $key;;d-1,-1;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Store.php;f27;57;31;57;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="get;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Store.php;f11;12;29;12;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Retrieve an item from the cache by key.&#xA;&#xA;Parameters:&#xA;    string $key;;d-1,-1;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Store.php;f24;12;28;12;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getPrefix;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Store.php;f11;71;31;71;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the cache key prefix.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="increment;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Store.php;f11;31;47;31;;;;vpos;;vint;;r&#xA;Description&#xA;     Increment the value of an item in the cache.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    mixed $value&#xA;&#xA;Return:&#xA;   |bool;;d-1,-1;;b1,0;;mstring $key;;pmixed $value;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Store.php;f30;31;34;31;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Store.php;f36;31;42;31;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="put;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Store.php;f11;22;47;22;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Store an item in the cache for a given number of minutes.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    mixed $value&#xA;    int $minutes;;d-1,-1;;b1,0;;mstring $key;;pmixed $value;;pint $minutes;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Store.php;f24;22;28;22;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="minutes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Store.php;f38;22;46;22;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Store.php;f30;22;36;22;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="TerminableMiddleware;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\TerminableMiddleware.php;f0;7;1;17;;;;vpos;;vMiddleware;;c;;r&#xA;Definition&#xA;    interface TerminableMiddleware extends Middleware&#xA;&#xA;Description&#xA;      deprecated since version 5.1.;;d0,8;;b0,0;;m">
				<treenode node="terminate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\TerminableMiddleware.php;f11;16;50;16;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Perform any final actions for the request lifecycle.&#xA;&#xA;Parameters:&#xA;    \Symfony\Component\HttpFoundation\Request $request&#xA;    \Symfony\Component\HttpFoundation\Response $response;;d-1,-1;;b1,0;;m\Symfony\Component\HttpFoundation\Request $request;;p\Symfony\Component\HttpFoundation\Response $response;;p">
					<treenode node="request;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\TerminableMiddleware.php;f30;16;38;16;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="response;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\TerminableMiddleware.php;f40;16;49;16;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="TranslationReaderInterface;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Reader\TranslationReaderInterface.php;f0;20;1;29;;;;vpos;;v;;r&#xA;Definition&#xA;    interface TranslationReaderInterface&#xA;&#xA;Description&#xA;     TranslationReader reads translation messages from translation files.;;d0,21;;b0,0;;m">
				<treenode node="read;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Reader\TranslationReaderInterface.php;f11;28;65;28;;;;vpos;;v;;r&#xA;Description&#xA;     Reads translation messages from a directory to the catalogue.&#xA;&#xA;Parameters:&#xA;    string $directory&#xA;    MessageCatalogue $catalogue;;d-1,-1;;b1,0;;mstring $directory;;pMessageCatalogue $catalogue;;p">
					<treenode node="catalogue;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Reader\TranslationReaderInterface.php;f54;28;64;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="directory;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Reader\TranslationReaderInterface.php;f25;28;35;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="TranslationWriterInterface;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Writer\TranslationWriterInterface.php;f0;21;1;33;;;;vpos;;v;;r&#xA;Definition&#xA;    interface TranslationWriterInterface&#xA;&#xA;Description&#xA;     TranslationWriter writes translation messages.;;d0,22;;b0,0;;m">
				<treenode node="write;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Writer\TranslationWriterInterface.php;f11;32;83;32;;;;vpos;;v;;r&#xA;Description&#xA;     Writes translation from the catalogue according to the selected format.&#xA;&#xA;Parameters:&#xA;    MessageCatalogue $catalogue - The message catalogue to write&#xA;    string $format - The format to use to dump the messages&#xA;    array $options - Options that are passed to the dumper;;d-1,-1;;b1,0;;mMessageCatalogue $catalogue;;pstring $format;;parray $options;;p">
					<treenode node="catalogue;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Writer\TranslationWriterInterface.php;f43;32;53;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="format;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Writer\TranslationWriterInterface.php;f55;32;62;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Writer\TranslationWriterInterface.php;f64;32;72;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="TranslatorBagInterface;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\TranslatorBagInterface.php;f0;20;1;32;;;;vpos;;v;;r&#xA;Definition&#xA;    interface TranslatorBagInterface&#xA;&#xA;Description&#xA;     TranslatorBagInterface.;;d0,21;;b0,0;;m">
				<treenode node="getCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\TranslatorBagInterface.php;f11;31;48;31;;;;vpos;;vMessageCatalogueInterface;;r&#xA;Description&#xA;     Gets the catalogue by locale.&#xA;&#xA;Parameters:&#xA;    string|null $locale - The locale or null to use the default;;d-1,-1;;b1,0;;mstring|null $locale;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\TranslatorBagInterface.php;f33;31;40;31;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="TranslatorInterface;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\TranslatorInterface.php;f0;20;1;66;;;;vpos;;v;;r&#xA;Definition&#xA;    interface TranslatorInterface&#xA;&#xA;Description&#xA;     TranslatorInterface.;;d0,21;;b0,0;;m">
				<treenode node="getLocale;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\TranslatorInterface.php;f11;65;31;65;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns the current locale.&#xA;&#xA;Return:&#xA;   The locale;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="setLocale;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\TranslatorInterface.php;f11;58;38;58;;;;vpos;;v;;r&#xA;Description&#xA;     Sets the current locale.&#xA;&#xA;Parameters:&#xA;    string $locale - The locale;;d-1,-1;;b1,0;;mstring $locale;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\TranslatorInterface.php;f30;58;37;58;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="trans;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\TranslatorInterface.php;f11;34;91;34;;;;vpos;;vstring;;r&#xA;Description&#xA;     Translates the given message.&#xA;&#xA;Parameters:&#xA;    string $id - The message id (may also be an object that can be cast to string)&#xA;    array $parameters - An array of parameters for the message&#xA;    string|null $domain - The domain for the message or null to use the default&#xA;    string|null $locale - The locale or null to use the default&#xA;&#xA;Return:&#xA;   The translated string;;d-1,-1;;b1,0;;mstring $id;;parray $parameters;;pstring|null $domain;;pstring|null $locale;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\TranslatorInterface.php;f60;34;67;34;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\TranslatorInterface.php;f26;34;29;34;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\TranslatorInterface.php;f76;34;83;34;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\TranslatorInterface.php;f37;34;48;34;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="transChoice;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\TranslatorInterface.php;f11;49;106;49;;;;vpos;;vstring;;r&#xA;Description&#xA;     Translates the given choice message by choosing a translation according to a number.&#xA;&#xA;Parameters:&#xA;    string $id - The message id (may also be an object that can be cast to string)&#xA;    int $number - The number to use to find the indice of the message&#xA;    array $parameters - An array of parameters for the message&#xA;    string|null $domain - The domain for the message or null to use the default&#xA;    string|null $locale - The locale or null to use the default&#xA;&#xA;Return:&#xA;   The translated string;;d-1,-1;;b1,0;;mstring $id;;pint $number;;parray $parameters;;pstring|null $domain;;pstring|null $locale;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\TranslatorInterface.php;f75;49;82;49;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\TranslatorInterface.php;f32;49;35;49;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\TranslatorInterface.php;f91;49;98;49;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="number;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\TranslatorInterface.php;f37;49;44;49;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\TranslatorInterface.php;f52;49;63;49;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="UrlGenerator;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\UrlGenerator.php;f0;4;1;63;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="action;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\UrlGenerator.php;f11;54;71;54;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the URL to a controller action.&#xA;&#xA;Parameters:&#xA;    string $action&#xA;    mixed $parameters&#xA;    bool $absolute;;d-1,-1;;b1,0;;mstring $action;;pmixed $parameters;;pbool $absolute;;p">
					<treenode node="absolute;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\UrlGenerator.php;f54;54;63;54;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="action;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\UrlGenerator.php;f27;54;34;54;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\UrlGenerator.php;f36;54;47;54;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="asset;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\UrlGenerator.php;f11;32;48;32;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generate a URL to an application asset.&#xA;&#xA;Parameters:&#xA;    string $path&#xA;    bool $secure;;d-1,-1;;b1,0;;mstring $path;;pbool $secure;;p">
					<treenode node="path;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\UrlGenerator.php;f26;32;31;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="secure;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\UrlGenerator.php;f33;32;40;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="route;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\UrlGenerator.php;f11;44;68;44;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the URL to a named route.&#xA;&#xA;Parameters:&#xA;    string $name&#xA;    mixed $parameters&#xA;    bool $absolute;;d-1,-1;;b1,0;;mstring $name;;pmixed $parameters;;pbool $absolute;;p">
					<treenode node="absolute;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\UrlGenerator.php;f51;44;60;44;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\UrlGenerator.php;f26;44;31;44;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\UrlGenerator.php;f33;44;44;44;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="secure;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\UrlGenerator.php;f11;23;51;23;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generate a secure, absolute URL to the given path.&#xA;&#xA;Parameters:&#xA;    string $path&#xA;    array $parameters;;d-1,-1;;b1,0;;mstring $path;;parray $parameters;;p">
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\UrlGenerator.php;f34;23;45;23;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\UrlGenerator.php;f27;23;32;23;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setRootControllerNamespace;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\UrlGenerator.php;f11;62;62;62;;;;vpos;;v;;r&#xA;Description&#xA;     Set the root controller namespace.&#xA;&#xA;Parameters:&#xA;    string $rootNamespace;;d-1,-1;;b1,0;;mstring $rootNamespace;;p">
					<treenode node="rootNamespace;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\UrlGenerator.php;f47;62;61;62;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="to;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\UrlGenerator.php;f11;14;58;14;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generate a absolute URL to the given path.&#xA;&#xA;Parameters:&#xA;    string $path&#xA;    mixed $extra&#xA;    bool $secure;;d-1,-1;;b1,0;;mstring $path;;pmixed $extra;;pbool $secure;;p">
					<treenode node="extra;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\UrlGenerator.php;f30;14;36;14;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\UrlGenerator.php;f23;14;28;14;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="secure;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\UrlGenerator.php;f43;14;50;14;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="UrlRoutable;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\UrlRoutable.php;f0;4;1;19;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="getRouteKey;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\UrlRoutable.php;f11;11;33;11;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Get the value of the model's route key.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="getRouteKeyName;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\UrlRoutable.php;f11;18;37;18;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the route key for the model.;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="UserProvider;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\UserProvider.php;f0;4;1;48;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="retrieveByCredentials;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\UserProvider.php;f11;38;61;38;;;;vpos;;v;;r&#xA;Description&#xA;     Retrieve a user by the given credentials.&#xA;&#xA;Parameters:&#xA;    array $credentials;;d-1,-1;;b1,0;;marray $credentials;;p">
					<treenode node="credentials;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\UserProvider.php;f48;38;60;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="retrieveById;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\UserProvider.php;f11;12;45;12;;;;vpos;;v;;r&#xA;Description&#xA;     Retrieve a user by their unique identifier.&#xA;&#xA;Parameters:&#xA;    mixed $identifier;;d-1,-1;;b1,0;;mmixed $identifier;;p">
					<treenode node="identifier;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\UserProvider.php;f33;12;44;12;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="retrieveByToken;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\UserProvider.php;f11;21;56;21;;;;vpos;;v;;r&#xA;Description&#xA;     Retrieve a user by their unique identifier and &quot;remember me&quot; token.&#xA;&#xA;Parameters:&#xA;    mixed $identifier&#xA;    string $token;;d-1,-1;;b1,0;;mmixed $identifier;;pstring $token;;p">
					<treenode node="identifier;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\UserProvider.php;f36;21;47;21;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="token;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\UserProvider.php;f49;21;55;21;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="updateRememberToken;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\UserProvider.php;f11;30;70;30;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Update the &quot;remember me&quot; token for the given user in storage.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Contracts\Auth\Authenticatable $user&#xA;    string $token;;d-1,-1;;b1,0;;m\Illuminate\Contracts\Auth\Authenticatable $user;;pstring $token;;p">
					<treenode node="token;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\UserProvider.php;f63;30;69;30;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="user;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\UserProvider.php;f56;30;61;30;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="validateCredentials;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\UserProvider.php;f11;47;82;47;;;;vpos;;vbool;;r&#xA;Description&#xA;     Validate a user against the given credentials.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Contracts\Auth\Authenticatable $user&#xA;    array $credentials;;d-1,-1;;b1,0;;m\Illuminate\Contracts\Auth\Authenticatable $user;;parray $credentials;;p">
					<treenode node="credentials;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\UserProvider.php;f69;47;81;47;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="user;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\UserProvider.php;f56;47;61;47;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="ValidatesWhenResolved;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\ValidatesWhenResolved.php;f0;4;1;12;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="validate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\ValidatesWhenResolved.php;f11;11;30;11;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Validate the given class instance.;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Validator;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\Validator.php;f0;6;1;39;;;;vpos;;vMessageProvider;;c;;r;;d0,7;;b0,0;;m">
				<treenode node="after;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\Validator.php;f11;38;36;38;;;;vpos;;v;;r&#xA;Description&#xA;     After an after validation callback.&#xA;&#xA;Parameters:&#xA;    callable|string $callback;;d-1,-1;;b1,0;;mcallable|string $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\Validator.php;f26;38;35;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="failed;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\Validator.php;f11;20;28;20;;;;vpos;;varray;;r&#xA;Description&#xA;     Get the failed validation rules.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="fails;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\Validator.php;f11;13;27;13;;;;vpos;;vbool;;r&#xA;Description&#xA;     Determine if the data fails the validation rules.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="sometimes;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\Validator.php;f11;30;69;30;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Add conditions to a given field based on a Closure.&#xA;&#xA;Parameters:&#xA;    string $attribute&#xA;    string|array $rules&#xA;    callable $callback;;d-1,-1;;b1,0;;mstring $attribute;;pstring|array $rules;;pcallable $callback;;p">
					<treenode node="attribute;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\Validator.php;f30;30;40;30;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\Validator.php;f59;30;68;30;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="rules;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\Validator.php;f42;30;48;30;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="vendor/autoload.php;PHP:PHP Include;D:\OSPanel\domains\localhost\eloquent\index.php;f9;3;28;3;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="View;PHP:Interface Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\View\View.php;f0;6;1;23;;;;vpos;;vRenderable;;c;;r;;d0,7;;b0,0;;m">
				<treenode node="name;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\View\View.php;f11;13;26;13;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the name of the view.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="with;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\View\View.php;f11;22;45;22;;;;vpos;;v;;r&#xA;Description&#xA;     Add a piece of data to the view.&#xA;&#xA;Parameters:&#xA;    string|array $key&#xA;    mixed $value;;d-1,-1;;b1,0;;mstring|array $key;;pmixed $value;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\View\View.php;f25;22;29;22;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\View\View.php;f31;22;37;22;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="AbstractFileExtractor;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\AbstractFileExtractor.php;f9;20;1;79;;;;vpos;;v;;r&#xA;Definition&#xA;    class AbstractFileExtractor&#xA;&#xA;Description&#xA;     Base class used by classes that extract translation messages from files.;;d0,21;;b0,0;;m">
				<treenode node="canBeExtracted;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\AbstractFileExtractor.php;f23;71;53;71;;;;vpos;;vbool;;r&#xA;Description&#xA;     &#xA;&#xA;Parameters:&#xA;    string $file;;d-1,-1;;b2,0;;mstring $file;;p">
					<treenode node="file;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\AbstractFileExtractor.php;f47;71;52;71;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="extractFiles;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\AbstractFileExtractor.php;f14;27;5;43;;;;vpos;;varray;;r&#xA;Definition&#xA;    extractFiles($resource)&#xA;&#xA;Description&#xA;      Files, a file or a directory&#xA;&#xA;Parameters:&#xA;    string|array $resource - Files, a file or a directory;;d4,28;;b2,0;;mstring|array $resource;;p">
					<treenode node="resource;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\AbstractFileExtractor.php;f36;27;45;27;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="extractFromDirectory;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\AbstractFileExtractor.php;f23;78;63;78;;;;vpos;;varray;;r&#xA;Description&#xA;      Files, a file or a directory&#xA;&#xA;Parameters:&#xA;    string|array $resource - Files, a file or a directory&#xA;&#xA;Return:&#xA;   files to be extracted;;d-1,-1;;b2,0;;mstring|array $resource;;p">
					<treenode node="resource;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\AbstractFileExtractor.php;f53;78;62;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isFile;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\AbstractFileExtractor.php;f14;57;5;64;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isFile($file)&#xA;&#xA;Description&#xA;     &#xA;&#xA;Parameters:&#xA;    string $file;;d4,58;;b2,0;;mstring $file;;p">
					<treenode node="file;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\AbstractFileExtractor.php;f30;57;35;57;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="toSplFileInfo;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\AbstractFileExtractor.php;f12;45;48;45;;;;vpos;;v;;r;;d-1,-1;;b3,0;;mfile;;p">
					<treenode node="file;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\AbstractFileExtractor.php;f42;45;47;45;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="file;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\AbstractFileExtractor.php;f16;47;21;47;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="AbstractOperation;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\AbstractOperation.php;f9;26;1;157;;;;vpos;;vOperationInterface;;c;;r&#xA;Definition&#xA;    class AbstractOperation implements OperationInterface&#xA;&#xA;Description&#xA;     Base catalogues binary operation class.;;d0,27;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\AbstractOperation.php;f11;64;5;74;;;;vpos;;v;;r&#xA;Definition&#xA;    __construct(MessageCatalogueInterface $source, MessageCatalogueInterface $target)&#xA;&#xA;Description&#xA;      throws LogicException;;d4,65;;b1,0;;msource;;ptarget;;p">
					<treenode node="source;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\AbstractOperation.php;f58;64;65;64;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="target;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\AbstractOperation.php;f93;64;100;64;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getDomains;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\AbstractOperation.php;f11;79;5;86;;;;vpos;;v;;r&#xA;Definition&#xA;    getDomains()&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,80;;b1,0;;m">
				</treenode>
				<treenode node="getMessages;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\AbstractOperation.php;f11;91;5;102;;;;vpos;;v;;r&#xA;Definition&#xA;    getMessages($domain)&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,92;;b1,0;;mdomain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\AbstractOperation.php;f32;91;39;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getNewMessages;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\AbstractOperation.php;f11;107;5;118;;;;vpos;;v;;r&#xA;Definition&#xA;    getNewMessages($domain)&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,108;;b1,0;;mdomain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\AbstractOperation.php;f35;107;42;107;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getObsoleteMessages;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\AbstractOperation.php;f11;123;5;134;;;;vpos;;v;;r&#xA;Definition&#xA;    getObsoleteMessages($domain)&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,124;;b1,0;;mdomain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\AbstractOperation.php;f40;123;47;123;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getResult;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\AbstractOperation.php;f11;139;5;148;;;;vpos;;v;;r&#xA;Definition&#xA;    getResult()&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,140;;b1,0;;m">
				</treenode>
				<treenode node="processDomain;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\AbstractOperation.php;f23;156;54;156;;;;vpos;;v;;r&#xA;Description&#xA;     Performs operation on source and target catalogues for the given domain and stores the results.&#xA;&#xA;Parameters:&#xA;    string $domain - The domain which the operation will be performed for;;d-1,-1;;b2,0;;mstring $domain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\AbstractOperation.php;f46;156;53;156;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="domains;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\AbstractOperation.php;f12;35;20;35;;;;vposnull;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\AbstractOperation.php;f14;59;23;59;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="result;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\AbstractOperation.php;f14;30;21;30;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="source;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\AbstractOperation.php;f14;28;21;28;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="target;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\AbstractOperation.php;f14;29;21;29;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="AbstractOperationTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Catalogue\AbstractOperationTest.php;f9;17;1;73;;;;vpos;;vTestCase;;c;;r;;d0,18;;b0,0;;m">
				<treenode node="createOperation;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Catalogue\AbstractOperationTest.php;f23;72;117;72;;;;vpos;;v;;r;;d-1,-1;;b2,0;;msource;;ptarget;;p">
					<treenode node="source;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Catalogue\AbstractOperationTest.php;f74;72;81;72;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="target;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Catalogue\AbstractOperationTest.php;f109;72;116;72;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testGetEmptyDomains;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Catalogue\AbstractOperationTest.php;f11;19;5;28;;;;vpos;;v;;r;;d4,20;;b1,0;;m">
				</treenode>
				<treenode node="testGetEmptyMessages;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Catalogue\AbstractOperationTest.php;f11;50;5;59;;;;vpos;;v;;r;;d4,51;;b1,0;;m">
				</treenode>
				<treenode node="testGetEmptyResult;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Catalogue\AbstractOperationTest.php;f11;61;5;70;;;;vpos;;v;;r;;d4,62;;b1,0;;m">
				</treenode>
				<treenode node="testGetMergedDomains;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Catalogue\AbstractOperationTest.php;f11;30;5;39;;;;vpos;;v;;r;;d4,31;;b1,0;;m">
				</treenode>
				<treenode node="testGetMessagesFromUnknownDomain;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Catalogue\AbstractOperationTest.php;f11;41;5;48;;;;vpos;;v;;r;;d4,42;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AggregateServiceProvider;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\AggregateServiceProvider.php;f0;4;1;51;;;;vpos;;vServiceProvider;;c;;r;;d0,5;;b0,0;;m">
				<treenode node="provides;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\AggregateServiceProvider.php;f11;39;5;50;;;;vpos;;varray;;r&#xA;Definition&#xA;    provides()&#xA;&#xA;Description&#xA;     Get the services provided by the provider.;;d4,40;;b1,0;;m">
				</treenode>
				<treenode node="register;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\AggregateServiceProvider.php;f11;25;5;32;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    register()&#xA;&#xA;Description&#xA;     Register the service provider.;;d4,26;;b1,0;;m">
				</treenode>
				<treenode node="instances;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\AggregateServiceProvider.php;f14;18;24;18;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="providers;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\AggregateServiceProvider.php;f14;11;24;11;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="App;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\App.php;f0;7;1;18;;;;vpos;;vFacade;;c;;r&#xA;Definition&#xA;    class App extends Facade&#xA;&#xA;Description&#xA;      see \Illuminate\Foundation\Application;;d0,8;;b0,0;;m">
				<treenode node="getFacadeAccessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\App.php;f21;14;5;17;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getFacadeAccessor()&#xA;&#xA;Description&#xA;     Get the registered name of the component.;;d4,15;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="Arr;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f0;6;1;485;;;;vpos;;v;;r;;d0,7;;b0,0;;m">
				<treenode node="add;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f18;18;5;25;;;;vpos;;varray;;r&#xA;Definition&#xA;    add($array, $key, $value)&#xA;&#xA;Description&#xA;     Add an element to an array using &quot;dot&quot; notation if it doesn't exist.&#xA;&#xA;Parameters:&#xA;    array $array&#xA;    string $key&#xA;    mixed $value;;d4,19;;b1,5;;marray $array;;pstring $key;;pmixed $value;;p">
					<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f31;18;37;18;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f39;18;43;18;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f45;18;51;18;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="build;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f18;34;5;45;;;;vpos;;varray;;r&#xA;Definition&#xA;    build($array, callable $callback)&#xA;&#xA;Description&#xA;     Build a new array using a callback.&#xA;&#xA;Parameters:&#xA;    array $array&#xA;    callable $callback;;d4,35;;b1,5;;marray $array;;pcallable $callback;;p">
					<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f33;34;39;34;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f50;34;59;34;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="collapse;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f18;53;5;66;;;;vpos;;varray;;r&#xA;Definition&#xA;    collapse($array)&#xA;&#xA;Description&#xA;     Collapse an array of arrays into a single array.&#xA;&#xA;Parameters:&#xA;    \ArrayAccess|array $array;;d4,54;;b1,5;;m\ArrayAccess|array $array;;p">
					<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f36;53;42;53;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="divide;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f18;74;5;77;;;;vpos;;varray;;r&#xA;Definition&#xA;    divide($array)&#xA;&#xA;Description&#xA;     Divide an array into two arrays. One with keys and the other with values.&#xA;&#xA;Parameters:&#xA;    array $array;;d4,75;;b1,5;;marray $array;;p">
					<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f34;74;40;74;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dot;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f18;86;5;99;;;;vpos;;varray;;r&#xA;Definition&#xA;    dot($array, $prepend = '')&#xA;&#xA;Description&#xA;     Flatten a multi-dimensional associative array with dots.&#xA;&#xA;Parameters:&#xA;    array $array&#xA;    string $prepend;;d4,87;;b1,5;;marray $array;;pstring $prepend;;p">
					<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f31;86;37;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="prepend;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f39;86;47;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="except;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f18;108;5;113;;;;vpos;;varray;;r&#xA;Definition&#xA;    except($array, $keys)&#xA;&#xA;Description&#xA;     Get all of the given array except for a specified array of items.&#xA;&#xA;Parameters:&#xA;    array $array&#xA;    array|string $keys;;d4,109;;b1,5;;marray $array;;parray|string $keys;;p">
					<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f34;108;40;108;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="keys;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f42;108;47;108;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="explodePluckParameters;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f21;350;5;357;;;;vpos;;varray;;r&#xA;Definition&#xA;    explodePluckParameters($value, $key)&#xA;&#xA;Description&#xA;     Explode the &quot;value&quot; and &quot;key&quot; arguments passed to &quot;pluck&quot;.&#xA;&#xA;Parameters:&#xA;    string|array $value&#xA;    string|array|null $key;;d4,351;;b2,5;;mstring|array $value;;pstring|array|null $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f61;350;65;350;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f53;350;59;350;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fetch;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f18;124;5;139;;;;vpos;;varray;;r&#xA;Definition&#xA;    fetch($array, $key)&#xA;&#xA;Description&#xA;     Fetch a flattened array of a nested array element.&#xA;&#xA;Parameters:&#xA;    array $array&#xA;    string $key;;d4,125;;b1,5;;marray $array;;pstring $key;;p">
					<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f33;124;39;124;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f41;124;45;124;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="first;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f18;149;5;158;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    first($array, callable $callback, $default = null)&#xA;&#xA;Description&#xA;     Return the first element in an array passing a given truth test.&#xA;&#xA;Parameters:&#xA;    array $array&#xA;    callable $callback&#xA;    mixed $default;;d4,150;;b1,5;;marray $array;;pcallable $callback;;pmixed $default;;p">
					<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f33;149;39;149;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f50;149;59;149;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="default;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f61;149;69;149;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="flatten;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f18;179;5;188;;;;vpos;;varray;;r&#xA;Definition&#xA;    flatten($array)&#xA;&#xA;Description&#xA;     Flatten a multi-dimensional array into a single level.&#xA;&#xA;Parameters:&#xA;    array $array;;d4,180;;b1,5;;marray $array;;p">
					<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f35;179;41;179;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="forget;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f18;197;5;225;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    forget(&amp;$array, $keys)&#xA;&#xA;Description&#xA;     Remove one or many array items from a given array using &quot;dot&quot; notation.&#xA;&#xA;Parameters:&#xA;    array $array&#xA;    array|string $keys;;d4,198;;b1,5;;marray $array;;parray|string $keys;;p">
					<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f35;197;41;197;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="keys;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f43;197;48;197;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="get;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f18;235;5;254;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    get($array, $key, $default = null)&#xA;&#xA;Description&#xA;     Get an item from an array using &quot;dot&quot; notation.&#xA;&#xA;Parameters:&#xA;    array $array&#xA;    string $key&#xA;    mixed $default;;d4,236;;b1,5;;marray $array;;pstring $key;;pmixed $default;;p">
					<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f31;235;37;235;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="default;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f45;235;53;235;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f39;235;43;235;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="has;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f18;263;5;282;;;;vpos;;vbool;;r&#xA;Definition&#xA;    has($array, $key)&#xA;&#xA;Description&#xA;     Check if an item exists in an array using &quot;dot&quot; notation.&#xA;&#xA;Parameters:&#xA;    array $array&#xA;    string $key;;d4,264;;b1,5;;marray $array;;pstring $key;;p">
					<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f31;263;37;263;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f39;263;43;263;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isAssoc;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f18;292;5;297;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isAssoc(array $array)&#xA;&#xA;Description&#xA;     Determines if an array is associative.&#xA;&#xA;Parameters:&#xA;    array $array;;d4,293;;b1,5;;marray $array;;p">
					<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f41;292;47;292;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="last;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f18;168;5;171;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    last($array, callable $callback, $default = null)&#xA;&#xA;Description&#xA;     Return the last element in an array passing a given truth test.&#xA;&#xA;Parameters:&#xA;    array $array&#xA;    callable $callback&#xA;    mixed $default;;d4,169;;b1,5;;marray $array;;pcallable $callback;;pmixed $default;;p">
					<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f32;168;38;168;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f49;168;58;168;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="default;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f60;168;68;168;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="only;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f18;306;5;309;;;;vpos;;varray;;r&#xA;Definition&#xA;    only($array, $keys)&#xA;&#xA;Description&#xA;     Get a subset of the items from the given array.&#xA;&#xA;Parameters:&#xA;    array $array&#xA;    array|string $keys;;d4,307;;b1,5;;marray $array;;parray|string $keys;;p">
					<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f32;306;38;306;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="keys;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f40;306;45;306;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="pluck;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f18;319;5;341;;;;vpos;;varray;;r&#xA;Definition&#xA;    pluck($array, $value, $key = null)&#xA;&#xA;Description&#xA;     Pluck an array of values from an array.&#xA;&#xA;Parameters:&#xA;    array $array&#xA;    string|array $value&#xA;    string|array|null $key;;d4,320;;b1,5;;marray $array;;pstring|array $value;;pstring|array|null $key;;p">
					<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f33;319;39;319;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f49;319;53;319;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f41;319;47;319;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="prepend;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f18;367;5;376;;;;vpos;;varray;;r&#xA;Definition&#xA;    prepend($array, $value, $key = null)&#xA;&#xA;Description&#xA;     Push an item onto the beginning of an array.&#xA;&#xA;Parameters:&#xA;    array $array&#xA;    mixed $value&#xA;    mixed $key;;d4,368;;b1,5;;marray $array;;pmixed $value;;pmixed $key;;p">
					<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f35;367;41;367;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f51;367;55;367;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f43;367;49;367;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="pull;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f18;386;5;393;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    pull(&amp;$array, $key, $default = null)&#xA;&#xA;Description&#xA;     Get a value from the array, and remove it.&#xA;&#xA;Parameters:&#xA;    array $array&#xA;    string $key&#xA;    mixed $default;;d4,387;;b1,5;;marray $array;;pstring $key;;pmixed $default;;p">
					<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f33;386;39;386;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="default;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f47;386;55;386;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f41;386;45;386;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="set;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f18;405;5;429;;;;vpos;;varray;;r&#xA;Definition&#xA;    set(&amp;$array, $key, $value)&#xA;&#xA;Description&#xA;     Set an array item to a given value using &quot;dot&quot; notation.&#xA;&#xA;Parameters:&#xA;    array $array&#xA;    string $key&#xA;    mixed $value;;d4,406;;b1,5;;marray $array;;pstring $key;;pmixed $value;;p">
					<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f32;405;38;405;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f40;405;44;405;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f46;405;52;405;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="sort;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f18;438;5;441;;;;vpos;;varray;;r&#xA;Definition&#xA;    sort($array, callable $callback)&#xA;&#xA;Description&#xA;     Sort the array using the given callback.&#xA;&#xA;Parameters:&#xA;    array $array&#xA;    callable $callback;;d4,439;;b1,5;;marray $array;;pcallable $callback;;p">
					<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f32;438;38;438;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f49;438;58;438;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="sortRecursive;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f18;449;5;464;;;;vpos;;varray;;r&#xA;Definition&#xA;    sortRecursive($array)&#xA;&#xA;Description&#xA;     Recursively sort an array by keys and values.&#xA;&#xA;Parameters:&#xA;    array $array;;d4,450;;b1,5;;marray $array;;p">
					<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f41;449;47;449;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="where;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f18;473;5;484;;;;vpos;;varray;;r&#xA;Definition&#xA;    where($array, callable $callback)&#xA;&#xA;Description&#xA;     Filter the array using the given callback.&#xA;&#xA;Parameters:&#xA;    array $array&#xA;    callable $callback;;d4,474;;b1,5;;marray $array;;pcallable $callback;;p">
					<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f33;473;39;473;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php;f50;473;59;473;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="ArrayConverter;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Util\ArrayConverter.php;f0;25;1;98;;;;vpos;;v;;r&#xA;Definition&#xA;    class ArrayConverter&#xA;&#xA;Description&#xA;     ArrayConverter generates tree like structure from a message catalogue. e.g. this 'foo.bar1' =&gt; 'test1', 'foo.bar2' =&gt; 'test2' converts to follows: foo: bar1: test1 bar2: test2.;;d0,26;;b0,0;;m">
				<treenode node="cancelExpand;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Util\ArrayConverter.php;f19;86;5;97;;;;vpos;;v;;r;;d4,87;;b3,5;;mtree;;pprefix;;pnode;;p">
					<treenode node="node;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Util\ArrayConverter.php;f70;86;75;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="prefix;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Util\ArrayConverter.php;f55;86;62;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="tree;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Util\ArrayConverter.php;f48;86;53;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="expandToTree;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Util\ArrayConverter.php;f18;35;5;48;;;;vpos;;varray;;r&#xA;Definition&#xA;    expandToTree(array $messages)&#xA;&#xA;Description&#xA;     Converts linear messages array to tree-like array. For example this rray('foo.bar' =&gt; 'value') will be converted to array('foo' =&gt; array('bar' =&gt; 'value')).&#xA;&#xA;Parameters:&#xA;    array $messages - Linear messages array&#xA;&#xA;Return:&#xA;   Tree-like messages array;;d4,36;;b1,5;;marray $messages;;p">
					<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Util\ArrayConverter.php;f46;35;55;35;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getElementByPath;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Util\ArrayConverter.php;f19;50;5;84;;;;vpos;;v;;r;;d4,51;;b3,5;;mtree;;pparts;;p">
					<treenode node="parts;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Util\ArrayConverter.php;f66;50;72;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="tree;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Util\ArrayConverter.php;f53;50;58;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="ArrayConverterTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Util\ArrayConverterTest.php;f0;16;1;73;;;;vpos;;vTestCase;;c;;r;;d0,17;;b0,0;;m">
				<treenode node="messagesData;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Util\ArrayConverterTest.php;f11;26;5;72;;;;vpos;;v;;r;;d4,27;;b1,0;;m">
				</treenode>
				<treenode node="testDump;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Util\ArrayConverterTest.php;f11;21;5;24;;;;vpos;;v;;r&#xA;Definition&#xA;    testDump($input, $expectedOutput)&#xA;&#xA;Description&#xA;      dataProvider messagesData;;d4,22;;b1,0;;minput;;pexpectedOutput;;p">
					<treenode node="expectedOutput;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Util\ArrayConverterTest.php;f37;21;52;21;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="input;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Util\ArrayConverterTest.php;f29;21;35;21;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="ArrayLoader;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\ArrayLoader.php;f0;20;1;65;;;;vpos;;vLoaderInterface;;c;;r&#xA;Definition&#xA;    class ArrayLoader implements LoaderInterface&#xA;&#xA;Description&#xA;     ArrayLoader loads translations from a PHP array.;;d0,21;;b0,0;;m">
				<treenode node="flatten;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\ArrayLoader.php;f12;48;5;64;;;;vpos;;v;;r&#xA;Definition&#xA;    flatten(array &amp;$messages, array $subnode = null, $path = null)&#xA;&#xA;Description&#xA;     Flattens an nested array of translations.&#xA;&#xA;Parameters:&#xA;    array - &amp;$messages The array that will be flattened&#xA;    array $subnode - Current subnode being parsed, used internally for recursive calls&#xA;    string $path - Current path being parsed, used internally for recursive calls;;d4,49;;b3,0;;marray;;parray $subnode;;pstring $path;;p">
					<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\ArrayLoader.php;f36;48;45;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\ArrayLoader.php;f70;48;75;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="subnode;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\ArrayLoader.php;f53;48;61;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="load;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\ArrayLoader.php;f11;25;5;32;;;;vpos;;v;;r&#xA;Definition&#xA;    load($resource, $locale, $domain = 'messages')&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,26;;b1,0;;mresource;;plocale;;pdomain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\ArrayLoader.php;f45;25;52;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\ArrayLoader.php;f36;25;43;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="resource;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\ArrayLoader.php;f25;25;34;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="Article;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\app\models\Article.php;f0;4;1;7;;;;vpos;;vModel;;c;;r;;d28,4;;b0,0;;m">
				<treenode node="fillable;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\app\models\Article.php;f11;6;20;6;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\app\models\Article.php;f11;5;17;5;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="Articles;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\app\controllers\Articles.php;f1;6;2;15;;;;vpos;;v;;r;;d16,6;;b0,0;;m">
				<treenode node="create_article;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\app\controllers\Articles.php;f16;7;2;14;;;;vpos;;v;;r;;d59,7;;b1,5;;mtitle;;puser_id;;p">
					<treenode node="arr;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\app\controllers\Articles.php;f2;8;6;8;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="article;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\app\controllers\Articles.php;f2;12;10;12;;;;vposstatic;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="title;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\app\controllers\Articles.php;f41;7;47;7;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="user_id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\app\controllers\Articles.php;f49;7;57;7;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="Artisan;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Artisan.php;f0;7;1;18;;;;vpos;;vFacade;;c;;r&#xA;Definition&#xA;    class Artisan extends Facade&#xA;&#xA;Description&#xA;      see \Illuminate\Contracts\Console\Kernel;;d0,8;;b0,0;;m">
				<treenode node="getFacadeAccessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Artisan.php;f21;14;5;17;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getFacadeAccessor()&#xA;&#xA;Description&#xA;     Get the registered name of the component.;;d4,15;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="Auth;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Auth.php;f0;8;1;19;;;;vpos;;vFacade;;c;;r&#xA;Definition&#xA;    class Auth extends Facade&#xA;&#xA;Description&#xA;      see \Illuminate\Auth\AuthManager;;d0,9;;b0,0;;m">
				<treenode node="getFacadeAccessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Auth.php;f21;15;5;18;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getFacadeAccessor()&#xA;&#xA;Description&#xA;     Get the registered name of the component.;;d4,16;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="BackupDumper;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Writer\TranslationWriterTest.php;f0;53;1;65;;;;vpos;;vDumperInterface;;c;;r;;d0,54;;b0,0;;m">
				<treenode node="dump;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Writer\TranslationWriterTest.php;f11;57;5;59;;;;vpos;;v;;r;;d4,58;;b1,0;;mmessages;;poptions;;p">
					<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Writer\TranslationWriterTest.php;f42;57;51;57;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Writer\TranslationWriterTest.php;f53;57;61;57;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setBackup;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Writer\TranslationWriterTest.php;f11;61;5;64;;;;vpos;;v;;r;;d4,62;;b1,0;;mbackup;;p">
					<treenode node="backup;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Writer\TranslationWriterTest.php;f30;61;37;61;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="backup;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Writer\TranslationWriterTest.php;f11;55;18;55;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="BaseCommand;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\BaseCommand.php;f0;6;1;17;;;;vpos;;vCommand;;c;;r;;d0,7;;b0,0;;m">
				<treenode node="getMigrationPath;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\BaseCommand.php;f14;13;5;16;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getMigrationPath()&#xA;&#xA;Description&#xA;     Get the path to the migration directory.;;d4,14;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="BelongsTo;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f0;9;1;305;;;;vpos;;vRelation;;c;;r;;d0,10;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f11;42;5;49;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct(Builder $query, Model $parent, $foreignKey, $otherKey, $relation)&#xA;&#xA;Description&#xA;     Create a new belongs to relationship instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $query&#xA;    \Illuminate\Database\Eloquent\Model $parent&#xA;    string $foreignKey&#xA;    string $otherKey&#xA;    string $relation;;d4,43;;b1,0;;m\Illuminate\Database\Eloquent\Builder $query;;p\Illuminate\Database\Eloquent\Model $parent;;pstring $foreignKey;;pstring $otherKey;;pstring $relation;;p">
					<treenode node="foreignKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f63;42;74;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="otherKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f76;42;85;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parent;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f54;42;61;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f40;42;46;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f87;42;96;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addConstraints;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f11;66;5;76;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    addConstraints()&#xA;&#xA;Description&#xA;     Set the base constraints on the relation query.;;d4,67;;b1,0;;m">
				</treenode>
				<treenode node="addEagerConstraints;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f11;132;5;140;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    addEagerConstraints(array $models)&#xA;&#xA;Description&#xA;     Set the constraints for an eager load of the relation.&#xA;&#xA;Parameters:&#xA;    array $models;;d4,133;;b1,0;;marray $models;;p">
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f46;132;53;132;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="associate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f11;228;5;239;;;;vpos;;v;;r&#xA;Definition&#xA;    associate($model)&#xA;&#xA;Description&#xA;     Associate the model instance to the given parent.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Model|int $model;;d4,229;;b1,0;;m\Illuminate\Database\Eloquent\Model|int $model;;p">
					<treenode node="model;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f30;228;36;228;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dissociate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f11;246;5;251;;;;vpos;;v;;r&#xA;Definition&#xA;    dissociate()&#xA;&#xA;Description&#xA;     Dissociate previously associated model from the given parent.;;d4,247;;b1,0;;m">
				</treenode>
				<treenode node="getEagerModelKeys;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f14;148;5;169;;;;vpos;;varray;;r&#xA;Definition&#xA;    getEagerModelKeys(array $models)&#xA;&#xA;Description&#xA;     Gather the keys from an array of related models.&#xA;&#xA;Parameters:&#xA;    array $models;;d4,149;;b2,0;;marray $models;;p">
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f47;148;54;148;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getForeignKey;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f11;271;5;274;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getForeignKey()&#xA;&#xA;Description&#xA;     Get the foreign key of the relationship.;;d4,272;;b1,0;;m">
				</treenode>
				<treenode node="getOtherKey;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f11;291;5;294;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getOtherKey()&#xA;&#xA;Description&#xA;     Get the associated key of the relationship.;;d4,292;;b1,0;;m">
				</treenode>
				<treenode node="getQualifiedForeignKey;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f11;281;5;284;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getQualifiedForeignKey()&#xA;&#xA;Description&#xA;     Get the fully qualified foreign key of the relationship.;;d4,282;;b1,0;;m">
				</treenode>
				<treenode node="getQualifiedOtherKeyName;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f11;301;5;304;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getQualifiedOtherKeyName()&#xA;&#xA;Description&#xA;     Get the fully qualified associated key of the relationship.;;d4,302;;b1,0;;m">
				</treenode>
				<treenode node="getRelationCountHash;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f11;121;5;124;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getRelationCountHash()&#xA;&#xA;Description&#xA;     Get a relationship join table hash.;;d4,122;;b1,0;;m">
				</treenode>
				<treenode node="getRelationCountQuery;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f11;85;5;96;;;;vpos;;v;;r&#xA;Definition&#xA;    getRelationCountQuery(Builder $query, Builder $parent)&#xA;&#xA;Description&#xA;     Add the constraints for a relationship count query.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $query&#xA;    \Illuminate\Database\Eloquent\Builder $parent;;d4,86;;b1,0;;m\Illuminate\Database\Eloquent\Builder $query;;p\Illuminate\Database\Eloquent\Builder $parent;;p">
					<treenode node="parent;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f66;85;73;85;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f50;85;56;85;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getRelationCountQueryForSelfRelation;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f11;105;5;114;;;;vpos;;v;;r&#xA;Definition&#xA;    getRelationCountQueryForSelfRelation(Builder $query, Builder $parent)&#xA;&#xA;Description&#xA;     Add the constraints for a relationship count query on the same table.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $query&#xA;    \Illuminate\Database\Eloquent\Builder $parent;;d4,106;;b1,0;;m\Illuminate\Database\Eloquent\Builder $query;;p\Illuminate\Database\Eloquent\Builder $parent;;p">
					<treenode node="parent;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f81;105;88;105;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f65;105;71;105;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getResults;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f11;56;5;59;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    getResults()&#xA;&#xA;Description&#xA;     Get the results of the relationship.;;d4,57;;b1,0;;m">
				</treenode>
				<treenode node="initRelation;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f11;178;5;185;;;;vpos;;varray;;r&#xA;Definition&#xA;    initRelation(array $models, $relation)&#xA;&#xA;Description&#xA;     Initialize the relation on a set of models.&#xA;&#xA;Parameters:&#xA;    array $models&#xA;    string $relation;;d4,179;;b1,0;;marray $models;;pstring $relation;;p">
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f39;178;46;178;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f48;178;57;178;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="match;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f11;195;5;220;;;;vpos;;varray;;r&#xA;Definition&#xA;    match(array $models, Collection $results, $relation)&#xA;&#xA;Description&#xA;     Match the eagerly loaded results to their parents.&#xA;&#xA;Parameters:&#xA;    array $models&#xA;    \Illuminate\Database\Eloquent\Collection $results&#xA;    string $relation;;d4,196;;b1,0;;marray $models;;p\Illuminate\Database\Eloquent\Collection $results;;pstring $relation;;p">
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f32;195;39;195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f62;195;71;195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="results;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f52;195;60;195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="update;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f11;259;5;264;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    update(array $attributes)&#xA;&#xA;Description&#xA;     Update the parent model on the relationship.&#xA;&#xA;Parameters:&#xA;    array $attributes;;d4,260;;b1,0;;marray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f33;259;44;259;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="foreignKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f14;16;25;16;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="otherKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f14;23;23;23;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php;f14;30;23;30;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="BelongsToMany;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f0;12;1;1224;;;;vpos;;vRelation;;c;;r;;d0,13;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;81;5;89;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct(Builder $query, Model $parent, $table, $foreignKey, $otherKey, $relationName = null)&#xA;&#xA;Description&#xA;     Create a new belongs to many relationship instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $query&#xA;    \Illuminate\Database\Eloquent\Model $parent&#xA;    string $table&#xA;    string $foreignKey&#xA;    string $otherKey&#xA;    string $relationName;;d4,82;;b1,0;;m\Illuminate\Database\Eloquent\Builder $query;;p\Illuminate\Database\Eloquent\Model $parent;;pstring $table;;pstring $foreignKey;;pstring $otherKey;;pstring $relationName;;p">
					<treenode node="foreignKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f71;81;82;81;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="otherKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f84;81;93;81;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parent;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f54;81;61;81;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f40;81;46;81;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relationName;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f95;81;108;81;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f63;81;69;81;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addConstraints;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;291;5;298;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    addConstraints()&#xA;&#xA;Description&#xA;     Set the base constraints on the relation query.;;d4,292;;b1,0;;m">
				</treenode>
				<treenode node="addEagerConstraints;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;435;5;438;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    addEagerConstraints(array $models)&#xA;&#xA;Description&#xA;     Set the constraints for an eager load of the relation.&#xA;&#xA;Parameters:&#xA;    array $models;;d4,436;;b1,0;;marray $models;;p">
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f46;435;53;435;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="attach;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;859;5;872;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    attach($id, array $attributes = [], $touch = true)&#xA;&#xA;Description&#xA;     Attach a model to the parent.&#xA;&#xA;Parameters:&#xA;    mixed $id&#xA;    array $attributes&#xA;    bool $touch;;d4,860;;b1,0;;mmixed $id;;parray $attributes;;pbool $touch;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f38;859;49;859;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f27;859;30;859;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="touch;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f56;859;62;859;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="attacher;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f14;907;5;917;;;;vpos;;varray;;r&#xA;Definition&#xA;    attacher($key, $value, $attributes, $timed)&#xA;&#xA;Description&#xA;     Create a full attachment record payload.&#xA;&#xA;Parameters:&#xA;    int $key&#xA;    mixed $value&#xA;    array $attributes&#xA;    bool $timed;;d4,908;;b2,0;;mint $key;;pmixed $value;;parray $attributes;;pbool $timed;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f46;907;57;907;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f32;907;36;907;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timed;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f59;907;65;907;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f38;907;44;907;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="attachNew;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f14;802;5;826;;;;vpos;;varray;;r&#xA;Definition&#xA;    attachNew(array $records, array $current, $touch = true)&#xA;&#xA;Description&#xA;     Attach all of the IDs that aren't in the current array.&#xA;&#xA;Parameters:&#xA;    array $records&#xA;    array $current&#xA;    bool $touch;;d4,803;;b2,0;;marray $records;;parray $current;;pbool $touch;;p">
					<treenode node="current;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f55;802;63;802;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="records;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f39;802;47;802;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="touch;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f65;802;71;802;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="buildDictionary;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f14;488;5;502;;;;vpos;;varray;;r&#xA;Definition&#xA;    buildDictionary(Collection $results)&#xA;&#xA;Description&#xA;     Build model dictionary keyed by the relation's foreign key.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Collection $results;;d4,489;;b2,0;;m\Illuminate\Database\Eloquent\Collection $results;;p">
					<treenode node="results;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f50;488;58;488;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="chunk;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;233;5;242;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    chunk($count, callable $callback)&#xA;&#xA;Description&#xA;     Chunk the results of the query.&#xA;&#xA;Parameters:&#xA;    int $count&#xA;    callable $callback;;d4,234;;b1,0;;mint $count;;pcallable $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f43;233;52;233;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="count;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f26;233;32;233;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="cleanPivotAttributes;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f14;268;5;284;;;;vpos;;varray;;r&#xA;Definition&#xA;    cleanPivotAttributes(Model $model)&#xA;&#xA;Description&#xA;     Get the pivot attributes from a model.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Model $model;;d4,269;;b2,0;;m\Illuminate\Database\Eloquent\Model $model;;p">
					<treenode node="model;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f50;268;56;268;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="create;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;690;5;702;;;;vpos;;v;;r&#xA;Definition&#xA;    create(array $attributes, array $joining = [], $touch = true)&#xA;&#xA;Description&#xA;     Create a new instance of the related model.&#xA;&#xA;Parameters:&#xA;    array $attributes&#xA;    array $joining&#xA;    bool $touch;;d4,691;;b1,0;;marray $attributes;;parray $joining;;pbool $touch;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f33;690;44;690;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="joining;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f52;690;60;690;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="touch;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f67;690;73;690;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="createAttachRecord;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f14;943;5;957;;;;vpos;;varray;;r&#xA;Definition&#xA;    createAttachRecord($id, $timed)&#xA;&#xA;Description&#xA;     Create a new pivot attachment record.&#xA;&#xA;Parameters:&#xA;    int $id&#xA;    bool $timed;;d4,944;;b2,0;;mint $id;;pbool $timed;;p">
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f42;943;45;943;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timed;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f47;943;53;943;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="createAttachRecords;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f14;881;5;896;;;;vpos;;varray;;r&#xA;Definition&#xA;    createAttachRecords($ids, array $attributes)&#xA;&#xA;Description&#xA;     Create an array of records to insert into the pivot table.&#xA;&#xA;Parameters:&#xA;    array $ids&#xA;    array $attributes;;d4,882;;b2,0;;marray $ids;;parray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f55;881;66;881;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="ids;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f43;881;47;881;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="createdAt;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;1150;5;1153;;;;vpos;;vstring;;r&#xA;Definition&#xA;    createdAt()&#xA;&#xA;Description&#xA;     Get the name of the &quot;created at&quot; column.;;d4,1151;;b1,0;;m">
				</treenode>
				<treenode node="createMany;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;711;5;722;;;;vpos;;v;;r&#xA;Definition&#xA;    createMany(array $records, array $joinings = [])&#xA;&#xA;Description&#xA;     Create an array of new instances of the related models.&#xA;&#xA;Parameters:&#xA;    array $records&#xA;    array $joinings;;d4,712;;b1,0;;marray $records;;parray $joinings;;p">
					<treenode node="joinings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f53;711;62;711;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="records;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f37;711;45;711;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="detach;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;988;5;1015;;;;vpos;;vint;;r&#xA;Definition&#xA;    detach($ids = [], $touch = true)&#xA;&#xA;Description&#xA;     Detach models from the relationship.&#xA;&#xA;Parameters:&#xA;    int|array $ids&#xA;    bool $touch;;d4,989;;b1,0;;mint|array $ids;;pbool $touch;;p">
					<treenode node="ids;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f27;988;31;988;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="touch;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f38;988;44;988;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="find;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;583;5;592;;;;vpos;;v;;r&#xA;Definition&#xA;    find($id, $columns = ['*'])&#xA;&#xA;Description&#xA;     Find a related model by its primary key.&#xA;&#xA;Parameters:&#xA;    mixed $id&#xA;    array $columns;;d4,584;;b1,0;;mmixed $id;;parray $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f30;583;38;583;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f25;583;28;583;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="findMany;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;601;5;610;;;;vpos;;v;;r&#xA;Definition&#xA;    findMany($ids, $columns = ['*'])&#xA;&#xA;Description&#xA;     Find multiple related models by their primary keys.&#xA;&#xA;Parameters:&#xA;    mixed $ids&#xA;    array $columns;;d4,602;;b1,0;;mmixed $ids;;parray $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f35;601;43;601;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="ids;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f29;601;33;601;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="findOrNew;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;619;5;626;;;;vpos;;v;;r&#xA;Definition&#xA;    findOrNew($id, $columns = ['*'])&#xA;&#xA;Description&#xA;     Find a related model by its primary key or return new instance of the related model.&#xA;&#xA;Parameters:&#xA;    mixed $id&#xA;    array $columns;;d4,620;;b1,0;;mmixed $id;;parray $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f35;619;43;619;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f30;619;33;619;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="first;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;136;5;141;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    first($columns = ['*'])&#xA;&#xA;Description&#xA;     Execute the query and get the first result.&#xA;&#xA;Parameters:&#xA;    array $columns;;d4,137;;b1,0;;marray $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f26;136;34;136;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="firstOrCreate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;651;5;658;;;;vpos;;v;;r&#xA;Definition&#xA;    firstOrCreate(array $attributes, array $joining = [], $touch = true)&#xA;&#xA;Description&#xA;     Get the first related record matching the attributes or create it.&#xA;&#xA;Parameters:&#xA;    array $attributes&#xA;    array $joining&#xA;    bool $touch;;d4,652;;b1,0;;marray $attributes;;parray $joining;;pbool $touch;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f40;651;51;651;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="joining;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f59;651;67;651;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="touch;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f74;651;80;651;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="firstOrFail;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;151;5;158;;;;vpos;;v;;r&#xA;Definition&#xA;    firstOrFail($columns = ['*'])&#xA;&#xA;Description&#xA;     Execute the query and get the first result or throw an exception.&#xA;&#xA;Parameters:&#xA;    array $columns;;d4,152;;b1,0;;marray $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f32;151;40;151;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="firstOrNew;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;634;5;641;;;;vpos;;v;;r&#xA;Definition&#xA;    firstOrNew(array $attributes)&#xA;&#xA;Description&#xA;     Get the first related model record matching the attributes or instantiate it.&#xA;&#xA;Parameters:&#xA;    array $attributes;;d4,635;;b1,0;;marray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f37;634;48;634;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="formatSyncList;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f14;779;5;792;;;;vpos;;varray;;r&#xA;Definition&#xA;    formatSyncList(array $records)&#xA;&#xA;Description&#xA;     Format the sync list so that it is keyed by ID.&#xA;&#xA;Parameters:&#xA;    array $records;;d4,780;;b2,0;;marray $records;;p">
					<treenode node="records;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f44;779;52;779;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="get;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;166;5;187;;;;vpos;;v;;r&#xA;Definition&#xA;    get($columns = ['*'])&#xA;&#xA;Description&#xA;     Execute the query as a &quot;select&quot; statement.&#xA;&#xA;Parameters:&#xA;    array $columns;;d4,167;;b1,0;;marray $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f24;166;32;166;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getAliasedPivotColumns;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f14;366;5;380;;;;vpos;;varray;;r&#xA;Definition&#xA;    getAliasedPivotColumns()&#xA;&#xA;Description&#xA;     Get the pivot columns for the relation.;;d4,367;;b2,0;;m">
				</treenode>
				<treenode node="getAttachId;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f14;927;5;934;;;;vpos;;varray;;r&#xA;Definition&#xA;    getAttachId($key, $value, array $attributes)&#xA;&#xA;Description&#xA;     Get the attach record ID and extra attributes.&#xA;&#xA;Parameters:&#xA;    mixed $key&#xA;    mixed $value&#xA;    array $attributes;;d4,928;;b2,0;;mmixed $key;;pmixed $value;;parray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f55;927;66;927;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f35;927;39;927;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f41;927;47;927;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getForeignKey;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;1190;5;1193;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getForeignKey()&#xA;&#xA;Description&#xA;     Get the fully qualified foreign key for the relation.;;d4,1191;;b1,0;;m">
				</treenode>
				<treenode node="getHasCompareKey;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;1180;5;1183;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getHasCompareKey()&#xA;&#xA;Description&#xA;     Get the key for comparing against the parent key in &quot;has&quot; query.;;d4,1181;;b1,0;;m">
				</treenode>
				<treenode node="getOtherKey;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;1200;5;1203;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getOtherKey()&#xA;&#xA;Description&#xA;     Get the fully qualified &quot;other key&quot; for the relation.;;d4,1201;;b1,0;;m">
				</treenode>
				<treenode node="getRelatedFreshUpdate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;1170;5;1173;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getRelatedFreshUpdate()&#xA;&#xA;Description&#xA;     Get the related model's updated at column name.;;d4,1171;;b1,0;;m">
				</treenode>
				<treenode node="getRelatedIds;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;532;5;539;;;;vpos;;varray;;r&#xA;Definition&#xA;    getRelatedIds()&#xA;&#xA;Description&#xA;     Get all of the IDs for the related models.;;d4,533;;b1,0;;m">
				</treenode>
				<treenode node="getRelationCountHash;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;341;5;344;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getRelationCountHash()&#xA;&#xA;Description&#xA;     Get a relationship join table hash.;;d4,342;;b1,0;;m">
				</treenode>
				<treenode node="getRelationCountQuery;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;307;5;316;;;;vpos;;v;;r&#xA;Definition&#xA;    getRelationCountQuery(Builder $query, Builder $parent)&#xA;&#xA;Description&#xA;     Add the constraints for a relationship count query.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $query&#xA;    \Illuminate\Database\Eloquent\Builder $parent;;d4,308;;b1,0;;m\Illuminate\Database\Eloquent\Builder $query;;p\Illuminate\Database\Eloquent\Builder $parent;;p">
					<treenode node="parent;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f66;307;73;307;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f50;307;56;307;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getRelationCountQueryForSelfJoin;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;325;5;334;;;;vpos;;v;;r&#xA;Definition&#xA;    getRelationCountQueryForSelfJoin(Builder $query, Builder $parent)&#xA;&#xA;Description&#xA;     Add the constraints for a relationship count query on the same table.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $query&#xA;    \Illuminate\Database\Eloquent\Builder $parent;;d4,326;;b1,0;;m\Illuminate\Database\Eloquent\Builder $query;;p\Illuminate\Database\Eloquent\Builder $parent;;p">
					<treenode node="parent;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f77;325;84;325;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f61;325;67;325;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getRelationName;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;1220;5;1223;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getRelationName()&#xA;&#xA;Description&#xA;     Get the relationship name for the relationship.;;d4,1221;;b1,0;;m">
				</treenode>
				<treenode node="getResults;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;96;5;99;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    getResults()&#xA;&#xA;Description&#xA;     Get the results of the relationship.;;d4,97;;b1,0;;m">
				</treenode>
				<treenode node="getSelectColumns;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f14;352;5;359;;;;vpos;;v;;r&#xA;Definition&#xA;    getSelectColumns(array $columns = ['*'])&#xA;&#xA;Description&#xA;     Set the select clause for the relation query.&#xA;&#xA;Parameters:&#xA;    array $columns;;d4,353;;b2,0;;marray $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f46;352;54;352;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getTable;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;1210;5;1213;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getTable()&#xA;&#xA;Description&#xA;     Get the intermediate table for the relationship.;;d4,1211;;b1,0;;m">
				</treenode>
				<treenode node="guessInverseRelation;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f14;1048;5;1051;;;;vpos;;vstring;;r&#xA;Definition&#xA;    guessInverseRelation()&#xA;&#xA;Description&#xA;     Attempt to guess the name of the inverse of the relation.;;d4,1049;;b2,0;;m">
				</treenode>
				<treenode node="hasPivotColumn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f14;388;5;391;;;;vpos;;vbool;;r&#xA;Definition&#xA;    hasPivotColumn($column)&#xA;&#xA;Description&#xA;     Determine whether the given column is defined as a pivot column.&#xA;&#xA;Parameters:&#xA;    string $column;;d4,389;;b2,0;;mstring $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f38;388;45;388;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hydratePivotRelation;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f14;250;5;260;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    hydratePivotRelation(array $models)&#xA;&#xA;Description&#xA;     Hydrate the pivot table relationship on the models.&#xA;&#xA;Parameters:&#xA;    array $models;;d4,251;;b2,0;;marray $models;;p">
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f50;250;57;250;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="initRelation;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;447;5;454;;;;vpos;;varray;;r&#xA;Definition&#xA;    initRelation(array $models, $relation)&#xA;&#xA;Description&#xA;     Initialize the relation on a set of models.&#xA;&#xA;Parameters:&#xA;    array $models&#xA;    string $relation;;d4,448;;b1,0;;marray $models;;pstring $relation;;p">
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f39;447;46;447;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f48;447;57;447;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="match;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;464;5;480;;;;vpos;;varray;;r&#xA;Definition&#xA;    match(array $models, Collection $results, $relation)&#xA;&#xA;Description&#xA;     Match the eagerly loaded results to their parents.&#xA;&#xA;Parameters:&#xA;    array $models&#xA;    \Illuminate\Database\Eloquent\Collection $results&#xA;    string $relation;;d4,465;;b1,0;;marray $models;;p\Illuminate\Database\Eloquent\Collection $results;;pstring $relation;;p">
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f32;464;39;464;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f62;464;71;464;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="results;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f52;464;60;464;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="newExistingPivot;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;1110;5;1113;;;;vpos;;v;;r&#xA;Definition&#xA;    newExistingPivot(array $attributes = [])&#xA;&#xA;Description&#xA;     Create a new existing pivot model instance.&#xA;&#xA;Parameters:&#xA;    array $attributes;;d4,1111;;b1,0;;marray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f43;1110;54;1110;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="newPivot;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;1097;5;1102;;;;vpos;;v;;r&#xA;Definition&#xA;    newPivot(array $attributes = [], $exists = false)&#xA;&#xA;Description&#xA;     Create a new pivot model instance.&#xA;&#xA;Parameters:&#xA;    array $attributes&#xA;    bool $exists;;d4,1098;;b1,0;;marray $attributes;;pbool $exists;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f35;1097;46;1097;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="exists;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f53;1097;60;1097;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="newPivotQuery;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f14;1058;5;1067;;;;vpos;;v;;r&#xA;Definition&#xA;    newPivotQuery()&#xA;&#xA;Description&#xA;     Create a new query builder for the pivot table.;;d4,1059;;b2,0;;m">
				</treenode>
				<treenode node="newPivotStatement;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;1074;5;1077;;;;vpos;;v;;r&#xA;Definition&#xA;    newPivotStatement()&#xA;&#xA;Description&#xA;     Get a new plain query builder for the pivot table.;;d4,1075;;b1,0;;m">
				</treenode>
				<treenode node="newPivotStatementForId;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;1085;5;1088;;;;vpos;;v;;r&#xA;Definition&#xA;    newPivotStatementForId($id)&#xA;&#xA;Description&#xA;     Get a new pivot statement for a given &quot;other&quot; ID.&#xA;&#xA;Parameters:&#xA;    mixed $id;;d4,1086;;b1,0;;mmixed $id;;p">
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f43;1085;46;1085;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="orWherePivot;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;125;5;128;;;;vpos;;v;;r&#xA;Definition&#xA;    orWherePivot($column, $operator = null, $value = null)&#xA;&#xA;Description&#xA;     Set an or where clause for a pivot table column.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    string $operator&#xA;    mixed $value;;d4,126;;b1,0;;mstring $column;;pstring $operator;;pmixed $value;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f33;125;40;125;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="operator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f42;125;51;125;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f60;125;66;125;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="paginate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;197;5;206;;;;vpos;;v;;r&#xA;Definition&#xA;    paginate($perPage = null, $columns = ['*'], $pageName = 'page')&#xA;&#xA;Description&#xA;     Get a paginator for the &quot;select&quot; statement.&#xA;&#xA;Parameters:&#xA;    int $perPage&#xA;    array $columns&#xA;    string $pageName;;d4,198;;b1,0;;mint $perPage;;parray $columns;;pstring $pageName;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f46;197;54;197;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="pageName;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f64;197;73;197;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="perPage;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f29;197;37;197;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="save;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;549;5;556;;;;vpos;;v;;r&#xA;Definition&#xA;    save(Model $model, array $joining = [], $touch = true)&#xA;&#xA;Description&#xA;     Save a new model and attach it to the parent model.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Model $model&#xA;    array $joining&#xA;    bool $touch;;d4,550;;b1,0;;m\Illuminate\Database\Eloquent\Model $model;;parray $joining;;pbool $touch;;p">
					<treenode node="joining;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f45;549;53;549;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f31;549;37;549;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="touch;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f60;549;66;549;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="saveMany;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;565;5;574;;;;vpos;;varray;;r&#xA;Definition&#xA;    saveMany(array $models, array $joinings = [])&#xA;&#xA;Description&#xA;     Save an array of new models and attach them to the parent model.&#xA;&#xA;Parameters:&#xA;    array $models&#xA;    array $joinings;;d4,566;;b1,0;;marray $models;;parray $joinings;;p">
					<treenode node="joinings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f50;565;59;565;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f35;565;42;565;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setJoin;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f14;399;5;413;;;;vpos;;v;;r&#xA;Definition&#xA;    setJoin($query = null)&#xA;&#xA;Description&#xA;     Set the join clause for the relation query.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder|null $query;;d4,400;;b2,0;;m\Illuminate\Database\Eloquent\Builder|null $query;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f31;399;37;399;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setTimestampsOnAttach;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f14;966;5;979;;;;vpos;;varray;;r&#xA;Definition&#xA;    setTimestampsOnAttach(array $record, $exists = false)&#xA;&#xA;Description&#xA;     Set the creation and update timestamps on an attach record.&#xA;&#xA;Parameters:&#xA;    array $record&#xA;    bool $exists;;d4,967;;b2,0;;marray $record;;pbool $exists;;p">
					<treenode node="exists;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f60;966;67;966;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="record;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f51;966;58;966;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setWhere;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f14;420;5;427;;;;vpos;;v;;r&#xA;Definition&#xA;    setWhere()&#xA;&#xA;Description&#xA;     Set the where clause for the relation query.;;d4,421;;b2,0;;m">
				</treenode>
				<treenode node="simplePaginate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;215;5;224;;;;vpos;;v;;r&#xA;Definition&#xA;    simplePaginate($perPage = null, $columns = ['*'])&#xA;&#xA;Description&#xA;     Paginate the given query into a simple paginator.&#xA;&#xA;Parameters:&#xA;    int $perPage&#xA;    array $columns;;d4,216;;b1,0;;mint $perPage;;parray $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f52;215;60;215;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="perPage;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f35;215;43;215;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="sync;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;731;5;771;;;;vpos;;varray;;r&#xA;Definition&#xA;    sync($ids, $detaching = true)&#xA;&#xA;Description&#xA;     Sync the intermediate tables with a list of IDs or collection of models.&#xA;&#xA;Parameters:&#xA;    array $ids&#xA;    bool $detaching;;d4,732;;b1,0;;marray $ids;;pbool $detaching;;p">
					<treenode node="detaching;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f31;731;41;731;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="ids;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f25;731;29;731;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="touch;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;511;5;525;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    touch()&#xA;&#xA;Description&#xA;     Touch all of the related models for the relationship.;;d4,512;;b1,0;;m">
				</treenode>
				<treenode node="touchIfTouching;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;1022;5;1031;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    touchIfTouching()&#xA;&#xA;Description&#xA;     If we're touching the parent model, touch.;;d4,1023;;b1,0;;m">
				</treenode>
				<treenode node="touchingParent;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f14;1038;5;1041;;;;vpos;;vbool;;r&#xA;Definition&#xA;    touchingParent()&#xA;&#xA;Description&#xA;     Determine if we should touch the parent on sync.;;d4,1039;;b2,0;;m">
				</treenode>
				<treenode node="updatedAt;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;1160;5;1163;;;;vpos;;vstring;;r&#xA;Definition&#xA;    updatedAt()&#xA;&#xA;Description&#xA;     Get the name of the &quot;updated at&quot; column.;;d4,1161;;b1,0;;m">
				</treenode>
				<treenode node="updateExistingPivot;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;836;5;849;;;;vpos;;vint;;r&#xA;Definition&#xA;    updateExistingPivot($id, array $attributes, $touch = true)&#xA;&#xA;Description&#xA;     Update an existing pivot record on the table.&#xA;&#xA;Parameters:&#xA;    mixed $id&#xA;    array $attributes&#xA;    bool $touch;;d4,837;;b1,0;;mmixed $id;;parray $attributes;;pbool $touch;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f51;836;62;836;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f40;836;43;836;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="touch;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f64;836;70;836;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="updateOrCreate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;669;5;680;;;;vpos;;v;;r&#xA;Definition&#xA;    updateOrCreate(array $attributes, array $values = [], array $joining = [], $touch = true)&#xA;&#xA;Description&#xA;     Create or update a related record matching the attributes, and fill it with values.&#xA;&#xA;Parameters:&#xA;    array $attributes&#xA;    array $values&#xA;    array $joining&#xA;    bool $touch;;d4,670;;b1,0;;marray $attributes;;parray $values;;parray $joining;;pbool $touch;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f41;669;52;669;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="joining;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f80;669;88;669;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="touch;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f95;669;101;669;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f60;669;67;669;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="wherePivot;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;110;5;115;;;;vpos;;v;;r&#xA;Definition&#xA;    wherePivot($column, $operator = null, $value = null, $boolean = 'and')&#xA;&#xA;Description&#xA;     Set a where clause for a pivot table column.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    string $operator&#xA;    mixed $value&#xA;    string $boolean;;d4,111;;b1,0;;mstring $column;;pstring $operator;;pmixed $value;;pstring $boolean;;p">
					<treenode node="boolean;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f73;110;81;110;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f31;110;38;110;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="operator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f40;110;49;110;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f58;110;64;110;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="withPivot;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;1121;5;1128;;;;vpos;;v;;r&#xA;Definition&#xA;    withPivot($columns)&#xA;&#xA;Description&#xA;     Set the columns on the pivot table to retrieve.&#xA;&#xA;Parameters:&#xA;    mixed $columns;;d4,1122;;b1,0;;mmixed $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f30;1121;38;1121;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="withTimestamps;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f11;1137;5;1143;;;;vpos;;v;;r&#xA;Definition&#xA;    withTimestamps($createdAt = null, $updatedAt = null)&#xA;&#xA;Description&#xA;     Specify that the pivot table has creation and update timestamps.&#xA;&#xA;Parameters:&#xA;    mixed $createdAt&#xA;    mixed $updatedAt;;d4,1138;;b1,0;;mmixed $createdAt;;pmixed $updatedAt;;p">
					<treenode node="createdAt;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f35;1137;45;1137;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="updatedAt;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f54;1137;64;1137;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="foreignKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f14;26;25;26;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="otherKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f14;33;23;33;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="pivotColumns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f14;47;27;47;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="pivotCreatedAt;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f14;61;29;61;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="pivotUpdatedAt;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f14;68;29;68;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="pivotWheres;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f14;54;26;54;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="relationName;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f14;40;27;40;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php;f14;19;20;19;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="BindingResolutionException;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\BindingResolutionException.php;f0;6;1;9;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\BindingResolutionException.php;f0;9;1;12;;;;vpos;;vBaseException;;c;;r;;d0,7;;b0,0;;m">
			</treenode>
			<treenode node="Blade;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Blade.php;f0;7;1;18;;;;vpos;;vFacade;;c;;r&#xA;Definition&#xA;    class Blade extends Facade&#xA;&#xA;Description&#xA;      see \Illuminate\View\Compilers\BladeCompiler;;d0,8;;b0,0;;m">
				<treenode node="getFacadeAccessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Blade.php;f21;14;5;17;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getFacadeAccessor()&#xA;&#xA;Description&#xA;     Get the registered name of the component.;;d4,15;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="Blueprint;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f0;9;1;1011;;;;vpos;;v;;r;;d0,10;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;56;5;63;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct($table, Closure $callback = null)&#xA;&#xA;Description&#xA;     Create a new schema blueprint.&#xA;&#xA;Parameters:&#xA;    string $table&#xA;    \Closure|null $callback;;d4,57;;b1,0;;mstring $table;;p\Closure|null $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f48;56;57;56;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f32;56;38;56;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addColumn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f14;908;5;915;;;;vpos;;v;;r&#xA;Definition&#xA;    addColumn($type, $name, array $parameters = [])&#xA;&#xA;Description&#xA;     Add a new column to the blueprint.&#xA;&#xA;Parameters:&#xA;    string $type&#xA;    string $name&#xA;    array $parameters;;d4,909;;b2,0;;mstring $type;;pstring $name;;parray $parameters;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f40;908;45;908;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f53;908;64;908;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f33;908;38;908;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addCommand;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f14;939;5;944;;;;vpos;;v;;r&#xA;Definition&#xA;    addCommand($name, array $parameters = [])&#xA;&#xA;Description&#xA;     Add a new command to the blueprint.&#xA;&#xA;Parameters:&#xA;    string $name&#xA;    array $parameters;;d4,940;;b2,0;;mstring $name;;parray $parameters;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f34;939;39;939;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f47;939;58;939;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addFluentIndexes;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f14;131;5;154;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    addFluentIndexes()&#xA;&#xA;Description&#xA;     Add the index commands fluently specified on columns.;;d4,132;;b2,0;;m">
				</treenode>
				<treenode node="addImpliedCommands;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f14;113;5;124;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    addImpliedCommands()&#xA;&#xA;Description&#xA;     Add the commands that are implied by the blueprint.;;d4,114;;b2,0;;m">
				</treenode>
				<treenode node="bigIncrements;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;409;5;412;;;;vpos;;v;;r&#xA;Definition&#xA;    bigIncrements($column)&#xA;&#xA;Description&#xA;     Create a new auto-incrementing big integer (8-byte) column on the table.&#xA;&#xA;Parameters:&#xA;    string $column;;d4,410;;b1,0;;mstring $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f34;409;41;409;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="bigInteger;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;531;5;534;;;;vpos;;v;;r&#xA;Definition&#xA;    bigInteger($column, $autoIncrement = false, $unsigned = false)&#xA;&#xA;Description&#xA;     Create a new big integer (8-byte) column on the table.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    bool $autoIncrement&#xA;    bool $unsigned;;d4,532;;b1,0;;mstring $column;;pbool $autoIncrement;;pbool $unsigned;;p">
					<treenode node="autoIncrement;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f40;531;54;531;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f31;531;38;531;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="unsigned;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f64;531;73;531;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="binary;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;809;5;812;;;;vpos;;v;;r&#xA;Definition&#xA;    binary($column)&#xA;&#xA;Description&#xA;     Create a new binary column on the table.&#xA;&#xA;Parameters:&#xA;    string $column;;d4,810;;b1,0;;mstring $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f27;809;34;809;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="boolean;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;641;5;644;;;;vpos;;v;;r&#xA;Definition&#xA;    boolean($column)&#xA;&#xA;Description&#xA;     Create a new boolean column on the table.&#xA;&#xA;Parameters:&#xA;    string $column;;d4,642;;b1,0;;mstring $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f28;641;35;641;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="build;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;72;5;77;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    build(Connection $connection, Grammar $grammar)&#xA;&#xA;Description&#xA;     Execute the blueprint against the database.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Connection $connection&#xA;    \Illuminate\Database\Schema\Grammars\Grammar $grammar;;d4,73;;b1,0;;m\Illuminate\Database\Connection $connection;;p\Illuminate\Database\Schema\Grammars\Grammar $grammar;;p">
					<treenode node="connection;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f37;72;48;72;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="grammar;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f58;72;66;72;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="create;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;177;5;180;;;;vpos;;v;;r&#xA;Definition&#xA;    create()&#xA;&#xA;Description&#xA;     Indicate that the table needs to be created.;;d4,178;;b1,0;;m">
				</treenode>
				<treenode node="createCommand;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f14;953;5;956;;;;vpos;;v;;r&#xA;Definition&#xA;    createCommand($name, array $parameters = [])&#xA;&#xA;Description&#xA;     Create a new Fluent command.&#xA;&#xA;Parameters:&#xA;    string $name&#xA;    array $parameters;;d4,954;;b2,0;;mstring $name;;parray $parameters;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f37;953;42;953;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f50;953;61;953;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="createIndexName;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f14;893;5;898;;;;vpos;;vstring;;r&#xA;Definition&#xA;    createIndexName($type, array $columns)&#xA;&#xA;Description&#xA;     Create a default index name for the table.&#xA;&#xA;Parameters:&#xA;    string $type&#xA;    array $columns;;d4,894;;b2,0;;mstring $type;;parray $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f52;893;60;893;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f39;893;44;893;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="creating;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f14;161;5;170;;;;vpos;;vbool;;r&#xA;Definition&#xA;    creating()&#xA;&#xA;Description&#xA;     Determine if the blueprint has a create command.;;d4,162;;b2,0;;m">
				</treenode>
				<treenode node="date;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;686;5;689;;;;vpos;;v;;r&#xA;Definition&#xA;    date($column)&#xA;&#xA;Description&#xA;     Create a new date column on the table.&#xA;&#xA;Parameters:&#xA;    string $column;;d4,687;;b1,0;;mstring $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f25;686;32;686;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dateTime;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;697;5;700;;;;vpos;;v;;r&#xA;Definition&#xA;    dateTime($column)&#xA;&#xA;Description&#xA;     Create a new date-time column on the table.&#xA;&#xA;Parameters:&#xA;    string $column;;d4,698;;b1,0;;mstring $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f29;697;36;697;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dateTimeTz;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;708;5;711;;;;vpos;;v;;r&#xA;Definition&#xA;    dateTimeTz($column)&#xA;&#xA;Description&#xA;     Create a new date-time column (with time zone) on the table.&#xA;&#xA;Parameters:&#xA;    string $column;;d4,709;;b1,0;;mstring $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f31;708;38;708;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="decimal;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;630;5;633;;;;vpos;;v;;r&#xA;Definition&#xA;    decimal($column, $total = 8, $places = 2)&#xA;&#xA;Description&#xA;     Create a new decimal column on the table.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    int $total&#xA;    int $places;;d4,631;;b1,0;;mstring $column;;pint $total;;pint $places;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f28;630;35;630;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="places;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f49;630;56;630;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="total;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f37;630;43;630;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="drop;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;187;5;190;;;;vpos;;v;;r&#xA;Definition&#xA;    drop()&#xA;&#xA;Description&#xA;     Indicate that the table should be dropped.;;d4,188;;b1,0;;m">
				</treenode>
				<treenode node="dropColumn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;208;5;213;;;;vpos;;v;;r&#xA;Definition&#xA;    dropColumn($columns)&#xA;&#xA;Description&#xA;     Indicate that the given columns should be dropped.&#xA;&#xA;Parameters:&#xA;    string|array $columns;;d4,209;;b1,0;;mstring|array $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f31;208;39;208;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dropForeign;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;266;5;269;;;;vpos;;v;;r&#xA;Definition&#xA;    dropForeign($index)&#xA;&#xA;Description&#xA;     Indicate that the given foreign key should be dropped.&#xA;&#xA;Parameters:&#xA;    string $index;;d4,267;;b1,0;;mstring $index;;p">
					<treenode node="index;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f32;266;38;266;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dropIfExists;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;197;5;200;;;;vpos;;v;;r&#xA;Definition&#xA;    dropIfExists()&#xA;&#xA;Description&#xA;     Indicate that the table should be dropped if it exists.;;d4,198;;b1,0;;m">
				</treenode>
				<treenode node="dropIndex;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;255;5;258;;;;vpos;;v;;r&#xA;Definition&#xA;    dropIndex($index)&#xA;&#xA;Description&#xA;     Indicate that the given index should be dropped.&#xA;&#xA;Parameters:&#xA;    string|array $index;;d4,256;;b1,0;;mstring|array $index;;p">
					<treenode node="index;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f30;255;36;255;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dropIndexCommand;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f14;848;5;862;;;;vpos;;v;;r&#xA;Definition&#xA;    dropIndexCommand($command, $type, $index)&#xA;&#xA;Description&#xA;     Create a new drop index command on the blueprint.&#xA;&#xA;Parameters:&#xA;    string $command&#xA;    string $type&#xA;    string|array $index;;d4,849;;b2,0;;mstring $command;;pstring $type;;pstring|array $index;;p">
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f40;848;48;848;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="index;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f57;848;63;848;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f50;848;55;848;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dropPrimary;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;233;5;236;;;;vpos;;v;;r&#xA;Definition&#xA;    dropPrimary($index = null)&#xA;&#xA;Description&#xA;     Indicate that the given primary key should be dropped.&#xA;&#xA;Parameters:&#xA;    string|array $index;;d4,234;;b1,0;;mstring|array $index;;p">
					<treenode node="index;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f32;233;38;233;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dropRememberToken;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;306;5;309;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    dropRememberToken()&#xA;&#xA;Description&#xA;     Indicate that the remember token column should be dropped.;;d4,307;;b1,0;;m">
				</treenode>
				<treenode node="dropSoftDeletes;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;296;5;299;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    dropSoftDeletes()&#xA;&#xA;Description&#xA;     Indicate that the soft delete column should be dropped.;;d4,297;;b1,0;;m">
				</treenode>
				<treenode node="dropTimestamps;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;276;5;279;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    dropTimestamps()&#xA;&#xA;Description&#xA;     Indicate that the timestamp columns should be dropped.;;d4,277;;b1,0;;m">
				</treenode>
				<treenode node="dropTimestampsTz;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;286;5;289;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    dropTimestampsTz()&#xA;&#xA;Description&#xA;     Indicate that the timestamp columns should be dropped.;;d4,287;;b1,0;;m">
				</treenode>
				<treenode node="dropUnique;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;244;5;247;;;;vpos;;v;;r&#xA;Definition&#xA;    dropUnique($index)&#xA;&#xA;Description&#xA;     Indicate that the given unique key should be dropped.&#xA;&#xA;Parameters:&#xA;    string|array $index;;d4,245;;b1,0;;mstring|array $index;;p">
					<treenode node="index;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f31;244;37;244;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="enum;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;653;5;656;;;;vpos;;v;;r&#xA;Definition&#xA;    enum($column, array $allowed)&#xA;&#xA;Description&#xA;     Create a new enum column on the table.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    array $allowed;;d4,654;;b1,0;;mstring $column;;parray $allowed;;p">
					<treenode node="allowed;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f40;653;48;653;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f25;653;32;653;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="foreign;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;365;5;368;;;;vpos;;v;;r&#xA;Definition&#xA;    foreign($columns, $name = null)&#xA;&#xA;Description&#xA;     Specify a foreign key for the table.&#xA;&#xA;Parameters:&#xA;    string|array $columns&#xA;    string $name;;d4,366;;b1,0;;mstring|array $columns;;pstring $name;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f28;365;36;365;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f38;365;43;365;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getAddedColumns;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;993;5;998;;;;vpos;;varray;;r&#xA;Definition&#xA;    getAddedColumns()&#xA;&#xA;Description&#xA;     Get the columns on the blueprint that should be added.;;d4,994;;b1,0;;m">
				</treenode>
				<treenode node="getChangedColumns;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;1005;5;1010;;;;vpos;;varray;;r&#xA;Definition&#xA;    getChangedColumns()&#xA;&#xA;Description&#xA;     Get the columns on the blueprint that should be changed.;;d4,1006;;b1,0;;m">
				</treenode>
				<treenode node="getColumns;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;973;5;976;;;;vpos;;varray;;r&#xA;Definition&#xA;    getColumns()&#xA;&#xA;Description&#xA;     Get the columns on the blueprint.;;d4,974;;b1,0;;m">
				</treenode>
				<treenode node="getCommands;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;983;5;986;;;;vpos;;varray;;r&#xA;Definition&#xA;    getCommands()&#xA;&#xA;Description&#xA;     Get the commands on the blueprint.;;d4,984;;b1,0;;m">
				</treenode>
				<treenode node="getTable;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;963;5;966;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getTable()&#xA;&#xA;Description&#xA;     Get the table the blueprint describes.;;d4,964;;b1,0;;m">
				</treenode>
				<treenode node="increments;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;376;5;379;;;;vpos;;v;;r&#xA;Definition&#xA;    increments($column)&#xA;&#xA;Description&#xA;     Create a new auto-incrementing integer (4-byte) column on the table.&#xA;&#xA;Parameters:&#xA;    string $column;;d4,377;;b1,0;;mstring $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f31;376;38;376;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="index;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;353;5;356;;;;vpos;;v;;r&#xA;Definition&#xA;    index($columns, $name = null)&#xA;&#xA;Description&#xA;     Specify an index for the table.&#xA;&#xA;Parameters:&#xA;    string|array $columns&#xA;    string $name;;d4,354;;b1,0;;mstring|array $columns;;pstring $name;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f26;353;34;353;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f36;353;41;353;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="indexCommand;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f14;872;5;884;;;;vpos;;v;;r&#xA;Definition&#xA;    indexCommand($type, $columns, $index)&#xA;&#xA;Description&#xA;     Add a new index command to the blueprint.&#xA;&#xA;Parameters:&#xA;    string $type&#xA;    string|array $columns&#xA;    string $index;;d4,873;;b2,0;;mstring $type;;pstring|array $columns;;pstring $index;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f43;872;51;872;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="index;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f53;872;59;872;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f36;872;41;872;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="integer;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;479;5;482;;;;vpos;;v;;r&#xA;Definition&#xA;    integer($column, $autoIncrement = false, $unsigned = false)&#xA;&#xA;Description&#xA;     Create a new integer (4-byte) column on the table.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    bool $autoIncrement&#xA;    bool $unsigned;;d4,480;;b1,0;;mstring $column;;pbool $autoIncrement;;pbool $unsigned;;p">
					<treenode node="autoIncrement;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f37;479;51;479;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f28;479;35;479;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="unsigned;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f61;479;70;479;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="json;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;664;5;667;;;;vpos;;v;;r&#xA;Definition&#xA;    json($column)&#xA;&#xA;Description&#xA;     Create a new json column on the table.&#xA;&#xA;Parameters:&#xA;    string $column;;d4,665;;b1,0;;mstring $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f25;664;32;664;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="jsonb;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;675;5;678;;;;vpos;;v;;r&#xA;Definition&#xA;    jsonb($column)&#xA;&#xA;Description&#xA;     Create a new jsonb column on the table.&#xA;&#xA;Parameters:&#xA;    string $column;;d4,676;;b1,0;;mstring $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f26;675;33;675;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="longText;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;466;5;469;;;;vpos;;v;;r&#xA;Definition&#xA;    longText($column)&#xA;&#xA;Description&#xA;     Create a new long text column on the table.&#xA;&#xA;Parameters:&#xA;    string $column;;d4,467;;b1,0;;mstring $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f29;466;36;466;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mediumIncrements;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;398;5;401;;;;vpos;;v;;r&#xA;Definition&#xA;    mediumIncrements($column)&#xA;&#xA;Description&#xA;     Create a new auto-incrementing medium integer (3-byte) column on the table.&#xA;&#xA;Parameters:&#xA;    string $column;;d4,399;;b1,0;;mstring $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f37;398;44;398;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mediumInteger;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;518;5;521;;;;vpos;;v;;r&#xA;Definition&#xA;    mediumInteger($column, $autoIncrement = false, $unsigned = false)&#xA;&#xA;Description&#xA;     Create a new medium integer (3-byte) column on the table.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    bool $autoIncrement&#xA;    bool $unsigned;;d4,519;;b1,0;;mstring $column;;pbool $autoIncrement;;pbool $unsigned;;p">
					<treenode node="autoIncrement;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f43;518;57;518;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f34;518;41;518;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="unsigned;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f67;518;76;518;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mediumText;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;455;5;458;;;;vpos;;v;;r&#xA;Definition&#xA;    mediumText($column)&#xA;&#xA;Description&#xA;     Create a new medium text column on the table.&#xA;&#xA;Parameters:&#xA;    string $column;;d4,456;;b1,0;;mstring $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f31;455;38;455;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="morphs;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;821;5;828;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    morphs($name, $indexName = null)&#xA;&#xA;Description&#xA;     Add the proper columns for a polymorphic table.&#xA;&#xA;Parameters:&#xA;    string $name&#xA;    string|null $indexName;;d4,822;;b1,0;;mstring $name;;pstring|null $indexName;;p">
					<treenode node="indexName;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f34;821;44;821;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f27;821;32;821;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="nullableTimestamps;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;762;5;767;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    nullableTimestamps()&#xA;&#xA;Description&#xA;     Add nullable creation and update timestamps to the table.;;d4,763;;b1,0;;m">
				</treenode>
				<treenode node="primary;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;329;5;332;;;;vpos;;v;;r&#xA;Definition&#xA;    primary($columns, $name = null)&#xA;&#xA;Description&#xA;     Specify the primary key(s) for the table.&#xA;&#xA;Parameters:&#xA;    string|array $columns&#xA;    string $name;;d4,330;;b1,0;;mstring|array $columns;;pstring $name;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f28;329;36;329;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f38;329;43;329;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="rememberToken;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;835;5;838;;;;vpos;;v;;r&#xA;Definition&#xA;    rememberToken()&#xA;&#xA;Description&#xA;     Adds the `remember_token` column to the table.;;d4,836;;b1,0;;m">
				</treenode>
				<treenode node="removeColumn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;923;5;930;;;;vpos;;v;;r&#xA;Definition&#xA;    removeColumn($name)&#xA;&#xA;Description&#xA;     Remove a column from the schema blueprint.&#xA;&#xA;Parameters:&#xA;    string $name;;d4,924;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f33;923;38;923;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="rename;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;317;5;320;;;;vpos;;v;;r&#xA;Definition&#xA;    rename($to)&#xA;&#xA;Description&#xA;     Rename the table to a given name.&#xA;&#xA;Parameters:&#xA;    string $to;;d4,318;;b1,0;;mstring $to;;p">
					<treenode node="to;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f27;317;30;317;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="renameColumn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;222;5;225;;;;vpos;;v;;r&#xA;Definition&#xA;    renameColumn($from, $to)&#xA;&#xA;Description&#xA;     Indicate that the given columns should be renamed.&#xA;&#xA;Parameters:&#xA;    string $from&#xA;    string $to;;d4,223;;b1,0;;mstring $from;;pstring $to;;p">
					<treenode node="from;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f33;222;38;222;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="to;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f40;222;43;222;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="smallIncrements;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;387;5;390;;;;vpos;;v;;r&#xA;Definition&#xA;    smallIncrements($column)&#xA;&#xA;Description&#xA;     Create a new auto-incrementing small integer (2-byte) column on the table.&#xA;&#xA;Parameters:&#xA;    string $column;;d4,388;;b1,0;;mstring $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f36;387;43;387;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="smallInteger;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;505;5;508;;;;vpos;;v;;r&#xA;Definition&#xA;    smallInteger($column, $autoIncrement = false, $unsigned = false)&#xA;&#xA;Description&#xA;     Create a new small integer (2-byte) column on the table.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    bool $autoIncrement&#xA;    bool $unsigned;;d4,506;;b1,0;;mstring $column;;pbool $autoIncrement;;pbool $unsigned;;p">
					<treenode node="autoIncrement;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f42;505;56;505;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f33;505;40;505;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="unsigned;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f66;505;75;505;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="softDeletes;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;798;5;801;;;;vpos;;v;;r&#xA;Definition&#xA;    softDeletes()&#xA;&#xA;Description&#xA;     Add a &quot;deleted at&quot; timestamp for the table.;;d4,799;;b1,0;;m">
				</treenode>
				<treenode node="text;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;444;5;447;;;;vpos;;v;;r&#xA;Definition&#xA;    text($column)&#xA;&#xA;Description&#xA;     Create a new text column on the table.&#xA;&#xA;Parameters:&#xA;    string $column;;d4,445;;b1,0;;mstring $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f25;444;32;444;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="time;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;719;5;722;;;;vpos;;v;;r&#xA;Definition&#xA;    time($column)&#xA;&#xA;Description&#xA;     Create a new time column on the table.&#xA;&#xA;Parameters:&#xA;    string $column;;d4,720;;b1,0;;mstring $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f25;719;32;719;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="timestamp;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;741;5;744;;;;vpos;;v;;r&#xA;Definition&#xA;    timestamp($column)&#xA;&#xA;Description&#xA;     Create a new timestamp column on the table.&#xA;&#xA;Parameters:&#xA;    string $column;;d4,742;;b1,0;;mstring $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f30;741;37;741;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="timestamps;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;774;5;779;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    timestamps()&#xA;&#xA;Description&#xA;     Add creation and update timestamps to the table.;;d4,775;;b1,0;;m">
				</treenode>
				<treenode node="timestampsTz;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;786;5;791;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    timestampsTz()&#xA;&#xA;Description&#xA;     Add creation and update timestampTz columns to the table.;;d4,787;;b1,0;;m">
				</treenode>
				<treenode node="timestampTz;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;752;5;755;;;;vpos;;v;;r&#xA;Definition&#xA;    timestampTz($column)&#xA;&#xA;Description&#xA;     Create a new timestamp (with time zone) column on the table.&#xA;&#xA;Parameters:&#xA;    string $column;;d4,753;;b1,0;;mstring $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f32;752;39;752;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="timeTz;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;730;5;733;;;;vpos;;v;;r&#xA;Definition&#xA;    timeTz($column)&#xA;&#xA;Description&#xA;     Create a new time column (with time zone) on the table.&#xA;&#xA;Parameters:&#xA;    string $column;;d4,731;;b1,0;;mstring $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f27;730;34;730;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="tinyInteger;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;492;5;495;;;;vpos;;v;;r&#xA;Definition&#xA;    tinyInteger($column, $autoIncrement = false, $unsigned = false)&#xA;&#xA;Description&#xA;     Create a new tiny integer (1-byte) column on the table.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    bool $autoIncrement&#xA;    bool $unsigned;;d4,493;;b1,0;;mstring $column;;pbool $autoIncrement;;pbool $unsigned;;p">
					<treenode node="autoIncrement;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f41;492;55;492;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f32;492;39;492;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="unsigned;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f65;492;74;492;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="toSql;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;86;5;106;;;;vpos;;varray;;r&#xA;Definition&#xA;    toSql(Connection $connection, Grammar $grammar)&#xA;&#xA;Description&#xA;     Get the raw SQL statements for the blueprint.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Connection $connection&#xA;    \Illuminate\Database\Schema\Grammars\Grammar $grammar;;d4,87;;b1,0;;m\Illuminate\Database\Connection $connection;;p\Illuminate\Database\Schema\Grammars\Grammar $grammar;;p">
					<treenode node="connection;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f37;86;48;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="grammar;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f58;86;66;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="unique;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;341;5;344;;;;vpos;;v;;r&#xA;Definition&#xA;    unique($columns, $name = null)&#xA;&#xA;Description&#xA;     Specify a unique index for the table.&#xA;&#xA;Parameters:&#xA;    string|array $columns&#xA;    string $name;;d4,342;;b1,0;;mstring|array $columns;;pstring $name;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f27;341;35;341;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f37;341;42;341;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="unsignedBigInteger;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;591;5;594;;;;vpos;;v;;r&#xA;Definition&#xA;    unsignedBigInteger($column, $autoIncrement = false)&#xA;&#xA;Description&#xA;     Create a new unsigned big integer (8-byte) column on the table.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    bool $autoIncrement;;d4,592;;b1,0;;mstring $column;;pbool $autoIncrement;;p">
					<treenode node="autoIncrement;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f48;591;62;591;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f39;591;46;591;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="unsignedInteger;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;579;5;582;;;;vpos;;v;;r&#xA;Definition&#xA;    unsignedInteger($column, $autoIncrement = false)&#xA;&#xA;Description&#xA;     Create a new unsigned integer (4-byte) column on the table.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    bool $autoIncrement;;d4,580;;b1,0;;mstring $column;;pbool $autoIncrement;;p">
					<treenode node="autoIncrement;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f45;579;59;579;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f36;579;43;579;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="unsignedMediumInteger;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;567;5;570;;;;vpos;;v;;r&#xA;Definition&#xA;    unsignedMediumInteger($column, $autoIncrement = false)&#xA;&#xA;Description&#xA;     Create a new unsigned medium integer (3-byte) column on the table.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    bool $autoIncrement;;d4,568;;b1,0;;mstring $column;;pbool $autoIncrement;;p">
					<treenode node="autoIncrement;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f51;567;65;567;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f42;567;49;567;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="unsignedSmallInteger;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;555;5;558;;;;vpos;;v;;r&#xA;Definition&#xA;    unsignedSmallInteger($column, $autoIncrement = false)&#xA;&#xA;Description&#xA;     Create a new unsigned small integer (2-byte) column on the table.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    bool $autoIncrement;;d4,556;;b1,0;;mstring $column;;pbool $autoIncrement;;p">
					<treenode node="autoIncrement;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f50;555;64;555;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f41;555;48;555;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="unsignedTinyInteger;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;543;5;546;;;;vpos;;v;;r&#xA;Definition&#xA;    unsignedTinyInteger($column, $autoIncrement = false)&#xA;&#xA;Description&#xA;     Create a new unsigned small integer (2-byte) column on the table.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    bool $autoIncrement;;d4,544;;b1,0;;mstring $column;;pbool $autoIncrement;;p">
					<treenode node="autoIncrement;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f49;543;63;543;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f40;543;47;543;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="charset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;42;19;42;;;;vpos;;v;;r&#xA;Description&#xA;     The default character set that should be used for the table.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="collation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;47;21;47;;;;vpos;;v;;r&#xA;Description&#xA;     The collation that should be used for the table.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f25;421;32;421;;;;vpos;;v;;r&#xA;Description&#xA;     Create a new char column on the table.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    int $length;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f14;23;22;23;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="commands;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f14;30;23;30;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="engine;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f11;37;18;37;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f34;421;41;421;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="places;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f47;604;54;604;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f14;16;20;16;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f15;423;20;423;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="total;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php;f35;604;41;604;;;;vpos;;v;;r&#xA;Description&#xA;     Create a new float column on the table.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    int $total&#xA;    int $places;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="Builder;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f0;7;1;242;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f0;17;1;2004;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f0;13;1;953;;;;vpos;;v;;r;;d0,8;;b0,0;;m">
				<treenode node="__call;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1994;5;2003;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;929;5;942;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    __call($method, $parameters)&#xA;&#xA;Description&#xA;     Handle dynamic method calls into the method.&#xA;&#xA;Parameters:&#xA;    string $method&#xA;    array $parameters;;d4,1995;;b1,0;;mstring $method;;parray $parameters;;p">
					<treenode node="method;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f27;1994;34;1994;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f27;929;34;929;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f36;1994;47;1994;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f36;929;47;929;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__clone;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;949;5;952;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __clone()&#xA;&#xA;Description&#xA;     Force a clone of the underlying query builder when cloning.;;d4,950;;b1,0;;m">
				</treenode>
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f11;36;5;40;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;201;5;208;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;66;5;69;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct(Connection $connection)&#xA;&#xA;Description&#xA;     Create a new database Schema manager.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Connection $connection;;d4,37;;b1,0;;m\Illuminate\Database\Connection $connection;;p">
					<treenode node="connection;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f43;36;54;36;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f52;201;63;201;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="grammar;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f40;202;48;202;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="processor;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f42;203;52;203;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f45;66;51;66;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addBinding;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1915;5;1928;;;;vpos;;v;;r&#xA;Definition&#xA;    addBinding($value, $type = 'where')&#xA;&#xA;Description&#xA;     Add a binding to the query.&#xA;&#xA;Parameters:&#xA;    mixed $value&#xA;    string $type;;d4,1916;;b1,0;;mmixed $value;;pstring $type;;p">
					<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f39;1915;44;1915;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f31;1915;37;1915;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addDateBasedWhere;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f14;945;5;952;;;;vpos;;v;;r&#xA;Definition&#xA;    addDateBasedWhere($type, $column, $operator, $value, $boolean = 'and')&#xA;&#xA;Description&#xA;     Add a date based (year, month, day) statement to the query.&#xA;&#xA;Parameters:&#xA;    string $type&#xA;    string $column&#xA;    string $operator&#xA;    int $value&#xA;    string $boolean;;d4,946;;b2,0;;mstring $type;;pstring $column;;pstring $operator;;pint $value;;pstring $boolean;;p">
					<treenode node="boolean;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f76;945;84;945;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f48;945;55;945;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="operator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f57;945;66;945;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f41;945;46;945;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f68;945;74;945;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addDynamic;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f14;1004;5;1012;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    addDynamic($segment, $connector, $parameters, $index)&#xA;&#xA;Description&#xA;     Add a single dynamic where clause statement to the query.&#xA;&#xA;Parameters:&#xA;    string $segment&#xA;    string $connector&#xA;    array $parameters&#xA;    int $index;;d4,1005;;b2,0;;mstring $segment;;pstring $connector;;parray $parameters;;pint $index;;p">
					<treenode node="connector;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f44;1004;54;1004;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="index;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f69;1004;75;1004;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f56;1004;67;1004;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="segment;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f34;1004;42;1004;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addHasWhere;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f14;692;5;701;;;;vpos;;v;;r&#xA;Definition&#xA;    addHasWhere(Builder $hasQuery, Relation $relation, $operator, $count, $boolean)&#xA;&#xA;Description&#xA;     Add the &quot;has&quot; condition where clause to the query.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $hasQuery&#xA;    \Illuminate\Database\Eloquent\Relations\Relation $relation&#xA;    string $operator&#xA;    int $count&#xA;    string $boolean;;d4,693;;b2,0;;m\Illuminate\Database\Eloquent\Builder $hasQuery;;p\Illuminate\Database\Eloquent\Relations\Relation $relation;;pstring $operator;;pint $count;;pstring $boolean;;p">
					<treenode node="boolean;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f93;692;101;692;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="count;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f85;692;91;692;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="hasQuery;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f43;692;52;692;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="operator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f74;692;83;692;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f63;692;72;692;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addNestedWhereQuery;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;634;5;645;;;;vpos;;v;;r&#xA;Definition&#xA;    addNestedWhereQuery($query, $boolean = 'and')&#xA;&#xA;Description&#xA;     Add another query builder as a nested where to the query builder.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder|static $query&#xA;    string $boolean;;d4,635;;b1,0;;m\Illuminate\Database\Query\Builder|static $query;;pstring $boolean;;p">
					<treenode node="boolean;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f48;634;56;634;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f40;634;46;634;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addSelect;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;275;5;282;;;;vpos;;v;;r&#xA;Definition&#xA;    addSelect($column)&#xA;&#xA;Description&#xA;     Add a new select column to the query.&#xA;&#xA;Parameters:&#xA;    mixed $column;;d4,276;;b1,0;;mmixed $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f30;275;37;275;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addUpdatedAtColumn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f14;351;5;360;;;;vpos;;varray;;r&#xA;Definition&#xA;    addUpdatedAtColumn(array $values)&#xA;&#xA;Description&#xA;     Add the &quot;updated at&quot; column to an array of values.&#xA;&#xA;Parameters:&#xA;    array $values;;d4,352;;b2,0;;marray $values;;p">
					<treenode node="values;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f48;351;55;351;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="aggregate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1640;5;1669;;;;vpos;;vfloat;;r&#xA;Definition&#xA;    aggregate($function, $columns = ['*'])&#xA;&#xA;Description&#xA;     Execute an aggregate function on the database.&#xA;&#xA;Parameters:&#xA;    string $function&#xA;    array $columns&#xA;&#xA;Return:&#xA;   |int;;d4,1641;;b1,0;;mstring $function;;parray $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f41;1640;49;1640;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="function;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f30;1640;39;1640;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="avg;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1628;5;1631;;;;vpos;;vfloat;;r&#xA;Definition&#xA;    avg($column)&#xA;&#xA;Description&#xA;     Retrieve the average of the values of a given column.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;&#xA;Return:&#xA;   |int;;d4,1629;;b1,0;;mstring $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f24;1628;31;1628;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="backupFieldsForCount;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f14;1455;5;1462;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    backupFieldsForCount()&#xA;&#xA;Description&#xA;     Backup some fields for the pagination count.;;d4,1456;;b2,0;;m">
				</treenode>
				<treenode node="blueprintResolver;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f11;238;5;241;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    blueprintResolver(Closure $resolver)&#xA;&#xA;Description&#xA;     Set the Schema Blueprint resolver callback.&#xA;&#xA;Parameters:&#xA;    \Closure $resolver;;d4,239;;b1,0;;m\Closure $resolver;;p">
					<treenode node="resolver;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f46;238;55;238;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="build;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f14;188;5;191;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    build(Blueprint $blueprint)&#xA;&#xA;Description&#xA;     Execute the blueprint to build / modify the table.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint;;d4,189;;b2,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f39;188;49;188;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="callScope;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f14;821;5;826;;;;vpos;;v;;r&#xA;Definition&#xA;    callScope($scope, $parameters)&#xA;&#xA;Description&#xA;     Call the given model scope on the underlying model.&#xA;&#xA;Parameters:&#xA;    string $scope&#xA;    array $parameters;;d4,822;;b2,0;;mstring $scope;;parray $parameters;;p">
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f41;821;52;821;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="scope;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f33;821;39;821;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="chunk;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1485;5;1501;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;216;5;232;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    chunk($count, callable $callback)&#xA;&#xA;Description&#xA;     Chunk the results of the query.&#xA;&#xA;Parameters:&#xA;    int $count&#xA;    callable $callback;;d4,1486;;b1,0;;mint $count;;pcallable $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f43;1485;52;1485;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f43;216;52;216;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="count;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f26;1485;32;1485;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f26;216;32;216;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="cleanBindings;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f14;1848;5;1853;;;;vpos;;varray;;r&#xA;Definition&#xA;    cleanBindings(array $bindings)&#xA;&#xA;Description&#xA;     Remove all of the expressions from a list of bindings.&#xA;&#xA;Parameters:&#xA;    array $bindings;;d4,1849;;b2,0;;marray $bindings;;p">
					<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f43;1848;52;1848;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="count;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1578;5;1585;;;;vpos;;vint;;r&#xA;Definition&#xA;    count($columns = '*')&#xA;&#xA;Description&#xA;     Retrieve the &quot;count&quot; result of the query.&#xA;&#xA;Parameters:&#xA;    string $columns;;d4,1579;;b1,0;;mstring $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f26;1578;34;1578;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="create;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f11;125;5;134;;;;vpos;;v;;r&#xA;Definition&#xA;    create($table, Closure $callback)&#xA;&#xA;Description&#xA;     Create a new table on the schema.&#xA;&#xA;Parameters:&#xA;    string $table&#xA;    \Closure $callback;;d4,126;;b1,0;;mstring $table;;p\Closure $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f43;125;52;125;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f27;125;33;125;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="createBlueprint;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f14;200;5;207;;;;vpos;;v;;r&#xA;Definition&#xA;    createBlueprint($table, Closure $callback = null)&#xA;&#xA;Description&#xA;     Create a new command set with a Closure.&#xA;&#xA;Parameters:&#xA;    string $table&#xA;    \Closure|null $callback;;d4,201;;b2,0;;mstring $table;;p\Closure|null $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f55;200;64;200;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f39;200;45;200;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="decrement;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1777;5;1784;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;338;5;343;;;;vpos;;vint;;r&#xA;Definition&#xA;    decrement($column, $amount = 1, array $extra = [])&#xA;&#xA;Description&#xA;     Decrement a column's value by a given amount.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    int $amount&#xA;    array $extra;;d4,1778;;b1,0;;mstring $column;;pint $amount;;parray $extra;;p">
					<treenode node="amount;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f39;1777;46;1777;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f39;338;46;338;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f30;1777;37;1777;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f30;338;37;338;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="extra;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f58;1777;64;1777;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f58;338;64;338;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="delete;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1792;5;1804;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;367;5;374;;;;vpos;;vint;;r&#xA;Definition&#xA;    delete($id = null)&#xA;&#xA;Description&#xA;     Delete a record from the database.&#xA;&#xA;Parameters:&#xA;    mixed $id;;d4,1793;;b1,0;;mmixed $id;;p">
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f27;1792;30;1792;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="distinct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;289;5;294;;;;vpos;;v;;r&#xA;Definition&#xA;    distinct()&#xA;&#xA;Description&#xA;     Force the query to only return distinct results.;;d4,290;;b1,0;;m">
				</treenode>
				<treenode node="doesntHave;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;624;5;627;;;;vpos;;v;;r&#xA;Definition&#xA;    doesntHave($relation, $boolean = 'and', Closure $callback = null)&#xA;&#xA;Description&#xA;     Add a relationship count condition to the query.&#xA;&#xA;Parameters:&#xA;    string $relation&#xA;    string $boolean&#xA;    \Closure|null $callback;;d4,625;;b1,0;;mstring $relation;;pstring $boolean;;p\Closure|null $callback;;p">
					<treenode node="boolean;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f42;624;50;624;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f68;624;77;624;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f31;624;40;624;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="drop;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f11;142;5;149;;;;vpos;;v;;r&#xA;Definition&#xA;    drop($table)&#xA;&#xA;Description&#xA;     Drop a table from the schema.&#xA;&#xA;Parameters:&#xA;    string $table;;d4,143;;b1,0;;mstring $table;;p">
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f25;142;31;142;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dropIfExists;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f11;157;5;164;;;;vpos;;v;;r&#xA;Definition&#xA;    dropIfExists($table)&#xA;&#xA;Description&#xA;     Drop a table from the schema if it exists.&#xA;&#xA;Parameters:&#xA;    string $table;;d4,158;;b1,0;;mstring $table;;p">
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f33;157;39;157;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dynamicWhere;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;961;5;993;;;;vpos;;v;;r&#xA;Definition&#xA;    dynamicWhere($method, $parameters)&#xA;&#xA;Description&#xA;     Handles dynamic &quot;where&quot; clauses to the query.&#xA;&#xA;Parameters:&#xA;    string $method&#xA;    string $parameters;;d4,962;;b1,0;;mstring $method;;pstring $parameters;;p">
					<treenode node="method;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f33;961;40;961;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f42;961;53;961;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="eagerLoadRelations;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;418;5;430;;;;vpos;;varray;;r&#xA;Definition&#xA;    eagerLoadRelations(array $models)&#xA;&#xA;Description&#xA;     Eager load the relationships for the models.&#xA;&#xA;Parameters:&#xA;    array $models;;d4,419;;b1,0;;marray $models;;p">
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f45;418;52;418;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="exists;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1561;5;1570;;;;vpos;;vbool;;r&#xA;Definition&#xA;    exists()&#xA;&#xA;Description&#xA;     Determine if any rows exist for the current query.;;d4,1562;;b1,0;;m">
				</treenode>
				<treenode node="find;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1299;5;1302;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;78;5;87;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    find($id, $columns = ['*'])&#xA;&#xA;Description&#xA;     Execute a query for a single record by ID.&#xA;&#xA;Parameters:&#xA;    int $id&#xA;    array $columns&#xA;&#xA;Return:&#xA;   |static;;d4,1300;;b1,0;;mint $id;;parray $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f30;1299;38;1299;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f30;78;38;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f25;1299;28;1299;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f25;78;28;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="findMany;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;96;5;105;;;;vpos;;v;;r&#xA;Definition&#xA;    findMany($ids, $columns = ['*'])&#xA;&#xA;Description&#xA;     Find a model by its primary key.&#xA;&#xA;Parameters:&#xA;    array $ids&#xA;    array $columns;;d4,97;;b1,0;;marray $ids;;parray $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f35;96;43;96;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="ids;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f29;96;33;96;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="findOrFail;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;116;5;129;;;;vpos;;v;;r&#xA;Definition&#xA;    findOrFail($id, $columns = ['*'])&#xA;&#xA;Description&#xA;     Find a model by its primary key or throw an exception.&#xA;&#xA;Parameters:&#xA;    mixed $id&#xA;    array $columns;;d4,117;;b1,0;;mmixed $id;;parray $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f36;116;44;116;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f31;116;34;116;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="first;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1338;5;1343;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;137;5;140;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    first($columns = ['*'])&#xA;&#xA;Description&#xA;     Execute the query and get the first result.&#xA;&#xA;Parameters:&#xA;    array $columns&#xA;&#xA;Return:&#xA;   |static;;d4,1339;;b1,0;;marray $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f26;1338;34;1338;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f26;137;34;137;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="firstOrFail;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;150;5;157;;;;vpos;;v;;r&#xA;Definition&#xA;    firstOrFail($columns = ['*'])&#xA;&#xA;Description&#xA;     Execute the query and get the first result or throw an exception.&#xA;&#xA;Parameters:&#xA;    array $columns;;d4,151;;b1,0;;marray $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f32;150;40;150;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="forceDelete;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;381;5;384;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    forceDelete()&#xA;&#xA;Description&#xA;     Run the default delete function on the builder.;;d4,382;;b1,0;;m">
				</treenode>
				<treenode node="forPage;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1215;5;1218;;;;vpos;;v;;r&#xA;Definition&#xA;    forPage($page, $perPage = 15)&#xA;&#xA;Description&#xA;     Set the limit and offset for a given page.&#xA;&#xA;Parameters:&#xA;    int $page&#xA;    int $perPage;;d4,1216;;b1,0;;mint $page;;pint $perPage;;p">
					<treenode node="page;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f28;1215;33;1215;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="perPage;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f35;1215;43;1215;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="from;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;302;5;307;;;;vpos;;v;;r&#xA;Definition&#xA;    from($table)&#xA;&#xA;Description&#xA;     Set the table which the query is targeting.&#xA;&#xA;Parameters:&#xA;    string $table;;d4,303;;b1,0;;mstring $table;;p">
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f25;302;31;302;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="get;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1351;5;1354;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;165;5;177;;;;vpos;;varray;;r&#xA;Definition&#xA;    get($columns = ['*'])&#xA;&#xA;Description&#xA;     Execute the query as a &quot;select&quot; statement.&#xA;&#xA;Parameters:&#xA;    array $columns&#xA;&#xA;Return:&#xA;   |static[];;d4,1352;;b1,0;;marray $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f24;1351;32;1351;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f24;165;32;165;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getBindings;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1871;5;1874;;;;vpos;;varray;;r&#xA;Definition&#xA;    getBindings()&#xA;&#xA;Description&#xA;     Get the current query value bindings in a flattened array.;;d4,1872;;b1,0;;m">
				</treenode>
				<treenode node="getColumnListing;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f11;97;5;104;;;;vpos;;varray;;r&#xA;Definition&#xA;    getColumnListing($table)&#xA;&#xA;Description&#xA;     Get the column listing for a given table.&#xA;&#xA;Parameters:&#xA;    string $table;;d4,98;;b1,0;;mstring $table;;p">
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f37;97;43;97;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getConnection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f11;214;5;217;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1948;5;1951;;;;vpos;;v;;r&#xA;Definition&#xA;    getConnection()&#xA;&#xA;Description&#xA;     Get the database connection instance.;;d4,215;;b1,0;;m">
				</treenode>
				<treenode node="getCountForPagination;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1431;5;1448;;;;vpos;;vint;;r&#xA;Definition&#xA;    getCountForPagination($columns = ['*'])&#xA;&#xA;Description&#xA;     Get the count of the total records for the paginator.&#xA;&#xA;Parameters:&#xA;    array $columns;;d4,1432;;b1,0;;marray $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f42;1431;50;1431;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getEagerLoads;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;856;5;859;;;;vpos;;varray;;r&#xA;Definition&#xA;    getEagerLoads()&#xA;&#xA;Description&#xA;     Get the relationships being eagerly loaded.;;d4,857;;b1,0;;m">
				</treenode>
				<treenode node="getFresh;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1362;5;1369;;;;vpos;;varray;;r&#xA;Definition&#xA;    getFresh($columns = ['*'])&#xA;&#xA;Description&#xA;     Execute the query as a fresh &quot;select&quot; statement.&#xA;&#xA;Parameters:&#xA;    array $columns&#xA;&#xA;Return:&#xA;   |static[];;d4,1363;;b1,0;;marray $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f29;1362;37;1362;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getGrammar;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1968;5;1971;;;;vpos;;v;;r&#xA;Definition&#xA;    getGrammar()&#xA;&#xA;Description&#xA;     Get the query grammar instance.;;d4,1969;;b1,0;;m">
				</treenode>
				<treenode node="getHasRelationQuery;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f14;732;5;737;;;;vpos;;v;;r&#xA;Definition&#xA;    getHasRelationQuery($relation)&#xA;&#xA;Description&#xA;     Get the &quot;has relation&quot; base query instance.&#xA;&#xA;Parameters:&#xA;    string $relation;;d4,733;;b2,0;;mstring $relation;;p">
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f43;732;52;732;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getListSelect;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f14;1526;5;1538;;;;vpos;;varray;;r&#xA;Definition&#xA;    getListSelect($column, $key)&#xA;&#xA;Description&#xA;     Get the columns that should be used in a list array.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    string $key;;d4,1527;;b2,0;;mstring $column;;pstring $key;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f37;1526;44;1526;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f46;1526;50;1526;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getMacro;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;917;5;920;;;;vpos;;v;;r&#xA;Definition&#xA;    getMacro($name)&#xA;&#xA;Description&#xA;     Get the given macro by name.&#xA;&#xA;Parameters:&#xA;    string $name;;d4,918;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f29;917;34;917;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getModel;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;879;5;882;;;;vpos;;v;;r&#xA;Definition&#xA;    getModel()&#xA;&#xA;Description&#xA;     Get the model instance being queried.;;d4,880;;b1,0;;m">
				</treenode>
				<treenode node="getModels;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;403;5;410;;;;vpos;;v;;r&#xA;Definition&#xA;    getModels($columns = ['*'])&#xA;&#xA;Description&#xA;     Get the hydrated models without eager loading.&#xA;&#xA;Parameters:&#xA;    array $columns;;d4,404;;b1,0;;marray $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f30;403;38;403;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getProcessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1958;5;1961;;;;vpos;;v;;r&#xA;Definition&#xA;    getProcessor()&#xA;&#xA;Description&#xA;     Get the database query processor instance.;;d4,1959;;b1,0;;m">
				</treenode>
				<treenode node="getQuery;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;833;5;836;;;;vpos;;v;;r&#xA;Definition&#xA;    getQuery()&#xA;&#xA;Description&#xA;     Get the underlying query builder instance.;;d4,834;;b1,0;;m">
				</treenode>
				<treenode node="getRawBindings;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1881;5;1884;;;;vpos;;varray;;r&#xA;Definition&#xA;    getRawBindings()&#xA;&#xA;Description&#xA;     Get the raw array of bindings.;;d4,1882;;b1,0;;m">
				</treenode>
				<treenode node="getRelation;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;467;5;486;;;;vpos;;v;;r&#xA;Definition&#xA;    getRelation($relation)&#xA;&#xA;Description&#xA;     Get the relation instance for the given relation name.&#xA;&#xA;Parameters:&#xA;    string $relation;;d4,468;;b1,0;;mstring $relation;;p">
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f32;467;41;467;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="groupBy;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1020;5;1027;;;;vpos;;v;;r&#xA;Definition&#xA;    groupBy()&#xA;&#xA;Description&#xA;     Add a &quot;group by&quot; clause to the query.&#xA;&#xA;Parameters:&#xA;    array|string $column - ,;;d4,1021;;b1,0;;m">
				</treenode>
				<treenode node="has;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;571;5;586;;;;vpos;;v;;r&#xA;Definition&#xA;    has($relation, $operator = '&gt;=', $count = 1, $boolean = 'and', Closure $callback = null)&#xA;&#xA;Description&#xA;     Add a relationship count condition to the query.&#xA;&#xA;Parameters:&#xA;    string $relation&#xA;    string $operator&#xA;    int $count&#xA;    string $boolean&#xA;    \Closure|null $callback;;d4,572;;b1,0;;mstring $relation;;pstring $operator;;pint $count;;pstring $boolean;;p\Closure|null $callback;;p">
					<treenode node="boolean;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f65;571;73;571;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f91;571;100;571;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="count;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f53;571;59;571;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="operator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f35;571;44;571;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f24;571;33;571;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hasColumn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f11;64;5;69;;;;vpos;;vbool;;r&#xA;Definition&#xA;    hasColumn($table, $column)&#xA;&#xA;Description&#xA;     Determine if the given table has a given column.&#xA;&#xA;Parameters:&#xA;    string $table&#xA;    string $column;;d4,65;;b1,0;;mstring $table;;pstring $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f38;64;45;64;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f30;64;36;64;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hasColumns;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f11;78;5;89;;;;vpos;;vbool;;r&#xA;Definition&#xA;    hasColumns($table, array $columns)&#xA;&#xA;Description&#xA;     Determine if the given table has given columns.&#xA;&#xA;Parameters:&#xA;    string $table&#xA;    array $columns;;d4,79;;b1,0;;mstring $table;;parray $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f45;78;53;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f31;78;37;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hasNested;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f14;598;5;614;;;;vpos;;v;;r&#xA;Definition&#xA;    hasNested($relations, $operator = '&gt;=', $count = 1, $boolean = 'and', $callback = null)&#xA;&#xA;Description&#xA;     Add nested relationship count conditions to the query.&#xA;&#xA;Parameters:&#xA;    string $relations&#xA;    string $operator&#xA;    int $count&#xA;    string $boolean&#xA;    \Closure|null $callback;;d4,599;;b2,0;;mstring $relations;;pstring $operator;;pint $count;;pstring $boolean;;p\Closure|null $callback;;p">
					<treenode node="boolean;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f75;598;83;598;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f93;598;102;598;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="count;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f63;598;69;598;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="operator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f45;598;54;598;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relations;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f33;598;43;598;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hasTable;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f11;48;5;55;;;;vpos;;vbool;;r&#xA;Definition&#xA;    hasTable($table)&#xA;&#xA;Description&#xA;     Determine if the given table exists.&#xA;&#xA;Parameters:&#xA;    string $table;;d4,49;;b1,0;;mstring $table;;p">
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f29;48;35;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="having;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1038;5;1049;;;;vpos;;v;;r&#xA;Definition&#xA;    having($column, $operator = null, $value = null, $boolean = 'and')&#xA;&#xA;Description&#xA;     Add a &quot;having&quot; clause to the query.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    string $operator&#xA;    string $value&#xA;    string $boolean;;d4,1039;;b1,0;;mstring $column;;pstring $operator;;pstring $value;;pstring $boolean;;p">
					<treenode node="boolean;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f69;1038;77;1038;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f27;1038;34;1038;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="operator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f36;1038;45;1038;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f54;1038;60;1038;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="havingRaw;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1072;5;1081;;;;vpos;;v;;r&#xA;Definition&#xA;    havingRaw($sql, array $bindings = [], $boolean = 'and')&#xA;&#xA;Description&#xA;     Add a raw having clause to the query.&#xA;&#xA;Parameters:&#xA;    string $sql&#xA;    array $bindings&#xA;    string $boolean;;d4,1073;;b1,0;;mstring $sql;;parray $bindings;;pstring $boolean;;p">
					<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f42;1072;51;1072;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="boolean;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f58;1072;66;1072;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sql;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f30;1072;34;1072;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="implode;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1547;5;1554;;;;vpos;;vstring;;r&#xA;Definition&#xA;    implode($column, $glue = null)&#xA;&#xA;Description&#xA;     Concatenate values of a given column as a string.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    string $glue;;d4,1548;;b1,0;;mstring $column;;pstring $glue;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f28;1547;35;1547;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="glue;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f37;1547;42;1547;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="increment;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1760;5;1767;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;323;5;328;;;;vpos;;vint;;r&#xA;Definition&#xA;    increment($column, $amount = 1, array $extra = [])&#xA;&#xA;Description&#xA;     Increment a column's value by a given amount.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    int $amount&#xA;    array $extra;;d4,1761;;b1,0;;mstring $column;;pint $amount;;parray $extra;;p">
					<treenode node="amount;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f39;1760;46;1760;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f39;323;46;323;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f30;1760;37;1760;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f30;323;37;323;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="extra;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f58;1760;64;1760;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f58;323;64;323;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="insert;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1677;5;1719;;;;vpos;;vbool;;r&#xA;Definition&#xA;    insert(array $values)&#xA;&#xA;Description&#xA;     Insert a new record into the database.&#xA;&#xA;Parameters:&#xA;    array $values;;d4,1678;;b1,0;;marray $values;;p">
					<treenode node="values;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f33;1677;40;1677;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="insertGetId;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1728;5;1735;;;;vpos;;vint;;r&#xA;Definition&#xA;    insertGetId(array $values, $sequence = null)&#xA;&#xA;Description&#xA;     Insert a new record and get the value of the primary key.&#xA;&#xA;Parameters:&#xA;    array $values&#xA;    string $sequence;;d4,1729;;b1,0;;marray $values;;pstring $sequence;;p">
					<treenode node="sequence;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f47;1728;56;1728;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f38;1728;45;1728;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="invalidOperatorAndValue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f14;511;5;516;;;;vpos;;vbool;;r&#xA;Definition&#xA;    invalidOperatorAndValue($operator, $value)&#xA;&#xA;Description&#xA;     Determine if the given operator and value combination is legal.&#xA;&#xA;Parameters:&#xA;    string $operator&#xA;    mixed $value;;d4,512;;b2,0;;mstring $operator;;pmixed $value;;p">
					<treenode node="operator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f47;511;56;511;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f58;511;64;511;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isNested;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f14;517;5;522;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isNested($name, $relation)&#xA;&#xA;Description&#xA;     Determine if the relationship is nested.&#xA;&#xA;Parameters:&#xA;    string $name&#xA;    string $relation;;d4,518;;b2,0;;mstring $name;;pstring $relation;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f32;517;37;517;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f39;517;48;517;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="join;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;320;5;343;;;;vpos;;v;;r&#xA;Definition&#xA;    join($table, $one, $operator = null, $two = null, $type = 'inner', $where = false)&#xA;&#xA;Description&#xA;     Add a join clause to the query.&#xA;&#xA;Parameters:&#xA;    string $table&#xA;    string $one&#xA;    string $operator&#xA;    string $two&#xA;    string $type&#xA;    bool $where;;d4,321;;b1,0;;mstring $table;;pstring $one;;pstring $operator;;pstring $two;;pstring $type;;pbool $where;;p">
					<treenode node="one;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f33;320;37;320;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="operator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f39;320;48;320;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f25;320;31;320;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="two;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f57;320;61;320;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f70;320;75;320;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="where;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f87;320;93;320;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="joinWhere;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;355;5;358;;;;vpos;;v;;r&#xA;Definition&#xA;    joinWhere($table, $one, $operator, $two, $type = 'inner')&#xA;&#xA;Description&#xA;     Add a &quot;join where&quot; clause to the query.&#xA;&#xA;Parameters:&#xA;    string $table&#xA;    string $one&#xA;    string $operator&#xA;    string $two&#xA;    string $type;;d4,356;;b1,0;;mstring $table;;pstring $one;;pstring $operator;;pstring $two;;pstring $type;;p">
					<treenode node="one;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f38;355;42;355;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="operator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f44;355;53;355;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f30;355;36;355;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="two;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f55;355;59;355;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f61;355;66;355;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="latest;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1118;5;1121;;;;vpos;;v;;r&#xA;Definition&#xA;    latest($column = 'created_at')&#xA;&#xA;Description&#xA;     Add an &quot;order by&quot; clause for a timestamp to the query.&#xA;&#xA;Parameters:&#xA;    string $column;;d4,1119;;b1,0;;mstring $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f27;1118;34;1118;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="leftJoin;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;369;5;372;;;;vpos;;v;;r&#xA;Definition&#xA;    leftJoin($table, $first, $operator = null, $second = null)&#xA;&#xA;Description&#xA;     Add a left join to the query.&#xA;&#xA;Parameters:&#xA;    string $table&#xA;    string $first&#xA;    string $operator&#xA;    string $second;;d4,370;;b1,0;;mstring $table;;pstring $first;;pstring $operator;;pstring $second;;p">
					<treenode node="first;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f37;369;43;369;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="operator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f45;369;54;369;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="second;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f63;369;70;369;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f29;369;35;369;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="leftJoinWhere;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;383;5;386;;;;vpos;;v;;r&#xA;Definition&#xA;    leftJoinWhere($table, $one, $operator, $two)&#xA;&#xA;Description&#xA;     Add a &quot;join where&quot; clause to the query.&#xA;&#xA;Parameters:&#xA;    string $table&#xA;    string $one&#xA;    string $operator&#xA;    string $two;;d4,384;;b1,0;;mstring $table;;pstring $one;;pstring $operator;;pstring $two;;p">
					<treenode node="one;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f42;383;46;383;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="operator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f48;383;57;383;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f34;383;40;383;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="two;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f59;383;63;383;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="limit;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1186;5;1195;;;;vpos;;v;;r&#xA;Definition&#xA;    limit($value)&#xA;&#xA;Description&#xA;     Set the &quot;limit&quot; value of the query.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,1187;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f26;1186;32;1186;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="lists;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1510;5;1517;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;241;5;257;;;;vpos;;varray;;r&#xA;Definition&#xA;    lists($column, $key = null)&#xA;&#xA;Description&#xA;     Get an array with the values of a given column.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    string $key;;d4,1511;;b1,0;;mstring $column;;pstring $key;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f26;1510;33;1510;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f26;241;33;241;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f35;1510;39;1510;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f35;241;39;241;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="loadRelation;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f14;440;5;459;;;;vpos;;varray;;r&#xA;Definition&#xA;    loadRelation(array $models, $name, Closure $constraints)&#xA;&#xA;Description&#xA;     Eagerly load the relationship on a set of models.&#xA;&#xA;Parameters:&#xA;    array $models&#xA;    string $name&#xA;    \Closure $constraints;;d4,441;;b2,0;;marray $models;;pstring $name;;p\Closure $constraints;;p">
					<treenode node="constraints;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f66;440;78;440;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f42;440;49;440;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f51;440;56;440;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="lock;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1255;5;1260;;;;vpos;;v;;r&#xA;Definition&#xA;    lock($value = true)&#xA;&#xA;Description&#xA;     Lock the selected rows in the table.&#xA;&#xA;Parameters:&#xA;    bool $value;;d4,1256;;b1,0;;mbool $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f25;1255;31;1255;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="lockForUpdate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1267;5;1270;;;;vpos;;v;;r&#xA;Definition&#xA;    lockForUpdate()&#xA;&#xA;Description&#xA;     Lock the selected rows in the table for updating.;;d4,1268;;b1,0;;m">
				</treenode>
				<treenode node="macro;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;906;5;909;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    macro($name, Closure $callback)&#xA;&#xA;Description&#xA;     Extend the builder with a given callback.&#xA;&#xA;Parameters:&#xA;    string $name&#xA;    \Closure $callback;;d4,907;;b1,0;;mstring $name;;p\Closure $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f41;906;50;906;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f26;906;31;906;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="max;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1604;5;1607;;;;vpos;;vfloat;;r&#xA;Definition&#xA;    max($column)&#xA;&#xA;Description&#xA;     Retrieve the maximum value of a given column.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;&#xA;Return:&#xA;   |int;;d4,1605;;b1,0;;mstring $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f24;1604;31;1604;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mergeBindings;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1936;5;1941;;;;vpos;;v;;r&#xA;Definition&#xA;    mergeBindings(Builder $query)&#xA;&#xA;Description&#xA;     Merge an array of bindings into our bindings.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query;;d4,1937;;b1,0;;m\Illuminate\Database\Query\Builder $query;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f42;1936;48;1936;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mergeWheres;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1835;5;1840;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    mergeWheres($wheres, $bindings)&#xA;&#xA;Description&#xA;     Merge an array of where clauses and bindings.&#xA;&#xA;Parameters:&#xA;    array $wheres&#xA;    array $bindings;;d4,1836;;b1,0;;marray $wheres;;parray $bindings;;p">
					<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f41;1835;50;1835;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="wheres;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f32;1835;39;1835;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mergeWheresToHas;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f14;710;5;724;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    mergeWheresToHas(Builder $hasQuery, Relation $relation)&#xA;&#xA;Description&#xA;     Merge the &quot;wheres&quot; from a relation query to a has query.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $hasQuery&#xA;    \Illuminate\Database\Eloquent\Relations\Relation $relation;;d4,711;;b2,0;;m\Illuminate\Database\Eloquent\Builder $hasQuery;;p\Illuminate\Database\Eloquent\Relations\Relation $relation;;p">
					<treenode node="hasQuery;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f48;710;57;710;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f68;710;77;710;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="min;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1593;5;1596;;;;vpos;;vfloat;;r&#xA;Definition&#xA;    min($column)&#xA;&#xA;Description&#xA;     Retrieve the minimum value of a given column.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;&#xA;Return:&#xA;   |int;;d4,1594;;b1,0;;mstring $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f24;1593;31;1593;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="nestedRelations;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f14;494;5;508;;;;vpos;;varray;;r&#xA;Definition&#xA;    nestedRelations($relation)&#xA;&#xA;Description&#xA;     Get the deeply nested relations for a given top-level relation.&#xA;&#xA;Parameters:&#xA;    string $relation;;d4,495;;b2,0;;mstring $relation;;p">
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f39;494;48;494;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="newQuery;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1823;5;1826;;;;vpos;;v;;r&#xA;Definition&#xA;    newQuery()&#xA;&#xA;Description&#xA;     Get a new instance of the query builder.;;d4,1824;;b1,0;;m">
				</treenode>
				<treenode node="offset;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1160;5;1167;;;;vpos;;v;;r&#xA;Definition&#xA;    offset($value)&#xA;&#xA;Description&#xA;     Set the &quot;offset&quot; value of the query.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,1161;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f27;1160;33;1160;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="oldest;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1129;5;1132;;;;vpos;;v;;r&#xA;Definition&#xA;    oldest($column = 'created_at')&#xA;&#xA;Description&#xA;     Add an &quot;order by&quot; clause for a timestamp to the query.&#xA;&#xA;Parameters:&#xA;    string $column;;d4,1130;;b1,0;;mstring $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f27;1129;34;1129;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="onDelete;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;392;5;395;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    onDelete(Closure $callback)&#xA;&#xA;Description&#xA;     Register a replacement for the default delete function.&#xA;&#xA;Parameters:&#xA;    \Closure $callback;;d4,393;;b1,0;;m\Closure $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f37;392;46;392;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="orderBy;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1102;5;1110;;;;vpos;;v;;r&#xA;Definition&#xA;    orderBy($column, $direction = 'asc')&#xA;&#xA;Description&#xA;     Add an &quot;order by&quot; clause to the query.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    string $direction;;d4,1103;;b1,0;;mstring $column;;pstring $direction;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f28;1102;35;1102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="direction;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f37;1102;47;1102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="orderByRaw;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1141;5;1152;;;;vpos;;v;;r&#xA;Definition&#xA;    orderByRaw($sql, $bindings = [])&#xA;&#xA;Description&#xA;     Add a raw &quot;order by&quot; clause to the query.&#xA;&#xA;Parameters:&#xA;    string $sql&#xA;    array $bindings;;d4,1142;;b1,0;;mstring $sql;;parray $bindings;;p">
					<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f37;1141;46;1141;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sql;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f31;1141;35;1141;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="orHas;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;663;5;666;;;;vpos;;v;;r&#xA;Definition&#xA;    orHas($relation, $operator = '&gt;=', $count = 1)&#xA;&#xA;Description&#xA;     Add a relationship count condition to the query with an &quot;or&quot;.&#xA;&#xA;Parameters:&#xA;    string $relation&#xA;    string $operator&#xA;    int $count;;d4,664;;b1,0;;mstring $relation;;pstring $operator;;pint $count;;p">
					<treenode node="count;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f55;663;61;663;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="operator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f37;663;46;663;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f26;663;35;663;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="orHaving;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1059;5;1062;;;;vpos;;v;;r&#xA;Definition&#xA;    orHaving($column, $operator = null, $value = null)&#xA;&#xA;Description&#xA;     Add a &quot;or having&quot; clause to the query.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    string $operator&#xA;    string $value;;d4,1060;;b1,0;;mstring $column;;pstring $operator;;pstring $value;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f29;1059;36;1059;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="operator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f38;1059;47;1059;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f56;1059;62;1059;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="orHavingRaw;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1090;5;1093;;;;vpos;;v;;r&#xA;Definition&#xA;    orHavingRaw($sql, array $bindings = [])&#xA;&#xA;Description&#xA;     Add a raw or having clause to the query.&#xA;&#xA;Parameters:&#xA;    string $sql&#xA;    array $bindings;;d4,1091;;b1,0;;mstring $sql;;parray $bindings;;p">
					<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f44;1090;53;1090;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sql;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f32;1090;36;1090;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="orWhere;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;499;5;502;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;556;5;559;;;;vpos;;v;;r&#xA;Definition&#xA;    orWhere($column, $operator = null, $value = null)&#xA;&#xA;Description&#xA;     Add an &quot;or where&quot; clause to the query.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    string $operator&#xA;    mixed $value;;d4,500;;b1,0;;mstring $column;;pstring $operator;;pmixed $value;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f28;499;35;499;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f28;556;35;556;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="operator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f37;499;46;499;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f37;556;46;556;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f55;499;61;499;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f55;556;61;556;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="orWhereBetween;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;576;5;579;;;;vpos;;v;;r&#xA;Definition&#xA;    orWhereBetween($column, array $values)&#xA;&#xA;Description&#xA;     Add an or where between statement to the query.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    array $values;;d4,577;;b1,0;;mstring $column;;parray $values;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f35;576;42;576;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f50;576;57;576;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="orWhereExists;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;707;5;710;;;;vpos;;v;;r&#xA;Definition&#xA;    orWhereExists(Closure $callback, $not = false)&#xA;&#xA;Description&#xA;     Add an or exists clause to the query.&#xA;&#xA;Parameters:&#xA;    \Closure $callback&#xA;    bool $not;;d4,708;;b1,0;;m\Closure $callback;;pbool $not;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f42;707;51;707;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="not;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f53;707;57;707;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="orWhereHas;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;677;5;680;;;;vpos;;v;;r&#xA;Definition&#xA;    orWhereHas($relation, Closure $callback, $operator = '&gt;=', $count = 1)&#xA;&#xA;Description&#xA;     Add a relationship count condition to the query with where clauses and an &quot;or&quot;.&#xA;&#xA;Parameters:&#xA;    string $relation&#xA;    \Closure $callback&#xA;    string $operator&#xA;    int $count;;d4,678;;b1,0;;mstring $relation;;p\Closure $callback;;pstring $operator;;pint $count;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f50;677;59;677;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="count;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f79;677;85;677;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="operator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f61;677;70;677;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f31;677;40;677;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="orWhereIn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;773;5;776;;;;vpos;;v;;r&#xA;Definition&#xA;    orWhereIn($column, $values)&#xA;&#xA;Description&#xA;     Add an &quot;or where in&quot; clause to the query.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    mixed $values;;d4,774;;b1,0;;mstring $column;;pmixed $values;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f30;773;37;773;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f39;773;46;773;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="orWhereNotBetween;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;601;5;604;;;;vpos;;v;;r&#xA;Definition&#xA;    orWhereNotBetween($column, array $values)&#xA;&#xA;Description&#xA;     Add an or where not between statement to the query.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    array $values;;d4,602;;b1,0;;mstring $column;;parray $values;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f38;601;45;601;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f53;601;60;601;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="orWhereNotExists;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;730;5;733;;;;vpos;;v;;r&#xA;Definition&#xA;    orWhereNotExists(Closure $callback)&#xA;&#xA;Description&#xA;     Add a where not exists clause to the query.&#xA;&#xA;Parameters:&#xA;    \Closure $callback;;d4,731;;b1,0;;m\Closure $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f45;730;54;730;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="orWhereNotIn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;798;5;801;;;;vpos;;v;;r&#xA;Definition&#xA;    orWhereNotIn($column, $values)&#xA;&#xA;Description&#xA;     Add an &quot;or where not in&quot; clause to the query.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    mixed $values;;d4,799;;b1,0;;mstring $column;;pmixed $values;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f33;798;40;798;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f42;798;49;798;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="orWhereNotNull;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;874;5;877;;;;vpos;;v;;r&#xA;Definition&#xA;    orWhereNotNull($column)&#xA;&#xA;Description&#xA;     Add an &quot;or where not null&quot; clause to the query.&#xA;&#xA;Parameters:&#xA;    string $column;;d4,875;;b1,0;;mstring $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f35;874;42;874;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="orWhereNull;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;851;5;854;;;;vpos;;v;;r&#xA;Definition&#xA;    orWhereNull($column)&#xA;&#xA;Description&#xA;     Add an &quot;or where null&quot; clause to the query.&#xA;&#xA;Parameters:&#xA;    string $column;;d4,852;;b1,0;;mstring $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f32;851;39;851;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="orWhereRaw;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;544;5;547;;;;vpos;;v;;r&#xA;Definition&#xA;    orWhereRaw($sql, array $bindings = [])&#xA;&#xA;Description&#xA;     Add a raw or where clause to the query.&#xA;&#xA;Parameters:&#xA;    string $sql&#xA;    array $bindings;;d4,545;;b1,0;;mstring $sql;;parray $bindings;;p">
					<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f43;544;52;544;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sql;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f31;544;35;544;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="paginate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1389;5;1401;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;267;5;280;;;;vpos;;v;;r&#xA;Definition&#xA;    paginate($perPage = 15, $columns = ['*'], $pageName = 'page')&#xA;&#xA;Description&#xA;     Paginate the given query into a simple paginator.&#xA;&#xA;Parameters:&#xA;    int $perPage&#xA;    array $columns&#xA;    string $pageName;;d4,1390;;b1,0;;mint $perPage;;parray $columns;;pstring $pageName;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f44;1389;52;1389;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f46;267;54;267;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="pageName;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f62;1389;71;1389;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f64;267;73;267;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="perPage;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f29;1389;37;1389;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f29;267;37;267;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="parseNested;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f14;796;5;812;;;;vpos;;varray;;r&#xA;Definition&#xA;    parseNested($name, $results)&#xA;&#xA;Description&#xA;     Parse the nested relationships in a relation.&#xA;&#xA;Parameters:&#xA;    string $name&#xA;    array $results;;d4,797;;b2,0;;mstring $name;;parray $results;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f35;796;40;796;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="results;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f42;796;50;796;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="parseRelations;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f14;764;5;787;;;;vpos;;varray;;r&#xA;Definition&#xA;    parseRelations(array $relations)&#xA;&#xA;Description&#xA;     Parse a list of relations into individuals.&#xA;&#xA;Parameters:&#xA;    array $relations;;d4,765;;b2,0;;marray $relations;;p">
					<treenode node="relations;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f44;764;54;764;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="pluck;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1327;5;1330;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;204;5;207;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    pluck($column)&#xA;&#xA;Description&#xA;     Get a single column's value from the first result of a query.&#xA;&#xA;Parameters:&#xA;    string $column;;d4,1328;;b1,0;;mstring $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f26;1327;33;1327;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f26;204;33;204;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="raw;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1861;5;1864;;;;vpos;;v;;r&#xA;Definition&#xA;    raw($value)&#xA;&#xA;Description&#xA;     Create a raw database expression.&#xA;&#xA;Parameters:&#xA;    mixed $value;;d4,1862;;b1,0;;mmixed $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f24;1861;30;1861;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="rename;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f11;173;5;180;;;;vpos;;v;;r&#xA;Definition&#xA;    rename($from, $to)&#xA;&#xA;Description&#xA;     Rename a table on the schema.&#xA;&#xA;Parameters:&#xA;    string $from&#xA;    string $to;;d4,174;;b1,0;;mstring $from;;pstring $to;;p">
					<treenode node="from;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f27;173;32;173;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="to;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f34;173;37;173;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="restoreFieldsForCount;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f14;1469;5;1476;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    restoreFieldsForCount()&#xA;&#xA;Description&#xA;     Restore some fields after the pagination count.;;d4,1470;;b2,0;;m">
				</treenode>
				<treenode node="rightJoin;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;397;5;400;;;;vpos;;v;;r&#xA;Definition&#xA;    rightJoin($table, $first, $operator = null, $second = null)&#xA;&#xA;Description&#xA;     Add a right join to the query.&#xA;&#xA;Parameters:&#xA;    string $table&#xA;    string $first&#xA;    string $operator&#xA;    string $second;;d4,398;;b1,0;;mstring $table;;pstring $first;;pstring $operator;;pstring $second;;p">
					<treenode node="first;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f38;397;44;397;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="operator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f46;397;55;397;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="second;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f64;397;71;397;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f30;397;36;397;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="rightJoinWhere;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;411;5;414;;;;vpos;;v;;r&#xA;Definition&#xA;    rightJoinWhere($table, $one, $operator, $two)&#xA;&#xA;Description&#xA;     Add a &quot;right join where&quot; clause to the query.&#xA;&#xA;Parameters:&#xA;    string $table&#xA;    string $one&#xA;    string $operator&#xA;    string $two;;d4,412;;b1,0;;mstring $table;;pstring $one;;pstring $operator;;pstring $two;;p">
					<treenode node="one;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f43;411;47;411;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="operator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f49;411;58;411;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f35;411;41;411;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="two;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f60;411;64;411;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="runSelect;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f14;1376;5;1379;;;;vpos;;varray;;r&#xA;Definition&#xA;    runSelect()&#xA;&#xA;Description&#xA;     Run the query as a &quot;select&quot; statement against the connection.;;d4,1377;;b2,0;;m">
				</treenode>
				<treenode node="select;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;216;5;221;;;;vpos;;v;;r&#xA;Definition&#xA;    select($columns = ['*'])&#xA;&#xA;Description&#xA;     Set the columns to be selected.&#xA;&#xA;Parameters:&#xA;    array $columns;;d4,217;;b1,0;;marray $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f27;216;35;216;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="selectRaw;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;230;5;239;;;;vpos;;v;;r&#xA;Definition&#xA;    selectRaw($expression, array $bindings = [])&#xA;&#xA;Description&#xA;     Add a new &quot;raw&quot; select expression to the query.&#xA;&#xA;Parameters:&#xA;    string $expression&#xA;    array $bindings;;d4,231;;b1,0;;mstring $expression;;parray $bindings;;p">
					<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f49;230;58;230;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expression;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f30;230;41;230;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="selectSub;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;248;5;267;;;;vpos;;v;;r&#xA;Definition&#xA;    selectSub($query, $as)&#xA;&#xA;Description&#xA;     Add a subselect expression to the query.&#xA;&#xA;Parameters:&#xA;    \Closure|\Illuminate\Database\Query\Builder|string $query&#xA;    string $as;;d4,249;;b1,0;;m\Closure|\Illuminate\Database\Query\Builder|string $query;;pstring $as;;p">
					<treenode node="as;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f38;248;41;248;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f30;248;36;248;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setBindings;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1895;5;1904;;;;vpos;;v;;r&#xA;Definition&#xA;    setBindings(array $bindings, $type = 'where')&#xA;&#xA;Description&#xA;     Set the bindings on the query builder.&#xA;&#xA;Parameters:&#xA;    array $bindings&#xA;    string $type;;d4,1896;;b1,0;;marray $bindings;;pstring $type;;p">
					<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f38;1895;47;1895;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f49;1895;54;1895;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setConnection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f11;225;5;230;;;;vpos;;v;;r&#xA;Definition&#xA;    setConnection(Connection $connection)&#xA;&#xA;Description&#xA;     Set the database connection instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Connection $connection;;d4,226;;b1,0;;m\Illuminate\Database\Connection $connection;;p">
					<treenode node="connection;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f45;225;56;225;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setEagerLoads;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;867;5;872;;;;vpos;;v;;r&#xA;Definition&#xA;    setEagerLoads(array $eagerLoad)&#xA;&#xA;Description&#xA;     Set the relationships being eagerly loaded.&#xA;&#xA;Parameters:&#xA;    array $eagerLoad;;d4,868;;b1,0;;marray $eagerLoad;;p">
					<treenode node="eagerLoad;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f40;867;50;867;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setModel;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;890;5;897;;;;vpos;;v;;r&#xA;Definition&#xA;    setModel(Model $model)&#xA;&#xA;Description&#xA;     Set a model instance for the model being queried.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Model $model;;d4,891;;b1,0;;m\Illuminate\Database\Eloquent\Model $model;;p">
					<treenode node="model;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f35;890;41;890;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setQuery;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;844;5;849;;;;vpos;;v;;r&#xA;Definition&#xA;    setQuery($query)&#xA;&#xA;Description&#xA;     Set the underlying query builder instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query;;d4,845;;b1,0;;m\Illuminate\Database\Query\Builder $query;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f29;844;35;844;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="sharedLock;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1277;5;1280;;;;vpos;;v;;r&#xA;Definition&#xA;    sharedLock()&#xA;&#xA;Description&#xA;     Share lock the selected rows in the table.;;d4,1278;;b1,0;;m">
				</treenode>
				<treenode node="simplePaginate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1413;5;1423;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;290;5;302;;;;vpos;;v;;r&#xA;Definition&#xA;    simplePaginate($perPage = 15, $columns = ['*'], $pageName = 'page')&#xA;&#xA;Description&#xA;     Get a paginator only supporting simple next and previous links.&#xA;&#xA;Parameters:&#xA;    int $perPage&#xA;    array $columns&#xA;    string $pageName;;d4,1414;;b1,0;;mint $perPage;;parray $columns;;pstring $pageName;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f50;1413;58;1413;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f52;290;60;290;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="pageName;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f68;1413;77;1413;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f70;290;79;290;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="perPage;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f35;1413;43;1413;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f35;290;43;290;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="skip;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1175;5;1178;;;;vpos;;v;;r&#xA;Definition&#xA;    skip($value)&#xA;&#xA;Description&#xA;     Alias to set the &quot;offset&quot; value of the query.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,1176;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f25;1175;31;1175;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="sum;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1615;5;1620;;;;vpos;;vfloat;;r&#xA;Definition&#xA;    sum($column)&#xA;&#xA;Description&#xA;     Retrieve the sum of the values of a given column.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;&#xA;Return:&#xA;   |int;;d4,1616;;b1,0;;mstring $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f24;1615;31;1615;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="table;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f11;113;5;116;;;;vpos;;v;;r&#xA;Definition&#xA;    table($table, Closure $callback)&#xA;&#xA;Description&#xA;     Modify a table on the schema.&#xA;&#xA;Parameters:&#xA;    string $table&#xA;    \Closure $callback;;d4,114;;b1,0;;mstring $table;;p\Closure $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f42;113;51;113;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f26;113;32;113;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="take;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1203;5;1206;;;;vpos;;v;;r&#xA;Definition&#xA;    take($value)&#xA;&#xA;Description&#xA;     Alias to set the &quot;limit&quot; value of the query.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,1204;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f25;1203;31;1203;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="toSql;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1287;5;1290;;;;vpos;;vstring;;r&#xA;Definition&#xA;    toSql()&#xA;&#xA;Description&#xA;     Get the SQL representation of the query.;;d4,1288;;b1,0;;m">
				</treenode>
				<treenode node="truncate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1811;5;1816;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    truncate()&#xA;&#xA;Description&#xA;     Run a truncate statement on the table.;;d4,1812;;b1,0;;m">
				</treenode>
				<treenode node="union;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1227;5;1236;;;;vpos;;v;;r&#xA;Definition&#xA;    union($query, $all = false)&#xA;&#xA;Description&#xA;     Add a union statement to the query.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder|\Closure $query&#xA;    bool $all;;d4,1228;;b1,0;;m\Illuminate\Database\Query\Builder|\Closure $query;;pbool $all;;p">
					<treenode node="all;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f34;1227;38;1227;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f26;1227;32;1227;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="unionAll;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1244;5;1247;;;;vpos;;v;;r&#xA;Definition&#xA;    unionAll($query)&#xA;&#xA;Description&#xA;     Add a union all statement to the query.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder|\Closure $query;;d4,1245;;b1,0;;m\Illuminate\Database\Query\Builder|\Closure $query;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f29;1244;35;1244;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="update;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1743;5;1750;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;310;5;313;;;;vpos;;vint;;r&#xA;Definition&#xA;    update(array $values)&#xA;&#xA;Description&#xA;     Update a record in the database.&#xA;&#xA;Parameters:&#xA;    array $values;;d4,1744;;b1,0;;marray $values;;p">
					<treenode node="values;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f33;1743;40;1743;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f33;310;40;310;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="useWritePdo;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1978;5;1983;;;;vpos;;v;;r&#xA;Definition&#xA;    useWritePdo()&#xA;&#xA;Description&#xA;     Use the write pdo for query.;;d4,1979;;b1,0;;m">
				</treenode>
				<treenode node="value;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;1310;5;1315;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;185;5;192;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    value($column)&#xA;&#xA;Description&#xA;     Get a single column's value from the first result of a query.&#xA;&#xA;Parameters:&#xA;    string $column;;d4,1311;;b1,0;;mstring $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f26;1310;33;1310;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f26;185;33;185;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="where;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;427;5;489;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;533;5;546;;;;vpos;;v;;r&#xA;Definition&#xA;    where($column, $operator = null, $value = null, $boolean = 'and')&#xA;&#xA;Description&#xA;     Add a basic where clause to the query.&#xA;&#xA;Parameters:&#xA;    string|array|\Closure $column&#xA;    string $operator&#xA;    mixed $value&#xA;    string $boolean;;d4,428;;b1,0;;mstring|array|\Closure $column;;pstring $operator;;pmixed $value;;pstring $boolean;;p">
					<treenode node="boolean;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f68;427;76;427;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f68;533;76;533;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f26;427;33;427;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f26;533;33;533;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="operator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f35;427;44;427;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f35;533;44;533;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f53;427;59;427;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f53;533;59;533;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereBetween;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;558;5;567;;;;vpos;;v;;r&#xA;Definition&#xA;    whereBetween($column, array $values, $boolean = 'and', $not = false)&#xA;&#xA;Description&#xA;     Add a where between statement to the query.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    array $values&#xA;    string $boolean&#xA;    bool $not;;d4,559;;b1,0;;mstring $column;;parray $values;;pstring $boolean;;pbool $not;;p">
					<treenode node="boolean;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f57;558;65;558;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f33;558;40;558;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="not;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f75;558;79;558;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f48;558;55;558;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereDate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;888;5;891;;;;vpos;;v;;r&#xA;Definition&#xA;    whereDate($column, $operator, $value, $boolean = 'and')&#xA;&#xA;Description&#xA;     Add a &quot;where date&quot; statement to the query.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    string $operator&#xA;    int $value&#xA;    string $boolean;;d4,889;;b1,0;;mstring $column;;pstring $operator;;pint $value;;pstring $boolean;;p">
					<treenode node="boolean;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f58;888;66;888;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f30;888;37;888;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="operator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f39;888;48;888;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f50;888;56;888;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereDay;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;902;5;905;;;;vpos;;v;;r&#xA;Definition&#xA;    whereDay($column, $operator, $value, $boolean = 'and')&#xA;&#xA;Description&#xA;     Add a &quot;where day&quot; statement to the query.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    string $operator&#xA;    int $value&#xA;    string $boolean;;d4,903;;b1,0;;mstring $column;;pstring $operator;;pint $value;;pstring $boolean;;p">
					<treenode node="boolean;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f57;902;65;902;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f29;902;36;902;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="operator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f38;902;47;902;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f49;902;55;902;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereDoesntHave;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;650;5;653;;;;vpos;;v;;r&#xA;Definition&#xA;    whereDoesntHave($relation, Closure $callback = null)&#xA;&#xA;Description&#xA;     Add a relationship count condition to the query with where clauses.&#xA;&#xA;Parameters:&#xA;    string $relation&#xA;    \Closure|null $callback;;d4,651;;b1,0;;mstring $relation;;p\Closure|null $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f55;650;64;650;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f36;650;45;650;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereExists;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;682;5;698;;;;vpos;;v;;r&#xA;Definition&#xA;    whereExists(Closure $callback, $boolean = 'and', $not = false)&#xA;&#xA;Description&#xA;     Add an exists clause to the query.&#xA;&#xA;Parameters:&#xA;    \Closure $callback&#xA;    string $boolean&#xA;    bool $not;;d4,683;;b1,0;;m\Closure $callback;;pstring $boolean;;pbool $not;;p">
					<treenode node="boolean;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f51;682;59;682;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f40;682;49;682;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="not;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f69;682;73;682;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereHas;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;638;5;641;;;;vpos;;v;;r&#xA;Definition&#xA;    whereHas($relation, Closure $callback, $operator = '&gt;=', $count = 1)&#xA;&#xA;Description&#xA;     Add a relationship count condition to the query with where clauses.&#xA;&#xA;Parameters:&#xA;    string $relation&#xA;    \Closure $callback&#xA;    string $operator&#xA;    int $count;;d4,639;;b1,0;;mstring $relation;;p\Closure $callback;;pstring $operator;;pint $count;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f48;638;57;638;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="count;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f77;638;83;638;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="operator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f59;638;68;638;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f29;638;38;638;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereIn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;744;5;764;;;;vpos;;v;;r&#xA;Definition&#xA;    whereIn($column, $values, $boolean = 'and', $not = false)&#xA;&#xA;Description&#xA;     Add a &quot;where in&quot; clause to the query.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    mixed $values&#xA;    string $boolean&#xA;    bool $not;;d4,745;;b1,0;;mstring $column;;pmixed $values;;pstring $boolean;;pbool $not;;p">
					<treenode node="boolean;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f46;744;54;744;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f28;744;35;744;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="not;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f64;744;68;744;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f37;744;44;744;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereInSub;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f14;812;5;826;;;;vpos;;v;;r&#xA;Definition&#xA;    whereInSub($column, Closure $callback, $boolean, $not)&#xA;&#xA;Description&#xA;     Add a where in with a sub-select to the query.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    \Closure $callback&#xA;    string $boolean&#xA;    bool $not;;d4,813;;b2,0;;mstring $column;;p\Closure $callback;;pstring $boolean;;pbool $not;;p">
					<treenode node="boolean;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f62;812;70;812;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f51;812;60;812;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f34;812;41;812;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="not;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f72;812;76;812;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereMonth;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;916;5;919;;;;vpos;;v;;r&#xA;Definition&#xA;    whereMonth($column, $operator, $value, $boolean = 'and')&#xA;&#xA;Description&#xA;     Add a &quot;where month&quot; statement to the query.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    string $operator&#xA;    int $value&#xA;    string $boolean;;d4,917;;b1,0;;mstring $column;;pstring $operator;;pint $value;;pstring $boolean;;p">
					<treenode node="boolean;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f59;916;67;916;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f31;916;38;916;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="operator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f40;916;49;916;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f51;916;57;916;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereNested;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;613;5;625;;;;vpos;;v;;r&#xA;Definition&#xA;    whereNested(Closure $callback, $boolean = 'and')&#xA;&#xA;Description&#xA;     Add a nested where statement to the query.&#xA;&#xA;Parameters:&#xA;    \Closure $callback&#xA;    string $boolean;;d4,614;;b1,0;;m\Closure $callback;;pstring $boolean;;p">
					<treenode node="boolean;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f51;613;59;613;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f40;613;49;613;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereNotBetween;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;589;5;592;;;;vpos;;v;;r&#xA;Definition&#xA;    whereNotBetween($column, array $values, $boolean = 'and')&#xA;&#xA;Description&#xA;     Add a where not between statement to the query.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    array $values&#xA;    string $boolean;;d4,590;;b1,0;;mstring $column;;parray $values;;pstring $boolean;;p">
					<treenode node="boolean;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f60;589;68;589;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f36;589;43;589;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f51;589;58;589;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereNotExists;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;719;5;722;;;;vpos;;v;;r&#xA;Definition&#xA;    whereNotExists(Closure $callback, $boolean = 'and')&#xA;&#xA;Description&#xA;     Add a where not exists clause to the query.&#xA;&#xA;Parameters:&#xA;    \Closure $callback&#xA;    string $boolean;;d4,720;;b1,0;;m\Closure $callback;;pstring $boolean;;p">
					<treenode node="boolean;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f54;719;62;719;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f43;719;52;719;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereNotIn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;786;5;789;;;;vpos;;v;;r&#xA;Definition&#xA;    whereNotIn($column, $values, $boolean = 'and')&#xA;&#xA;Description&#xA;     Add a &quot;where not in&quot; clause to the query.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    mixed $values&#xA;    string $boolean;;d4,787;;b1,0;;mstring $column;;pmixed $values;;pstring $boolean;;p">
					<treenode node="boolean;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f49;786;57;786;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f31;786;38;786;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f40;786;47;786;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereNotNull;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;863;5;866;;;;vpos;;v;;r&#xA;Definition&#xA;    whereNotNull($column, $boolean = 'and')&#xA;&#xA;Description&#xA;     Add a &quot;where not null&quot; clause to the query.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    string $boolean;;d4,864;;b1,0;;mstring $column;;pstring $boolean;;p">
					<treenode node="boolean;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f42;863;50;863;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f33;863;40;863;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereNull;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;836;5;843;;;;vpos;;v;;r&#xA;Definition&#xA;    whereNull($column, $boolean = 'and', $not = false)&#xA;&#xA;Description&#xA;     Add a &quot;where null&quot; clause to the query.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    string $boolean&#xA;    bool $not;;d4,837;;b1,0;;mstring $column;;pstring $boolean;;pbool $not;;p">
					<treenode node="boolean;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f39;836;47;836;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f30;836;37;836;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="not;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f57;836;61;836;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereRaw;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;526;5;535;;;;vpos;;v;;r&#xA;Definition&#xA;    whereRaw($sql, array $bindings = [], $boolean = 'and')&#xA;&#xA;Description&#xA;     Add a raw where clause to the query.&#xA;&#xA;Parameters:&#xA;    string $sql&#xA;    array $bindings&#xA;    string $boolean;;d4,527;;b1,0;;mstring $sql;;parray $bindings;;pstring $boolean;;p">
					<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f41;526;50;526;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="boolean;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f57;526;65;526;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sql;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f29;526;33;526;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereSub;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f14;656;5;672;;;;vpos;;v;;r&#xA;Definition&#xA;    whereSub($column, $operator, Closure $callback, $boolean)&#xA;&#xA;Description&#xA;     Add a full sub-select to the query.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    string $operator&#xA;    \Closure $callback&#xA;    string $boolean;;d4,657;;b2,0;;mstring $column;;pstring $operator;;p\Closure $callback;;pstring $boolean;;p">
					<treenode node="boolean;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f71;656;79;656;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f60;656;69;656;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f32;656;39;656;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="operator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f41;656;50;656;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereYear;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;930;5;933;;;;vpos;;v;;r&#xA;Definition&#xA;    whereYear($column, $operator, $value, $boolean = 'and')&#xA;&#xA;Description&#xA;     Add a &quot;where year&quot; statement to the query.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    string $operator&#xA;    int $value&#xA;    string $boolean;;d4,931;;b1,0;;mstring $column;;pstring $operator;;pint $value;;pstring $boolean;;p">
					<treenode node="boolean;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f58;930;66;930;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f30;930;37;930;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="operator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f39;930;48;930;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f50;930;56;930;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="with;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f11;745;5;756;;;;vpos;;v;;r&#xA;Definition&#xA;    with($relations)&#xA;&#xA;Description&#xA;     Set the relationships that should be eager loaded.&#xA;&#xA;Parameters:&#xA;    mixed $relations;;d4,746;;b1,0;;mmixed $relations;;p">
					<treenode node="relations;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f25;745;35;745;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="aggregate;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;58;21;58;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="backups;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f14;170;22;170;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f14;45;23;45;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;65;19;65;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="connection;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f14;14;25;14;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f14;24;25;24;;;;vpos;;v;;r&#xA;Description&#xA;     The database connection instance.;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="distinct;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;72;20;72;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="eagerLoad;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f14;34;24;34;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="from;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;79;16;79;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="grammar;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f14;21;22;21;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f14;31;22;31;;;;vpos;;v;;r&#xA;Description&#xA;     The schema grammar instance.;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="groups;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;100;18;100;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="havings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;107;19;107;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="joins;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;86;17;86;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="limit;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;121;17;121;;;;vposint;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="lock;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;163;16;163;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="macros;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f14;41;21;41;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="model;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f14;27;20;27;;;;vpos;;v;;r&#xA;Description&#xA;     The model being queried.;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;128;18;128;;;;vposint;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="onDelete;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f14;48;23;48;;;;vpos;;v;;r&#xA;Description&#xA;     A replacement for the typical delete function.;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="operators;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f14;177;24;177;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="orders;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;114;18;114;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="passthru;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f14;55;23;55;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="processor;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f14;38;24;38;;;;vpos;;v;;r&#xA;Description&#xA;     The database query post processor instance.;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php;f14;20;20;20;;;;vpos;;v;;r&#xA;Description&#xA;     The base query builder instance.;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="resolver;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php;f14;28;23;28;;;;vpos;;v;;r&#xA;Description&#xA;     The Blueprint resolver callback.;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="unionLimit;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;142;22;142;;;;vposint;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="unionOffset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;149;23;149;;;;vposint;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="unionOrders;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;156;23;156;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="unions;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;135;18;135;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useWritePdo;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f14;191;26;191;;;;vposbool;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="wheres;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php;f11;93;18;93;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Bus;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Bus.php;f0;7;1;18;;;;vpos;;vFacade;;c;;r&#xA;Definition&#xA;    class Bus extends Facade&#xA;&#xA;Description&#xA;      see \Illuminate\Contracts\Bus\Dispatcher;;d0,8;;b0,0;;m">
				<treenode node="getFacadeAccessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Bus.php;f21;14;5;17;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getFacadeAccessor()&#xA;&#xA;Description&#xA;     Get the registered name of the component.;;d4,15;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="Cache;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Cache.php;f0;8;1;19;;;;vpos;;vFacade;;c;;r&#xA;Definition&#xA;    class Cache extends Facade&#xA;&#xA;Description&#xA;      see \Illuminate\Cache\CacheManager;;d0,9;;b0,0;;m">
				<treenode node="getFacadeAccessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Cache.php;f21;15;5;18;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getFacadeAccessor()&#xA;&#xA;Description&#xA;     Get the registered name of the component.;;d4,16;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="Carbon;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f0;54;1;4499;;;;vpos;;vDateTime;;cJsonSerializable;;c;;r&#xA;Definition&#xA;    class Carbon extends DateTime implements JsonSerializable&#xA;&#xA;Description&#xA;     A simple API extension for DateTime;;d0,55;;b0,0;;m">
				<treenode node="DAYS_PER_WEEK;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f9;95;23;95;;;;vpos;;v;;r7;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="DEFAULT_TO_STRING_FORMAT;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f9;112;34;112;;;;vposstring;;v;;r'Y-m-d H:i:s';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="FRIDAY;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f9;69;16;69;;;;vpos;;v;;r5;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="HOURS_PER_DAY;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f9;96;23;96;;;;vpos;;v;;r24;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="JUST_NOW;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f9;57;18;57;;;;vpos;;v;;r02;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="MINUTES_PER_HOUR;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f9;97;26;97;;;;vpos;;v;;r60;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="MOCK_DATETIME_FORMAT;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f9;119;30;119;;;;vposstring;;v;;r'Y-m-d H:i:s.u';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="MONDAY;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f9;65;16;65;;;;vpos;;v;;r1;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="MONTHS_PER_QUARTER;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f9;93;28;93;;;;vpos;;v;;r3;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="MONTHS_PER_YEAR;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f9;92;25;92;;;;vpos;;v;;r12;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="NO_ZERO_DIFF;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f9;56;22;56;;;;vpos;;v;;r01;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="ONE_DAY_WORDS;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f9;58;23;58;;;;vpos;;v;;r04;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="RFC7231_FORMAT;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f9;105;24;105;;;;vposstring;;v;;r'D, d M Y H:i:s \G\M\T';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="SATURDAY;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f9;70;18;70;;;;vpos;;v;;r6;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="SECONDS_PER_MINUTE;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f9;98;28;98;;;;vpos;;v;;r60;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="SUNDAY;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f9;64;16;64;;;;vpos;;v;;r&#xA;Description&#xA;     The day constants.;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="THURSDAY;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f9;68;18;68;;;;vpos;;v;;r4;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="TUESDAY;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f9;66;17;66;;;;vpos;;v;;r2;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="TWO_DAY_WORDS;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f9;59;23;59;;;;vpos;;v;;r010;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="WEDNESDAY;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f9;67;19;67;;;;vpos;;v;;r3;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="WEEKS_PER_YEAR;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f9;94;24;94;;;;vpos;;v;;r52;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="YEARS_PER_CENTURY;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f9;90;27;90;;;;vpos;;v;;r&#xA;Description&#xA;     Number of X in Y.;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="YEARS_PER_DECADE;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f9;91;26;91;;;;vpos;;v;;r10;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="__call;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;4474;5;4498;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    __call($method, $parameters)&#xA;&#xA;Description&#xA;     Dynamically handle calls to the class.&#xA;&#xA;Parameters:&#xA;    string $method&#xA;    array $parameters;;d4,4475;;b1,0;;mstring $method;;parray $parameters;;p">
					<treenode node="method;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f27;4474;34;4474;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f36;4474;47;4474;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__callStatic;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;4451;5;4462;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    __callStatic($method, $parameters)&#xA;&#xA;Description&#xA;     Dynamically handle calls to the class.&#xA;&#xA;Parameters:&#xA;    string $method&#xA;    array $parameters;;d4,4452;;b1,5;;mstring $method;;parray $parameters;;p">
					<treenode node="method;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f40;4451;47;4451;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f49;4451;60;4451;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;454;5;502;;;;vpos;;v;;r&#xA;Definition&#xA;    __construct($time = null, $tz = null)&#xA;&#xA;Description&#xA;     Create a new Carbon instance.&#xA;&#xA;Parameters:&#xA;    string|null $time&#xA;    \DateTimeZone|string|null $tz;;d4,455;;b1,0;;mstring|null $time;;p\DateTimeZone|string|null $tz;;p">
					<treenode node="time;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f32;454;37;454;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="tz;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f46;454;49;454;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__get;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;970;5;1029;;;;vpos;;vstring;;r&#xA;Definition&#xA;    __get($name)&#xA;&#xA;Description&#xA;     Get a part of the Carbon object&#xA;&#xA;Parameters:&#xA;    string $name&#xA;&#xA;Return:&#xA;   |int|\DateTimeZone;;d4,971;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f26;970;31;970;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__isset;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1038;5;1047;;;;vpos;;vbool;;r&#xA;Definition&#xA;    __isset($name)&#xA;&#xA;Description&#xA;     Check if an attribute exists on the object&#xA;&#xA;Parameters:&#xA;    string $name;;d4,1039;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f28;1038;33;1038;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__set;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1059;5;1085;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __set($name, $value)&#xA;&#xA;Description&#xA;     Set a part of the Carbon object&#xA;&#xA;Parameters:&#xA;    string $name&#xA;    string|int|\DateTimeZone $value;;d4,1060;;b1,0;;mstring $name;;pstring|int|\DateTimeZone $value;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f26;1059;31;1059;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f33;1059;39;1059;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__set_state;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;4354;5;4357;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    __set_state($array)&#xA;&#xA;Description&#xA;     The __set_state handler.&#xA;&#xA;Parameters:&#xA;    array $array;;d4,4355;;b1,5;;marray $array;;p">
					<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f39;4354;45;4354;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__toString;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1604;5;1607;;;;vpos;;vstring;;r&#xA;Definition&#xA;    __toString()&#xA;&#xA;Description&#xA;     Format the instance as a string using the set format;;d4,1605;;b1,0;;m">
				</treenode>
				<treenode node="addCenturies;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2580;5;2583;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    addCenturies($value)&#xA;&#xA;Description&#xA;     Add centuries to the instance. Positive $value travels forward while negative $value travels into the past.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,2581;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f33;2580;39;2580;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addCentury;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2592;5;2595;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    addCentury($value = 1)&#xA;&#xA;Description&#xA;     Add a century to the instance&#xA;&#xA;Parameters:&#xA;    int $value;;d4,2593;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f31;2592;37;2592;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addDay;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3002;5;3005;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    addDay($value = 1)&#xA;&#xA;Description&#xA;     Add a day to the instance&#xA;&#xA;Parameters:&#xA;    int $value;;d4,3003;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f27;3002;33;3002;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addDays;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2990;5;2993;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    addDays($value)&#xA;&#xA;Description&#xA;     Add days to the instance. Positive $value travels forward while negative $value travels into the past.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,2991;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f28;2990;34;2990;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addHour;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3166;5;3169;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    addHour($value = 1)&#xA;&#xA;Description&#xA;     Add an hour to the instance.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,3167;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f28;3166;34;3166;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addHours;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3141;5;3144;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    addHours($value)&#xA;&#xA;Description&#xA;     Add hours to the instance. Positive $value travels forward while negative $value travels into the past.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,3142;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f29;3141;35;3141;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addMinute;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3264;5;3267;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    addMinute($value = 1)&#xA;&#xA;Description&#xA;     Add a minute to the instance.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,3265;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f30;3264;36;3264;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addMinutes;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3239;5;3242;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    addMinutes($value)&#xA;&#xA;Description&#xA;     Add minutes to the instance using timestamp. Positive $value travels forward while negative $value travels into the past.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,3240;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f31;3239;37;3239;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addMonth;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2847;5;2850;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    addMonth($value = 1)&#xA;&#xA;Description&#xA;     Add a month to the instance&#xA;&#xA;Parameters:&#xA;    int $value;;d4,2848;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f29;2847;35;2847;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addMonthNoOverflow;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2953;5;2956;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    addMonthNoOverflow($value = 1)&#xA;&#xA;Description&#xA;     Add a month with no overflow to the instance&#xA;&#xA;Parameters:&#xA;    int $value;;d4,2954;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f39;2953;45;2953;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addMonths;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2831;5;2838;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    addMonths($value)&#xA;&#xA;Description&#xA;     Add months to the instance. Positive $value travels forward while negative $value travels into the past.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,2832;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f30;2831;36;2831;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addMonthsNoOverflow;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2933;5;2944;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    addMonthsNoOverflow($value)&#xA;&#xA;Description&#xA;     Add months without overflowing to the instance. Positive $value travels forward while negative $value travels into the past.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,2934;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f40;2933;46;2933;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addMonthsWithOverflow;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2884;5;2887;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    addMonthsWithOverflow($value)&#xA;&#xA;Description&#xA;     Add months to the instance. Positive $value travels forward while negative $value travels into the past.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,2885;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f42;2884;48;2884;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addMonthWithOverflow;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2896;5;2899;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    addMonthWithOverflow($value = 1)&#xA;&#xA;Description&#xA;     Add a month to the instance&#xA;&#xA;Parameters:&#xA;    int $value;;d4,2897;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f41;2896;47;2896;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addQuarter;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2794;5;2797;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    addQuarter($value = 1)&#xA;&#xA;Description&#xA;     Add a quarter to the instance&#xA;&#xA;Parameters:&#xA;    int $value;;d4,2795;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f31;2794;37;2794;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addQuarters;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2782;5;2785;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    addQuarters($value)&#xA;&#xA;Description&#xA;     Add quarters to the instance. Positive $value travels forward while negative $value travels into the past.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,2783;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f32;2782;38;2782;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addRealHour;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3178;5;3181;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    addRealHour($value = 1)&#xA;&#xA;Description&#xA;     Add an hour to the instance using timestamp.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,3179;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f32;3178;38;3178;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addRealHours;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3154;5;3157;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    addRealHours($value)&#xA;&#xA;Description&#xA;     Add hours to the instance using timestamp. Positive $value travels forward while negative $value travels into the past.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,3155;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f33;3154;39;3154;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addRealMinute;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3276;5;3279;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    addRealMinute($value = 1)&#xA;&#xA;Description&#xA;     Add a minute to the instance using timestamp.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,3277;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f34;3276;40;3276;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addRealMinutes;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3252;5;3255;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    addRealMinutes($value)&#xA;&#xA;Description&#xA;     Add minutes to the instance using timestamp. Positive $value travels forward while negative $value travels into the past.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,3253;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f35;3252;41;3252;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addRealSecond;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3374;5;3377;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    addRealSecond($value = 1)&#xA;&#xA;Description&#xA;     Add a second to the instance using timestamp.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,3375;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f34;3374;40;3374;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addRealSeconds;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3350;5;3353;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    addRealSeconds($value)&#xA;&#xA;Description&#xA;     Add seconds to the instance using timestamp. Positive $value travels forward while negative $value travels into the past.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,3351;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f35;3350;41;3350;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addSecond;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3362;5;3365;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    addSecond($value = 1)&#xA;&#xA;Description&#xA;     Add a second to the instance.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,3363;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f30;3362;36;3362;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addSeconds;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3337;5;3340;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    addSeconds($value)&#xA;&#xA;Description&#xA;     Add seconds to the instance. Positive $value travels forward while negative $value travels into the past.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,3338;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f31;3337;37;3337;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addWeek;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3104;5;3107;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    addWeek($value = 1)&#xA;&#xA;Description&#xA;     Add a week to the instance&#xA;&#xA;Parameters:&#xA;    int $value;;d4,3105;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f28;3104;34;3104;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addWeekday;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3055;5;3058;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    addWeekday($value = 1)&#xA;&#xA;Description&#xA;     Add a weekday to the instance&#xA;&#xA;Parameters:&#xA;    int $value;;d4,3056;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f31;3055;37;3055;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addWeekdays;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3039;5;3046;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    addWeekdays($value)&#xA;&#xA;Description&#xA;     Add weekdays to the instance. Positive $value travels forward while negative $value travels into the past.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,3040;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f32;3039;38;3039;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addWeeks;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3092;5;3095;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    addWeeks($value)&#xA;&#xA;Description&#xA;     Add weeks to the instance. Positive $value travels forward while negative $value travels into the past.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,3093;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f29;3092;35;3092;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addYear;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2645;5;2648;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    addYear($value = 1)&#xA;&#xA;Description&#xA;     Add a year to the instance&#xA;&#xA;Parameters:&#xA;    int $value;;d4,2646;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f28;2645;34;2645;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addYearNoOverflow;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2671;5;2674;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    addYearNoOverflow($value = 1)&#xA;&#xA;Description&#xA;     Add year with overflow months set to false&#xA;&#xA;Parameters:&#xA;    int $value;;d4,2672;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f38;2671;44;2671;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addYears;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2629;5;2636;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    addYears($value)&#xA;&#xA;Description&#xA;     Add years to the instance. Positive $value travel forward while negative $value travel into the past.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,2630;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f29;2629;35;2629;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addYearsNoOverflow;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2659;5;2662;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    addYearsNoOverflow($value)&#xA;&#xA;Description&#xA;     Add years to the instance with no overflow of months Positive $value travel forward while negative $value travel into the past.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,2660;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f39;2659;45;2659;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addYearsWithOverflow;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2685;5;2688;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    addYearsWithOverflow($value)&#xA;&#xA;Description&#xA;     Add years to the instance. Positive $value travel forward while negative $value travel into the past.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,2686;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f41;2685;47;2685;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addYearWithOverflow;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2697;5;2700;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    addYearWithOverflow($value = 1)&#xA;&#xA;Description&#xA;     Add year with overflow.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,2698;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f40;2697;46;2697;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="average;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;4308;5;4311;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    average($date = null)&#xA;&#xA;Description&#xA;     Modify the current instance to the average of a given instance (default now) and the current instance.&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|null $date;;d4,4309;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|null $date;;p">
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f28;4308;33;4308;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="between;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1983;5;1996;;;;vpos;;vbool;;r&#xA;Definition&#xA;    between($date1, $date2, $equal = true)&#xA;&#xA;Description&#xA;     Determines if the instance is between two others&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|mixed $date1&#xA;    \Carbon\Carbon|\DateTimeInterface|mixed $date2&#xA;    bool $equal - Indicates if a &gt; and &lt; comparison should be used or &lt;= or &gt;=;;d4,1984;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|mixed $date1;;p\Carbon\Carbon|\DateTimeInterface|mixed $date2;;pbool $equal;;p">
					<treenode node="date1;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f28;1983;34;1983;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="date2;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f36;1983;42;1983;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="equal;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f44;1983;50;1983;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="closest;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2006;5;2009;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    closest($date1, $date2)&#xA;&#xA;Description&#xA;     Get the closest date from the instance.&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|mixed $date1&#xA;    \Carbon\Carbon|\DateTimeInterface|mixed $date2;;d4,2007;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|mixed $date1;;p\Carbon\Carbon|\DateTimeInterface|mixed $date2;;p">
					<treenode node="date1;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f28;2006;34;2006;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="date2;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f36;2006;42;2006;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="copy;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;902;5;905;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    copy()&#xA;&#xA;Description&#xA;     Get a copy of the instance.;;d4,903;;b1,0;;m">
				</treenode>
				<treenode node="create;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;643;5;686;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    create($year = null, $month = null, $day = null, $hour = null, $minute = null, $second = null, $tz = null)&#xA;&#xA;Description&#xA;     Create a new Carbon instance from a specific date and time.&#xA;&#xA;Parameters:&#xA;    int|null $year&#xA;    int|null $month&#xA;    int|null $day&#xA;    int|null $hour&#xA;    int|null $minute&#xA;    int|null $second&#xA;    \DateTimeZone|string|null $tz;;d4,644;;b1,5;;mint|null $year;;pint|null $month;;pint|null $day;;pint|null $hour;;pint|null $minute;;pint|null $second;;p\DateTimeZone|string|null $tz;;p">
					<treenode node="day;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f63;643;67;643;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="hour;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f76;643;81;643;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="minute;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f90;643;97;643;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="month;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f48;643;54;643;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="second;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f106;643;113;643;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="tz;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f122;643;125;643;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="year;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f34;643;39;643;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="createFromDate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;755;5;758;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    createFromDate($year = null, $month = null, $day = null, $tz = null)&#xA;&#xA;Description&#xA;     Create a Carbon instance from just a date. The time portion is set to now.&#xA;&#xA;Parameters:&#xA;    int|null $year&#xA;    int|null $month&#xA;    int|null $day&#xA;    \DateTimeZone|string|null $tz;;d4,756;;b1,5;;mint|null $year;;pint|null $month;;pint|null $day;;p\DateTimeZone|string|null $tz;;p">
					<treenode node="day;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f71;755;75;755;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="month;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f56;755;62;755;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="tz;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f84;755;87;755;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="year;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f42;755;47;755;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="createFromFormat;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;818;5;836;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    createFromFormat($format, $time, $tz = null)&#xA;&#xA;Description&#xA;     Create a Carbon instance from a specific format.&#xA;&#xA;Parameters:&#xA;    string $format - Datetime format&#xA;    string $time&#xA;    \DateTimeZone|string|null $tz;;d4,819;;b1,5;;mstring $format;;pstring $time;;p\DateTimeZone|string|null $tz;;p">
					<treenode node="format;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f44;818;51;818;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="time;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f53;818;58;818;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="tz;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f60;818;63;818;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="createFromTime;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;787;5;790;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    createFromTime($hour = null, $minute = null, $second = null, $tz = null)&#xA;&#xA;Description&#xA;     Create a Carbon instance from just a time. The date portion is set to today.&#xA;&#xA;Parameters:&#xA;    int|null $hour&#xA;    int|null $minute&#xA;    int|null $second&#xA;    \DateTimeZone|string|null $tz;;d4,788;;b1,5;;mint|null $hour;;pint|null $minute;;pint|null $second;;p\DateTimeZone|string|null $tz;;p">
					<treenode node="hour;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f42;787;47;787;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="minute;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f56;787;63;787;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="second;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f72;787;79;787;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="tz;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f88;787;91;787;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="createFromTimestamp;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;866;5;869;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    createFromTimestamp($timestamp, $tz = null)&#xA;&#xA;Description&#xA;     Create a Carbon instance from a timestamp.&#xA;&#xA;Parameters:&#xA;    int $timestamp&#xA;    \DateTimeZone|string|null $tz;;d4,867;;b1,5;;mint $timestamp;;p\DateTimeZone|string|null $tz;;p">
					<treenode node="timestamp;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f47;866;57;866;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="tz;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f59;866;62;866;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="createFromTimestampMs;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;879;5;883;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    createFromTimestampMs($timestamp, $tz = null)&#xA;&#xA;Description&#xA;     Create a Carbon instance from a timestamp in milliseconds.&#xA;&#xA;Parameters:&#xA;    int $timestamp&#xA;    \DateTimeZone|string|null $tz;;d4,880;;b1,5;;mint $timestamp;;p\DateTimeZone|string|null $tz;;p">
					<treenode node="timestamp;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f49;879;59;879;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="tz;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f61;879;64;879;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="createFromTimestampUTC;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;892;5;895;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    createFromTimestampUTC($timestamp)&#xA;&#xA;Description&#xA;     Create a Carbon instance from an UTC timestamp.&#xA;&#xA;Parameters:&#xA;    int $timestamp;;d4,893;;b1,5;;mint $timestamp;;p">
					<treenode node="timestamp;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f50;892;60;892;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="createFromTimeString;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;802;5;805;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    createFromTimeString($time, $tz = null)&#xA;&#xA;Description&#xA;     Create a Carbon instance from a time string. The date portion is set to today.&#xA;&#xA;Parameters:&#xA;    string $time&#xA;    \DateTimeZone|string|null $tz;;d4,803;;b1,5;;mstring $time;;p\DateTimeZone|string|null $tz;;p">
					<treenode node="time;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f48;802;53;802;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="tz;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f55;802;58;802;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="createMidnightDate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;770;5;773;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    createMidnightDate($year = null, $month = null, $day = null, $tz = null)&#xA;&#xA;Description&#xA;     Create a Carbon instance from just a date. The time portion is set to midnight.&#xA;&#xA;Parameters:&#xA;    int|null $year&#xA;    int|null $month&#xA;    int|null $day&#xA;    \DateTimeZone|string|null $tz;;d4,771;;b1,5;;mint|null $year;;pint|null $month;;pint|null $day;;p\DateTimeZone|string|null $tz;;p">
					<treenode node="day;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f75;770;79;770;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="month;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f60;770;66;770;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="tz;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f88;770;91;770;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="year;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f46;770;51;770;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="createSafe;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;715;5;741;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    createSafe($year = null, $month = null, $day = null, $hour = null, $minute = null, $second = null, $tz = null)&#xA;&#xA;Description&#xA;     Create a new safe Carbon instance from a specific date and time.&#xA;&#xA;Parameters:&#xA;    int|null $year&#xA;    int|null $month&#xA;    int|null $day&#xA;    int|null $hour&#xA;    int|null $minute&#xA;    int|null $second&#xA;    \DateTimeZone|string|null $tz;;d4,716;;b1,5;;mint|null $year;;pint|null $month;;pint|null $day;;pint|null $hour;;pint|null $minute;;pint|null $second;;p\DateTimeZone|string|null $tz;;p">
					<treenode node="day;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f67;715;71;715;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="hour;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f80;715;85;715;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="minute;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f94;715;101;715;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="month;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f52;715;58;715;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="second;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f110;715;117;715;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="tz;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f126;715;129;715;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="year;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f38;715;43;715;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="day;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1122;5;1127;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    day($value)&#xA;&#xA;Description&#xA;     Set the instance's day&#xA;&#xA;Parameters:&#xA;    int $value;;d4,1123;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f24;1122;30;1122;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="diffAsCarbonInterval;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3439;5;3442;;;;vpos;;vCarbonInterval;;r&#xA;Definition&#xA;    diffAsCarbonInterval($date = null, $absolute = true)&#xA;&#xA;Description&#xA;     Get the difference as a CarbonInterval instance&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|string|null $date&#xA;    bool $absolute - Get the absolute of the difference;;d4,3440;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|string|null $date;;pbool $absolute;;p">
					<treenode node="absolute;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f55;3439;64;3439;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f41;3439;46;3439;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="diffFiltered;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3536;5;3556;;;;vpos;;vint;;r&#xA;Definition&#xA;    diffFiltered(CarbonInterval $ci, Closure $callback, $date = null, $absolute = true)&#xA;&#xA;Description&#xA;     Get the difference by the given interval using a filter closure&#xA;&#xA;Parameters:&#xA;    CarbonInterval $ci - An interval to traverse by&#xA;    Closure $callback&#xA;    \Carbon\Carbon|\DateTimeInterface|string|null $date&#xA;    bool $absolute - Get the absolute of the difference;;d4,3537;;b1,0;;mCarbonInterval $ci;;pClosure $callback;;p\Carbon\Carbon|\DateTimeInterface|string|null $date;;pbool $absolute;;p">
					<treenode node="absolute;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f86;3536;95;3536;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f61;3536;70;3536;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="ci;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f48;3536;51;3536;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f72;3536;77;3536;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="diffForHumans;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3721;5;3829;;;;vpos;;vstring;;r&#xA;Definition&#xA;    diffForHumans($other = null, $absolute = false, $short = false, $parts = 1)&#xA;&#xA;Description&#xA;     Get the difference in a human readable format in the current locale.&#xA;&#xA;Parameters:&#xA;    Carbon|null $other&#xA;    bool $absolute - removes time difference modifiers ago, after, etc&#xA;    bool $short - displays short format of time units&#xA;    int $parts - displays number of parts in the interval;;d4,3722;;b1,0;;mCarbon|null $other;;pbool $absolute;;pbool $short;;pint $parts;;p">
					<treenode node="absolute;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f49;3721;58;3721;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="other;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f34;3721;40;3721;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parts;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f84;3721;90;3721;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="short;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f68;3721;74;3721;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="diffInDays;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3493;5;3496;;;;vpos;;vint;;r&#xA;Definition&#xA;    diffInDays($date = null, $absolute = true)&#xA;&#xA;Description&#xA;     Get the difference in days&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|string|null $date&#xA;    bool $absolute - Get the absolute of the difference;;d4,3494;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|string|null $date;;pbool $absolute;;p">
					<treenode node="absolute;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f45;3493;54;3493;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f31;3493;36;3493;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="diffInDaysFiltered;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3507;5;3510;;;;vpos;;vint;;r&#xA;Definition&#xA;    diffInDaysFiltered(Closure $callback, $date = null, $absolute = true)&#xA;&#xA;Description&#xA;     Get the difference in days using a filter closure&#xA;&#xA;Parameters:&#xA;    Closure $callback&#xA;    \Carbon\Carbon|\DateTimeInterface|string|null $date&#xA;    bool $absolute - Get the absolute of the difference;;d4,3508;;b1,0;;mClosure $callback;;p\Carbon\Carbon|\DateTimeInterface|string|null $date;;pbool $absolute;;p">
					<treenode node="absolute;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f72;3507;81;3507;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f47;3507;56;3507;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f58;3507;63;3507;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="diffInHours;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3596;5;3599;;;;vpos;;vint;;r&#xA;Definition&#xA;    diffInHours($date = null, $absolute = true)&#xA;&#xA;Description&#xA;     Get the difference in hours.&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|string|null $date&#xA;    bool $absolute - Get the absolute of the difference;;d4,3597;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|string|null $date;;pbool $absolute;;p">
					<treenode node="absolute;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f46;3596;55;3596;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f32;3596;37;3596;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="diffInHoursFiltered;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3521;5;3524;;;;vpos;;vint;;r&#xA;Definition&#xA;    diffInHoursFiltered(Closure $callback, $date = null, $absolute = true)&#xA;&#xA;Description&#xA;     Get the difference in hours using a filter closure&#xA;&#xA;Parameters:&#xA;    Closure $callback&#xA;    \Carbon\Carbon|\DateTimeInterface|string|null $date&#xA;    bool $absolute - Get the absolute of the difference;;d4,3522;;b1,0;;mClosure $callback;;p\Carbon\Carbon|\DateTimeInterface|string|null $date;;pbool $absolute;;p">
					<treenode node="absolute;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f73;3521;82;3521;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f48;3521;57;3521;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f59;3521;64;3521;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="diffInMinutes;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3622;5;3625;;;;vpos;;vint;;r&#xA;Definition&#xA;    diffInMinutes($date = null, $absolute = true)&#xA;&#xA;Description&#xA;     Get the difference in minutes.&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|string|null $date&#xA;    bool $absolute - Get the absolute of the difference;;d4,3623;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|string|null $date;;pbool $absolute;;p">
					<treenode node="absolute;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f48;3622;57;3622;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f34;3622;39;3622;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="diffInMonths;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3465;5;3470;;;;vpos;;vint;;r&#xA;Definition&#xA;    diffInMonths($date = null, $absolute = true)&#xA;&#xA;Description&#xA;     Get the difference in months&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|string|null $date&#xA;    bool $absolute - Get the absolute of the difference;;d4,3466;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|string|null $date;;pbool $absolute;;p">
					<treenode node="absolute;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f47;3465;56;3465;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f33;3465;38;3465;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="diffInRealHours;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3609;5;3612;;;;vpos;;vint;;r&#xA;Definition&#xA;    diffInRealHours($date = null, $absolute = true)&#xA;&#xA;Description&#xA;     Get the difference in hours using timestamps.&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|string|null $date&#xA;    bool $absolute - Get the absolute of the difference;;d4,3610;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|string|null $date;;pbool $absolute;;p">
					<treenode node="absolute;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f50;3609;59;3609;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f36;3609;41;3609;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="diffInRealMinutes;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3635;5;3638;;;;vpos;;vint;;r&#xA;Definition&#xA;    diffInRealMinutes($date = null, $absolute = true)&#xA;&#xA;Description&#xA;     Get the difference in minutes using timestamps.&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|string|null $date&#xA;    bool $absolute - Get the absolute of the difference;;d4,3636;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|string|null $date;;pbool $absolute;;p">
					<treenode node="absolute;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f52;3635;61;3635;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f38;3635;43;3635;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="diffInRealSeconds;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3667;5;3673;;;;vpos;;vint;;r&#xA;Definition&#xA;    diffInRealSeconds($date = null, $absolute = true)&#xA;&#xA;Description&#xA;     Get the difference in seconds using timestamps.&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|string|null $date&#xA;    bool $absolute - Get the absolute of the difference;;d4,3668;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|string|null $date;;pbool $absolute;;p">
					<treenode node="absolute;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f52;3667;61;3667;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f38;3667;43;3667;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="diffInSeconds;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3648;5;3657;;;;vpos;;vint;;r&#xA;Definition&#xA;    diffInSeconds($date = null, $absolute = true)&#xA;&#xA;Description&#xA;     Get the difference in seconds.&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|string|null $date&#xA;    bool $absolute - Get the absolute of the difference;;d4,3649;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|string|null $date;;pbool $absolute;;p">
					<treenode node="absolute;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f48;3648;57;3648;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f34;3648;39;3648;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="diffInWeekdays;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3566;5;3571;;;;vpos;;vint;;r&#xA;Definition&#xA;    diffInWeekdays($date = null, $absolute = true)&#xA;&#xA;Description&#xA;     Get the difference in weekdays&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|string|null $date&#xA;    bool $absolute - Get the absolute of the difference;;d4,3567;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|string|null $date;;pbool $absolute;;p">
					<treenode node="absolute;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f49;3566;58;3566;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f35;3566;40;3566;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="diffInWeekendDays;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3581;5;3586;;;;vpos;;vint;;r&#xA;Definition&#xA;    diffInWeekendDays($date = null, $absolute = true)&#xA;&#xA;Description&#xA;     Get the difference in weekend days using a filter&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|string|null $date&#xA;    bool $absolute - Get the absolute of the difference;;d4,3582;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|string|null $date;;pbool $absolute;;p">
					<treenode node="absolute;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f52;3581;61;3581;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f38;3581;43;3581;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="diffInWeeks;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3480;5;3483;;;;vpos;;vint;;r&#xA;Definition&#xA;    diffInWeeks($date = null, $absolute = true)&#xA;&#xA;Description&#xA;     Get the difference in weeks&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|string|null $date&#xA;    bool $absolute - Get the absolute of the difference;;d4,3481;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|string|null $date;;pbool $absolute;;p">
					<treenode node="absolute;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f46;3480;55;3480;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f32;3480;37;3480;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="diffInYears;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3452;5;3455;;;;vpos;;vint;;r&#xA;Definition&#xA;    diffInYears($date = null, $absolute = true)&#xA;&#xA;Description&#xA;     Get the difference in years&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|string|null $date&#xA;    bool $absolute - Get the absolute of the difference;;d4,3453;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|string|null $date;;pbool $absolute;;p">
					<treenode node="absolute;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f46;3452;55;3452;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f32;3452;37;3452;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="disableHumanDiffOption;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;303;5;306;;;;vpos;;v;;r&#xA;Definition&#xA;    disableHumanDiffOption($humanDiffOption)&#xA;&#xA;Description&#xA;     &#xA;&#xA;Parameters:&#xA;    int $humanDiffOption;;d4,304;;b1,5;;mint $humanDiffOption;;p">
					<treenode node="humanDiffOption;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f50;303;66;303;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="enableHumanDiffOption;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;295;5;298;;;;vpos;;v;;r&#xA;Definition&#xA;    enableHumanDiffOption($humanDiffOption)&#xA;&#xA;Description&#xA;     &#xA;&#xA;Parameters:&#xA;    int $humanDiffOption;;d4,296;;b1,5;;mint $humanDiffOption;;p">
					<treenode node="humanDiffOption;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f49;295;65;295;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="endOfCentury;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3958;5;3963;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    endOfCentury()&#xA;&#xA;Description&#xA;     Resets the date to end of the century and time to 23:59:59;;d4,3959;;b1,0;;m">
				</treenode>
				<treenode node="endOfDay;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3850;5;3853;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    endOfDay()&#xA;&#xA;Description&#xA;     Resets the time to 23:59:59 end of day;;d4,3851;;b1,0;;m">
				</treenode>
				<treenode node="endOfDecade;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3934;5;3939;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    endOfDecade()&#xA;&#xA;Description&#xA;     Resets the date to end of the decade and time to 23:59:59;;d4,3935;;b1,0;;m">
				</treenode>
				<treenode node="endOfHour;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;4008;5;4011;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    endOfHour()&#xA;&#xA;Description&#xA;     Modify to end of current hour, minutes and seconds become 59;;d4,4009;;b1,0;;m">
				</treenode>
				<treenode node="endOfMinute;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;4028;5;4031;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    endOfMinute()&#xA;&#xA;Description&#xA;     Modify to end of current minute, seconds become 59;;d4,4029;;b1,0;;m">
				</treenode>
				<treenode node="endOfMonth;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3870;5;3873;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    endOfMonth()&#xA;&#xA;Description&#xA;     Resets the date to end of the month and time to 23:59:59;;d4,3871;;b1,0;;m">
				</treenode>
				<treenode node="endOfQuarter;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3892;5;3895;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    endOfQuarter()&#xA;&#xA;Description&#xA;     Resets the date to end of the quarter and time to 23:59:59;;d4,3893;;b1,0;;m">
				</treenode>
				<treenode node="endOfWeek;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3984;5;3991;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    endOfWeek()&#xA;&#xA;Description&#xA;     Resets the date to end of week (defined in $weekEndsAt) and time to 23:59:59;;d4,3985;;b1,0;;m">
				</treenode>
				<treenode node="endOfYear;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3912;5;3915;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    endOfYear()&#xA;&#xA;Description&#xA;     Resets the date to end of the year and time to 23:59:59;;d4,3913;;b1,0;;m">
				</treenode>
				<treenode node="eq;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1825;5;1828;;;;vpos;;vbool;;r&#xA;Definition&#xA;    eq($date)&#xA;&#xA;Description&#xA;     Determines if the instance is equal to another&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|mixed $date;;d4,1826;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|mixed $date;;p">
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f23;1825;28;1825;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="equalTo;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1839;5;1842;;;;vpos;;vbool;;r&#xA;Definition&#xA;    equalTo($date)&#xA;&#xA;Description&#xA;     Determines if the instance is equal to another&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|mixed $date;;d4,1840;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|mixed $date;;p">
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f28;1839;33;1839;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="expectDateTime;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f21;924;5;932;;;;vpos;;v;;r&#xA;Definition&#xA;    expectDateTime($date)&#xA;&#xA;Description&#xA;     Throws an exception if the given object is not a DateTime and does not implement DateTimeInterface.&#xA;&#xA;Parameters:&#xA;    mixed $date;;d4,925;;b2,5;;mmixed $date;;p">
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f45;924;50;924;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="farthest;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2019;5;2022;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    farthest($date1, $date2)&#xA;&#xA;Description&#xA;     Get the farthest date from the instance.&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|mixed $date1&#xA;    \Carbon\Carbon|\DateTimeInterface|mixed $date2;;d4,2020;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|mixed $date1;;p\Carbon\Carbon|\DateTimeInterface|mixed $date2;;p">
					<treenode node="date1;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f29;2019;35;2019;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="date2;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f37;2019;43;2019;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="firstOfMonth;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;4150;5;4159;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    firstOfMonth($dayOfWeek = null)&#xA;&#xA;Description&#xA;     Modify to the first occurrence of a given day of the week in the current month. If no dayOfWeek is provided, modify to the first day of the current month.  Use the supplied constants to indicate the desired dayOfWeek, ex. static::MONDAY.&#xA;&#xA;Parameters:&#xA;    int|null $dayOfWeek;;d4,4151;;b1,0;;mint|null $dayOfWeek;;p">
					<treenode node="dayOfWeek;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f33;4150;43;4150;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="firstOfQuarter;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;4212;5;4215;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    firstOfQuarter($dayOfWeek = null)&#xA;&#xA;Description&#xA;     Modify to the first occurrence of a given day of the week in the current quarter. If no dayOfWeek is provided, modify to the first day of the current quarter.  Use the supplied constants to indicate the desired dayOfWeek, ex. static::MONDAY.&#xA;&#xA;Parameters:&#xA;    int|null $dayOfWeek - day of the week default null;;d4,4213;;b1,0;;mint|null $dayOfWeek;;p">
					<treenode node="dayOfWeek;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f35;4212;45;4212;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="firstOfYear;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;4263;5;4266;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    firstOfYear($dayOfWeek = null)&#xA;&#xA;Description&#xA;     Modify to the first occurrence of a given day of the week in the current year. If no dayOfWeek is provided, modify to the first day of the current year.  Use the supplied constants to indicate the desired dayOfWeek, ex. static::MONDAY.&#xA;&#xA;Parameters:&#xA;    int|null $dayOfWeek - day of the week default null;;d4,4264;;b1,0;;mint|null $dayOfWeek;;p">
					<treenode node="dayOfWeek;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f32;4263;42;4263;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="formatLocalized;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1565;5;1575;;;;vpos;;vstring;;r&#xA;Definition&#xA;    formatLocalized($format)&#xA;&#xA;Description&#xA;     Format the instance with the current locale.  You can set the current locale using setlocale() http://php.net/setlocale.&#xA;&#xA;Parameters:&#xA;    string $format;;d4,1566;;b1,0;;mstring $format;;p">
					<treenode node="format;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f36;1565;43;1565;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fromSerialized;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;4336;5;4345;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    fromSerialized($value)&#xA;&#xA;Description&#xA;     Create an instance from a serialized string.&#xA;&#xA;Parameters:&#xA;    string $value;;d4,4337;;b1,5;;mstring $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f42;4336;48;4336;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getDays;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;1314;5;1317;;;;vpos;;varray;;r&#xA;Definition&#xA;    getDays()&#xA;&#xA;Description&#xA;     Get the days of the week;;d4,1315;;b1,5;;m">
				</treenode>
				<treenode node="getHumanDiffOptions;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;311;5;314;;;;vpos;;vint;;r&#xA;Definition&#xA;    getHumanDiffOptions()&#xA;&#xA;Description&#xA;     ;;d4,312;;b1,5;;m">
				</treenode>
				<treenode node="getLastErrors;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;853;5;856;;;;vpos;;v;;r&#xA;Definition&#xA;    getLastErrors()&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,854;;b1,5;;m">
				</treenode>
				<treenode node="getLocale;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;1526;5;1529;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getLocale()&#xA;&#xA;Description&#xA;     Get the current translator locale;;d4,1527;;b1,5;;m">
				</treenode>
				<treenode node="getMidDayAt;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;1394;5;1397;;;;vpos;;vint;;r&#xA;Definition&#xA;    getMidDayAt()&#xA;&#xA;Description&#xA;     get midday/noon hour;;d4,1395;;b1,5;;m">
				</treenode>
				<treenode node="getTestNow;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;1444;5;1447;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    getTestNow()&#xA;&#xA;Description&#xA;     Get the Carbon instance (real or mock) to be returned when a &quot;now&quot; instance is created.&#xA;&#xA;Return:&#xA;   the current instance used for testing;;d4,1445;;b1,5;;m">
				</treenode>
				<treenode node="getTranslator;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;1504;5;1507;;;;vpos;;v;;r&#xA;Definition&#xA;    getTranslator()&#xA;&#xA;Description&#xA;     Get the translator instance in use;;d4,1505;;b1,5;;m">
				</treenode>
				<treenode node="getWeekendDays;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;1372;5;1375;;;;vpos;;varray;;r&#xA;Definition&#xA;    getWeekendDays()&#xA;&#xA;Description&#xA;     Get weekend days;;d4,1373;;b1,5;;m">
				</treenode>
				<treenode node="getWeekEndsAt;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;1350;5;1353;;;;vpos;;vint;;r&#xA;Definition&#xA;    getWeekEndsAt()&#xA;&#xA;Description&#xA;     Get the last day of week;;d4,1351;;b1,5;;m">
				</treenode>
				<treenode node="getWeekStartsAt;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;1328;5;1331;;;;vpos;;vint;;r&#xA;Definition&#xA;    getWeekStartsAt()&#xA;&#xA;Description&#xA;     Get the first day of week;;d4,1329;;b1,5;;m">
				</treenode>
				<treenode node="greaterThan;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1891;5;1894;;;;vpos;;vbool;;r&#xA;Definition&#xA;    greaterThan($date)&#xA;&#xA;Description&#xA;     Determines if the instance is greater (after) than another&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|mixed $date;;d4,1892;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|mixed $date;;p">
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f32;1891;37;1891;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="greaterThanOrEqualTo;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1917;5;1920;;;;vpos;;vbool;;r&#xA;Definition&#xA;    greaterThanOrEqualTo($date)&#xA;&#xA;Description&#xA;     Determines if the instance is greater (after) than or equal to another&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|mixed $date;;d4,1918;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|mixed $date;;p">
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f41;1917;46;1917;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="gt;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1877;5;1880;;;;vpos;;vbool;;r&#xA;Definition&#xA;    gt($date)&#xA;&#xA;Description&#xA;     Determines if the instance is greater (after) than another&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|mixed $date;;d4,1878;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|mixed $date;;p">
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f23;1877;28;1877;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="gte;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1903;5;1906;;;;vpos;;vbool;;r&#xA;Definition&#xA;    gte($date)&#xA;&#xA;Description&#xA;     Determines if the instance is greater (after) than or equal to another&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|mixed $date;;d4,1904;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|mixed $date;;p">
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f24;1903;29;1903;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hasFormat;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;2546;5;2566;;;;vpos;;vbool;;r&#xA;Definition&#xA;    hasFormat($date, $format)&#xA;&#xA;Description&#xA;     Checks if the (date)time string is in a given format.&#xA;&#xA;Parameters:&#xA;    string $date&#xA;    string $format;;d4,2547;;b1,5;;mstring $date;;pstring $format;;p">
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f37;2546;42;2546;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="format;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f44;2546;51;2546;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hasMacro;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;4436;5;4439;;;;vpos;;vbool;;r&#xA;Definition&#xA;    hasMacro($name)&#xA;&#xA;Description&#xA;     Checks if macro is registered.&#xA;&#xA;Parameters:&#xA;    string $name;;d4,4437;;b1,5;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f36;4436;41;4436;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hasRelativeKeywords;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;1467;5;1479;;;;vpos;;vbool;;r&#xA;Definition&#xA;    hasRelativeKeywords($time)&#xA;&#xA;Description&#xA;     Determine if a time string will produce a relative date.&#xA;&#xA;Parameters:&#xA;    string $time&#xA;&#xA;Return:&#xA;   true if time match a relative date, false if absolute or invalid time string;;d4,1468;;b1,5;;mstring $time;;p">
					<treenode node="time;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f47;1467;52;1467;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hasTestNow;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;1455;5;1458;;;;vpos;;vbool;;r&#xA;Definition&#xA;    hasTestNow()&#xA;&#xA;Description&#xA;     Determine if there is a valid test instance set. A valid test instance is anything that is not null.&#xA;&#xA;Return:&#xA;   true if there is a test instance, otherwise false;;d4,1456;;b1,5;;m">
				</treenode>
				<treenode node="hour;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1136;5;1141;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    hour($value)&#xA;&#xA;Description&#xA;     Set the instance's hour&#xA;&#xA;Parameters:&#xA;    int $value;;d4,1137;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f25;1136;31;1136;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="instance;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;511;5;520;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    instance($date)&#xA;&#xA;Description&#xA;     Create a Carbon instance from a DateTime one.&#xA;&#xA;Parameters:&#xA;    \DateTime|\DateTimeInterface $date;;d4,512;;b1,5;;m\DateTime|\DateTimeInterface $date;;p">
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f36;511;41;511;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isBirthday;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2523;5;2526;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isBirthday($date = null)&#xA;&#xA;Description&#xA;     Check if its the birthday. Compares the date/month values of the two dates.&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|null $date - The instance to compare with or null to use current day;;d4,2524;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|null $date;;p">
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f31;2523;36;2523;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isCurrentDay;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2351;5;2354;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isCurrentDay()&#xA;&#xA;Description&#xA;     Determines if the instance is in the current day.;;d4,2352;;b1,0;;m">
				</treenode>
				<treenode node="isCurrentHour;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2373;5;2376;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isCurrentHour()&#xA;&#xA;Description&#xA;     Determines if the instance is in the current hour.;;d4,2374;;b1,0;;m">
				</treenode>
				<treenode node="isCurrentMinute;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2395;5;2398;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isCurrentMinute()&#xA;&#xA;Description&#xA;     Determines if the instance is in the current minute.;;d4,2396;;b1,0;;m">
				</treenode>
				<treenode node="isCurrentMonth;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2325;5;2328;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isCurrentMonth()&#xA;&#xA;Description&#xA;     Determines if the instance is in the current month;;d4,2326;;b1,0;;m">
				</treenode>
				<treenode node="isCurrentQuarter;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2298;5;2301;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isCurrentQuarter()&#xA;&#xA;Description&#xA;     Determines if the instance is in the current month;;d4,2299;;b1,0;;m">
				</treenode>
				<treenode node="isCurrentSecond;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2417;5;2420;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isCurrentSecond()&#xA;&#xA;Description&#xA;     Determines if the instance is in the current second.;;d4,2418;;b1,0;;m">
				</treenode>
				<treenode node="isCurrentYear;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2276;5;2279;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isCurrentYear()&#xA;&#xA;Description&#xA;     Determines if the instance is in the current year;;d4,2277;;b1,0;;m">
				</treenode>
				<treenode node="isDayOfWeek;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2441;5;2444;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isDayOfWeek($dayOfWeek)&#xA;&#xA;Description&#xA;     Checks if this day is a specific day of the week.&#xA;&#xA;Parameters:&#xA;    int $dayOfWeek;;d4,2442;;b1,0;;mint $dayOfWeek;;p">
					<treenode node="dayOfWeek;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f32;2441;42;2441;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isFriday;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2501;5;2504;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isFriday()&#xA;&#xA;Description&#xA;     Checks if this day is a Friday.;;d4,2502;;b1,0;;m">
				</treenode>
				<treenode node="isFuture;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2215;5;2218;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isFuture()&#xA;&#xA;Description&#xA;     Determines if the instance is in the future, ie. greater (after) than now;;d4,2216;;b1,0;;m">
				</treenode>
				<treenode node="isLastMonth;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2185;5;2188;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isLastMonth()&#xA;&#xA;Description&#xA;     Determines if the instance is within the last month;;d4,2186;;b1,0;;m">
				</treenode>
				<treenode node="isLastOfMonth;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2533;5;2536;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isLastOfMonth()&#xA;&#xA;Description&#xA;     Check if today is the last day of the Month;;d4,2534;;b1,0;;m">
				</treenode>
				<treenode node="isLastQuarter;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2165;5;2168;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isLastQuarter()&#xA;&#xA;Description&#xA;     Determines if the instance is within the last quarter;;d4,2166;;b1,0;;m">
				</treenode>
				<treenode node="isLastWeek;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2145;5;2148;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isLastWeek()&#xA;&#xA;Description&#xA;     Determines if the instance is within the last week;;d4,2146;;b1,0;;m">
				</treenode>
				<treenode node="isLastYear;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2205;5;2208;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isLastYear()&#xA;&#xA;Description&#xA;     Determines if the instance is within the previous year;;d4,2206;;b1,0;;m">
				</treenode>
				<treenode node="isLeapYear;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2235;5;2238;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isLeapYear()&#xA;&#xA;Description&#xA;     Determines if the instance is a leap year;;d4,2236;;b1,0;;m">
				</treenode>
				<treenode node="isLongYear;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2247;5;2250;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isLongYear()&#xA;&#xA;Description&#xA;     Determines if the instance is a long year;;d4,2248;;b1,0;;m">
				</treenode>
				<treenode node="isMicrosecondsFallbackEnabled;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;333;5;336;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isMicrosecondsFallbackEnabled()&#xA;&#xA;Description&#xA;     Return true if microseconds fallback on PHP &lt; 7.1 and 7.1.3 is enabled. false if disabled.;;d4,334;;b1,5;;m">
				</treenode>
				<treenode node="isMonday;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2461;5;2464;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isMonday()&#xA;&#xA;Description&#xA;     Checks if this day is a Monday.;;d4,2462;;b1,0;;m">
				</treenode>
				<treenode node="isNextMonth;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2175;5;2178;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isNextMonth()&#xA;&#xA;Description&#xA;     Determines if the instance is within the next month;;d4,2176;;b1,0;;m">
				</treenode>
				<treenode node="isNextQuarter;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2155;5;2158;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isNextQuarter()&#xA;&#xA;Description&#xA;     Determines if the instance is within the next quarter;;d4,2156;;b1,0;;m">
				</treenode>
				<treenode node="isNextWeek;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2135;5;2138;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isNextWeek()&#xA;&#xA;Description&#xA;     Determines if the instance is within the next week;;d4,2136;;b1,0;;m">
				</treenode>
				<treenode node="isNextYear;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2195;5;2198;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isNextYear()&#xA;&#xA;Description&#xA;     Determines if the instance is within next year;;d4,2196;;b1,0;;m">
				</treenode>
				<treenode node="isPast;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2225;5;2228;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isPast()&#xA;&#xA;Description&#xA;     Determines if the instance is in the past, ie. less (before) than now;;d4,2226;;b1,0;;m">
				</treenode>
				<treenode node="isSameAs;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2262;5;2269;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isSameAs($format, $date = null)&#xA;&#xA;Description&#xA;     Compares the formatted values of the two dates.&#xA;&#xA;Parameters:&#xA;    string $format - The date formats to compare&#xA;    \Carbon\Carbon|\DateTimeInterface|null $date - The instance to compare with or null to use current day;;d4,2263;;b1,0;;mstring $format;;p\Carbon\Carbon|\DateTimeInterface|null $date;;p">
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f38;2262;43;2262;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="format;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f29;2262;36;2262;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isSameDay;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2363;5;2366;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isSameDay($date = null)&#xA;&#xA;Description&#xA;     Checks if the passed in date is the same exact day as the instance´s day.&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|null $date - The instance to compare with or null to use the current date;;d4,2364;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|null $date;;p">
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f30;2363;35;2363;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isSameHour;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2385;5;2388;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isSameHour($date = null)&#xA;&#xA;Description&#xA;     Checks if the passed in date is the same exact hour as the instance´s hour.&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|null $date - The instance to compare with or null to use the current date;;d4,2386;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|null $date;;p">
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f31;2385;36;2385;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isSameMinute;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2407;5;2410;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isSameMinute($date = null)&#xA;&#xA;Description&#xA;     Checks if the passed in date is the same exact minute as the instance´s minute.&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|null $date - The instance to compare with or null to use the current date;;d4,2408;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|null $date;;p">
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f33;2407;38;2407;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isSameMonth;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2341;5;2344;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isSameMonth($date = null, $ofSameYear = false)&#xA;&#xA;Description&#xA;     Checks if the passed in date is in the same month as the instance´s month.&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|null $date - The instance to compare with or null to use the current date&#xA;    bool $ofSameYear - Check if it is the same month in the same year;;d4,2342;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|null $date;;pbool $ofSameYear;;p">
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f32;2341;37;2341;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="ofSameYear;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f46;2341;57;2341;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isSameQuarter;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2311;5;2318;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isSameQuarter($date = null, $ofSameYear = false)&#xA;&#xA;Description&#xA;     Checks if the passed in date is in the same quarter as the instance quarter (and year if needed).&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|null $date - The instance to compare with or null to use current day&#xA;    bool $ofSameYear - Check if it is the same month in the same year;;d4,2312;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|null $date;;pbool $ofSameYear;;p">
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f34;2311;39;2311;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="ofSameYear;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f48;2311;59;2311;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isSameSecond;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2429;5;2432;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isSameSecond($date = null)&#xA;&#xA;Description&#xA;     Checks if the passed in date is the same exact second as the instance´s second.&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|null $date - The instance to compare with or null to use the current date;;d4,2430;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|null $date;;p">
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f33;2429;38;2429;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isSameYear;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2288;5;2291;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isSameYear($date = null)&#xA;&#xA;Description&#xA;     Checks if the passed in date is in the same year as the instance year.&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|null $date - The instance to compare with or null to use current day;;d4,2289;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|null $date;;p">
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f31;2288;36;2288;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isSaturday;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2511;5;2514;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isSaturday()&#xA;&#xA;Description&#xA;     Checks if this day is a Saturday.;;d4,2512;;b1,0;;m">
				</treenode>
				<treenode node="isSunday;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2451;5;2454;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isSunday()&#xA;&#xA;Description&#xA;     Checks if this day is a Sunday.;;d4,2452;;b1,0;;m">
				</treenode>
				<treenode node="isThursday;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2491;5;2494;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isThursday()&#xA;&#xA;Description&#xA;     Checks if this day is a Thursday.;;d4,2492;;b1,0;;m">
				</treenode>
				<treenode node="isToday;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2115;5;2118;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isToday()&#xA;&#xA;Description&#xA;     Determines if the instance is today;;d4,2116;;b1,0;;m">
				</treenode>
				<treenode node="isTomorrow;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2125;5;2128;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isTomorrow()&#xA;&#xA;Description&#xA;     Determines if the instance is tomorrow;;d4,2126;;b1,0;;m">
				</treenode>
				<treenode node="isTuesday;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2471;5;2474;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isTuesday()&#xA;&#xA;Description&#xA;     Checks if this day is a Tuesday.;;d4,2472;;b1,0;;m">
				</treenode>
				<treenode node="isWednesday;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2481;5;2484;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isWednesday()&#xA;&#xA;Description&#xA;     Checks if this day is a Wednesday.;;d4,2482;;b1,0;;m">
				</treenode>
				<treenode node="isWeekday;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2085;5;2088;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isWeekday()&#xA;&#xA;Description&#xA;     Determines if the instance is a weekday;;d4,2086;;b1,0;;m">
				</treenode>
				<treenode node="isWeekend;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2095;5;2098;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isWeekend()&#xA;&#xA;Description&#xA;     Determines if the instance is a weekend day;;d4,2096;;b1,0;;m">
				</treenode>
				<treenode node="isYesterday;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2105;5;2108;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isYesterday()&#xA;&#xA;Description&#xA;     Determines if the instance is yesterday;;d4,2106;;b1,0;;m">
				</treenode>
				<treenode node="jsonSerialize;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;4364;5;4375;;;;vpos;;varray;;r&#xA;Definition&#xA;    jsonSerialize()&#xA;&#xA;Description&#xA;     Prepare the object for JSON serialization.&#xA;&#xA;Return:&#xA;   |string;;d4,4365;;b1,0;;m">
				</treenode>
				<treenode node="lastOfMonth;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;4171;5;4180;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    lastOfMonth($dayOfWeek = null)&#xA;&#xA;Description&#xA;     Modify to the last occurrence of a given day of the week in the current month. If no dayOfWeek is provided, modify to the last day of the current month.  Use the supplied constants to indicate the desired dayOfWeek, ex. static::MONDAY.&#xA;&#xA;Parameters:&#xA;    int|null $dayOfWeek;;d4,4172;;b1,0;;mint|null $dayOfWeek;;p">
					<treenode node="dayOfWeek;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f32;4171;42;4171;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="lastOfQuarter;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;4227;5;4230;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    lastOfQuarter($dayOfWeek = null)&#xA;&#xA;Description&#xA;     Modify to the last occurrence of a given day of the week in the current quarter. If no dayOfWeek is provided, modify to the last day of the current quarter.  Use the supplied constants to indicate the desired dayOfWeek, ex. static::MONDAY.&#xA;&#xA;Parameters:&#xA;    int|null $dayOfWeek - day of the week default null;;d4,4228;;b1,0;;mint|null $dayOfWeek;;p">
					<treenode node="dayOfWeek;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f34;4227;44;4227;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="lastOfYear;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;4278;5;4281;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    lastOfYear($dayOfWeek = null)&#xA;&#xA;Description&#xA;     Modify to the last occurrence of a given day of the week in the current year. If no dayOfWeek is provided, modify to the last day of the current year.  Use the supplied constants to indicate the desired dayOfWeek, ex. static::MONDAY.&#xA;&#xA;Parameters:&#xA;    int|null $dayOfWeek - day of the week default null;;d4,4279;;b1,0;;mint|null $dayOfWeek;;p">
					<treenode node="dayOfWeek;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f31;4278;41;4278;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="lessThan;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1943;5;1946;;;;vpos;;vbool;;r&#xA;Definition&#xA;    lessThan($date)&#xA;&#xA;Description&#xA;     Determines if the instance is less (before) than another&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|mixed $date;;d4,1944;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|mixed $date;;p">
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f29;1943;34;1943;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="lessThanOrEqualTo;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1969;5;1972;;;;vpos;;vbool;;r&#xA;Definition&#xA;    lessThanOrEqualTo($date)&#xA;&#xA;Description&#xA;     Determines if the instance is less (before) or equal to another&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|mixed $date;;d4,1970;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|mixed $date;;p">
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f38;1969;43;1969;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="lt;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1929;5;1932;;;;vpos;;vbool;;r&#xA;Definition&#xA;    lt($date)&#xA;&#xA;Description&#xA;     Determines if the instance is less (before) than another&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|mixed $date;;d4,1930;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|mixed $date;;p">
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f23;1929;28;1929;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="lte;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1955;5;1958;;;;vpos;;vbool;;r&#xA;Definition&#xA;    lte($date)&#xA;&#xA;Description&#xA;     Determines if the instance is less (before) or equal to another&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|mixed $date;;d4,1956;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|mixed $date;;p">
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f24;1955;29;1955;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="macro;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;4401;5;4404;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    macro($name, $macro)&#xA;&#xA;Description&#xA;     Register a custom macro.&#xA;&#xA;Parameters:&#xA;    string $name&#xA;    object|callable $macro;;d4,4402;;b1,5;;mstring $name;;pobject|callable $macro;;p">
					<treenode node="macro;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f40;4401;46;4401;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f33;4401;38;4401;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="max;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2059;5;2064;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    max($date = null)&#xA;&#xA;Description&#xA;     Get the maximum instance between a given instance (default now) and the current instance.&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|mixed $date;;d4,2060;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|mixed $date;;p">
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f24;2059;29;2059;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="maximum;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2075;5;2078;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    maximum($date = null)&#xA;&#xA;Description&#xA;     Get the maximum instance between a given instance (default now) and the current instance.&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|mixed $date;;d4,2076;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|mixed $date;;p">
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f28;2075;33;2075;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="maxValue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;592;5;601;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    maxValue()&#xA;&#xA;Description&#xA;     Create a Carbon instance for the greatest supported date.;;d4,593;;b1,5;;m">
				</treenode>
				<treenode node="midDay;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;4038;5;4041;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    midDay()&#xA;&#xA;Description&#xA;     Modify to midday, default to self::$midDayAt;;d4,4039;;b1,0;;m">
				</treenode>
				<treenode node="min;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2031;5;2036;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    min($date = null)&#xA;&#xA;Description&#xA;     Get the minimum instance between a given instance (default now) and the current instance.&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|mixed $date;;d4,2032;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|mixed $date;;p">
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f24;2031;29;2031;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="minimum;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2047;5;2050;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    minimum($date = null)&#xA;&#xA;Description&#xA;     Get the minimum instance between a given instance (default now) and the current instance.&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|mixed $date;;d4,2048;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|mixed $date;;p">
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f28;2047;33;2047;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="minute;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1150;5;1155;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    minute($value)&#xA;&#xA;Description&#xA;     Set the instance's minute&#xA;&#xA;Parameters:&#xA;    int $value;;d4,1151;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f27;1150;33;1150;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="minValue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;608;5;617;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    minValue()&#xA;&#xA;Description&#xA;     Create a Carbon instance for the lowest supported date.;;d4,609;;b1,5;;m">
				</treenode>
				<treenode node="mixin;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;4415;5;4427;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    mixin($mixin)&#xA;&#xA;Description&#xA;     Mix another object into the class.&#xA;&#xA;Parameters:&#xA;    object $mixin;;d4,4416;;b1,5;;mobject $mixin;;p">
					<treenode node="mixin;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f33;4415;39;4415;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="month;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1108;5;1113;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    month($value)&#xA;&#xA;Description&#xA;     Set the instance's month&#xA;&#xA;Parameters:&#xA;    int $value;;d4,1109;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f26;1108;32;1108;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="ne;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1851;5;1854;;;;vpos;;vbool;;r&#xA;Definition&#xA;    ne($date)&#xA;&#xA;Description&#xA;     Determines if the instance is not equal to another&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|mixed $date;;d4,1852;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|mixed $date;;p">
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f23;1851;28;1851;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="next;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;4053;5;4060;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    next($dayOfWeek = null)&#xA;&#xA;Description&#xA;     Modify to the next occurrence of a given day of the week. If no dayOfWeek is provided, modify to the next occurrence of the current day of the week.  Use the supplied constants to indicate the desired dayOfWeek, ex. static::MONDAY.&#xA;&#xA;Parameters:&#xA;    int|null $dayOfWeek;;d4,4054;;b1,0;;mint|null $dayOfWeek;;p">
					<treenode node="dayOfWeek;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f25;4053;35;4053;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="nextOrPreviousDay;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f12;4070;5;4079;;;;vpos;;v;;r&#xA;Definition&#xA;    nextOrPreviousDay($weekday = true, $forward = true)&#xA;&#xA;Description&#xA;     Go forward or backward to the next week- or weekend-day.&#xA;&#xA;Parameters:&#xA;    bool $weekday&#xA;    bool $forward;;d4,4071;;b3,0;;mbool $weekday;;pbool $forward;;p">
					<treenode node="forward;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f56;4070;64;4070;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="weekday;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f39;4070;47;4070;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="nextWeekday;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;4086;5;4089;;;;vpos;;v;;r&#xA;Definition&#xA;    nextWeekday()&#xA;&#xA;Description&#xA;     Go forward to the next weekday.;;d4,4087;;b1,0;;m">
				</treenode>
				<treenode node="nextWeekendDay;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;4106;5;4109;;;;vpos;;v;;r&#xA;Definition&#xA;    nextWeekendDay()&#xA;&#xA;Description&#xA;     Go forward to the next weekend day.;;d4,4107;;b1,0;;m">
				</treenode>
				<treenode node="notEqualTo;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1865;5;1868;;;;vpos;;vbool;;r&#xA;Definition&#xA;    notEqualTo($date)&#xA;&#xA;Description&#xA;     Determines if the instance is not equal to another&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|mixed $date;;d4,1866;;b1,0;;m\Carbon\Carbon|\DateTimeInterface|mixed $date;;p">
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f31;1865;36;1865;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="now;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;546;5;549;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    now($tz = null)&#xA;&#xA;Description&#xA;     Get a Carbon instance for the current date and time.&#xA;&#xA;Parameters:&#xA;    \DateTimeZone|string|null $tz;;d4,547;;b1,5;;m\DateTimeZone|string|null $tz;;p">
					<treenode node="tz;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f31;546;34;546;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="nowWithSameTz;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;912;5;915;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    nowWithSameTz()&#xA;&#xA;Description&#xA;     Returns a present instance in the same timezone.;;d4,913;;b1,0;;m">
				</treenode>
				<treenode node="nthOfMonth;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;4193;5;4200;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    nthOfMonth($nth, $dayOfWeek)&#xA;&#xA;Description&#xA;     Modify to the given occurrence of a given day of the week in the current month. If the calculated occurrence is outside the scope of the current month, then return false and no modifications are made. Use the supplied constants to indicate the desired dayOfWeek, ex. static::MONDAY.&#xA;&#xA;Parameters:&#xA;    int $nth&#xA;    int $dayOfWeek;;d4,4194;;b1,0;;mint $nth;;pint $dayOfWeek;;p">
					<treenode node="dayOfWeek;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f37;4193;47;4193;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="nth;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f31;4193;35;4193;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="nthOfQuarter;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;4243;5;4251;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    nthOfQuarter($nth, $dayOfWeek)&#xA;&#xA;Description&#xA;     Modify to the given occurrence of a given day of the week in the current quarter. If the calculated occurrence is outside the scope of the current quarter, then return false and no modifications are made. Use the supplied constants to indicate the desired dayOfWeek, ex. static::MONDAY.&#xA;&#xA;Parameters:&#xA;    int $nth&#xA;    int $dayOfWeek;;d4,4244;;b1,0;;mint $nth;;pint $dayOfWeek;;p">
					<treenode node="dayOfWeek;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f39;4243;49;4243;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="nth;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f33;4243;37;4243;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="nthOfYear;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;4294;5;4299;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    nthOfYear($nth, $dayOfWeek)&#xA;&#xA;Description&#xA;     Modify to the given occurrence of a given day of the week in the current year. If the calculated occurrence is outside the scope of the current year, then return false and no modifications are made. Use the supplied constants to indicate the desired dayOfWeek, ex. static::MONDAY.&#xA;&#xA;Parameters:&#xA;    int $nth&#xA;    int $dayOfWeek;;d4,4295;;b1,0;;mint $nth;;pint $dayOfWeek;;p">
					<treenode node="dayOfWeek;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f36;4294;46;4294;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="nth;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f30;4294;34;4294;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="parse;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;534;5;537;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    parse($time = null, $tz = null)&#xA;&#xA;Description&#xA;     Create a carbon instance from a string.&#xA;&#xA;Parameters:&#xA;    string|null $time&#xA;    \DateTimeZone|string|null $tz;;d4,535;;b1,5;;mstring|null $time;;p\DateTimeZone|string|null $tz;;p">
					<treenode node="time;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f33;534;38;534;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="tz;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f47;534;50;534;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="previous;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;4131;5;4138;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    previous($dayOfWeek = null)&#xA;&#xA;Description&#xA;     Modify to the previous occurrence of a given day of the week. If no dayOfWeek is provided, modify to the previous occurrence of the current day of the week.  Use the supplied constants to indicate the desired dayOfWeek, ex. static::MONDAY.&#xA;&#xA;Parameters:&#xA;    int|null $dayOfWeek;;d4,4132;;b1,0;;mint|null $dayOfWeek;;p">
					<treenode node="dayOfWeek;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f29;4131;39;4131;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="previousWeekday;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;4096;5;4099;;;;vpos;;v;;r&#xA;Definition&#xA;    previousWeekday()&#xA;&#xA;Description&#xA;     Go backward to the previous weekday.;;d4,4097;;b1,0;;m">
				</treenode>
				<treenode node="previousWeekendDay;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;4116;5;4119;;;;vpos;;v;;r&#xA;Definition&#xA;    previousWeekendDay()&#xA;&#xA;Description&#xA;     Go backward to the previous weekend day.;;d4,4117;;b1,0;;m">
				</treenode>
				<treenode node="resetMonthsOverflow;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;355;5;358;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    resetMonthsOverflow()&#xA;&#xA;Description&#xA;     Reset the month overflow behavior.;;d4,356;;b1,5;;m">
				</treenode>
				<treenode node="resetToStringFormat;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;1582;5;1585;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    resetToStringFormat()&#xA;&#xA;Description&#xA;     Reset the format used to the default when type juggling a Carbon instance to a string;;d4,1583;;b1,5;;m">
				</treenode>
				<treenode node="resetYearsOverflow;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;387;5;390;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    resetYearsOverflow()&#xA;&#xA;Description&#xA;     Reset the month overflow behavior.;;d4,388;;b1,5;;m">
				</treenode>
				<treenode node="resolveCarbon;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f14;942;5;955;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    resolveCarbon($date = null)&#xA;&#xA;Description&#xA;     Return the Carbon instance passed through, a now instance in the same timezone if null given or parse the input if string given.&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface|string|null $date;;d4,943;;b2,0;;m\Carbon\Carbon|\DateTimeInterface|string|null $date;;p">
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f37;942;42;942;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="safeCreateDateTimeZone;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f21;411;5;439;;;;vpos;;v;;r&#xA;Definition&#xA;    safeCreateDateTimeZone($object)&#xA;&#xA;Description&#xA;     Creates a DateTimeZone from a string, DateTimeZone or integer offset.&#xA;&#xA;Parameters:&#xA;    \DateTimeZone|string|int|null $object;;d4,412;;b2,5;;m\DateTimeZone|string|int|null $object;;p">
					<treenode node="object;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f53;411;60;411;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="second;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1164;5;1169;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    second($value)&#xA;&#xA;Description&#xA;     Set the instance's second&#xA;&#xA;Parameters:&#xA;    int $value;;d4,1165;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f27;1164;33;1164;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="secondsSinceMidnight;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3680;5;3683;;;;vpos;;vint;;r&#xA;Definition&#xA;    secondsSinceMidnight()&#xA;&#xA;Description&#xA;     The number of seconds since midnight.;;d4,3681;;b1,0;;m">
				</treenode>
				<treenode node="secondsUntilEndOfDay;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3690;5;3693;;;;vpos;;vint;;r&#xA;Definition&#xA;    secondsUntilEndOfDay()&#xA;&#xA;Description&#xA;     The number of seconds until 23:59:59.;;d4,3691;;b1,0;;m">
				</treenode>
				<treenode node="serialize;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;4322;5;4325;;;;vpos;;vstring;;r&#xA;Definition&#xA;    serialize()&#xA;&#xA;Description&#xA;     Return a serialized string of the instance.;;d4,4323;;b1,0;;m">
				</treenode>
				<treenode node="serializeUsing;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;4384;5;4387;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    serializeUsing($callback)&#xA;&#xA;Description&#xA;     JSON serialize all Carbon instances using the given callback.&#xA;&#xA;Parameters:&#xA;    callable $callback;;d4,4385;;b1,5;;mcallable $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f42;4384;51;4384;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setDate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1184;5;1189;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    setDate($year, $month, $day)&#xA;&#xA;Description&#xA;     Sets the current date of the DateTime object to a different date. Calls modify as a workaround for a php bug&#xA;&#xA;Parameters:&#xA;    int $year&#xA;    int $month&#xA;    int $day;;d4,1185;;b1,0;;mint $year;;pint $month;;pint $day;;p">
					<treenode node="day;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f43;1184;47;1184;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="month;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f35;1184;41;1184;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="year;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f28;1184;33;1184;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setDateFrom;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1284;5;1291;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    setDateFrom($date)&#xA;&#xA;Description&#xA;     Set the year, month, and date for this instance to that of the passed instance.&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface $date;;d4,1285;;b1,0;;m\Carbon\Carbon|\DateTimeInterface $date;;p">
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f32;1284;37;1284;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setDateTime;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1203;5;1206;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    setDateTime($year, $month, $day, $hour, $minute, $second = 0)&#xA;&#xA;Description&#xA;     Set the date and time all together&#xA;&#xA;Parameters:&#xA;    int $year&#xA;    int $month&#xA;    int $day&#xA;    int $hour&#xA;    int $minute&#xA;    int $second;;d4,1204;;b1,0;;mint $year;;pint $month;;pint $day;;pint $hour;;pint $minute;;pint $second;;p">
					<treenode node="day;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f47;1203;51;1203;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="hour;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f53;1203;58;1203;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="minute;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f60;1203;67;1203;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="month;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f39;1203;45;1203;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="second;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f69;1203;76;1203;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="year;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f32;1203;37;1203;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setHumanDiffOptions;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;287;5;290;;;;vpos;;v;;r&#xA;Definition&#xA;    setHumanDiffOptions($humanDiffOptions)&#xA;&#xA;Description&#xA;     &#xA;&#xA;Parameters:&#xA;    int $humanDiffOptions;;d4,288;;b1,5;;mint $humanDiffOptions;;p">
					<treenode node="humanDiffOptions;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f47;287;64;287;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setLastErrors;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f19;845;5;848;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setLastErrors(array $lastErrors)&#xA;&#xA;Description&#xA;     Set last errors.&#xA;&#xA;Parameters:&#xA;    array $lastErrors;;d4,846;;b3,5;;marray $lastErrors;;p">
					<treenode node="lastErrors;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f48;845;59;845;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setLocale;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;1538;5;1541;;;;vpos;;vbool;;r&#xA;Definition&#xA;    setLocale($locale)&#xA;&#xA;Description&#xA;     Set the current translator locale and indicate if the source locale file exists&#xA;&#xA;Parameters:&#xA;    string $locale - locale ex;;d4,1539;;b1,5;;mstring $locale;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f37;1538;44;1538;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setMidDayAt;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;1406;5;1409;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setMidDayAt($hour)&#xA;&#xA;Description&#xA;     Set midday/noon hour&#xA;&#xA;Parameters:&#xA;    int $hour - midday hour;;d4,1407;;b1,5;;mint $hour;;p">
					<treenode node="hour;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f39;1406;44;1406;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setTestNow;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;1433;5;1436;;;;vpos;;v;;r&#xA;Definition&#xA;    setTestNow($testNow = null)&#xA;&#xA;Description&#xA;     Set a Carbon instance (real or mock) to be returned when a &quot;now&quot; instance is created.  The provided instance will be returned specifically under the following conditions: - A call to the static now() method, ex. Carbon::now() - When a null (or blank string) is passed to the constructor or parse(), ex. new Carbon(null) - When the string &quot;now&quot; is passed to the constructor or parse(), ex. new Carbon('now') - When a string containing the desired time is passed to Carbon::parse().&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|null $testNow - real or mock Carbon instance&#xA;    \Carbon\Carbon|string|null $testNow;;d4,1434;;b1,5;;mtestNow;;p">
					<treenode node="testNow;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f38;1433;46;1433;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setTimeFrom;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1300;5;1307;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    setTimeFrom($date)&#xA;&#xA;Description&#xA;     Set the hour, day, and time for this instance to that of the passed instance.&#xA;&#xA;Parameters:&#xA;    \Carbon\Carbon|\DateTimeInterface $date;;d4,1301;;b1,0;;m\Carbon\Carbon|\DateTimeInterface $date;;p">
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f32;1300;37;1300;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setTimeFromTimeString;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1215;5;1222;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    setTimeFromTimeString($time)&#xA;&#xA;Description&#xA;     Set the time by time string&#xA;&#xA;Parameters:&#xA;    string $time;;d4,1216;;b1,0;;mstring $time;;p">
					<treenode node="time;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f42;1215;47;1215;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setTimezone;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1267;5;1275;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    setTimezone($value)&#xA;&#xA;Description&#xA;     Set the instance's timezone from a string or object&#xA;&#xA;Parameters:&#xA;    \DateTimeZone|string $value;;d4,1268;;b1,0;;m\DateTimeZone|string $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f32;1267;38;1267;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setToStringFormat;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;1594;5;1597;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setToStringFormat($format)&#xA;&#xA;Description&#xA;     Set the default format used when type juggling a Carbon instance to a string&#xA;&#xA;Parameters:&#xA;    string $format;;d4,1595;;b1,5;;mstring $format;;p">
					<treenode node="format;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f45;1594;52;1594;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setTranslator;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;1516;5;1519;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setTranslator(TranslatorInterface $translator)&#xA;&#xA;Description&#xA;     Set the translator instance to use&#xA;&#xA;Parameters:&#xA;    \Symfony\Component\Translation\TranslatorInterface $translator;;d4,1517;;b1,5;;m\Symfony\Component\Translation\TranslatorInterface $translator;;p">
					<treenode node="translator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f61;1516;72;1516;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setUtf8;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;1552;5;1555;;;;vpos;;v;;r&#xA;Definition&#xA;    setUtf8($utf8)&#xA;&#xA;Description&#xA;     Set if UTF8 will be used for localized date/time&#xA;&#xA;Parameters:&#xA;    bool $utf8;;d4,1553;;b1,5;;mbool $utf8;;p">
					<treenode node="utf8;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f35;1552;40;1552;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setWeekendDays;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;1384;5;1387;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setWeekendDays($days)&#xA;&#xA;Description&#xA;     Set weekend days&#xA;&#xA;Parameters:&#xA;    array $days;;d4,1385;;b1,5;;marray $days;;p">
					<treenode node="days;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f42;1384;47;1384;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setWeekEndsAt;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;1362;5;1365;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setWeekEndsAt($day)&#xA;&#xA;Description&#xA;     Set the last day of week&#xA;&#xA;Parameters:&#xA;    int $day;;d4,1363;;b1,5;;mint $day;;p">
					<treenode node="day;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f41;1362;45;1362;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setWeekStartsAt;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;1340;5;1343;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setWeekStartsAt($day)&#xA;&#xA;Description&#xA;     Set the first day of week&#xA;&#xA;Parameters:&#xA;    int $day - week start day;;d4,1341;;b1,5;;mint $day;;p">
					<treenode node="day;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f43;1340;47;1340;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="shouldOverflowMonths;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;365;5;368;;;;vpos;;vbool;;r&#xA;Definition&#xA;    shouldOverflowMonths()&#xA;&#xA;Description&#xA;     Get the month overflow behavior.;;d4,366;;b1,5;;m">
				</treenode>
				<treenode node="shouldOverflowYears;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;397;5;400;;;;vpos;;vbool;;r&#xA;Definition&#xA;    shouldOverflowYears()&#xA;&#xA;Description&#xA;     Get the month overflow behavior.;;d4,398;;b1,5;;m">
				</treenode>
				<treenode node="startOfCentury;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3946;5;3951;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    startOfCentury()&#xA;&#xA;Description&#xA;     Resets the date to the first day of the century and the time to 00:00:00;;d4,3947;;b1,0;;m">
				</treenode>
				<treenode node="startOfDay;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3840;5;3843;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    startOfDay()&#xA;&#xA;Description&#xA;     Resets the time to 00:00:00 start of day;;d4,3841;;b1,0;;m">
				</treenode>
				<treenode node="startOfDecade;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3922;5;3927;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    startOfDecade()&#xA;&#xA;Description&#xA;     Resets the date to the first day of the decade and the time to 00:00:00;;d4,3923;;b1,0;;m">
				</treenode>
				<treenode node="startOfHour;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3998;5;4001;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    startOfHour()&#xA;&#xA;Description&#xA;     Modify to start of current hour, minutes and seconds become 0;;d4,3999;;b1,0;;m">
				</treenode>
				<treenode node="startOfMinute;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;4018;5;4021;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    startOfMinute()&#xA;&#xA;Description&#xA;     Modify to start of current minute, seconds become 0;;d4,4019;;b1,0;;m">
				</treenode>
				<treenode node="startOfMonth;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3860;5;3863;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    startOfMonth()&#xA;&#xA;Description&#xA;     Resets the date to the first day of the month and the time to 00:00:00;;d4,3861;;b1,0;;m">
				</treenode>
				<treenode node="startOfQuarter;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3880;5;3885;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    startOfQuarter()&#xA;&#xA;Description&#xA;     Resets the date to the first day of the quarter and the time to 00:00:00;;d4,3881;;b1,0;;m">
				</treenode>
				<treenode node="startOfWeek;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3970;5;3977;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    startOfWeek()&#xA;&#xA;Description&#xA;     Resets the date to the first day of week (defined in $weekStartsAt) and the time to 00:00:00;;d4,3971;;b1,0;;m">
				</treenode>
				<treenode node="startOfYear;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3902;5;3905;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    startOfYear()&#xA;&#xA;Description&#xA;     Resets the date to the first day of the year and the time to 00:00:00;;d4,3903;;b1,0;;m">
				</treenode>
				<treenode node="subCenturies;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2604;5;2607;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    subCenturies($value)&#xA;&#xA;Description&#xA;     Remove centuries from the instance&#xA;&#xA;Parameters:&#xA;    int $value;;d4,2605;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f33;2604;39;2604;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subCentury;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2616;5;2619;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    subCentury($value = 1)&#xA;&#xA;Description&#xA;     Remove a century from the instance&#xA;&#xA;Parameters:&#xA;    int $value;;d4,2617;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f31;2616;37;2616;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subDay;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3026;5;3029;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    subDay($value = 1)&#xA;&#xA;Description&#xA;     Remove a day from the instance&#xA;&#xA;Parameters:&#xA;    int $value;;d4,3027;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f27;3026;33;3026;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subDays;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3014;5;3017;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    subDays($value)&#xA;&#xA;Description&#xA;     Remove days from the instance&#xA;&#xA;Parameters:&#xA;    int $value;;d4,3015;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f28;3014;34;3014;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subHour;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3214;5;3217;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    subHour($value = 1)&#xA;&#xA;Description&#xA;     Remove an hour from the instance.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,3215;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f28;3214;34;3214;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subHours;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3190;5;3193;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    subHours($value)&#xA;&#xA;Description&#xA;     Remove hours from the instance.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,3191;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f29;3190;35;3190;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subMinute;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3288;5;3291;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    subMinute($value = 1)&#xA;&#xA;Description&#xA;     Remove a minute from the instance.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,3289;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f30;3288;36;3288;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subMinutes;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3312;5;3315;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    subMinutes($value)&#xA;&#xA;Description&#xA;     Remove minutes from the instance.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,3313;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f31;3312;37;3312;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subMonth;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2871;5;2874;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    subMonth($value = 1)&#xA;&#xA;Description&#xA;     Remove a month from the instance&#xA;&#xA;Parameters:&#xA;    int $value;;d4,2872;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f29;2871;35;2871;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subMonthNoOverflow;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2977;5;2980;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    subMonthNoOverflow($value = 1)&#xA;&#xA;Description&#xA;     Remove a month with no overflow from the instance&#xA;&#xA;Parameters:&#xA;    int $value;;d4,2978;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f39;2977;45;2977;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subMonths;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2859;5;2862;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    subMonths($value)&#xA;&#xA;Description&#xA;     Remove months from the instance&#xA;&#xA;Parameters:&#xA;    int $value;;d4,2860;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f30;2859;36;2859;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subMonthsNoOverflow;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2965;5;2968;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    subMonthsNoOverflow($value)&#xA;&#xA;Description&#xA;     Remove months with no overflow from the instance&#xA;&#xA;Parameters:&#xA;    int $value;;d4,2966;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f40;2965;46;2965;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subMonthsWithOverflow;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2908;5;2911;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    subMonthsWithOverflow($value)&#xA;&#xA;Description&#xA;     Remove months from the instance&#xA;&#xA;Parameters:&#xA;    int $value;;d4,2909;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f42;2908;48;2908;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subMonthWithOverflow;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2920;5;2923;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    subMonthWithOverflow($value = 1)&#xA;&#xA;Description&#xA;     Remove a month from the instance&#xA;&#xA;Parameters:&#xA;    int $value;;d4,2921;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f41;2920;47;2920;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subQuarter;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2818;5;2821;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    subQuarter($value = 1)&#xA;&#xA;Description&#xA;     Remove a quarter from the instance&#xA;&#xA;Parameters:&#xA;    int $value;;d4,2819;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f31;2818;37;2818;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subQuarters;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2806;5;2809;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    subQuarters($value)&#xA;&#xA;Description&#xA;     Remove quarters from the instance&#xA;&#xA;Parameters:&#xA;    int $value;;d4,2807;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f32;2806;38;2806;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subRealHour;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3226;5;3229;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    subRealHour($value = 1)&#xA;&#xA;Description&#xA;     Remove an hour from the instance.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,3227;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f32;3226;38;3226;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subRealHours;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3202;5;3205;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    subRealHours($value)&#xA;&#xA;Description&#xA;     Remove hours from the instance using timestamp.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,3203;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f33;3202;39;3202;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subRealMinute;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3300;5;3303;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    subRealMinute($value = 1)&#xA;&#xA;Description&#xA;     Remove a minute from the instance using timestamp.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,3301;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f34;3300;40;3300;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subRealMinutes;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3324;5;3327;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    subRealMinutes($value = 1)&#xA;&#xA;Description&#xA;     Remove a minute from the instance using timestamp.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,3325;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f35;3324;41;3324;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subRealSecond;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3422;5;3425;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    subRealSecond($value = 1)&#xA;&#xA;Description&#xA;     Remove a second from the instance using timestamp.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,3423;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f34;3422;40;3422;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subRealSeconds;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3398;5;3401;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    subRealSeconds($value)&#xA;&#xA;Description&#xA;     Remove seconds from the instance using timestamp.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,3399;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f35;3398;41;3398;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subSecond;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3410;5;3413;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    subSecond($value = 1)&#xA;&#xA;Description&#xA;     Remove a second from the instance&#xA;&#xA;Parameters:&#xA;    int $value;;d4,3411;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f30;3410;36;3410;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subSeconds;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3386;5;3389;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    subSeconds($value)&#xA;&#xA;Description&#xA;     Remove seconds from the instance.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,3387;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f31;3386;37;3386;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subWeek;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3128;5;3131;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    subWeek($value = 1)&#xA;&#xA;Description&#xA;     Remove a week from the instance&#xA;&#xA;Parameters:&#xA;    int $value;;d4,3129;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f28;3128;34;3128;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subWeekday;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3079;5;3082;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    subWeekday($value = 1)&#xA;&#xA;Description&#xA;     Remove a weekday from the instance&#xA;&#xA;Parameters:&#xA;    int $value;;d4,3080;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f31;3079;37;3079;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subWeekdays;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3067;5;3070;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    subWeekdays($value)&#xA;&#xA;Description&#xA;     Remove weekdays from the instance&#xA;&#xA;Parameters:&#xA;    int $value;;d4,3068;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f32;3067;38;3067;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subWeeks;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;3116;5;3119;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    subWeeks($value)&#xA;&#xA;Description&#xA;     Remove weeks to the instance&#xA;&#xA;Parameters:&#xA;    int $value;;d4,3117;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f29;3116;35;3116;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subYear;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2721;5;2724;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    subYear($value = 1)&#xA;&#xA;Description&#xA;     Remove a year from the instance&#xA;&#xA;Parameters:&#xA;    int $value;;d4,2722;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f28;2721;34;2721;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subYearNoOverflow;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2745;5;2748;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    subYearNoOverflow($value = 1)&#xA;&#xA;Description&#xA;     Remove year from the instance with no month overflow&#xA;&#xA;Parameters:&#xA;    int $value;;d4,2746;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f38;2745;44;2745;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subYears;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2709;5;2712;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    subYears($value)&#xA;&#xA;Description&#xA;     Remove years from the instance.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,2710;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f29;2709;35;2709;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subYearsNoOverflow;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2733;5;2736;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    subYearsNoOverflow($value)&#xA;&#xA;Description&#xA;     Remove years from the instance with no month overflow.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,2734;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f39;2733;45;2733;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subYearsWithOverflow;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2757;5;2760;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    subYearsWithOverflow($value)&#xA;&#xA;Description&#xA;     Remove years from the instance.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,2758;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f41;2757;47;2757;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subYearWithOverflow;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;2769;5;2772;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    subYearWithOverflow($value = 1)&#xA;&#xA;Description&#xA;     Remove year from the instance.&#xA;&#xA;Parameters:&#xA;    int $value;;d4,2770;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f40;2769;46;2769;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="timestamp;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1231;5;1234;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    timestamp($value)&#xA;&#xA;Description&#xA;     Set the instance's timestamp&#xA;&#xA;Parameters:&#xA;    int $value;;d4,1232;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f30;1231;36;1231;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="timezone;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1243;5;1246;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    timezone($value)&#xA;&#xA;Description&#xA;     Alias for setTimezone()&#xA;&#xA;Parameters:&#xA;    \DateTimeZone|string $value;;d4,1244;;b1,0;;m\DateTimeZone|string $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f29;1243;35;1243;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="toArray;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1796;5;1812;;;;vpos;;varray;;r&#xA;Definition&#xA;    toArray()&#xA;&#xA;Description&#xA;     Get default array representation;;d4,1797;;b1,0;;m">
				</treenode>
				<treenode node="toAtomString;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1664;5;1667;;;;vpos;;vstring;;r&#xA;Definition&#xA;    toAtomString()&#xA;&#xA;Description&#xA;     Format the instance as ATOM;;d4,1665;;b1,0;;m">
				</treenode>
				<treenode node="toCookieString;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1674;5;1677;;;;vpos;;vstring;;r&#xA;Definition&#xA;    toCookieString()&#xA;&#xA;Description&#xA;     Format the instance as COOKIE;;d4,1675;;b1,0;;m">
				</treenode>
				<treenode node="toDateString;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1614;5;1617;;;;vpos;;vstring;;r&#xA;Definition&#xA;    toDateString()&#xA;&#xA;Description&#xA;     Format the instance as date;;d4,1615;;b1,0;;m">
				</treenode>
				<treenode node="toDateTimeString;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1644;5;1647;;;;vpos;;vstring;;r&#xA;Definition&#xA;    toDateTimeString()&#xA;&#xA;Description&#xA;     Format the instance as date and time;;d4,1645;;b1,0;;m">
				</treenode>
				<treenode node="today;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;558;5;561;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    today($tz = null)&#xA;&#xA;Description&#xA;     Create a Carbon instance for today.&#xA;&#xA;Parameters:&#xA;    \DateTimeZone|string|null $tz;;d4,559;;b1,5;;m\DateTimeZone|string|null $tz;;p">
					<treenode node="tz;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f33;558;36;558;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="toDayDateTimeString;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1654;5;1657;;;;vpos;;vstring;;r&#xA;Definition&#xA;    toDayDateTimeString()&#xA;&#xA;Description&#xA;     Format the instance with day, date and time;;d4,1655;;b1,0;;m">
				</treenode>
				<treenode node="toFormattedDateString;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1624;5;1627;;;;vpos;;vstring;;r&#xA;Definition&#xA;    toFormattedDateString()&#xA;&#xA;Description&#xA;     Format the instance as a readable date;;d4,1625;;b1,0;;m">
				</treenode>
				<treenode node="toIso8601String;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1684;5;1687;;;;vpos;;vstring;;r&#xA;Definition&#xA;    toIso8601String()&#xA;&#xA;Description&#xA;     Format the instance as ISO8601;;d4,1685;;b1,0;;m">
				</treenode>
				<treenode node="toIso8601ZuluString;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1704;5;1707;;;;vpos;;vstring;;r&#xA;Definition&#xA;    toIso8601ZuluString()&#xA;&#xA;Description&#xA;     Convert the instance to UTC and return as Zulu ISO8601;;d4,1705;;b1,0;;m">
				</treenode>
				<treenode node="tomorrow;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;570;5;573;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    tomorrow($tz = null)&#xA;&#xA;Description&#xA;     Create a Carbon instance for tomorrow.&#xA;&#xA;Parameters:&#xA;    \DateTimeZone|string|null $tz;;d4,571;;b1,5;;m\DateTimeZone|string|null $tz;;p">
					<treenode node="tz;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f36;570;39;570;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="toRfc1036String;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1724;5;1727;;;;vpos;;vstring;;r&#xA;Definition&#xA;    toRfc1036String()&#xA;&#xA;Description&#xA;     Format the instance as RFC1036;;d4,1725;;b1,0;;m">
				</treenode>
				<treenode node="toRfc1123String;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1734;5;1737;;;;vpos;;vstring;;r&#xA;Definition&#xA;    toRfc1123String()&#xA;&#xA;Description&#xA;     Format the instance as RFC1123;;d4,1735;;b1,0;;m">
				</treenode>
				<treenode node="toRfc2822String;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1744;5;1747;;;;vpos;;vstring;;r&#xA;Definition&#xA;    toRfc2822String()&#xA;&#xA;Description&#xA;     Format the instance as RFC2822;;d4,1745;;b1,0;;m">
				</treenode>
				<treenode node="toRfc3339String;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1754;5;1757;;;;vpos;;vstring;;r&#xA;Definition&#xA;    toRfc3339String()&#xA;&#xA;Description&#xA;     Format the instance as RFC3339;;d4,1755;;b1,0;;m">
				</treenode>
				<treenode node="toRfc7231String;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1784;5;1789;;;;vpos;;vstring;;r&#xA;Definition&#xA;    toRfc7231String()&#xA;&#xA;Description&#xA;     Format the instance as RFC7231;;d4,1785;;b1,0;;m">
				</treenode>
				<treenode node="toRfc822String;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1694;5;1697;;;;vpos;;vstring;;r&#xA;Definition&#xA;    toRfc822String()&#xA;&#xA;Description&#xA;     Format the instance as RFC822;;d4,1695;;b1,0;;m">
				</treenode>
				<treenode node="toRfc850String;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1714;5;1717;;;;vpos;;vstring;;r&#xA;Definition&#xA;    toRfc850String()&#xA;&#xA;Description&#xA;     Format the instance as RFC850;;d4,1715;;b1,0;;m">
				</treenode>
				<treenode node="toRssString;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1764;5;1767;;;;vpos;;vstring;;r&#xA;Definition&#xA;    toRssString()&#xA;&#xA;Description&#xA;     Format the instance as RSS;;d4,1765;;b1,0;;m">
				</treenode>
				<treenode node="toTimeString;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1634;5;1637;;;;vpos;;vstring;;r&#xA;Definition&#xA;    toTimeString()&#xA;&#xA;Description&#xA;     Format the instance as time;;d4,1635;;b1,0;;m">
				</treenode>
				<treenode node="toW3cString;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1774;5;1777;;;;vpos;;vstring;;r&#xA;Definition&#xA;    toW3cString()&#xA;&#xA;Description&#xA;     Format the instance as W3C;;d4,1775;;b1,0;;m">
				</treenode>
				<treenode node="translator;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f21;1490;5;1497;;;;vpos;;v;;r&#xA;Definition&#xA;    translator()&#xA;&#xA;Description&#xA;     Initialize the translator instance if necessary.;;d4,1491;;b2,5;;m">
				</treenode>
				<treenode node="tz;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1255;5;1258;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    tz($value)&#xA;&#xA;Description&#xA;     Alias for setTimezone()&#xA;&#xA;Parameters:&#xA;    \DateTimeZone|string $value;;d4,1256;;b1,0;;m\DateTimeZone|string $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f23;1255;29;1255;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="useMicrosecondsFallback;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;322;5;325;;;;vpos;;v;;r&#xA;Definition&#xA;    useMicrosecondsFallback($microsecondsFallback = true)&#xA;&#xA;Description&#xA;     Add microseconds to now on PHP &lt; 7.1 and 7.1.3 if set to true, let microseconds to 0 on those PHP versions if false.&#xA;&#xA;Parameters:&#xA;    bool $microsecondsFallback;;d4,323;;b1,5;;mbool $microsecondsFallback;;p">
					<treenode node="microsecondsFallback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f51;322;72;322;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="useMonthsOverflow;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;345;5;348;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    useMonthsOverflow($monthsOverflow = true)&#xA;&#xA;Description&#xA;     Indicates if months should be calculated with overflow.&#xA;&#xA;Parameters:&#xA;    bool $monthsOverflow;;d4,346;;b1,5;;mbool $monthsOverflow;;p">
					<treenode node="monthsOverflow;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f45;345;60;345;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="useYearsOverflow;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;377;5;380;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    useYearsOverflow($yearsOverflow = true)&#xA;&#xA;Description&#xA;     Indicates if years should be calculated with overflow.&#xA;&#xA;Parameters:&#xA;    bool $yearsOverflow;;d4,378;;b1,5;;mbool $yearsOverflow;;p">
					<treenode node="yearsOverflow;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f44;377;58;377;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="year;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f11;1094;5;1099;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    year($value)&#xA;&#xA;Description&#xA;     Set the instance's year&#xA;&#xA;Parameters:&#xA;    int $value;;d4,1095;;b1,0;;mint $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f25;1094;31;1094;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="yesterday;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;582;5;585;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    yesterday($tz = null)&#xA;&#xA;Description&#xA;     Create a Carbon instance for yesterday.&#xA;&#xA;Parameters:&#xA;    \DateTimeZone|string|null $tz;;d4,583;;b1,5;;m\DateTimeZone|string|null $tz;;p">
					<treenode node="tz;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f37;582;40;582;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="day;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f21;29;26;29;;;;vposint;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="days;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f21;77;26;77;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="hour;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f21;30;27;30;;;;vposint;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="humanDiffOptions;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f21;282;38;282;;;;vposint;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="lastErrors;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f21;233;32;233;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="localMacros;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f21;247;33;247;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="microsecondsFallback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f21;261;42;261;;;;vposbool;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="midDayAt;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f21;164;30;164;;;;vposint;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="minute;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f21;31;29;31;;;;vposint;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="month;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f21;28;28;28;;;;vposint;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="monthsOverflow;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f21;268;36;268;;;;vposbool;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="PHPIntSize;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f18;126;29;126;;;;vposint;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
				<treenode node="regexFormats;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f21;171;34;171;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="second;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f21;32;29;32;;;;vposint;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="serializer;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f21;240;32;240;;;;vposcallable;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="testNow;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f21;219;29;219;;;;vpos;;v;;r&#xA;Description&#xA;     A test Carbon instance to be returned when now instances are created.;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="timestamp;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f21;33;32;33;;;;vposint;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="toStringFormat;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f21;133;36;133;;;;vposstring;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="translator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f21;226;32;226;;;;vpos;;v;;r&#xA;Description&#xA;     A translator to ... er ... translate stuff.;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="utf8;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f21;254;26;254;;;;vposbool;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="weekendDays;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f21;154;33;154;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="weekEndsAt;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f21;147;32;147;;;;vposint;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="weekStartsAt;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f21;140;34;140;;;;vposint;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="year;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f21;26;27;26;;;;vposint;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="yearIso;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f21;27;30;27;;;;vposint;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="yearsOverflow;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php;f21;275;35;275;;;;vposbool;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="CarbonInterval;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f0;63;1;728;;;;vpos;;vDateInterval;;c;;r&#xA;Definition&#xA;    class CarbonInterval extends DateInterval&#xA;&#xA;Description&#xA;     A simple API extension for DateInterval. The implementation provides helpers to handle weeks but only days are saved. Weeks are calculated based on the total days of the current instance.;;d0,64;;b0,0;;m">
				<treenode node="PERIOD_DAYS;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f9;71;21;71;;;;vpos;;v;;r'D';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="PERIOD_HOURS;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f9;73;22;73;;;;vpos;;v;;r'H';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="PERIOD_MINUTES;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f9;74;24;74;;;;vpos;;v;;r'M';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="PERIOD_MONTHS;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f9;70;23;70;;;;vpos;;v;;r'M';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="PERIOD_PREFIX;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f9;68;23;68;;;;vpos;;v;;r&#xA;Description&#xA;     Interval spec period designators;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="PERIOD_SECONDS;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f9;75;24;75;;;;vpos;;v;;r'S';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="PERIOD_TIME_PREFIX;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f9;72;28;72;;;;vpos;;v;;r'T';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="PERIOD_YEARS;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f9;69;22;69;;;;vpos;;v;;r'Y';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="PHP_DAYS_FALSE;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f9;88;24;88;;;;vpos;;v;;r&#xA;Description&#xA;     Before PHP 5.4.20/5.5.4 instead of FALSE days will be set to -99999 when the interval instance was created by DateTime::diff().;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="__call;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f11;516;5;559;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    __call($name, $args)&#xA;&#xA;Description&#xA;     Allow fluent calls on the setters... CarbonInterval::years(3)-&gt;months(5)-&gt;day().&#xA;&#xA;Parameters:&#xA;    string $name&#xA;    array $args;;d4,517;;b1,0;;mstring $name;;parray $args;;p">
					<treenode node="args;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f34;516;39;516;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f27;516;32;516;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__callStatic;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f18;181;5;215;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    __callStatic($name, $args)&#xA;&#xA;Description&#xA;     Provide static helpers to create instances.  Allows CarbonInterval::years(3).&#xA;&#xA;Parameters:&#xA;    string $name&#xA;    array $args;;d4,182;;b1,5;;mstring $name;;parray $args;;p">
					<treenode node="args;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f47;181;52;181;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f40;181;45;181;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f11;117;5;147;;;;vpos;;v;;r&#xA;Definition&#xA;    __construct($years = 1, $months = null, $weeks = null, $days = null, $hours = null, $minutes = null, $seconds = null)&#xA;&#xA;Description&#xA;     Create a new CarbonInterval instance.&#xA;&#xA;Parameters:&#xA;    int $years&#xA;    int $months&#xA;    int $weeks&#xA;    int $days&#xA;    int $hours&#xA;    int $minutes&#xA;    int $seconds;;d4,118;;b1,0;;mint $years;;pint $months;;pint $weeks;;pint $days;;pint $hours;;pint $minutes;;pint $seconds;;p">
					<treenode node="days;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f75;117;80;117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="hours;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f89;117;95;117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="minutes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f104;117;112;117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="months;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f44;117;51;117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="seconds;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f121;117;129;117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="weeks;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f60;117;66;117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="years;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f32;117;38;117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__get;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f11;416;5;447;;;;vpos;;vint;;r&#xA;Definition&#xA;    __get($name)&#xA;&#xA;Description&#xA;     Get a part of the CarbonInterval object&#xA;&#xA;Parameters:&#xA;    string $name;;d4,417;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f26;416;31;416;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__set;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f11;457;5;488;;;;vpos;;v;;r&#xA;Definition&#xA;    __set($name, $val)&#xA;&#xA;Description&#xA;     Set a part of the CarbonInterval object&#xA;&#xA;Parameters:&#xA;    string $name&#xA;    int $val;;d4,458;;b1,0;;mstring $name;;pint $val;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f26;457;31;457;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="val;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f33;457;37;457;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__toString;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f11;593;5;596;;;;vpos;;vstring;;r&#xA;Definition&#xA;    __toString()&#xA;&#xA;Description&#xA;     Format the instance as a string using the forHumans() function.;;d4,594;;b1,0;;m">
				</treenode>
				<treenode node="add;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f11;605;5;621;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    add(DateInterval $interval)&#xA;&#xA;Description&#xA;     Add the passed interval to the current instance&#xA;&#xA;Parameters:&#xA;    DateInterval $interval;;d4,606;;b1,0;;mDateInterval $interval;;p">
					<treenode node="interval;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f37;605;46;605;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compare;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f11;724;5;727;;;;vpos;;vint;;r&#xA;Definition&#xA;    compare(DateInterval $interval)&#xA;&#xA;Description&#xA;     Comparing with passed interval&#xA;&#xA;Parameters:&#xA;    DateInterval $interval;;d4,725;;b1,0;;mDateInterval $interval;;p">
					<treenode node="interval;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f41;724;50;724;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compareDateIntervals;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f18;702;5;715;;;;vpos;;vint;;r&#xA;Definition&#xA;    compareDateIntervals(DateInterval $a, DateInterval $b)&#xA;&#xA;Description&#xA;     Comparing 2 date intervals&#xA;&#xA;Parameters:&#xA;    DateInterval $a&#xA;    DateInterval $b;;d4,703;;b1,5;;mDateInterval $a;;pDateInterval $b;;p">
					<treenode node="a;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f61;702;63;702;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="b;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f78;702;80;702;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="create;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f18;165;5;168;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    create($years = 1, $months = null, $weeks = null, $days = null, $hours = null, $minutes = null, $seconds = null)&#xA;&#xA;Description&#xA;     Create a new CarbonInterval instance from specific values. This is an alias for the constructor that allows better fluent syntax as it allows you to do CarbonInterval::create(1)-&gt;fn() rather than (new CarbonInterval(1))-&gt;fn().&#xA;&#xA;Parameters:&#xA;    int $years&#xA;    int $months&#xA;    int $weeks&#xA;    int $days&#xA;    int $hours&#xA;    int $minutes&#xA;    int $seconds;;d4,166;;b1,5;;mint $years;;pint $months;;pint $weeks;;pint $days;;pint $hours;;pint $minutes;;pint $seconds;;p">
					<treenode node="days;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f77;165;82;165;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="hours;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f91;165;97;165;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="minutes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f106;165;114;165;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="months;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f46;165;53;165;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="seconds;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f123;165;131;165;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="weeks;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f62;165;68;165;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="years;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f34;165;40;165;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="forHumans;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f11;566;5;586;;;;vpos;;vstring;;r&#xA;Definition&#xA;    forHumans()&#xA;&#xA;Description&#xA;     Get the current interval in a human readable format in the current locale.;;d4,567;;b1,0;;m">
				</treenode>
				<treenode node="fromString;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f18;243;5;326;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    fromString($intervalDefinition)&#xA;&#xA;Description&#xA;     Creates a CarbonInterval from string&#xA;&#xA;Parameters:&#xA;    string $intervalDefinition;;d4,244;;b1,5;;mstring $intervalDefinition;;p">
					<treenode node="intervalDefinition;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f38;243;57;243;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getDateIntervalSpec;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f18;654;5;682;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getDateIntervalSpec(DateInterval $interval)&#xA;&#xA;Description&#xA;     Get the interval_spec string of a date interval&#xA;&#xA;Parameters:&#xA;    DateInterval $interval;;d4,655;;b1,5;;mDateInterval $interval;;p">
					<treenode node="interval;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f60;654;69;654;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getLocale;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f18;388;5;391;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getLocale()&#xA;&#xA;Description&#xA;     Get the current translator locale;;d4,389;;b1,5;;m">
				</treenode>
				<treenode node="getTranslator;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f18;368;5;371;;;;vpos;;v;;r&#xA;Definition&#xA;    getTranslator()&#xA;&#xA;Description&#xA;     Get the translator instance in use;;d4,369;;b1,5;;m">
				</treenode>
				<treenode node="instance;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f18;337;5;343;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    instance(DateInterval $di)&#xA;&#xA;Description&#xA;     Create a CarbonInterval instance from a DateInterval one.  Can not instance DateInterval objects created from DateTime::diff() as you can't externally set the $days field.&#xA;&#xA;Parameters:&#xA;    DateInterval $di;;d4,338;;b1,5;;mDateInterval $di;;p">
					<treenode node="di;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f49;337;52;337;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setLocale;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f18;398;5;401;;;;vpos;;v;;r&#xA;Definition&#xA;    setLocale($locale)&#xA;&#xA;Description&#xA;     Set the current translator locale&#xA;&#xA;Parameters:&#xA;    string $locale;;d4,399;;b1,5;;mstring $locale;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f37;398;44;398;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setTranslator;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f18;378;5;381;;;;vpos;;v;;r&#xA;Definition&#xA;    setTranslator(TranslatorInterface $translator)&#xA;&#xA;Description&#xA;     Set the translator instance to use&#xA;&#xA;Parameters:&#xA;    TranslatorInterface $translator;;d4,379;;b1,5;;mTranslatorInterface $translator;;p">
					<treenode node="translator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f61;378;72;378;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="spec;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f11;689;5;692;;;;vpos;;vstring;;r&#xA;Definition&#xA;    spec()&#xA;&#xA;Description&#xA;     Get the interval_spec string;;d4,690;;b1,0;;m">
				</treenode>
				<treenode node="times;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f11;630;5;645;;;;vpos;;v;;r&#xA;Definition&#xA;    times($factor)&#xA;&#xA;Description&#xA;     Multiply current instance given number of times&#xA;&#xA;Parameters:&#xA;    float $factor;;d4,631;;b1,0;;mfloat $factor;;p">
					<treenode node="factor;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f26;630;33;630;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="translator;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f21;354;5;361;;;;vpos;;v;;r&#xA;Definition&#xA;    translator()&#xA;&#xA;Description&#xA;     Initialize the translator instance if necessary.;;d4,355;;b2,5;;m">
				</treenode>
				<treenode node="wasCreatedFromDiff;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f19;97;5;100;;;;vpos;;vbool;;r&#xA;Definition&#xA;    wasCreatedFromDiff(DateInterval $interval)&#xA;&#xA;Description&#xA;     Determine if the interval was created via DateTime:diff() or not.&#xA;&#xA;Parameters:&#xA;    DateInterval $interval;;d4,98;;b3,5;;mDateInterval $interval;;p">
					<treenode node="interval;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f60;97;69;97;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="weeksAndDays;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f11;498;5;503;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    weeksAndDays($weeks, $days)&#xA;&#xA;Description&#xA;     Allow setting of weeks and days to be cumulative.&#xA;&#xA;Parameters:&#xA;    int $weeks - Number of weeks to set&#xA;    int $days - Number of days to set;;d4,499;;b1,0;;mint $weeks;;pint $days;;p">
					<treenode node="days;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f41;498;46;498;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="weeks;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f33;498;39;498;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dayz;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f16;25;22;25;;;;vposint;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="hours;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f16;26;23;26;;;;vposint;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="minutes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f16;27;25;27;;;;vposint;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="months;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f16;23;24;23;;;;vposint;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="seconds;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f16;28;25;28;;;;vposint;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="translator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f21;82;32;82;;;;vpos;;v;;r&#xA;Description&#xA;     A translator to ... er ... translate stuff;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="weeks;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f16;24;23;24;;;;vposint;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="years;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php;f16;22;23;22;;;;vposint;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="ChainExtractor;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\ChainExtractor.php;f0;20;1;59;;;;vpos;;vExtractorInterface;;c;;r&#xA;Definition&#xA;    class ChainExtractor implements ExtractorInterface&#xA;&#xA;Description&#xA;     ChainExtractor extracts translation messages from template files.;;d0,21;;b0,0;;m">
				<treenode node="addExtractor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\ChainExtractor.php;f11;35;5;38;;;;vpos;;v;;r&#xA;Definition&#xA;    addExtractor($format, ExtractorInterface $extractor)&#xA;&#xA;Description&#xA;     Adds a loader to the translation extractor.&#xA;&#xA;Parameters:&#xA;    string $format - The format of the loader&#xA;    ExtractorInterface $extractor - The loader;;d4,36;;b1,0;;mstring $format;;pExtractorInterface $extractor;;p">
					<treenode node="extractor;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\ChainExtractor.php;f61;35;71;35;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="format;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\ChainExtractor.php;f33;35;40;35;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="extract;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\ChainExtractor.php;f11;53;5;58;;;;vpos;;v;;r&#xA;Definition&#xA;    extract($directory, MessageCatalogue $catalogue)&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,54;;b1,0;;mdirectory;;pcatalogue;;p">
					<treenode node="catalogue;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\ChainExtractor.php;f57;53;67;53;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="directory;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\ChainExtractor.php;f28;53;38;53;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setPrefix;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\ChainExtractor.php;f11;43;5;48;;;;vpos;;v;;r&#xA;Definition&#xA;    setPrefix($prefix)&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,44;;b1,0;;mprefix;;p">
					<treenode node="prefix;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\ChainExtractor.php;f30;43;37;43;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="extractors;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\ChainExtractor.php;f12;27;23;27;;;;vposExtractorInterface;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
			</treenode>
			<treenode node="ClassLoader;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ClassLoader.php;f0;4;1;103;;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f0;42;1;434;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="add;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f11;108;5;143;;;;vpos;;v;;r&#xA;Definition&#xA;    add($prefix, $paths, $prepend = false)&#xA;&#xA;Description&#xA;     Registers a set of PSR-0 directories for a given prefix, either appending or prepending to the ones previously set for this prefix.&#xA;&#xA;Parameters:&#xA;    string $prefix - The prefix&#xA;    array|string $paths - The PSR-0 root directories&#xA;    bool $prepend - Whether to prepend the directories;;d4,109;;b1,0;;mstring $prefix;;parray|string $paths;;pbool $prepend;;p">
					<treenode node="paths;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f33;108;39;108;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="prefix;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f24;108;31;108;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="prepend;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f41;108;49;108;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addClassMap;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f11;91;5;98;;;;vpos;;v;;r&#xA;Definition&#xA;    addClassMap(array $classMap)&#xA;&#xA;Description&#xA;      Class to filename map&#xA;&#xA;Parameters:&#xA;    array $classMap - Class to filename map;;d4,92;;b1,0;;marray $classMap;;p">
					<treenode node="classMap;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f38;91;47;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addDirectories;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ClassLoader.php;f18;74;5;77;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    addDirectories($directories)&#xA;&#xA;Description&#xA;     Add directories to the class loader.&#xA;&#xA;Parameters:&#xA;    string|array $directories;;d4,75;;b1,5;;mstring|array $directories;;p">
					<treenode node="directories;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ClassLoader.php;f42;74;54;74;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addPsr4;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f11;155;5;191;;;;vpos;;v;;r&#xA;Definition&#xA;    addPsr4($prefix, $paths, $prepend = false)&#xA;&#xA;Description&#xA;     Registers a set of PSR-4 directories for a given namespace, either appending or prepending to the ones previously set for this namespace.&#xA;&#xA;Parameters:&#xA;    string $prefix - The prefix/namespace, with trailing '\\'&#xA;    array|string $paths - The PSR-4 base directories&#xA;    bool $prepend - Whether to prepend the directories;;d4,156;;b1,0;;mstring $prefix;;parray|string $paths;;pbool $prepend;;p">
					<treenode node="paths;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f37;155;43;155;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="prefix;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f28;155;35;155;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="prepend;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f45;155;53;155;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="findFile;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f11;334;5;367;;;;vpos;;vstring;;r&#xA;Definition&#xA;    findFile($class)&#xA;&#xA;Description&#xA;     Finds the path to the file where the class is defined.&#xA;&#xA;Parameters:&#xA;    string $class - The name of the class&#xA;&#xA;Return:&#xA;   |false The path if found, false otherwise;;d4,335;;b1,0;;mstring $class;;p">
					<treenode node="class;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f29;334;35;334;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="findFileWithExtension;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f12;369;5;433;;;;vpos;;v;;r;;d4,370;;b3,0;;mclass;;pext;;p">
					<treenode node="class;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f43;369;49;369;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="ext;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f51;369;55;369;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getApcuPrefix;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f11;289;5;292;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getApcuPrefix()&#xA;&#xA;Description&#xA;     The APCu prefix in use, or null if APCu caching is not enabled.&#xA;&#xA;Return:&#xA;   |null;;d4,290;;b1,0;;m">
				</treenode>
				<treenode node="getClassMap;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f11;83;5;86;;;;vpos;;v;;r;;d4,84;;b1,0;;m">
				</treenode>
				<treenode node="getDirectories;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ClassLoader.php;f18;99;5;102;;;;vpos;;varray;;r&#xA;Definition&#xA;    getDirectories()&#xA;&#xA;Description&#xA;     Gets all the directories registered with the loader.;;d4,100;;b1,5;;m">
				</treenode>
				<treenode node="getFallbackDirs;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f11;73;5;76;;;;vpos;;v;;r;;d4,74;;b1,0;;m">
				</treenode>
				<treenode node="getFallbackDirsPsr4;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f11;78;5;81;;;;vpos;;v;;r;;d4,79;;b1,0;;m">
				</treenode>
				<treenode node="getPrefixes;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f11;59;5;66;;;;vpos;;v;;r;;d4,60;;b1,0;;m">
				</treenode>
				<treenode node="getPrefixesPsr4;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f11;68;5;71;;;;vpos;;v;;r;;d4,69;;b1,0;;m">
				</treenode>
				<treenode node="getUseIncludePath;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f11;248;5;251;;;;vpos;;vbool;;r&#xA;Definition&#xA;    getUseIncludePath()&#xA;&#xA;Description&#xA;     Can be used to check if the autoloader uses the include path to check for classes.;;d4,249;;b1,0;;m">
				</treenode>
				<treenode node="isClassMapAuthoritative;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f11;269;5;272;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isClassMapAuthoritative()&#xA;&#xA;Description&#xA;     Should class lookup fail if not found in the current class map?;;d4,270;;b1,0;;m">
				</treenode>
				<treenode node="load;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ClassLoader.php;f18;26;5;39;;;;vpos;;vbool;;r&#xA;Definition&#xA;    load($class)&#xA;&#xA;Description&#xA;     Load the given class file.&#xA;&#xA;Parameters:&#xA;    string $class;;d4,27;;b1,5;;mstring $class;;p">
					<treenode node="class;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ClassLoader.php;f32;26;38;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="loadClass;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f11;318;5;325;;;;vpos;;vbool;;r&#xA;Definition&#xA;    loadClass($class)&#xA;&#xA;Description&#xA;     Loads the given class or interface.&#xA;&#xA;Parameters:&#xA;    string $class - The name of the class&#xA;&#xA;Return:&#xA;   |null True if loaded, null otherwise;;d4,319;;b1,0;;mstring $class;;p">
					<treenode node="class;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f30;318;36;318;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="normalizeClass;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ClassLoader.php;f18;47;5;54;;;;vpos;;vstring;;r&#xA;Definition&#xA;    normalizeClass($class)&#xA;&#xA;Description&#xA;     Get the normal file name for a class.&#xA;&#xA;Parameters:&#xA;    string $class;;d4,48;;b1,5;;mstring $class;;p">
					<treenode node="class;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ClassLoader.php;f42;47;48;47;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="register;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ClassLoader.php;f18;61;5;66;;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f11;299;5;302;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    register()&#xA;&#xA;Description&#xA;     Register the given class loader on the auto-loader stack.;;d4,62;;b1,5;;m">
					<treenode node="prepend;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f29;299;37;299;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="removeDirectories;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ClassLoader.php;f18;85;5;92;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    removeDirectories($directories = null)&#xA;&#xA;Description&#xA;     Remove directories from the class loader.&#xA;&#xA;Parameters:&#xA;    string|array $directories;;d4,86;;b1,5;;mstring|array $directories;;p">
					<treenode node="directories;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ClassLoader.php;f45;85;57;85;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="set;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f11;200;5;207;;;;vpos;;v;;r&#xA;Definition&#xA;    set($prefix, $paths)&#xA;&#xA;Description&#xA;     Registers a set of PSR-0 directories for a given prefix, replacing any others previously set for this prefix.&#xA;&#xA;Parameters:&#xA;    string $prefix - The prefix&#xA;    array|string $paths - The PSR-0 base directories;;d4,201;;b1,0;;mstring $prefix;;parray|string $paths;;p">
					<treenode node="paths;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f33;200;39;200;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="prefix;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f24;200;31;200;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setApcuPrefix;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f11;279;5;282;;;;vpos;;v;;r&#xA;Definition&#xA;    setApcuPrefix($apcuPrefix)&#xA;&#xA;Description&#xA;     APCu prefix to use to cache found/not-found classes, if the extension is enabled.&#xA;&#xA;Parameters:&#xA;    string|null $apcuPrefix;;d4,280;;b1,0;;mstring|null $apcuPrefix;;p">
					<treenode node="apcuPrefix;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f34;279;45;279;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setClassMapAuthoritative;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f11;259;5;262;;;;vpos;;v;;r&#xA;Definition&#xA;    setClassMapAuthoritative($classMapAuthoritative)&#xA;&#xA;Description&#xA;     Turns off searching the prefix and fallback directories for classes that have not been registered with the class map.&#xA;&#xA;Parameters:&#xA;    bool $classMapAuthoritative;;d4,260;;b1,0;;mbool $classMapAuthoritative;;p">
					<treenode node="classMapAuthoritative;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f45;259;67;259;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setPsr4;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f11;218;5;230;;;;vpos;;v;;r&#xA;Definition&#xA;    setPsr4($prefix, $paths)&#xA;&#xA;Description&#xA;     Registers a set of PSR-4 directories for a given namespace, replacing any others previously set for this namespace.&#xA;&#xA;Parameters:&#xA;    string $prefix - The prefix/namespace, with trailing '\\'&#xA;    array|string $paths - The PSR-4 base directories;;d4,219;;b1,0;;mstring $prefix;;parray|string $paths;;p">
					<treenode node="paths;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f37;218;43;218;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="prefix;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f28;218;35;218;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setUseIncludePath;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f11;237;5;240;;;;vpos;;v;;r&#xA;Definition&#xA;    setUseIncludePath($useIncludePath)&#xA;&#xA;Description&#xA;     Turns on searching the include path for class files.&#xA;&#xA;Parameters:&#xA;    bool $useIncludePath;;d4,238;;b1,0;;mbool $useIncludePath;;p">
					<treenode node="useIncludePath;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f38;237;53;237;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="unregister;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f11;307;5;310;;;;vpos;;v;;r&#xA;Definition&#xA;    unregister()&#xA;&#xA;Description&#xA;     Unregisters this instance as an autoloader.;;d4,308;;b1,0;;m">
				</treenode>
				<treenode node="apcuPrefix;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f12;57;23;57;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="classMap;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f12;54;21;54;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="classMapAuthoritative;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f12;55;34;55;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="directories;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ClassLoader.php;f21;11;33;11;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="fallbackDirsPsr0;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f12;51;29;51;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="fallbackDirsPsr4;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f12;47;29;47;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="missingClasses;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f12;56;27;56;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="prefixDirsPsr4;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f12;46;27;46;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="prefixesPsr0;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f12;50;25;50;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="prefixLengthsPsr4;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f12;45;30;45;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="registered;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ClassLoader.php;f21;18;32;18;;;;vposbool;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="useIncludePath;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f12;53;27;53;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
			</treenode>
			<treenode node="Collection;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f0;15;1;1100;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Collection.php;f0;7;1;237;;;;vpos;;vArrayAccess;;cArrayable;;cCountable;;cIteratorAggregate;;cJsonable;;cJsonSerializable;;c;;r;;d0,16;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;32;5;35;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct($items = [])&#xA;&#xA;Description&#xA;     Create a new collection.&#xA;&#xA;Parameters:&#xA;    mixed $items;;d4,33;;b1,0;;mmixed $items;;p">
					<treenode node="items;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f32;32;38;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__toString;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;1077;5;1080;;;;vpos;;vstring;;r&#xA;Definition&#xA;    __toString()&#xA;&#xA;Description&#xA;     Convert the collection to its string representation.;;d4,1078;;b1,0;;m">
				</treenode>
				<treenode node="add;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Collection.php;f11;55;5;60;;;;vpos;;v;;r&#xA;Definition&#xA;    add($item)&#xA;&#xA;Description&#xA;     Add an item to the collection.&#xA;&#xA;Parameters:&#xA;    mixed $item;;d4,56;;b1,0;;mmixed $item;;p">
					<treenode node="item;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Collection.php;f24;55;29;55;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="all;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;53;5;56;;;;vpos;;varray;;r&#xA;Definition&#xA;    all()&#xA;&#xA;Description&#xA;     Get all of the items in the collection.;;d4,54;;b1,0;;m">
				</treenode>
				<treenode node="average;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;77;5;80;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    average($key = null)&#xA;&#xA;Description&#xA;     Alias for the &quot;avg&quot; method.&#xA;&#xA;Parameters:&#xA;    string|null $key;;d4,78;;b1,0;;mstring|null $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f28;77;32;77;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="avg;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;64;5;69;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    avg($key = null)&#xA;&#xA;Description&#xA;     Get the average value of a given key.&#xA;&#xA;Parameters:&#xA;    string|null $key;;d4,65;;b1,0;;mstring|null $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f24;64;28;64;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="chunk;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;743;5;752;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    chunk($size, $preserveKeys = false)&#xA;&#xA;Description&#xA;     Chunk the underlying collection array.&#xA;&#xA;Parameters:&#xA;    int $size&#xA;    bool $preserveKeys;;d4,744;;b1,0;;mint $size;;pbool $preserveKeys;;p">
					<treenode node="preserveKeys;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f33;743;46;743;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="size;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f26;743;31;743;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="collapse;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;87;5;90;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    collapse()&#xA;&#xA;Description&#xA;     Collapse the collection of items into a single array.;;d4,88;;b1,0;;m">
				</treenode>
				<treenode node="contains;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;99;5;112;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Collection.php;f11;69;5;84;;;;vpos;;vbool;;r&#xA;Definition&#xA;    contains($key, $value = null)&#xA;&#xA;Description&#xA;     Determine if an item exists in the collection.&#xA;&#xA;Parameters:&#xA;    mixed $key&#xA;    mixed $value;;d4,100;;b1,0;;mmixed $key;;pmixed $value;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f29;99;33;99;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Collection.php;f29;69;33;69;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f35;99;41;99;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Collection.php;f35;69;41;69;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="count;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;1018;5;1021;;;;vpos;;vint;;r&#xA;Definition&#xA;    count()&#xA;&#xA;Description&#xA;     Count the number of items in the collection.;;d4,1019;;b1,0;;m">
				</treenode>
				<treenode node="diff;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;120;5;123;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Collection.php;f11;132;5;145;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    diff($items)&#xA;&#xA;Description&#xA;     Get the items in the collection that are not present in the given items.&#xA;&#xA;Parameters:&#xA;    mixed $items;;d4,121;;b1,0;;mmixed $items;;p">
					<treenode node="items;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f25;120;31;120;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Collection.php;f25;132;31;132;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="each;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;131;5;140;;;;vpos;;v;;r&#xA;Definition&#xA;    each(callable $callback)&#xA;&#xA;Description&#xA;     Execute a callback over each item.&#xA;&#xA;Parameters:&#xA;    callable $callback;;d4,132;;b1,0;;mcallable $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f34;131;43;131;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="every;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;149;5;164;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    every($step, $offset = 0)&#xA;&#xA;Description&#xA;     Create a new collection consisting of every n-th element.&#xA;&#xA;Parameters:&#xA;    int $step&#xA;    int $offset;;d4,150;;b1,0;;mint $step;;pint $offset;;p">
					<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f33;149;40;149;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="step;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f26;149;31;149;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="except;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;172;5;177;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Collection.php;f11;202;5;207;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    except($keys)&#xA;&#xA;Description&#xA;     Get all items except for those with the specified keys.&#xA;&#xA;Parameters:&#xA;    mixed $keys;;d4,173;;b1,0;;mmixed $keys;;p">
					<treenode node="keys;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f27;172;32;172;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Collection.php;f27;202;32;202;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fetch;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;187;5;190;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Collection.php;f11;94;5;97;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    fetch($key)&#xA;&#xA;Description&#xA;     Fetch a nested element of the collection.&#xA;&#xA;Parameters:&#xA;    string $key;;d4,188;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f26;187;30;187;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Collection.php;f26;94;30;94;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="filter;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;198;5;205;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    filter(callable $callback = null)&#xA;&#xA;Description&#xA;     Run a filter over each of the items.&#xA;&#xA;Parameters:&#xA;    callable|null $callback;;d4,199;;b1,0;;mcallable|null $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f36;198;45;198;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="find;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Collection.php;f11;16;5;26;;;;vpos;;v;;r&#xA;Definition&#xA;    find($key, $default = null)&#xA;&#xA;Description&#xA;     Find a model in the collection by key.&#xA;&#xA;Parameters:&#xA;    mixed $key&#xA;    mixed $default;;d4,17;;b1,0;;mmixed $key;;pmixed $default;;p">
					<treenode node="default;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Collection.php;f31;16;39;16;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Collection.php;f25;16;29;16;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="first;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;242;5;249;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    first(callable $callback = null, $default = null)&#xA;&#xA;Description&#xA;     Get the first item from the collection.&#xA;&#xA;Parameters:&#xA;    callable|null $callback&#xA;    mixed $default;;d4,243;;b1,0;;mcallable|null $callback;;pmixed $default;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f35;242;44;242;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="default;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f53;242;61;242;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="flatMap;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;479;5;482;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    flatMap(callable $callback)&#xA;&#xA;Description&#xA;     Map a collection and flatten the result by a single level.&#xA;&#xA;Parameters:&#xA;    callable $callback;;d4,480;;b1,0;;mcallable $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f37;479;46;479;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="flatten;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;256;5;259;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    flatten()&#xA;&#xA;Description&#xA;     Get a flattened array of the items in the collection.;;d4,257;;b1,0;;m">
				</treenode>
				<treenode node="flip;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;266;5;269;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    flip()&#xA;&#xA;Description&#xA;     Flip the items in the collection.;;d4,267;;b1,0;;m">
				</treenode>
				<treenode node="forget;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;277;5;284;;;;vpos;;v;;r&#xA;Definition&#xA;    forget($keys)&#xA;&#xA;Description&#xA;     Remove an item from the collection by key.&#xA;&#xA;Parameters:&#xA;    string|array $keys;;d4,278;;b1,0;;mstring|array $keys;;p">
					<treenode node="keys;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f27;277;32;277;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="forPage;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;545;5;548;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    forPage($page, $perPage)&#xA;&#xA;Description&#xA;     &quot;Paginate&quot; the collection by slicing it into a smaller collection.&#xA;&#xA;Parameters:&#xA;    int $page&#xA;    int $perPage;;d4,546;;b1,0;;mint $page;;pint $perPage;;p">
					<treenode node="page;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f28;545;33;545;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="perPage;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f35;545;43;545;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="get;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;293;5;300;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    get($key, $default = null)&#xA;&#xA;Description&#xA;     Get an item from the collection by key.&#xA;&#xA;Parameters:&#xA;    mixed $key&#xA;    mixed $default;;d4,294;;b1,0;;mmixed $key;;pmixed $default;;p">
					<treenode node="default;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f30;293;38;293;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f24;293;28;293;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getArrayableItems;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f14;1088;5;1099;;;;vpos;;varray;;r&#xA;Definition&#xA;    getArrayableItems($items)&#xA;&#xA;Description&#xA;     Results array of items from Collection or Arrayable.&#xA;&#xA;Parameters:&#xA;    mixed $items;;d4,1089;;b2,0;;mmixed $items;;p">
					<treenode node="items;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f41;1088;47;1088;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getCachingIterator;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;1008;5;1011;;;;vpos;;v;;r&#xA;Definition&#xA;    getCachingIterator($flags = CachingIterator::CALL_TOSTRING)&#xA;&#xA;Description&#xA;     Get a CachingIterator instance.&#xA;&#xA;Parameters:&#xA;    int $flags;;d4,1009;;b1,0;;mint $flags;;p">
					<treenode node="flags;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f39;1008;45;1008;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getDictionary;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Collection.php;f11;215;5;226;;;;vpos;;varray;;r&#xA;Definition&#xA;    getDictionary($items = null)&#xA;&#xA;Description&#xA;     Get a dictionary keyed by primary keys.&#xA;&#xA;Parameters:&#xA;    \ArrayAccess|array $items;;d4,216;;b1,0;;m\ArrayAccess|array $items;;p">
					<treenode node="items;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Collection.php;f34;215;40;215;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getIterator;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;997;5;1000;;;;vpos;;v;;r&#xA;Definition&#xA;    getIterator()&#xA;&#xA;Description&#xA;     Get an iterator for the items.;;d4,998;;b1,0;;m">
				</treenode>
				<treenode node="groupBy;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;309;5;326;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    groupBy($groupBy, $preserveKeys = false)&#xA;&#xA;Description&#xA;     Group an associative array by a field or using a callback.&#xA;&#xA;Parameters:&#xA;    callable|string $groupBy&#xA;    bool $preserveKeys;;d4,310;;b1,0;;mcallable|string $groupBy;;pbool $preserveKeys;;p">
					<treenode node="groupBy;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f28;309;36;309;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="preserveKeys;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f38;309;51;309;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="has;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;353;5;356;;;;vpos;;vbool;;r&#xA;Definition&#xA;    has($key)&#xA;&#xA;Description&#xA;     Determine if an item exists in the collection by key.&#xA;&#xA;Parameters:&#xA;    mixed $key;;d4,354;;b1,0;;mmixed $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f24;353;28;353;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="implode;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;365;5;374;;;;vpos;;vstring;;r&#xA;Definition&#xA;    implode($value, $glue = null)&#xA;&#xA;Description&#xA;     Concatenate values of a given key as a string.&#xA;&#xA;Parameters:&#xA;    string $value&#xA;    string $glue;;d4,366;;b1,0;;mstring $value;;pstring $glue;;p">
					<treenode node="glue;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f36;365;41;365;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f28;365;34;365;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="intersect;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;382;5;385;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Collection.php;f11;153;5;166;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    intersect($items)&#xA;&#xA;Description&#xA;     Intersect the collection with the given items.&#xA;&#xA;Parameters:&#xA;    mixed $items;;d4,383;;b1,0;;mmixed $items;;p">
					<treenode node="items;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f30;382;36;382;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Collection.php;f30;153;36;153;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isEmpty;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;392;5;395;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isEmpty()&#xA;&#xA;Description&#xA;     Determine if the collection is empty or not.;;d4,393;;b1,0;;m">
				</treenode>
				<treenode node="jsonSerialize;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;976;5;979;;;;vpos;;varray;;r&#xA;Definition&#xA;    jsonSerialize()&#xA;&#xA;Description&#xA;     Convert the object into something JSON serializable.;;d4,977;;b1,0;;m">
				</treenode>
				<treenode node="keyBy;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;334;5;345;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    keyBy($keyBy)&#xA;&#xA;Description&#xA;     Key an associative array by a field or using a callback.&#xA;&#xA;Parameters:&#xA;    callable|string $keyBy;;d4,335;;b1,0;;mcallable|string $keyBy;;p">
					<treenode node="keyBy;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f26;334;32;334;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="keys;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;413;5;416;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    keys()&#xA;&#xA;Description&#xA;     Get the keys of the collection items.;;d4,414;;b1,0;;m">
				</treenode>
				<treenode node="last;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;425;5;432;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    last(callable $callback = null, $default = null)&#xA;&#xA;Description&#xA;     Get the last item from the collection.&#xA;&#xA;Parameters:&#xA;    callable|null $callback&#xA;    mixed $default;;d4,426;;b1,0;;mcallable|null $callback;;pmixed $default;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f34;425;43;425;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="default;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f52;425;60;425;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="lists;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;453;5;456;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    lists($value, $key = null)&#xA;&#xA;Description&#xA;     Alias for the &quot;pluck&quot; method.&#xA;&#xA;Parameters:&#xA;    string $value&#xA;    string|null $key;;d4,454;;b1,0;;mstring $value;;pstring|null $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f34;453;38;453;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f26;453;32;453;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="load;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Collection.php;f11;34;5;47;;;;vpos;;v;;r&#xA;Definition&#xA;    load($relations)&#xA;&#xA;Description&#xA;     Load a set of relationships onto the collection.&#xA;&#xA;Parameters:&#xA;    mixed $relations;;d4,35;;b1,0;;mmixed $relations;;p">
					<treenode node="relations;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Collection.php;f25;34;35;34;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="make;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f18;43;5;46;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    make($items = [])&#xA;&#xA;Description&#xA;     Create a new collection instance if the value isn't one already.&#xA;&#xA;Parameters:&#xA;    mixed $items;;d4,44;;b1,5;;mmixed $items;;p">
					<treenode node="items;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f32;43;38;43;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="map;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;464;5;471;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    map(callable $callback)&#xA;&#xA;Description&#xA;     Run a map over each of the items.&#xA;&#xA;Parameters:&#xA;    callable $callback;;d4,465;;b1,0;;mcallable $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f33;464;42;464;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="max;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;490;5;497;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    max($key = null)&#xA;&#xA;Description&#xA;     Get the max value of a given key.&#xA;&#xA;Parameters:&#xA;    string|null $key;;d4,491;;b1,0;;mstring|null $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f24;490;28;490;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="merge;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;505;5;508;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Collection.php;f11;115;5;124;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    merge($items)&#xA;&#xA;Description&#xA;     Merge the collection with the given items.&#xA;&#xA;Parameters:&#xA;    mixed $items;;d4,506;;b1,0;;mmixed $items;;p">
					<treenode node="items;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f26;505;32;505;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Collection.php;f26;115;32;115;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="min;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;516;5;523;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    min($key = null)&#xA;&#xA;Description&#xA;     Get the min value of a given key.&#xA;&#xA;Parameters:&#xA;    string|null $key;;d4,517;;b1,0;;mstring|null $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f24;516;28;516;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="modelKeys;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Collection.php;f11;104;5;107;;;;vpos;;varray;;r&#xA;Definition&#xA;    modelKeys()&#xA;&#xA;Description&#xA;     Get the array of primary keys.;;d4,105;;b1,0;;m">
				</treenode>
				<treenode node="offsetExists;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;1029;5;1032;;;;vpos;;vbool;;r&#xA;Definition&#xA;    offsetExists($key)&#xA;&#xA;Description&#xA;     Determine if an item exists at an offset.&#xA;&#xA;Parameters:&#xA;    mixed $key;;d4,1030;;b1,0;;mmixed $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f33;1029;37;1029;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="offsetGet;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;1040;5;1043;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    offsetGet($key)&#xA;&#xA;Description&#xA;     Get an item at a given offset.&#xA;&#xA;Parameters:&#xA;    mixed $key;;d4,1041;;b1,0;;mmixed $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f30;1040;34;1040;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="offsetSet;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;1052;5;1059;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    offsetSet($key, $value)&#xA;&#xA;Description&#xA;     Set the item at a given offset.&#xA;&#xA;Parameters:&#xA;    mixed $key&#xA;    mixed $value;;d4,1053;;b1,0;;mmixed $key;;pmixed $value;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f30;1052;34;1052;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f36;1052;42;1052;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="offsetUnset;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;1067;5;1070;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    offsetUnset($key)&#xA;&#xA;Description&#xA;     Unset the item at a given offset.&#xA;&#xA;Parameters:&#xA;    string $key;;d4,1068;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f32;1067;36;1067;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="only;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;531;5;536;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Collection.php;f11;189;5;194;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    only($keys)&#xA;&#xA;Description&#xA;     Get the items with the specified keys.&#xA;&#xA;Parameters:&#xA;    mixed $keys;;d4,532;;b1,0;;mmixed $keys;;p">
					<treenode node="keys;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f25;531;30;531;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Collection.php;f25;189;30;189;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="pluck;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;441;5;444;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    pluck($value, $key = null)&#xA;&#xA;Description&#xA;     Get the values of a given key.&#xA;&#xA;Parameters:&#xA;    string $value&#xA;    string|null $key;;d4,442;;b1,0;;mstring $value;;pstring|null $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f34;441;38;441;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f26;441;32;441;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="pop;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;555;5;558;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    pop()&#xA;&#xA;Description&#xA;     Get and remove the last item from the collection.;;d4,556;;b1,0;;m">
				</treenode>
				<treenode node="prepend;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;567;5;572;;;;vpos;;v;;r&#xA;Definition&#xA;    prepend($value, $key = null)&#xA;&#xA;Description&#xA;     Push an item onto the beginning of the collection.&#xA;&#xA;Parameters:&#xA;    mixed $value&#xA;    mixed $key;;d4,568;;b1,0;;mmixed $value;;pmixed $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f36;567;40;567;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f28;567;34;567;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="pull;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;594;5;597;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    pull($key, $default = null)&#xA;&#xA;Description&#xA;     Get and remove an item from the collection.&#xA;&#xA;Parameters:&#xA;    mixed $key&#xA;    mixed $default;;d4,595;;b1,0;;mmixed $key;;pmixed $default;;p">
					<treenode node="default;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f31;594;39;594;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f25;594;29;594;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="push;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;580;5;585;;;;vpos;;v;;r&#xA;Definition&#xA;    push($value)&#xA;&#xA;Description&#xA;     Push an item onto the end of the collection.&#xA;&#xA;Parameters:&#xA;    mixed $value;;d4,581;;b1,0;;mmixed $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f25;580;31;580;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="put;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;606;5;611;;;;vpos;;v;;r&#xA;Definition&#xA;    put($key, $value)&#xA;&#xA;Description&#xA;     Put an item in the collection by key.&#xA;&#xA;Parameters:&#xA;    mixed $key&#xA;    mixed $value;;d4,607;;b1,0;;mmixed $key;;pmixed $value;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f24;606;28;606;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f30;606;36;606;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="random;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;621;5;634;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    random($amount = 1)&#xA;&#xA;Description&#xA;     Get one or more items randomly from the collection.&#xA;&#xA;Parameters:&#xA;    int $amount;;d4,622;;b1,0;;mint $amount;;p">
					<treenode node="amount;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f27;621;34;621;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="reduce;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;643;5;646;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    reduce(callable $callback, $initial = null)&#xA;&#xA;Description&#xA;     Reduce the collection to a single value.&#xA;&#xA;Parameters:&#xA;    callable $callback&#xA;    mixed $initial;;d4,644;;b1,0;;mcallable $callback;;pmixed $initial;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f36;643;45;643;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="initial;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f47;643;55;643;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="reject;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;654;5;665;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    reject($callback)&#xA;&#xA;Description&#xA;     Create a collection of all elements that do not pass a given truth test.&#xA;&#xA;Parameters:&#xA;    callable|mixed $callback;;d4,655;;b1,0;;mcallable|mixed $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f27;654;36;654;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="reverse;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;672;5;675;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    reverse()&#xA;&#xA;Description&#xA;     Reverse items order.;;d4,673;;b1,0;;m">
				</treenode>
				<treenode node="search;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;684;5;697;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    search($value, $strict = false)&#xA;&#xA;Description&#xA;     Search the collection for a given value and return the corresponding key if successful.&#xA;&#xA;Parameters:&#xA;    mixed $value&#xA;    bool $strict;;d4,685;;b1,0;;mmixed $value;;pbool $strict;;p">
					<treenode node="strict;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f35;684;42;684;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f27;684;33;684;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="shift;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;704;5;707;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    shift()&#xA;&#xA;Description&#xA;     Get and remove the first item from the collection.;;d4,705;;b1,0;;m">
				</treenode>
				<treenode node="shuffle;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;714;5;721;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    shuffle()&#xA;&#xA;Description&#xA;     Shuffle the items in the collection.;;d4,715;;b1,0;;m">
				</treenode>
				<treenode node="slice;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;731;5;734;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    slice($offset, $length = null, $preserveKeys = false)&#xA;&#xA;Description&#xA;     Slice the underlying collection array.&#xA;&#xA;Parameters:&#xA;    int $offset&#xA;    int $length&#xA;    bool $preserveKeys;;d4,732;;b1,0;;mint $offset;;pint $length;;pbool $preserveKeys;;p">
					<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f35;731;42;731;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f26;731;33;731;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="preserveKeys;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f51;731;64;731;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="sort;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;760;5;773;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    sort(callable $callback = null)&#xA;&#xA;Description&#xA;     Sort through each item with a callback.&#xA;&#xA;Parameters:&#xA;    callable|null $callback;;d4,761;;b1,0;;mcallable|null $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f34;760;43;760;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="sortBy;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;783;5;807;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    sortBy($callback, $options = SORT_REGULAR, $descending = false)&#xA;&#xA;Description&#xA;     Sort the collection using the given callback.&#xA;&#xA;Parameters:&#xA;    callable|string $callback&#xA;    int $options&#xA;    bool $descending;;d4,784;;b1,0;;mcallable|string $callback;;pint $options;;pbool $descending;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f27;783;36;783;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="descending;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f63;783;74;783;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f38;783;46;783;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="sortByDesc;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;816;5;819;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    sortByDesc($callback, $options = SORT_REGULAR)&#xA;&#xA;Description&#xA;     Sort the collection in descending order using the given callback.&#xA;&#xA;Parameters:&#xA;    callable|string $callback&#xA;    int $options;;d4,817;;b1,0;;mcallable|string $callback;;pint $options;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f31;816;40;816;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f42;816;50;816;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="splice;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;829;5;836;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    splice($offset, $length = null, $replacement = [])&#xA;&#xA;Description&#xA;     Splice a portion of the underlying collection array.&#xA;&#xA;Parameters:&#xA;    int $offset&#xA;    int|null $length&#xA;    mixed $replacement;;d4,830;;b1,0;;mint $offset;;pint|null $length;;pmixed $replacement;;p">
					<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f36;829;43;829;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f27;829;34;829;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="replacement;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f52;829;64;829;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="sum;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;844;5;855;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    sum($callback = null)&#xA;&#xA;Description&#xA;     Get the sum of the given values.&#xA;&#xA;Parameters:&#xA;    callable|string|null $callback;;d4,845;;b1,0;;mcallable|string|null $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f24;844;33;844;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="take;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;863;5;870;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    take($limit)&#xA;&#xA;Description&#xA;     Take the first or last {$limit} items.&#xA;&#xA;Parameters:&#xA;    int $limit;;d4,864;;b1,0;;mint $limit;;p">
					<treenode node="limit;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f25;863;31;863;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="toArray;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;964;5;969;;;;vpos;;varray;;r&#xA;Definition&#xA;    toArray()&#xA;&#xA;Description&#xA;     Get the collection of items as a plain array.;;d4,965;;b1,0;;m">
				</treenode>
				<treenode node="toBase;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Collection.php;f11;233;5;236;;;;vpos;;v;;r&#xA;Definition&#xA;    toBase()&#xA;&#xA;Description&#xA;     Get a base Support collection instance from this collection.;;d4,234;;b1,0;;m">
				</treenode>
				<treenode node="toJson;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;987;5;990;;;;vpos;;vstring;;r&#xA;Definition&#xA;    toJson($options = 0)&#xA;&#xA;Description&#xA;     Get the collection of items as JSON.&#xA;&#xA;Parameters:&#xA;    int $options;;d4,988;;b1,0;;mint $options;;p">
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f27;987;35;987;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="transform;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;878;5;883;;;;vpos;;v;;r&#xA;Definition&#xA;    transform(callable $callback)&#xA;&#xA;Description&#xA;     Transform each item in the collection using a callback.&#xA;&#xA;Parameters:&#xA;    callable $callback;;d4,879;;b1,0;;mcallable $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f39;878;48;878;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="unique;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;891;5;908;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Collection.php;f11;174;5;181;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    unique($key = null)&#xA;&#xA;Description&#xA;     Return only unique items from the collection array.&#xA;&#xA;Parameters:&#xA;    string|callable|null $key;;d4,892;;b1,0;;mstring|callable|null $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f27;891;31;891;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Collection.php;f27;174;31;174;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="useAsCallable;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f14;403;5;406;;;;vpos;;vbool;;r&#xA;Definition&#xA;    useAsCallable($value)&#xA;&#xA;Description&#xA;     Determine if the given value is callable, but not a string.&#xA;&#xA;Parameters:&#xA;    mixed $value;;d4,404;;b2,0;;mmixed $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f37;403;43;403;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="valueRetriever;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f14;926;5;935;;;;vpos;;vcallable;;r&#xA;Definition&#xA;    valueRetriever($value)&#xA;&#xA;Description&#xA;     Get a value retrieving callback.&#xA;&#xA;Parameters:&#xA;    string $value;;d4,927;;b2,0;;mstring $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f38;926;44;926;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="values;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;915;5;918;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    values()&#xA;&#xA;Description&#xA;     Reset the keys on the underlying array.;;d4,916;;b1,0;;m">
				</treenode>
				<treenode node="where;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;215;5;221;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    where($key, $value, $strict = true)&#xA;&#xA;Description&#xA;     Filter items by the given key value pair.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    mixed $value&#xA;    bool $strict;;d4,216;;b1,0;;mstring $key;;pmixed $value;;pbool $strict;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f26;215;30;215;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="strict;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f40;215;47;215;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f32;215;38;215;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereLoose;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;230;5;233;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    whereLoose($key, $value)&#xA;&#xA;Description&#xA;     Filter items by the given key value pair using loose comparison.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    mixed $value;;d4,231;;b1,0;;mstring $key;;pmixed $value;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f31;230;35;230;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f37;230;43;230;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="zip;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f11;946;5;957;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    zip($items)&#xA;&#xA;Description&#xA;     Zip the collection together with one or more arrays.&#xA;&#xA;Parameters:&#xA;    mixed - ...$items;;d4,947;;b1,0;;mmixed;;p">
					<treenode node="items;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f24;946;30;946;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="items;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php;f14;24;20;24;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="COM;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\other\ide_stubs\COM.php;f0;6;1;19;;;;vpos;;v;;r&#xA;Definition&#xA;    class COM&#xA;&#xA;Description&#xA;     Class COM;;d0,7;;b0,0;;m">
				<treenode node="GetRandom;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\other\ide_stubs\COM.php;f11;15;5;18;;;;vpos;;vstring;;r&#xA;Definition&#xA;    GetRandom($bytes, $dummy)&#xA;&#xA;Description&#xA;     This is just a dummy function to make IDE autocomplete less insane.&#xA;&#xA;Parameters:&#xA;    int $bytes&#xA;    int $dummy;;d4,16;;b1,0;;mint $bytes;;pint $dummy;;p">
					<treenode node="bytes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\other\ide_stubs\COM.php;f30;15;36;15;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="dummy;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\other\ide_stubs\COM.php;f38;15;44;15;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="com_exception;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\other\ide_stubs\com_exception.php;f0;7;1;10;;;;vpos;;vException;;c;;r&#xA;Definition&#xA;    class com_exception extends Exception&#xA;&#xA;Description&#xA;     Class COM;;d0,8;;b0,0;;m">
			</treenode>
			<treenode node="CommonTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f9;4;1;1129;;;;vpos;;vPHPUnit_Framework_TestCase;;c;;r;;d0,5;;b0,0;;m">
				<treenode node="assertStringy;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;11;5;14;;;;vpos;;v;;r&#xA;Definition&#xA;    assertStringy($actual)&#xA;&#xA;Description&#xA;     Asserts that a variable is of a Stringy instance.&#xA;&#xA;Parameters:&#xA;    mixed $actual;;d4,12;;b1,0;;mmixed $actual;;p">
					<treenode node="actual;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f34;11;41;11;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="atProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;761;5;773;;;;vpos;;v;;r;;d4,762;;b1,0;;m">
				</treenode>
				<treenode node="camelizeProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;67;5;84;;;;vpos;;v;;r;;d4,68;;b1,0;;m">
				</treenode>
				<treenode node="charsProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;36;5;43;;;;vpos;;v;;r;;d4,37;;b1,0;;m">
				</treenode>
				<treenode node="collapseWhitespaceProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;209;5;225;;;;vpos;;v;;r;;d4,210;;b1,0;;m">
				</treenode>
				<treenode node="containsAllProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;494;5;530;;;;vpos;;v;;r;;d4,495;;b1,0;;m">
				</treenode>
				<treenode node="containsAnyProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;456;5;492;;;;vpos;;v;;r;;d4,457;;b1,0;;m">
				</treenode>
				<treenode node="containsProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;429;5;454;;;;vpos;;v;;r;;d4,430;;b1,0;;m">
				</treenode>
				<treenode node="countSubstrProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;1051;5;1070;;;;vpos;;v;;r;;d4,1052;;b1,0;;m">
				</treenode>
				<treenode node="dasherizeProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;105;5;124;;;;vpos;;v;;r;;d4,106;;b1,0;;m">
				</treenode>
				<treenode node="delimitProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;147;5;165;;;;vpos;;v;;r;;d4,148;;b1,0;;m">
				</treenode>
				<treenode node="endsWithProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;335;5;350;;;;vpos;;v;;r;;d4,336;;b1,0;;m">
				</treenode>
				<treenode node="ensureLeftProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;811;5;825;;;;vpos;;v;;r;;d4,812;;b1,0;;m">
				</treenode>
				<treenode node="ensureRightProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;827;5;841;;;;vpos;;v;;r;;d4,828;;b1,0;;m">
				</treenode>
				<treenode node="firstProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;775;5;791;;;;vpos;;v;;r;;d4,776;;b1,0;;m">
				</treenode>
				<treenode node="hasLowerCaseProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;969;5;985;;;;vpos;;v;;r;;d4,970;;b1,0;;m">
				</treenode>
				<treenode node="hasUpperCaseProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;1014;5;1030;;;;vpos;;v;;r;;d4,1015;;b1,0;;m">
				</treenode>
				<treenode node="htmlDecodeProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;1119;5;1128;;;;vpos;;v;;r;;d4,1120;;b1,0;;m">
				</treenode>
				<treenode node="htmlEncodeProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;1108;5;1117;;;;vpos;;v;;r;;d4,1109;;b1,0;;m">
				</treenode>
				<treenode node="humanizeProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;190;5;197;;;;vpos;;v;;r;;d4,191;;b1,0;;m">
				</treenode>
				<treenode node="indexOfLastProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;26;5;34;;;;vpos;;v;;r;;d4,27;;b1,0;;m">
				</treenode>
				<treenode node="indexOfProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;16;5;24;;;;vpos;;v;;r;;d4,17;;b1,0;;m">
				</treenode>
				<treenode node="insertProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;543;5;554;;;;vpos;;v;;r;;d4,544;;b1,0;;m">
				</treenode>
				<treenode node="isAlphanumericProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;895;5;912;;;;vpos;;v;;r;;d4,896;;b1,0;;m">
				</treenode>
				<treenode node="isAlphaProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;879;5;893;;;;vpos;;v;;r;;d4,880;;b1,0;;m">
				</treenode>
				<treenode node="isBlankProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;914;5;933;;;;vpos;;v;;r;;d4,915;;b1,0;;m">
				</treenode>
				<treenode node="isHexadecimalProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;1032;5;1049;;;;vpos;;v;;r;;d4,1033;;b1,0;;m">
				</treenode>
				<treenode node="isJsonProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;935;5;953;;;;vpos;;v;;r;;d4,936;;b1,0;;m">
				</treenode>
				<treenode node="isLowerCaseProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;955;5;967;;;;vpos;;v;;r;;d4,956;;b1,0;;m">
				</treenode>
				<treenode node="isSerializedProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;987;5;998;;;;vpos;;v;;r;;d4,988;;b1,0;;m">
				</treenode>
				<treenode node="isUpperCaseProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;1000;5;1012;;;;vpos;;v;;r;;d4,1001;;b1,0;;m">
				</treenode>
				<treenode node="lastProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;793;5;809;;;;vpos;;v;;r;;d4,794;;b1,0;;m">
				</treenode>
				<treenode node="lengthProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;736;5;744;;;;vpos;;v;;r;;d4,737;;b1,0;;m">
				</treenode>
				<treenode node="longestCommonPrefixProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;688;5;702;;;;vpos;;v;;r;;d4,689;;b1,0;;m">
				</treenode>
				<treenode node="longestCommonSubstringProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;720;5;734;;;;vpos;;v;;r;;d4,721;;b1,0;;m">
				</treenode>
				<treenode node="longestCommonSuffixProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;704;5;718;;;;vpos;;v;;r;;d4,705;;b1,0;;m">
				</treenode>
				<treenode node="lowerCaseFirstProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;56;5;65;;;;vpos;;v;;r;;d4,57;;b1,0;;m">
				</treenode>
				<treenode node="padBothProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;301;5;316;;;;vpos;;v;;r;;d4,302;;b1,0;;m">
				</treenode>
				<treenode node="padLeftProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;275;5;286;;;;vpos;;v;;r;;d4,276;;b1,0;;m">
				</treenode>
				<treenode node="padProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;250;5;273;;;;vpos;;v;;r;;d4,251;;b1,0;;m">
				</treenode>
				<treenode node="padRightProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;288;5;299;;;;vpos;;v;;r;;d4,289;;b1,0;;m">
				</treenode>
				<treenode node="regexReplaceProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;1094;5;1106;;;;vpos;;v;;r;;d4,1095;;b1,0;;m">
				</treenode>
				<treenode node="removeLeftProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;843;5;859;;;;vpos;;v;;r;;d4,844;;b1,0;;m">
				</treenode>
				<treenode node="removeRightProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;861;5;877;;;;vpos;;v;;r;;d4,862;;b1,0;;m">
				</treenode>
				<treenode node="replaceProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;1072;5;1092;;;;vpos;;v;;r;;d4,1073;;b1,0;;m">
				</treenode>
				<treenode node="reverseProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;612;5;621;;;;vpos;;v;;r;;d4,613;;b1,0;;m">
				</treenode>
				<treenode node="safeTruncateProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;584;5;610;;;;vpos;;v;;r;;d4,585;;b1,0;;m">
				</treenode>
				<treenode node="shuffleProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;623;5;630;;;;vpos;;v;;r;;d4,624;;b1,0;;m">
				</treenode>
				<treenode node="slugifyProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;408;5;427;;;;vpos;;v;;r;;d4,409;;b1,0;;m">
				</treenode>
				<treenode node="startsWithProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;318;5;333;;;;vpos;;v;;r;;d4,319;;b1,0;;m">
				</treenode>
				<treenode node="substrProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;746;5;759;;;;vpos;;v;;r;;d4,747;;b1,0;;m">
				</treenode>
				<treenode node="surroundProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;532;5;541;;;;vpos;;v;;r;;d4,533;;b1,0;;m">
				</treenode>
				<treenode node="swapCaseProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;167;5;175;;;;vpos;;v;;r;;d4,168;;b1,0;;m">
				</treenode>
				<treenode node="tidyProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;199;5;207;;;;vpos;;v;;r;;d4,200;;b1,0;;m">
				</treenode>
				<treenode node="titleizeProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;177;5;188;;;;vpos;;v;;r;;d4,178;;b1,0;;m">
				</treenode>
				<treenode node="toAsciiProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;227;5;248;;;;vpos;;v;;r;;d4,228;;b1,0;;m">
				</treenode>
				<treenode node="toLowerCaseProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;375;5;384;;;;vpos;;v;;r;;d4,376;;b1,0;;m">
				</treenode>
				<treenode node="toSpacesProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;352;5;362;;;;vpos;;v;;r;;d4,353;;b1,0;;m">
				</treenode>
				<treenode node="toTabsProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;364;5;373;;;;vpos;;v;;r;;d4,365;;b1,0;;m">
				</treenode>
				<treenode node="toTitleCaseProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;386;5;395;;;;vpos;;v;;r;;d4,387;;b1,0;;m">
				</treenode>
				<treenode node="toUpperCaseProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;397;5;406;;;;vpos;;v;;r;;d4,398;;b1,0;;m">
				</treenode>
				<treenode node="trimLeftProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;650;5;667;;;;vpos;;v;;r;;d4,651;;b1,0;;m">
				</treenode>
				<treenode node="trimProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;632;5;648;;;;vpos;;v;;r;;d4,633;;b1,0;;m">
				</treenode>
				<treenode node="trimRightProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;669;5;686;;;;vpos;;v;;r;;d4,670;;b1,0;;m">
				</treenode>
				<treenode node="truncateProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;556;5;582;;;;vpos;;v;;r;;d4,557;;b1,0;;m">
				</treenode>
				<treenode node="underscoredProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;126;5;145;;;;vpos;;v;;r;;d4,127;;b1,0;;m">
				</treenode>
				<treenode node="upperCamelizeProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;86;5;103;;;;vpos;;v;;r;;d4,87;;b1,0;;m">
				</treenode>
				<treenode node="upperCaseFirstProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php;f11;45;5;54;;;;vpos;;v;;r;;d4,46;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ComposerAutoloaderInit3b10a079ec8d2bc977567e54cd3f0130;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\autoload_real.php;f0;4;1;60;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="getLoader;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\autoload_real.php;f18;15;5;59;;;;vpos;;v;;r;;d4,16;;b1,5;;m">
				</treenode>
				<treenode node="loadClassLoader;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\autoload_real.php;f18;8;5;13;;;;vpos;;v;;r;;d4,9;;b1,5;;mclass;;p">
					<treenode node="class;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\autoload_real.php;f43;8;49;8;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="loader;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\autoload_real.php;f19;6;26;6;;;;vpos;;v;;r;;d-1,-1;;b3,5;;m">
				</treenode>
			</treenode>
			<treenode node="ComposerStaticInit3b10a079ec8d2bc977567e54cd3f0130;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\autoload_static.php;f0;6;1;99;;;;vpos;;v;;r;;d0,7;;b0,0;;m">
				<treenode node="getInitializer;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\autoload_static.php;f18;90;5;98;;;;vpos;;v;;r;;d4,91;;b1,5;;mloader;;p">
					<treenode node="loader;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\autoload_static.php;f54;90;61;90;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fallbackDirsPsr4;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\autoload_static.php;f18;86;35;86;;;;vpos;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
				<treenode node="files;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\autoload_static.php;f18;8;24;8;;;;vpos;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
				<treenode node="prefixDirsPsr4;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\autoload_static.php;f18;43;33;43;;;;vpos;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
				<treenode node="prefixLengthsPsr4;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\autoload_static.php;f18;15;36;15;;;;vpos;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="ConcreteFileDumper;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\FileDumperTest.php;f0;54;1;65;;;;vpos;;vFileDumper;;c;;r;;d0,55;;b0,0;;m">
				<treenode node="formatCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\FileDumperTest.php;f11;56;5;59;;;;vpos;;v;;r;;d4,57;;b1,0;;mmessages;;pdomain;;poptions;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\FileDumperTest.php;f64;56;71;56;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\FileDumperTest.php;f53;56;62;56;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\FileDumperTest.php;f79;56;87;56;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getExtension;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\FileDumperTest.php;f14;61;5;64;;;;vpos;;v;;r;;d4,62;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="Config;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Config.php;f0;7;1;18;;;;vpos;;vFacade;;c;;r&#xA;Definition&#xA;    class Config extends Facade&#xA;&#xA;Description&#xA;      see \Illuminate\Config\Repository;;d0,8;;b0,0;;m">
				<treenode node="getFacadeAccessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Config.php;f21;14;5;17;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getFacadeAccessor()&#xA;&#xA;Description&#xA;     Get the registered name of the component.;;d4,15;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="Connection;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f0;21;1;1139;;;;vpos;;vConnectionInterface;;c;;r;;d0,22;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;144;5;163;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct(PDO $pdo, $database = '', $tablePrefix = '', array $config = [])&#xA;&#xA;Description&#xA;     Create a new database connection instance.&#xA;&#xA;Parameters:&#xA;    \PDO $pdo&#xA;    string $database&#xA;    string $tablePrefix&#xA;    array $config;;d4,145;;b1,0;;m\PDO $pdo;;pstring $database;;pstring $tablePrefix;;parray $config;;p">
					<treenode node="config;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f83;144;90;144;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="database;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f42;144;51;144;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="pdo;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f36;144;40;144;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="tablePrefix;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f58;144;70;144;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="affectingStatement;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;391;5;407;;;;vpos;;vint;;r&#xA;Definition&#xA;    affectingStatement($query, $bindings = [])&#xA;&#xA;Description&#xA;     Run an SQL statement and get the number of rows affected.&#xA;&#xA;Parameters:&#xA;    string $query&#xA;    array $bindings;;d4,392;;b1,0;;mstring $query;;parray $bindings;;p">
					<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f47;391;56;391;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f39;391;45;391;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="beginTransaction;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;492;5;501;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    beginTransaction()&#xA;&#xA;Description&#xA;     Start a new database transaction.;;d4,493;;b1,0;;m">
				</treenode>
				<treenode node="causedByLostConnection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f14;671;5;680;;;;vpos;;vbool;;r&#xA;Definition&#xA;    causedByLostConnection(QueryException $e)&#xA;&#xA;Description&#xA;     Determine if the given exception was caused by a lost connection.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\QueryException $e;;d4,672;;b2,0;;m\Illuminate\Database\QueryException $e;;p">
					<treenode node="e;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f61;671;63;671;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="commit;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;508;5;517;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    commit()&#xA;&#xA;Description&#xA;     Commit the active database transaction.;;d4,509;;b1,0;;m">
				</treenode>
				<treenode node="delete;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;359;5;362;;;;vpos;;vint;;r&#xA;Definition&#xA;    delete($query, $bindings = [])&#xA;&#xA;Description&#xA;     Run a delete statement against the database.&#xA;&#xA;Parameters:&#xA;    string $query&#xA;    array $bindings;;d4,360;;b1,0;;mstring $query;;parray $bindings;;p">
					<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f35;359;44;359;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f27;359;33;359;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="disableQueryLog;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;1068;5;1071;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    disableQueryLog()&#xA;&#xA;Description&#xA;     Disable the query log on the connection.;;d4,1069;;b1,0;;m">
				</treenode>
				<treenode node="disconnect;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;687;5;690;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    disconnect()&#xA;&#xA;Description&#xA;     Disconnect from the underlying PDO connection.;;d4,688;;b1,0;;m">
				</treenode>
				<treenode node="enableQueryLog;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;1058;5;1061;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    enableQueryLog()&#xA;&#xA;Description&#xA;     Enable the query log on the connection.;;d4,1059;;b1,0;;m">
				</treenode>
				<treenode node="fireConnectionEvent;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f14;760;5;765;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    fireConnectionEvent($event)&#xA;&#xA;Description&#xA;     Fire an event for this connection.&#xA;&#xA;Parameters:&#xA;    string $event;;d4,761;;b2,0;;mstring $event;;p">
					<treenode node="event;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f43;760;49;760;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="flushQueryLog;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;1048;5;1051;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    flushQueryLog()&#xA;&#xA;Description&#xA;     Clear the query log.;;d4,1049;;b1,0;;m">
				</treenode>
				<treenode node="getConfig;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;903;5;906;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    getConfig($option)&#xA;&#xA;Description&#xA;     Get an option from the configuration options.&#xA;&#xA;Parameters:&#xA;    string $option;;d4,904;;b1,0;;mstring $option;;p">
					<treenode node="option;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f30;903;37;903;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getDatabaseName;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;1088;5;1091;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getDatabaseName()&#xA;&#xA;Description&#xA;     Get the name of the connected database.;;d4,1089;;b1,0;;m">
				</treenode>
				<treenode node="getDefaultPostProcessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f14;220;5;223;;;;vpos;;v;;r&#xA;Definition&#xA;    getDefaultPostProcessor()&#xA;&#xA;Description&#xA;     Get the default post processor instance.;;d4,221;;b2,0;;m">
				</treenode>
				<treenode node="getDefaultQueryGrammar;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f14;180;5;183;;;;vpos;;v;;r&#xA;Definition&#xA;    getDefaultQueryGrammar()&#xA;&#xA;Description&#xA;     Get the default query grammar instance.;;d4,181;;b2,0;;m">
				</treenode>
				<treenode node="getDefaultSchemaGrammar;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f14;200;5;203;;;;vpos;;v;;r&#xA;Definition&#xA;    getDefaultSchemaGrammar()&#xA;&#xA;Description&#xA;     Get the default schema grammar instance.;;d4,201;;b2,0;;m">
				</treenode>
				<treenode node="getDoctrineColumn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;785;5;790;;;;vpos;;v;;r&#xA;Definition&#xA;    getDoctrineColumn($table, $column)&#xA;&#xA;Description&#xA;     Get a Doctrine Schema Column instance.&#xA;&#xA;Parameters:&#xA;    string $table&#xA;    string $column;;d4,786;;b1,0;;mstring $table;;pstring $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f46;785;53;785;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f38;785;44;785;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getDoctrineConnection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;807;5;818;;;;vpos;;v;;r&#xA;Definition&#xA;    getDoctrineConnection()&#xA;&#xA;Description&#xA;     Get the Doctrine DBAL database connection instance.;;d4,808;;b1,0;;m">
				</treenode>
				<treenode node="getDoctrineSchemaManager;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;797;5;800;;;;vpos;;v;;r&#xA;Definition&#xA;    getDoctrineSchemaManager()&#xA;&#xA;Description&#xA;     Get the Doctrine DBAL schema manager for the connection.;;d4,798;;b1,0;;m">
				</treenode>
				<treenode node="getDriverName;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;913;5;916;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getDriverName()&#xA;&#xA;Description&#xA;     Get the PDO driver name.;;d4,914;;b1,0;;m">
				</treenode>
				<treenode node="getElapsedTime;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f14;773;5;776;;;;vpos;;vfloat;;r&#xA;Definition&#xA;    getElapsedTime($start)&#xA;&#xA;Description&#xA;     Get the elapsed time since a given starting point.&#xA;&#xA;Parameters:&#xA;    int $start;;d4,774;;b2,0;;mint $start;;p">
					<treenode node="start;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f38;773;44;773;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getEventDispatcher;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;986;5;989;;;;vpos;;v;;r&#xA;Definition&#xA;    getEventDispatcher()&#xA;&#xA;Description&#xA;     Get the event dispatcher used by the connection.;;d4,987;;b1,0;;m">
				</treenode>
				<treenode node="getFetchMode;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;1017;5;1020;;;;vpos;;vint;;r&#xA;Definition&#xA;    getFetchMode()&#xA;&#xA;Description&#xA;     Get the default fetch mode for the connection.;;d4,1018;;b1,0;;m">
				</treenode>
				<treenode node="getName;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;892;5;895;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getName()&#xA;&#xA;Description&#xA;     Get the database connection name.&#xA;&#xA;Return:&#xA;   |null;;d4,893;;b1,0;;m">
				</treenode>
				<treenode node="getPdo;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;825;5;828;;;;vpos;;v;;r&#xA;Definition&#xA;    getPdo()&#xA;&#xA;Description&#xA;     Get the current PDO connection.;;d4,826;;b1,0;;m">
				</treenode>
				<treenode node="getPdoForSelect;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f14;323;5;326;;;;vpos;;v;;r&#xA;Definition&#xA;    getPdoForSelect($useReadPdo = true)&#xA;&#xA;Description&#xA;     Get the PDO connection to use for a select query.&#xA;&#xA;Parameters:&#xA;    bool $useReadPdo;;d4,324;;b2,0;;mbool $useReadPdo;;p">
					<treenode node="useReadPdo;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f39;323;50;323;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getPostProcessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;965;5;968;;;;vpos;;v;;r&#xA;Definition&#xA;    getPostProcessor()&#xA;&#xA;Description&#xA;     Get the query post processor used by the connection.;;d4,966;;b1,0;;m">
				</treenode>
				<treenode node="getQueryGrammar;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;923;5;926;;;;vpos;;v;;r&#xA;Definition&#xA;    getQueryGrammar()&#xA;&#xA;Description&#xA;     Get the query grammar used by the connection.;;d4,924;;b1,0;;m">
				</treenode>
				<treenode node="getQueryLog;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;1038;5;1041;;;;vpos;;varray;;r&#xA;Definition&#xA;    getQueryLog()&#xA;&#xA;Description&#xA;     Get the connection query log.;;d4,1039;;b1,0;;m">
				</treenode>
				<treenode node="getReadPdo;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;835;5;842;;;;vpos;;v;;r&#xA;Definition&#xA;    getReadPdo()&#xA;&#xA;Description&#xA;     Get the current PDO connection used for reading.;;d4,836;;b1,0;;m">
				</treenode>
				<treenode node="getSchemaBuilder;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;230;5;237;;;;vpos;;v;;r&#xA;Definition&#xA;    getSchemaBuilder()&#xA;&#xA;Description&#xA;     Get a schema builder instance for the connection.;;d4,231;;b1,0;;m">
				</treenode>
				<treenode node="getSchemaGrammar;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;944;5;947;;;;vpos;;v;;r&#xA;Definition&#xA;    getSchemaGrammar()&#xA;&#xA;Description&#xA;     Get the schema grammar used by the connection.;;d4,945;;b1,0;;m">
				</treenode>
				<treenode node="getTablePrefix;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;1109;5;1112;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getTablePrefix()&#xA;&#xA;Description&#xA;     Get the table prefix for the connection.;;d4,1110;;b1,0;;m">
				</treenode>
				<treenode node="insert;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;335;5;338;;;;vpos;;vbool;;r&#xA;Definition&#xA;    insert($query, $bindings = [])&#xA;&#xA;Description&#xA;     Run an insert statement against the database.&#xA;&#xA;Parameters:&#xA;    string $query&#xA;    array $bindings;;d4,336;;b1,0;;mstring $query;;parray $bindings;;p">
					<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f35;335;44;335;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f27;335;33;335;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="listen;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;747;5;752;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    listen(Closure $callback)&#xA;&#xA;Description&#xA;     Register a database query listener with the connection.&#xA;&#xA;Parameters:&#xA;    \Closure $callback;;d4,748;;b1,0;;m\Closure $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f35;747;44;747;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="logging;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;1078;5;1081;;;;vpos;;vbool;;r&#xA;Definition&#xA;    logging()&#xA;&#xA;Description&#xA;     Determine whether we're logging queries.;;d4,1079;;b1,0;;m">
				</treenode>
				<treenode node="logQuery;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;728;5;739;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    logQuery($query, $bindings, $time = null)&#xA;&#xA;Description&#xA;     Log a query in the connection's query log.&#xA;&#xA;Parameters:&#xA;    string $query&#xA;    array $bindings&#xA;    float|null $time;;d4,729;;b1,0;;mstring $query;;parray $bindings;;pfloat|null $time;;p">
					<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f37;728;46;728;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f29;728;35;728;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="time;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f48;728;53;728;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="prepareBindings;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;432;5;448;;;;vpos;;varray;;r&#xA;Definition&#xA;    prepareBindings(array $bindings)&#xA;&#xA;Description&#xA;     Prepare the query bindings for execution.&#xA;&#xA;Parameters:&#xA;    array $bindings;;d4,433;;b1,0;;marray $bindings;;p">
					<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f42;432;51;432;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="pretend;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;553;5;573;;;;vpos;;varray;;r&#xA;Definition&#xA;    pretend(Closure $callback)&#xA;&#xA;Description&#xA;     Execute the given callback in &quot;dry run&quot; mode.&#xA;&#xA;Parameters:&#xA;    \Closure $callback;;d4,554;;b1,0;;m\Closure $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f36;553;45;553;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="pretending;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;1007;5;1010;;;;vpos;;vbool;;r&#xA;Definition&#xA;    pretending()&#xA;&#xA;Description&#xA;     Determine if the connection in a &quot;dry run&quot;.;;d4,1008;;b1,0;;m">
				</treenode>
				<treenode node="raw;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;260;5;263;;;;vpos;;v;;r&#xA;Definition&#xA;    raw($value)&#xA;&#xA;Description&#xA;     Get a new raw query expression.&#xA;&#xA;Parameters:&#xA;    mixed $value;;d4,261;;b1,0;;mmixed $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f24;260;30;260;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="reconnect;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;699;5;706;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    reconnect()&#xA;&#xA;Description&#xA;     Reconnect to the database.;;d4,700;;b1,0;;m">
				</treenode>
				<treenode node="reconnectIfMissingConnection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f14;713;5;718;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    reconnectIfMissingConnection()&#xA;&#xA;Description&#xA;     Reconnect to the database if a PDO connection is missing.;;d4,714;;b2,0;;m">
				</treenode>
				<treenode node="rollBack;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;524;5;535;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    rollBack()&#xA;&#xA;Description&#xA;     Rollback the active database transaction.;;d4,525;;b1,0;;m">
				</treenode>
				<treenode node="run;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f14;585;5;610;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    run($query, $bindings, Closure $callback)&#xA;&#xA;Description&#xA;     Run a SQL statement and log its execution context.&#xA;&#xA;Parameters:&#xA;    string $query&#xA;    array $bindings&#xA;    \Closure $callback;;d4,586;;b2,0;;mstring $query;;parray $bindings;;p\Closure $callback;;p">
					<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f35;585;44;585;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f54;585;63;585;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f27;585;33;585;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="runQueryCallback;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f14;622;5;641;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    runQueryCallback($query, $bindings, Closure $callback)&#xA;&#xA;Description&#xA;     Run a SQL statement.&#xA;&#xA;Parameters:&#xA;    string $query&#xA;    array $bindings&#xA;    \Closure $callback;;d4,623;;b2,0;;mstring $query;;parray $bindings;;p\Closure $callback;;p">
					<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f48;622;57;622;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f67;622;76;622;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f40;622;46;622;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="select;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;299;5;315;;;;vpos;;varray;;r&#xA;Definition&#xA;    select($query, $bindings = [], $useReadPdo = true)&#xA;&#xA;Description&#xA;     Run a select statement against the database.&#xA;&#xA;Parameters:&#xA;    string $query&#xA;    array $bindings&#xA;    bool $useReadPdo;;d4,300;;b1,0;;mstring $query;;parray $bindings;;pbool $useReadPdo;;p">
					<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f35;299;44;299;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f27;299;33;299;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="useReadPdo;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f51;299;62;299;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="selectFromWriteConnection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;286;5;289;;;;vpos;;varray;;r&#xA;Definition&#xA;    selectFromWriteConnection($query, $bindings = [])&#xA;&#xA;Description&#xA;     Run a select statement against the database.&#xA;&#xA;Parameters:&#xA;    string $query&#xA;    array $bindings;;d4,287;;b1,0;;mstring $query;;parray $bindings;;p">
					<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f54;286;63;286;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f46;286;52;286;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="selectOne;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;272;5;277;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    selectOne($query, $bindings = [])&#xA;&#xA;Description&#xA;     Run a select statement and return a single result.&#xA;&#xA;Parameters:&#xA;    string $query&#xA;    array $bindings;;d4,273;;b1,0;;mstring $query;;parray $bindings;;p">
					<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f38;272;47;272;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f30;272;36;272;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setDatabaseName;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;1099;5;1102;;;;vpos;;vstring;;r&#xA;Definition&#xA;    setDatabaseName($database)&#xA;&#xA;Description&#xA;     Set the name of the connected database.&#xA;&#xA;Parameters:&#xA;    string $database;;d4,1100;;b1,0;;mstring $database;;p">
					<treenode node="database;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f36;1099;45;1099;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setEventDispatcher;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;997;5;1000;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setEventDispatcher(Dispatcher $events)&#xA;&#xA;Description&#xA;     Set the event dispatcher instance on the connection.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Contracts\Events\Dispatcher $events;;d4,998;;b1,0;;m\Illuminate\Contracts\Events\Dispatcher $events;;p">
					<treenode node="events;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f50;997;57;997;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setFetchMode;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;1028;5;1031;;;;vpos;;vint;;r&#xA;Definition&#xA;    setFetchMode($fetchMode)&#xA;&#xA;Description&#xA;     Set the default fetch mode for the connection.&#xA;&#xA;Parameters:&#xA;    int $fetchMode;;d4,1029;;b1,0;;mint $fetchMode;;p">
					<treenode node="fetchMode;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f33;1028;43;1028;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setPdo;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;850;5;859;;;;vpos;;v;;r&#xA;Definition&#xA;    setPdo($pdo)&#xA;&#xA;Description&#xA;     Set the PDO connection.&#xA;&#xA;Parameters:&#xA;    \PDO|null $pdo;;d4,851;;b1,0;;m\PDO|null $pdo;;p">
					<treenode node="pdo;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f27;850;31;850;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setPostProcessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;976;5;979;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setPostProcessor(Processor $processor)&#xA;&#xA;Description&#xA;     Set the query post processor used by the connection.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Processors\Processor $processor;;d4,977;;b1,0;;m\Illuminate\Database\Query\Processors\Processor $processor;;p">
					<treenode node="processor;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f47;976;57;976;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setQueryGrammar;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;934;5;937;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setQueryGrammar(Query\Grammars\Grammar $grammar)&#xA;&#xA;Description&#xA;     Set the query grammar used by the connection.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Grammars\Grammar $grammar;;d4,935;;b1,0;;m\Illuminate\Database\Query\Grammars\Grammar $grammar;;p">
					<treenode node="grammar;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f59;934;67;934;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setReadPdo;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;867;5;872;;;;vpos;;v;;r&#xA;Definition&#xA;    setReadPdo($pdo)&#xA;&#xA;Description&#xA;     Set the PDO connection used for reading.&#xA;&#xA;Parameters:&#xA;    \PDO|null $pdo;;d4,868;;b1,0;;m\PDO|null $pdo;;p">
					<treenode node="pdo;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f31;867;35;867;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setReconnector;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;880;5;885;;;;vpos;;v;;r&#xA;Definition&#xA;    setReconnector(callable $reconnector)&#xA;&#xA;Description&#xA;     Set the reconnect instance on the connection.&#xA;&#xA;Parameters:&#xA;    callable $reconnector;;d4,881;;b1,0;;mcallable $reconnector;;p">
					<treenode node="reconnector;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f44;880;56;880;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setSchemaGrammar;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;955;5;958;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setSchemaGrammar(Schema\Grammars\Grammar $grammar)&#xA;&#xA;Description&#xA;     Set the schema grammar used by the connection.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Grammars\Grammar $grammar;;d4,956;;b1,0;;m\Illuminate\Database\Schema\Grammars\Grammar $grammar;;p">
					<treenode node="grammar;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f61;955;69;955;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setTablePrefix;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;1120;5;1125;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setTablePrefix($prefix)&#xA;&#xA;Description&#xA;     Set the table prefix in use by the connection.&#xA;&#xA;Parameters:&#xA;    string $prefix;;d4,1121;;b1,0;;mstring $prefix;;p">
					<treenode node="prefix;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f35;1120;42;1120;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="statement;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;371;5;382;;;;vpos;;vbool;;r&#xA;Definition&#xA;    statement($query, $bindings = [])&#xA;&#xA;Description&#xA;     Execute an SQL statement and return the boolean result.&#xA;&#xA;Parameters:&#xA;    string $query&#xA;    array $bindings;;d4,372;;b1,0;;mstring $query;;parray $bindings;;p">
					<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f38;371;47;371;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f30;371;36;371;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="table;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;245;5;252;;;;vpos;;v;;r&#xA;Definition&#xA;    table($table)&#xA;&#xA;Description&#xA;     Begin a fluent query against a database table.&#xA;&#xA;Parameters:&#xA;    string $table;;d4,246;;b1,0;;mstring $table;;p">
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f26;245;32;245;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="transaction;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;458;5;485;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    transaction(Closure $callback)&#xA;&#xA;Description&#xA;     Execute a Closure within a transaction.&#xA;&#xA;Parameters:&#xA;    \Closure $callback;;d4,459;;b1,0;;m\Closure $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f40;458;49;458;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="transactionLevel;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;542;5;545;;;;vpos;;vint;;r&#xA;Definition&#xA;    transactionLevel()&#xA;&#xA;Description&#xA;     Get the number of active transactions.;;d4,543;;b1,0;;m">
				</treenode>
				<treenode node="tryAgainIfCausedByLostConnection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f14;654;5;663;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    tryAgainIfCausedByLostConnection(QueryException $e, $query, $bindings, Closure $callback)&#xA;&#xA;Description&#xA;     Handle a query exception that occurred during query execution.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\QueryException $e&#xA;    string $query&#xA;    array $bindings&#xA;    \Closure $callback;;d4,655;;b2,0;;m\Illuminate\Database\QueryException $e;;pstring $query;;parray $bindings;;p\Closure $callback;;p">
					<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f83;654;92;654;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f102;654;111;654;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="e;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f71;654;73;654;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f75;654;81;654;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="unprepared;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;415;5;424;;;;vpos;;vbool;;r&#xA;Definition&#xA;    unprepared($query)&#xA;&#xA;Description&#xA;     Run a raw, unprepared query against the PDO connection.&#xA;&#xA;Parameters:&#xA;    string $query;;d4,416;;b1,0;;mstring $query;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f31;415;37;415;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="update;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;347;5;350;;;;vpos;;vint;;r&#xA;Definition&#xA;    update($query, $bindings = [])&#xA;&#xA;Description&#xA;     Run an update statement against the database.&#xA;&#xA;Parameters:&#xA;    string $query&#xA;    array $bindings;;d4,348;;b1,0;;mstring $query;;parray $bindings;;p">
					<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f35;347;44;347;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f27;347;33;347;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="useDefaultPostProcessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;210;5;213;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    useDefaultPostProcessor()&#xA;&#xA;Description&#xA;     Set the query post processor to the default implementation.;;d4,211;;b1,0;;m">
				</treenode>
				<treenode node="useDefaultQueryGrammar;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;170;5;173;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    useDefaultQueryGrammar()&#xA;&#xA;Description&#xA;     Set the query grammar to the default implementation.;;d4,171;;b1,0;;m">
				</treenode>
				<treenode node="useDefaultSchemaGrammar;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;190;5;193;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    useDefaultSchemaGrammar()&#xA;&#xA;Description&#xA;     Set the schema grammar to the default implementation.;;d4,191;;b1,0;;m">
				</treenode>
				<treenode node="withTablePrefix;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f11;1133;5;1138;;;;vpos;;v;;r&#xA;Definition&#xA;    withTablePrefix(Grammar $grammar)&#xA;&#xA;Description&#xA;     Set the table prefix and return the grammar.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Grammar $grammar;;d4,1134;;b1,0;;m\Illuminate\Database\Grammar $grammar;;p">
					<treenode node="grammar;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f44;1133;52;1133;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="config;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f14;133;21;133;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="database;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f14;112;23;112;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="doctrineConnection;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f14;119;33;119;;;;vpos;;v;;r&#xA;Description&#xA;     The instance of Doctrine connection.;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="events;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f14;70;21;70;;;;vpos;;v;;r&#xA;Description&#xA;     The event dispatcher instance.;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="fetchMode;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f14;77;24;77;;;;vposint;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="loggingQueries;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f14;98;29;98;;;;vposbool;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="pdo;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f14;28;18;28;;;;vposPDO;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="postProcessor;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f14;63;28;63;;;;vpos;;v;;r&#xA;Description&#xA;     The query post processor implementation.;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="pretending;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f14;105;25;105;;;;vposbool;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="queryGrammar;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f14;49;27;49;;;;vpos;;v;;r&#xA;Description&#xA;     The query grammar implementation.;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="queryLog;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f14;91;23;91;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="readPdo;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f14;35;22;35;;;;vposPDO;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="reconnector;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f14;42;26;42;;;;vposcallable;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="schemaGrammar;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f14;56;28;56;;;;vpos;;v;;r&#xA;Description&#xA;     The schema grammar implementation.;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="tablePrefix;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f14;126;26;126;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="transactions;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php;f14;84;27;84;;;;vposint;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="ConnectionFactory;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectionFactory.php;f0;13;1;225;;;;vpos;;v;;r;;d0,14;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectionFactory.php;f11;28;5;31;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct(Container $container)&#xA;&#xA;Description&#xA;     Create a new connection factory instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Contracts\Container\Container $container;;d4,29;;b1,0;;m\Illuminate\Contracts\Container\Container $container;;p">
					<treenode node="container;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectionFactory.php;f42;28;52;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="createConnection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectionFactory.php;f14;203;5;224;;;;vpos;;v;;r&#xA;Definition&#xA;    createConnection($driver, PDO $connection, $database, $prefix = '', array $config = [])&#xA;&#xA;Description&#xA;     Create a new connection instance.&#xA;&#xA;Parameters:&#xA;    string $driver&#xA;    \PDO $connection&#xA;    string $database&#xA;    string $prefix&#xA;    array $config;;d4,204;;b2,0;;mstring $driver;;p\PDO $connection;;pstring $database;;pstring $prefix;;parray $config;;p">
					<treenode node="config;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectionFactory.php;f97;203;104;203;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="connection;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectionFactory.php;f53;203;64;203;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="database;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectionFactory.php;f66;203;75;203;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="driver;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectionFactory.php;f40;203;47;203;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="prefix;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectionFactory.php;f77;203;84;203;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="createConnector;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectionFactory.php;f11;164;5;189;;;;vpos;;v;;r&#xA;Definition&#xA;    createConnector(array $config)&#xA;&#xA;Description&#xA;     Create a connector instance based on the configuration.&#xA;&#xA;Parameters:&#xA;    array $config;;d4,165;;b1,0;;marray $config;;p">
					<treenode node="config;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectionFactory.php;f42;164;49;164;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="createReadPdo;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectionFactory.php;f14;83;5;88;;;;vpos;;v;;r&#xA;Definition&#xA;    createReadPdo(array $config)&#xA;&#xA;Description&#xA;     Create a new PDO instance for reading.&#xA;&#xA;Parameters:&#xA;    array $config;;d4,84;;b2,0;;marray $config;;p">
					<treenode node="config;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectionFactory.php;f43;83;50;83;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="createReadWriteConnection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectionFactory.php;f14;70;5;75;;;;vpos;;v;;r&#xA;Definition&#xA;    createReadWriteConnection(array $config)&#xA;&#xA;Description&#xA;     Create a single database connection instance.&#xA;&#xA;Parameters:&#xA;    array $config;;d4,71;;b2,0;;marray $config;;p">
					<treenode node="config;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectionFactory.php;f55;70;62;70;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="createSingleConnection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectionFactory.php;f14;57;5;62;;;;vpos;;v;;r&#xA;Definition&#xA;    createSingleConnection(array $config)&#xA;&#xA;Description&#xA;     Create a single database connection instance.&#xA;&#xA;Parameters:&#xA;    array $config;;d4,58;;b2,0;;marray $config;;p">
					<treenode node="config;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectionFactory.php;f52;57;59;57;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getReadConfig;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectionFactory.php;f14;96;5;101;;;;vpos;;varray;;r&#xA;Definition&#xA;    getReadConfig(array $config)&#xA;&#xA;Description&#xA;     Get the read configuration for a read / write connection.&#xA;&#xA;Parameters:&#xA;    array $config;;d4,97;;b2,0;;marray $config;;p">
					<treenode node="config;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectionFactory.php;f43;96;50;96;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getReadWriteConfig;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectionFactory.php;f14;123;5;130;;;;vpos;;varray;;r&#xA;Definition&#xA;    getReadWriteConfig(array $config, $type)&#xA;&#xA;Description&#xA;     Get a read / write level configuration.&#xA;&#xA;Parameters:&#xA;    array $config&#xA;    string $type;;d4,124;;b2,0;;marray $config;;pstring $type;;p">
					<treenode node="config;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectionFactory.php;f48;123;55;123;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectionFactory.php;f57;123;62;123;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getWriteConfig;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectionFactory.php;f14;109;5;114;;;;vpos;;varray;;r&#xA;Definition&#xA;    getWriteConfig(array $config)&#xA;&#xA;Description&#xA;     Get the read configuration for a read / write connection.&#xA;&#xA;Parameters:&#xA;    array $config;;d4,110;;b2,0;;marray $config;;p">
					<treenode node="config;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectionFactory.php;f44;109;51;109;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="make;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectionFactory.php;f11;40;5;49;;;;vpos;;v;;r&#xA;Definition&#xA;    make(array $config, $name = null)&#xA;&#xA;Description&#xA;     Establish a PDO connection based on the configuration.&#xA;&#xA;Parameters:&#xA;    array $config&#xA;    string $name;;d4,41;;b1,0;;marray $config;;pstring $name;;p">
					<treenode node="config;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectionFactory.php;f31;40;38;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectionFactory.php;f40;40;45;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mergeReadWriteConfig;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectionFactory.php;f14;139;5;142;;;;vpos;;varray;;r&#xA;Definition&#xA;    mergeReadWriteConfig(array $config, array $merge)&#xA;&#xA;Description&#xA;     Merge a configuration for a read / write connection.&#xA;&#xA;Parameters:&#xA;    array $config&#xA;    array $merge;;d4,140;;b2,0;;marray $config;;parray $merge;;p">
					<treenode node="config;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectionFactory.php;f50;139;57;139;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="merge;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectionFactory.php;f65;139;71;139;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="parseConfig;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectionFactory.php;f14;151;5;154;;;;vpos;;varray;;r&#xA;Definition&#xA;    parseConfig(array $config, $name)&#xA;&#xA;Description&#xA;     Parse and prepare the database configuration.&#xA;&#xA;Parameters:&#xA;    array $config&#xA;    string $name;;d4,152;;b2,0;;marray $config;;pstring $name;;p">
					<treenode node="config;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectionFactory.php;f41;151;48;151;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectionFactory.php;f50;151;55;151;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="container;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectionFactory.php;f14;20;24;20;;;;vpos;;v;;r&#xA;Description&#xA;     The IoC container instance.;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="ConnectionResolver;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionResolver.php;f0;4;1;91;;;;vpos;;vConnectionResolverInterface;;c;;r;;d0,5;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionResolver.php;f11;26;5;31;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct(array $connections = [])&#xA;&#xA;Description&#xA;     Create a new connection resolver instance.&#xA;&#xA;Parameters:&#xA;    array $connections;;d4,27;;b1,0;;marray $connections;;p">
					<treenode node="connections;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionResolver.php;f38;26;50;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addConnection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionResolver.php;f11;55;5;58;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    addConnection($name, ConnectionInterface $connection)&#xA;&#xA;Description&#xA;     Add a connection to the resolver.&#xA;&#xA;Parameters:&#xA;    string $name&#xA;    \Illuminate\Database\ConnectionInterface $connection;;d4,56;;b1,0;;mstring $name;;p\Illuminate\Database\ConnectionInterface $connection;;p">
					<treenode node="connection;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionResolver.php;f61;55;72;55;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionResolver.php;f34;55;39;55;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="connection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionResolver.php;f11;39;5;46;;;;vpos;;v;;r&#xA;Definition&#xA;    connection($name = null)&#xA;&#xA;Description&#xA;     Get a database connection instance.&#xA;&#xA;Parameters:&#xA;    string $name;;d4,40;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionResolver.php;f31;39;36;39;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getDefaultConnection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionResolver.php;f11;76;5;79;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getDefaultConnection()&#xA;&#xA;Description&#xA;     Get the default connection name.;;d4,77;;b1,0;;m">
				</treenode>
				<treenode node="hasConnection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionResolver.php;f11;66;5;69;;;;vpos;;vbool;;r&#xA;Definition&#xA;    hasConnection($name)&#xA;&#xA;Description&#xA;     Check if a connection has been registered.&#xA;&#xA;Parameters:&#xA;    string $name;;d4,67;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionResolver.php;f34;66;39;66;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setDefaultConnection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionResolver.php;f11;87;5;90;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setDefaultConnection($name)&#xA;&#xA;Description&#xA;     Set the default connection name.&#xA;&#xA;Parameters:&#xA;    string $name;;d4,88;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionResolver.php;f41;87;46;87;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="connections;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionResolver.php;f14;11;26;11;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="default;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionResolver.php;f14;18;22;18;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="Connector;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\Connector.php;f0;7;1;72;;;;vpos;;v;;r;;d0,8;;b0,0;;m">
				<treenode node="createConnection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\Connector.php;f11;43;5;50;;;;vpos;;v;;r&#xA;Definition&#xA;    createConnection($dsn, array $config, array $options)&#xA;&#xA;Description&#xA;     Create a new PDO connection.&#xA;&#xA;Parameters:&#xA;    string $dsn&#xA;    array $config&#xA;    array $options;;d4,44;;b1,0;;mstring $dsn;;parray $config;;parray $options;;p">
					<treenode node="config;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\Connector.php;f49;43;56;43;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="dsn;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\Connector.php;f37;43;41;43;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\Connector.php;f64;43;72;43;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getDefaultOptions;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\Connector.php;f11;57;5;60;;;;vpos;;varray;;r&#xA;Definition&#xA;    getDefaultOptions()&#xA;&#xA;Description&#xA;     Get the default PDO connection options.;;d4,58;;b1,0;;m">
				</treenode>
				<treenode node="getOptions;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\Connector.php;f11;28;5;33;;;;vpos;;varray;;r&#xA;Definition&#xA;    getOptions(array $config)&#xA;&#xA;Description&#xA;     Get the PDO options based on the configuration.&#xA;&#xA;Parameters:&#xA;    array $config;;d4,29;;b1,0;;marray $config;;p">
					<treenode node="config;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\Connector.php;f37;28;44;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setDefaultOptions;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\Connector.php;f11;68;5;71;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setDefaultOptions(array $options)&#xA;&#xA;Description&#xA;     Set the default PDO connection options.&#xA;&#xA;Parameters:&#xA;    array $options;;d4,69;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\Connector.php;f44;68;52;68;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\Connector.php;f14;14;22;14;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="Container;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f0;14;1;1223;;;;vpos;;vArrayAccess;;cContainerContract;;c;;r;;d0,15;;b0,0;;m">
				<treenode node="__get;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f11;1207;5;1210;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    __get($key)&#xA;&#xA;Description&#xA;     Dynamically access container services.&#xA;&#xA;Parameters:&#xA;    string $key;;d4,1208;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f26;1207;30;1207;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__set;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f11;1219;5;1222;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __set($key, $value)&#xA;&#xA;Description&#xA;     Dynamically set container services.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    mixed $value;;d4,1220;;b1,0;;mstring $key;;pmixed $value;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f26;1219;30;1219;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f32;1219;38;1219;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addContextualBinding;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f11;231;5;234;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    addContextualBinding($concrete, $abstract, $implementation)&#xA;&#xA;Description&#xA;     Add a contextual binding to the container.&#xA;&#xA;Parameters:&#xA;    string $concrete&#xA;    string $abstract&#xA;    \Closure|string $implementation;;d4,232;;b1,0;;mstring $concrete;;pstring $abstract;;p\Closure|string $implementation;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f52;231;61;231;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="concrete;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f41;231;50;231;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="implementation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f63;231;78;231;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addDependencyForCallParameter;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;569;5;580;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    addDependencyForCallParameter(ReflectionParameter $parameter, array &amp;$parameters, &amp;$dependencies)&#xA;&#xA;Description&#xA;     Get the dependency for the given call parameter.&#xA;&#xA;Parameters:&#xA;    \ReflectionParameter $parameter&#xA;    array $parameters&#xA;    array $dependencies;;d4,570;;b2,0;;m\ReflectionParameter $parameter;;parray $parameters;;parray $dependencies;;p">
					<treenode node="dependencies;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f106;569;119;569;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameter;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f73;569;83;569;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f92;569;103;569;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="afterResolving;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f11;899;5;906;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    afterResolving($abstract, Closure $callback = null)&#xA;&#xA;Description&#xA;     Register a new after resolving callback for all types.&#xA;&#xA;Parameters:&#xA;    string $abstract&#xA;    \Closure|null $callback;;d4,900;;b1,0;;mstring $abstract;;p\Closure|null $callback;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f35;899;44;899;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f54;899;63;899;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="afterResolvingCallback;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;931;5;940;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    afterResolvingCallback(Closure $callback)&#xA;&#xA;Description&#xA;     Register a new after resolving callback by type of its first argument.&#xA;&#xA;Parameters:&#xA;    \Closure $callback;;d4,932;;b2,0;;m\Closure $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f54;931;63;931;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="alias;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f11;399;5;402;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    alias($abstract, $alias)&#xA;&#xA;Description&#xA;     Alias a type to a different name.&#xA;&#xA;Parameters:&#xA;    string $abstract&#xA;    string $alias;;d4,400;;b1,0;;mstring $abstract;;pstring $alias;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f26;399;35;399;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="alias;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f37;399;43;399;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="bind;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f11;170;5;205;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    bind($abstract, $concrete = null, $shared = false)&#xA;&#xA;Description&#xA;     Register a binding with the container.&#xA;&#xA;Parameters:&#xA;    string|array $abstract&#xA;    \Closure|string|null $concrete&#xA;    bool $shared;;d4,171;;b1,0;;mstring|array $abstract;;p\Closure|string|null $concrete;;pbool $shared;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f25;170;34;170;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="concrete;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f36;170;45;170;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="shared;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f54;170;61;170;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="bindIf;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f11;244;5;249;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    bindIf($abstract, $concrete = null, $shared = false)&#xA;&#xA;Description&#xA;     Register a binding if it hasn't already been registered.&#xA;&#xA;Parameters:&#xA;    string $abstract&#xA;    \Closure|string|null $concrete&#xA;    bool $shared;;d4,245;;b1,0;;mstring $abstract;;p\Closure|string|null $concrete;;pbool $shared;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f27;244;36;244;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="concrete;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f38;244;47;244;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="shared;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f56;244;63;244;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="bindShared;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f11;294;5;297;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    bindShared($abstract, Closure $closure)&#xA;&#xA;Description&#xA;     Bind a shared Closure into the container.&#xA;&#xA;Parameters:&#xA;    string $abstract&#xA;    \Closure $closure;;d4,295;;b1,0;;mstring $abstract;;p\Closure $closure;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f31;294;40;294;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="closure;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f50;294;58;294;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="bound;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f11;131;5;134;;;;vpos;;vbool;;r&#xA;Definition&#xA;    bound($abstract)&#xA;&#xA;Description&#xA;     Determine if the given abstract type has been bound.&#xA;&#xA;Parameters:&#xA;    string $abstract;;d4,132;;b1,0;;mstring $abstract;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f26;131;35;131;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="build;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f11;731;5;780;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    build($concrete, array $parameters = [])&#xA;&#xA;Description&#xA;     Instantiate a concrete instance of the given type.&#xA;&#xA;Parameters:&#xA;    string $concrete&#xA;    array $parameters;;d4,732;;b1,0;;mstring $concrete;;parray $parameters;;p">
					<treenode node="concrete;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f26;731;35;731;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f43;731;54;731;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="call;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f11;498;5;507;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    call($callback, array $parameters = [], $defaultMethod = null)&#xA;&#xA;Description&#xA;     Call the given Closure / class method and inject its dependencies.&#xA;&#xA;Parameters:&#xA;    callable|string $callback&#xA;    array $parameters&#xA;    string|null $defaultMethod;;d4,499;;b1,0;;mcallable|string $callback;;parray $parameters;;pstring|null $defaultMethod;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f25;498;34;498;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="defaultMethod;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f60;498;74;498;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f42;498;53;498;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="callClass;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;590;5;604;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    callClass($target, array $parameters = [], $defaultMethod = null)&#xA;&#xA;Description&#xA;     Call a string reference to a class using Class method syntax.&#xA;&#xA;Parameters:&#xA;    string $target&#xA;    array $parameters&#xA;    string|null $defaultMethod;;d4,591;;b2,0;;mstring $target;;parray $parameters;;pstring|null $defaultMethod;;p">
					<treenode node="defaultMethod;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f66;590;80;590;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f48;590;59;590;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="target;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f33;590;40;590;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dropStaleInstances;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;1087;5;1090;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    dropStaleInstances($abstract)&#xA;&#xA;Description&#xA;     Drop all of the stale instances and aliases.&#xA;&#xA;Parameters:&#xA;    string $abstract;;d4,1088;;b2,0;;mstring $abstract;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f42;1087;51;1087;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="extend;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f11;308;5;317;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    extend($abstract, Closure $closure)&#xA;&#xA;Description&#xA;     &quot;Extend&quot; an abstract type in the container.&#xA;&#xA;Parameters:&#xA;    string $abstract&#xA;    \Closure $closure;;d4,309;;b1,0;;mstring $abstract;;p\Closure $closure;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f27;308;36;308;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="closure;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f46;308;54;308;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="extractAlias;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;410;5;413;;;;vpos;;varray;;r&#xA;Definition&#xA;    extractAlias(array $definition)&#xA;&#xA;Description&#xA;     Extract the type and alias from a given definition.&#xA;&#xA;Parameters:&#xA;    array $definition;;d4,411;;b2,0;;marray $definition;;p">
					<treenode node="definition;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f42;410;53;410;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fireCallbackArray;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;1020;5;1025;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    fireCallbackArray($object, array $callbacks)&#xA;&#xA;Description&#xA;     Fire an array of callbacks with an object.&#xA;&#xA;Parameters:&#xA;    mixed $object&#xA;    array $callbacks;;d4,1021;;b2,0;;mmixed $object;;parray $callbacks;;p">
					<treenode node="callbacks;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f56;1020;66;1020;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="object;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f41;1020;48;1020;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fireResolvingCallbacks;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;972;5;989;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    fireResolvingCallbacks($abstract, $object)&#xA;&#xA;Description&#xA;     Fire all of the resolving callbacks.&#xA;&#xA;Parameters:&#xA;    string $abstract&#xA;    mixed $object;;d4,973;;b2,0;;mstring $abstract;;pmixed $object;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f46;972;55;972;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="object;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f57;972;64;972;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="flush;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f11;1118;5;1124;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    flush()&#xA;&#xA;Description&#xA;     Flush the container of all bindings and resolved instances.;;d4,1119;;b1,0;;m">
				</treenode>
				<treenode node="forgetInstance;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f11;1098;5;1101;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    forgetInstance($abstract)&#xA;&#xA;Description&#xA;     Remove a resolved instance from the instance cache.&#xA;&#xA;Parameters:&#xA;    string $abstract;;d4,1099;;b1,0;;mstring $abstract;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f35;1098;44;1098;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="forgetInstances;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f11;1108;5;1111;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    forgetInstances()&#xA;&#xA;Description&#xA;     Clear all of the instances from the container.;;d4,1109;;b1,0;;m">
				</treenode>
				<treenode node="getAlias;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;1062;5;1069;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getAlias($abstract)&#xA;&#xA;Description&#xA;     Get the alias for an abstract if available.&#xA;&#xA;Parameters:&#xA;    string $abstract;;d4,1063;;b2,0;;mstring $abstract;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f32;1062;41;1062;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getBindings;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f11;1076;5;1079;;;;vpos;;varray;;r&#xA;Definition&#xA;    getBindings()&#xA;&#xA;Description&#xA;     Get the container's bindings.;;d4,1077;;b1,0;;m">
				</treenode>
				<treenode node="getCallbacksForType;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;1000;5;1011;;;;vpos;;varray;;r&#xA;Definition&#xA;    getCallbacksForType($abstract, $object, array $callbacksPerType)&#xA;&#xA;Description&#xA;     Get all callbacks for a given type.&#xA;&#xA;Parameters:&#xA;    string $abstract&#xA;    object $object&#xA;    array $callbacksPerType;;d4,1001;;b2,0;;mstring $abstract;;pobject $object;;parray $callbacksPerType;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f43;1000;52;1000;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="callbacksPerType;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f69;1000;86;1000;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="object;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f54;1000;61;1000;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getCallReflector;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;548;5;559;;;;vpos;;v;;r&#xA;Definition&#xA;    getCallReflector($callback)&#xA;&#xA;Description&#xA;     Get the proper reflection instance for the given callback.&#xA;&#xA;Parameters:&#xA;    callable|string $callback;;d4,549;;b2,0;;mcallable|string $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f40;548;49;548;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getClosure;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;214;5;221;;;;vpos;;v;;r&#xA;Definition&#xA;    getClosure($abstract, $concrete)&#xA;&#xA;Description&#xA;     Get the Closure to be used when building a type.&#xA;&#xA;Parameters:&#xA;    string $abstract&#xA;    string $concrete;;d4,215;;b2,0;;mstring $abstract;;pstring $concrete;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f34;214;43;214;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="concrete;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f45;214;54;214;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getConcrete;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;662;5;681;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    getConcrete($abstract)&#xA;&#xA;Description&#xA;     Get the concrete type for a given abstract.&#xA;&#xA;Parameters:&#xA;    string $abstract&#xA;&#xA;Return:&#xA;   $concrete;;d4,663;;b2,0;;mstring $abstract;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f35;662;44;662;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getContextualConcrete;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;689;5;694;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getContextualConcrete($abstract)&#xA;&#xA;Description&#xA;     Get the contextual concrete binding for the given abstract.&#xA;&#xA;Parameters:&#xA;    string $abstract&#xA;&#xA;Return:&#xA;   |null;;d4,690;;b2,0;;mstring $abstract;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f45;689;54;689;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getDependencies;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;789;5;809;;;;vpos;;varray;;r&#xA;Definition&#xA;    getDependencies(array $parameters, array $primitives = [])&#xA;&#xA;Description&#xA;     Resolve all of the dependencies from the ReflectionParameters.&#xA;&#xA;Parameters:&#xA;    array $parameters&#xA;    array $primitives;;d4,790;;b2,0;;marray $parameters;;parray $primitives;;p">
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f45;789;56;789;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="primitives;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f64;789;75;789;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getExtenders;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;713;5;720;;;;vpos;;varray;;r&#xA;Definition&#xA;    getExtenders($abstract)&#xA;&#xA;Description&#xA;     Get the extender callbacks for a given type.&#xA;&#xA;Parameters:&#xA;    string $abstract;;d4,714;;b2,0;;mstring $abstract;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f36;713;45;713;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getFunctionHint;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;948;5;963;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    getFunctionHint(Closure $callback)&#xA;&#xA;Description&#xA;     Get the type hint for this closure's first argument.&#xA;&#xA;Parameters:&#xA;    \Closure $callback;;d4,949;;b2,0;;m\Closure $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f47;948;56;948;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getInstance;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f18;1131;5;1134;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    getInstance()&#xA;&#xA;Description&#xA;     Set the globally available instance of the container.;;d4,1132;;b1,5;;m">
				</treenode>
				<treenode node="getMethodDependencies;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;531;5;540;;;;vpos;;varray;;r&#xA;Definition&#xA;    getMethodDependencies($callback, array $parameters = [])&#xA;&#xA;Description&#xA;     Get all dependencies for a given method.&#xA;&#xA;Parameters:&#xA;    callable|string $callback&#xA;    array $parameters;;d4,532;;b2,0;;mcallable|string $callback;;parray $parameters;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f45;531;54;531;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f62;531;73;531;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getReboundCallbacks;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;467;5;474;;;;vpos;;varray;;r&#xA;Definition&#xA;    getReboundCallbacks($abstract)&#xA;&#xA;Description&#xA;     Get the rebound callbacks for a given type.&#xA;&#xA;Parameters:&#xA;    string $abstract;;d4,468;;b2,0;;mstring $abstract;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f43;467;52;467;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="instance;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f11;326;5;349;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    instance($abstract, $instance)&#xA;&#xA;Description&#xA;     Register an existing instance as shared in the container.&#xA;&#xA;Parameters:&#xA;    string $abstract&#xA;    mixed $instance;;d4,327;;b1,0;;mstring $abstract;;pmixed $instance;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f29;326;38;326;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="instance;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f40;326;49;326;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isAlias;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f11;157;5;160;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isAlias($name)&#xA;&#xA;Description&#xA;     Determine if a given string is an alias.&#xA;&#xA;Parameters:&#xA;    string $name;;d4,158;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f28;157;33;157;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isBuildable;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;1051;5;1054;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isBuildable($concrete, $abstract)&#xA;&#xA;Description&#xA;     Determine if the given concrete is buildable.&#xA;&#xA;Parameters:&#xA;    mixed $concrete&#xA;    string $abstract;;d4,1052;;b2,0;;mmixed $concrete;;pstring $abstract;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f46;1051;55;1051;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="concrete;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f35;1051;44;1051;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isCallableWithAtSign;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;515;5;522;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isCallableWithAtSign($callback)&#xA;&#xA;Description&#xA;     Determine if the given string is in Class method syntax.&#xA;&#xA;Parameters:&#xA;    mixed $callback;;d4,516;;b2,0;;mmixed $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f44;515;53;515;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isShared;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f11;1033;5;1042;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isShared($abstract)&#xA;&#xA;Description&#xA;     Determine if a given type is shared.&#xA;&#xA;Parameters:&#xA;    string $abstract;;d4,1034;;b1,0;;mstring $abstract;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f29;1033;38;1033;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="keyParametersByArgument;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;863;5;874;;;;vpos;;varray;;r&#xA;Definition&#xA;    keyParametersByArgument(array $dependencies, array $parameters)&#xA;&#xA;Description&#xA;     If extra parameters are passed by numeric ID, rekey them by argument name.&#xA;&#xA;Parameters:&#xA;    array $dependencies&#xA;    array $parameters;;d4,864;;b2,0;;marray $dependencies;;parray $parameters;;p">
					<treenode node="dependencies;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f53;863;66;863;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f74;863;85;863;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="make;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f11;613;5;654;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    make($abstract, array $parameters = [])&#xA;&#xA;Description&#xA;     Resolve the given type from the container.&#xA;&#xA;Parameters:&#xA;    string $abstract&#xA;    array $parameters;;d4,614;;b1,0;;mstring $abstract;;parray $parameters;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f25;613;34;613;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f42;613;53;613;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="missingLeadingSlash;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;702;5;705;;;;vpos;;vbool;;r&#xA;Definition&#xA;    missingLeadingSlash($abstract)&#xA;&#xA;Description&#xA;     Determine if the given abstract has a leading slash.&#xA;&#xA;Parameters:&#xA;    string $abstract;;d4,703;;b2,0;;mstring $abstract;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f43;702;52;702;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="offsetExists;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f11;1153;5;1156;;;;vpos;;vbool;;r&#xA;Definition&#xA;    offsetExists($key)&#xA;&#xA;Description&#xA;     Determine if a given offset exists.&#xA;&#xA;Parameters:&#xA;    string $key;;d4,1154;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f33;1153;37;1153;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="offsetGet;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f11;1164;5;1167;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    offsetGet($key)&#xA;&#xA;Description&#xA;     Get the value at a given offset.&#xA;&#xA;Parameters:&#xA;    string $key;;d4,1165;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f30;1164;34;1164;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="offsetSet;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f11;1176;5;1188;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    offsetSet($key, $value)&#xA;&#xA;Description&#xA;     Set the value at a given offset.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    mixed $value;;d4,1177;;b1,0;;mstring $key;;pmixed $value;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f30;1176;34;1176;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f36;1176;42;1176;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="offsetUnset;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f11;1196;5;1199;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    offsetUnset($key)&#xA;&#xA;Description&#xA;     Unset the value at a given offset.&#xA;&#xA;Parameters:&#xA;    string $key;;d4,1197;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f32;1196;36;1196;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="rebinding;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f11;422;5;429;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    rebinding($abstract, Closure $callback)&#xA;&#xA;Description&#xA;     Bind a new callback to an abstract's rebind event.&#xA;&#xA;Parameters:&#xA;    string $abstract&#xA;    \Closure $callback;;d4,423;;b1,0;;mstring $abstract;;p\Closure $callback;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f30;422;39;422;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f49;422;58;422;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="rebound;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;452;5;459;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    rebound($abstract)&#xA;&#xA;Description&#xA;     Fire the &quot;rebound&quot; callbacks for the given abstract type.&#xA;&#xA;Parameters:&#xA;    string $abstract;;d4,453;;b2,0;;mstring $abstract;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f31;452;40;452;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="refresh;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f11;439;5;444;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    refresh($abstract, $target, $method)&#xA;&#xA;Description&#xA;     Refresh an instance on the given target and method.&#xA;&#xA;Parameters:&#xA;    string $abstract&#xA;    mixed $target&#xA;    string $method;;d4,440;;b1,0;;mstring $abstract;;pmixed $target;;pstring $method;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f28;439;37;439;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="method;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f48;439;55;439;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="target;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f39;439;46;439;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="resolveClass;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;838;5;854;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    resolveClass(ReflectionParameter $parameter)&#xA;&#xA;Description&#xA;     Resolve a class based dependency from the container.&#xA;&#xA;Parameters:&#xA;    \ReflectionParameter $parameter;;d4,839;;b2,0;;m\ReflectionParameter $parameter;;p">
					<treenode node="parameter;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f56;838;66;838;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="resolved;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f11;142;5;149;;;;vpos;;vbool;;r&#xA;Definition&#xA;    resolved($abstract)&#xA;&#xA;Description&#xA;     Determine if the given abstract type has been resolved.&#xA;&#xA;Parameters:&#xA;    string $abstract;;d4,143;;b1,0;;mstring $abstract;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f29;142;38;142;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="resolveNonClass;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;819;5;828;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    resolveNonClass(ReflectionParameter $parameter)&#xA;&#xA;Description&#xA;     Resolve a non-class hinted dependency.&#xA;&#xA;Parameters:&#xA;    \ReflectionParameter $parameter;;d4,820;;b2,0;;m\ReflectionParameter $parameter;;p">
					<treenode node="parameter;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f59;819;69;819;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="resolving;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f11;883;5;890;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    resolving($abstract, Closure $callback = null)&#xA;&#xA;Description&#xA;     Register a new resolving callback.&#xA;&#xA;Parameters:&#xA;    string $abstract&#xA;    \Closure|null $callback;;d4,884;;b1,0;;mstring $abstract;;p\Closure|null $callback;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f30;883;39;883;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f49;883;58;883;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="resolvingCallback;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;914;5;923;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    resolvingCallback(Closure $callback)&#xA;&#xA;Description&#xA;     Register a new resolving callback by type of its first argument.&#xA;&#xA;Parameters:&#xA;    \Closure $callback;;d4,915;;b2,0;;m\Closure $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f49;914;58;914;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setInstance;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f18;1142;5;1145;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setInstance(ContainerContract $container)&#xA;&#xA;Description&#xA;     Set the shared instance of the container.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Contracts\Container\Container $container;;d4,1143;;b1,5;;m\Illuminate\Contracts\Container\Container $container;;p">
					<treenode node="container;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f57;1142;67;1142;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="share;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f11;269;5;283;;;;vpos;;v;;r&#xA;Definition&#xA;    share(Closure $closure)&#xA;&#xA;Description&#xA;     Wrap a Closure such that it is shared.&#xA;&#xA;Parameters:&#xA;    \Closure $closure;;d4,270;;b1,0;;m\Closure $closure;;p">
					<treenode node="closure;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f34;269;42;269;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="singleton;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f11;258;5;261;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    singleton($abstract, $concrete = null)&#xA;&#xA;Description&#xA;     Register a shared binding in the container.&#xA;&#xA;Parameters:&#xA;    string|array $abstract&#xA;    \Closure|string|null $concrete;;d4,259;;b1,0;;mstring|array $abstract;;p\Closure|string|null $concrete;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f30;258;39;258;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="concrete;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f41;258;50;258;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="tag;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f11;358;5;371;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    tag($abstracts, $tags)&#xA;&#xA;Description&#xA;     Assign a set of tags to a given binding.&#xA;&#xA;Parameters:&#xA;    array|string $abstracts&#xA;    array|mixed - ...$tags;;d4,359;;b1,0;;marray|string $abstracts;;parray|mixed;;p">
					<treenode node="abstracts;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f24;358;34;358;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="tags;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f36;358;41;358;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="tagged;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f11;379;5;390;;;;vpos;;varray;;r&#xA;Definition&#xA;    tagged($tag)&#xA;&#xA;Description&#xA;     Resolve all of the bindings for a given tag.&#xA;&#xA;Parameters:&#xA;    string $tag;;d4,380;;b1,0;;mstring $tag;;p">
					<treenode node="tag;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f27;379;31;379;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="when;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f11;120;5;123;;;;vpos;;v;;r&#xA;Definition&#xA;    when($concrete)&#xA;&#xA;Description&#xA;     Define a contextual binding.&#xA;&#xA;Parameters:&#xA;    string $concrete;;d4,121;;b1,0;;mstring $concrete;;p">
					<treenode node="concrete;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f25;120;34;120;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="wrap;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f11;483;5;488;;;;vpos;;v;;r&#xA;Definition&#xA;    wrap(Closure $callback, array $parameters = [])&#xA;&#xA;Description&#xA;     Wrap the given closure such that its dependencies will be injected when executed.&#xA;&#xA;Parameters:&#xA;    \Closure $callback&#xA;    array $parameters;;d4,484;;b1,0;;m\Closure $callback;;parray $parameters;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f33;483;42;483;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f50;483;61;483;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="afterResolvingCallbacks;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;112;38;112;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="aliases;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;49;22;49;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;35;23;35;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="buildStack;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;70;25;70;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="contextual;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f11;77;22;77;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="extenders;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;56;24;56;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="globalAfterResolvingCallbacks;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;98;44;98;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="globalResolvingCallbacks;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;91;39;91;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="instance;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f21;21;30;21;;;;vposstatic;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="instances;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;42;24;42;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="reboundCallbacks;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;84;31;84;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="resolved;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;28;23;28;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="resolvingCallbacks;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;105;33;105;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="tags;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php;f14;63;19;63;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="ContextualBindingBuilder;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\ContextualBindingBuilder.php;f0;6;1;65;;;;vpos;;vContextualBindingBuilderContract;;c;;r;;d0,7;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\ContextualBindingBuilder.php;f11;36;5;40;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct(Container $container, $concrete)&#xA;&#xA;Description&#xA;     Create a new contextual binding builder.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Container\Container $container&#xA;    string $concrete;;d4,37;;b1,0;;m\Illuminate\Container\Container $container;;pstring $concrete;;p">
					<treenode node="concrete;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\ContextualBindingBuilder.php;f54;36;63;36;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="container;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\ContextualBindingBuilder.php;f42;36;52;36;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="give;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\ContextualBindingBuilder.php;f11;61;5;64;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    give($implementation)&#xA;&#xA;Description&#xA;     Define the implementation for the contextual binding.&#xA;&#xA;Parameters:&#xA;    \Closure|string $implementation;;d4,62;;b1,0;;m\Closure|string $implementation;;p">
					<treenode node="implementation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\ContextualBindingBuilder.php;f25;61;40;61;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="needs;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\ContextualBindingBuilder.php;f11;48;5;53;;;;vpos;;v;;r&#xA;Definition&#xA;    needs($abstract)&#xA;&#xA;Description&#xA;     Define the abstract target that depends on the context.&#xA;&#xA;Parameters:&#xA;    string $abstract;;d4,49;;b1,0;;mstring $abstract;;p">
					<treenode node="abstract;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\ContextualBindingBuilder.php;f26;48;35;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="concrete;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\ContextualBindingBuilder.php;f14;20;23;20;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="container;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\ContextualBindingBuilder.php;f14;13;24;13;;;;vpos;;v;;r&#xA;Description&#xA;     The underlying container instance.;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="needs;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\ContextualBindingBuilder.php;f14;27;20;27;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="Cookie;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Cookie.php;f0;7;1;41;;;;vpos;;vFacade;;c;;r&#xA;Definition&#xA;    class Cookie extends Facade&#xA;&#xA;Description&#xA;      see \Illuminate\Cookie\CookieJar;;d0,8;;b0,0;;m">
				<treenode node="get;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Cookie.php;f18;27;5;30;;;;vpos;;vstring;;r&#xA;Definition&#xA;    get($key = null, $default = null)&#xA;&#xA;Description&#xA;     Retrieve a cookie from the request.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    mixed $default;;d4,28;;b1,5;;mstring $key;;pmixed $default;;p">
					<treenode node="default;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Cookie.php;f44;27;52;27;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Cookie.php;f31;27;35;27;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getFacadeAccessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Cookie.php;f21;37;5;40;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getFacadeAccessor()&#xA;&#xA;Description&#xA;     Get the registered name of the component.;;d4,38;;b2,5;;m">
				</treenode>
				<treenode node="has;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Cookie.php;f18;15;5;18;;;;vpos;;vbool;;r&#xA;Definition&#xA;    has($key)&#xA;&#xA;Description&#xA;     Determine if a cookie exists on the request.&#xA;&#xA;Parameters:&#xA;    string $key;;d4,16;;b1,5;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Cookie.php;f31;15;35;15;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="CreateTestCase;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CreateTest.php;f0;6;1;15;;;;vpos;;vPHPUnit_Framework_TestCase;;c;;r;;d0,7;;b0,0;;m">
				<treenode node="testCreate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CreateTest.php;f11;8;5;14;;;;vpos;;v;;r;;d4,9;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Crypt;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Crypt.php;f0;7;1;18;;;;vpos;;vFacade;;c;;r&#xA;Definition&#xA;    class Crypt extends Facade&#xA;&#xA;Description&#xA;      see \Illuminate\Encryption\Encrypter;;d0,8;;b0,0;;m">
				<treenode node="getFacadeAccessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Crypt.php;f21;14;5;17;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getFacadeAccessor()&#xA;&#xA;Description&#xA;     Get the registered name of the component.;;d4,15;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="CsvFileDumper;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\CsvFileDumper.php;f0;20;1;62;;;;vpos;;vFileDumper;;c;;r&#xA;Definition&#xA;    class CsvFileDumper extends FileDumper&#xA;&#xA;Description&#xA;     CsvFileDumper generates a csv formatted string representation of a message catalogue.;;d0,21;;b0,0;;m">
				<treenode node="formatCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\CsvFileDumper.php;f11;28;5;41;;;;vpos;;v;;r&#xA;Definition&#xA;    formatCatalogue(MessageCatalogue $messages, $domain, array $options = array())&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,29;;b1,0;;mmessages;;pdomain;;poptions;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\CsvFileDumper.php;f64;28;71;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\CsvFileDumper.php;f53;28;62;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\CsvFileDumper.php;f79;28;87;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getExtension;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\CsvFileDumper.php;f14;58;5;61;;;;vpos;;v;;r&#xA;Definition&#xA;    getExtension()&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,59;;b2,0;;m">
				</treenode>
				<treenode node="setCsvControl;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\CsvFileDumper.php;f11;49;5;53;;;;vpos;;v;;r&#xA;Definition&#xA;    setCsvControl($delimiter = ';s', $enclosure = '&quot;')&#xA;&#xA;Description&#xA;     Sets the delimiter and escape character for CSV.&#xA;&#xA;Parameters:&#xA;    string $delimiter - Delimiter character&#xA;    string $enclosure - Enclosure character;;d4,50;;b1,0;;mstring $delimiter;;pstring $enclosure;;p">
					<treenode node="delimiter;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\CsvFileDumper.php;f34;49;44;49;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="enclosure;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\CsvFileDumper.php;f52;49;62;49;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="delimiter;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\CsvFileDumper.php;f12;22;22;22;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="enclosure;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\CsvFileDumper.php;f12;23;22;23;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
			</treenode>
			<treenode node="CsvFileDumperTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\CsvFileDumperTest.php;f0;17;1;29;;;;vpos;;vTestCase;;c;;r;;d0,18;;b0,0;;m">
				<treenode node="testFormatCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\CsvFileDumperTest.php;f11;19;5;28;;;;vpos;;v;;r;;d4,20;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CsvFileLoader;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\CsvFileLoader.php;f0;20;1;64;;;;vpos;;vFileLoader;;c;;r&#xA;Definition&#xA;    class CsvFileLoader extends FileLoader&#xA;&#xA;Description&#xA;     CsvFileLoader loads translations from CSV files.;;d0,21;;b0,0;;m">
				<treenode node="loadResource;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\CsvFileLoader.php;f14;29;5;49;;;;vpos;;v;;r&#xA;Definition&#xA;    loadResource($resource)&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,30;;b2,0;;mresource;;p">
					<treenode node="resource;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\CsvFileLoader.php;f36;29;45;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setCsvControl;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\CsvFileLoader.php;f11;58;5;63;;;;vpos;;v;;r&#xA;Definition&#xA;    setCsvControl($delimiter = ';s', $enclosure = '&quot;', $escape = '\\')&#xA;&#xA;Description&#xA;     Sets the delimiter, enclosure, and escape character for CSV.&#xA;&#xA;Parameters:&#xA;    string $delimiter - Delimiter character&#xA;    string $enclosure - Enclosure character&#xA;    string $escape - Escape character;;d4,59;;b1,0;;mstring $delimiter;;pstring $enclosure;;pstring $escape;;p">
					<treenode node="delimiter;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\CsvFileLoader.php;f34;58;44;58;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="enclosure;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\CsvFileLoader.php;f52;58;62;58;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="escape;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\CsvFileLoader.php;f70;58;77;58;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="delimiter;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\CsvFileLoader.php;f12;22;22;22;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="enclosure;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\CsvFileLoader.php;f12;23;22;23;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="escape;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\CsvFileLoader.php;f12;24;19;24;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
			</treenode>
			<treenode node="CsvFileLoaderTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\CsvFileLoaderTest.php;f0;17;1;60;;;;vpos;;vTestCase;;c;;r;;d0,18;;b0,0;;m">
				<treenode node="testLoad;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\CsvFileLoaderTest.php;f11;19;5;28;;;;vpos;;v;;r;;d4,20;;b1,0;;m">
				</treenode>
				<treenode node="testLoadDoesNothingIfEmpty;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\CsvFileLoaderTest.php;f11;30;5;39;;;;vpos;;v;;r;;d4,31;;b1,0;;m">
				</treenode>
				<treenode node="testLoadNonExistingResource;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\CsvFileLoaderTest.php;f11;44;5;49;;;;vpos;;v;;r&#xA;Definition&#xA;    testLoadNonExistingResource()&#xA;&#xA;Description&#xA;      expectedException \Symfony\Component\Translation\Exception\NotFoundResourceException;;d4,45;;b1,0;;m">
				</treenode>
				<treenode node="testLoadNonLocalResource;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\CsvFileLoaderTest.php;f11;54;5;59;;;;vpos;;v;;r&#xA;Definition&#xA;    testLoadNonLocalResource()&#xA;&#xA;Description&#xA;      expectedException \Symfony\Component\Translation\Exception\InvalidResourceException;;d4,55;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Database;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\app\models\Codelobster0.php;f0;5;1;22;;;;vpos;;v;;r;;d15,5;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\app\models\Codelobster0.php;f1;6;2;21;;;;vpos;;v;;r;;d24,6;;b0,0;;m">
					<treenode node="capsule;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\app\models\Codelobster0.php;f2;7;10;7;;;;vposCapsule;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="DatabaseManager;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f0;9;1;297;;;;vpos;;vConnectionResolverInterface;;c;;r;;d0,10;;b0,0;;m">
				<treenode node="__call;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f11;293;5;296;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    __call($method, $parameters)&#xA;&#xA;Description&#xA;     Dynamically pass methods to the default connection.&#xA;&#xA;Parameters:&#xA;    string $method&#xA;    array $parameters;;d4,294;;b1,0;;mstring $method;;parray $parameters;;p">
					<treenode node="method;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f27;293;34;293;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f36;293;47;293;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f11;46;5;50;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct($app, ConnectionFactory $factory)&#xA;&#xA;Description&#xA;     Create a new database manager instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Foundation\Application $app&#xA;    \Illuminate\Database\Connectors\ConnectionFactory $factory;;d4,47;;b1,0;;m\Illuminate\Foundation\Application $app;;p\Illuminate\Database\Connectors\ConnectionFactory $factory;;p">
					<treenode node="app;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f32;46;36;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="factory;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f56;46;64;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="connection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f11;58;5;74;;;;vpos;;v;;r&#xA;Definition&#xA;    connection($name = null)&#xA;&#xA;Description&#xA;     Get a database connection instance.&#xA;&#xA;Parameters:&#xA;    string $name;;d4,59;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f31;58;36;58;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="disconnect;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f11;109;5;114;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    disconnect($name = null)&#xA;&#xA;Description&#xA;     Disconnect from the given database.&#xA;&#xA;Parameters:&#xA;    string $name;;d4,110;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f31;109;36;109;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="extend;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f11;271;5;274;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    extend($name, callable $resolver)&#xA;&#xA;Description&#xA;     Register an extension connection resolver.&#xA;&#xA;Parameters:&#xA;    string $name&#xA;    callable $resolver;;d4,272;;b1,0;;mstring $name;;pcallable $resolver;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f27;271;32;271;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="resolver;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f43;271;52;271;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getConfig;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f14;227;5;241;;;;vpos;;varray;;r&#xA;Definition&#xA;    getConfig($name)&#xA;&#xA;Description&#xA;     Get the configuration for a connection.&#xA;&#xA;Parameters:&#xA;    string $name;;d4,228;;b2,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f33;227;38;227;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getConnections;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f11;281;5;284;;;;vpos;;varray;;r&#xA;Definition&#xA;    getConnections()&#xA;&#xA;Description&#xA;     Return all of the created connections.;;d4,282;;b1,0;;m">
				</treenode>
				<treenode node="getDefaultConnection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f11;248;5;251;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getDefaultConnection()&#xA;&#xA;Description&#xA;     Get the default connection name.;;d4,249;;b1,0;;m">
				</treenode>
				<treenode node="makeConnection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f14;154;5;175;;;;vpos;;v;;r&#xA;Definition&#xA;    makeConnection($name)&#xA;&#xA;Description&#xA;     Make the database connection instance.&#xA;&#xA;Parameters:&#xA;    string $name;;d4,155;;b2,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f38;154;43;154;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="parseConnectionName;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f14;82;5;88;;;;vpos;;varray;;r&#xA;Definition&#xA;    parseConnectionName($name)&#xA;&#xA;Description&#xA;     Parse the connection into an array of the name and read / write type.&#xA;&#xA;Parameters:&#xA;    string $name;;d4,83;;b2,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f43;82;48;82;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="prepare;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f14;183;5;199;;;;vpos;;v;;r&#xA;Definition&#xA;    prepare(Connection $connection)&#xA;&#xA;Description&#xA;     Prepare the database connection instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Connection $connection;;d4,184;;b2,0;;m\Illuminate\Database\Connection $connection;;p">
					<treenode node="connection;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f42;183;53;183;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="purge;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f11;96;5;101;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    purge($name = null)&#xA;&#xA;Description&#xA;     Disconnect from the given database and remove from local cache.&#xA;&#xA;Parameters:&#xA;    string $name;;d4,97;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f26;96;31;96;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="reconnect;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f11;122;5;131;;;;vpos;;v;;r&#xA;Definition&#xA;    reconnect($name = null)&#xA;&#xA;Description&#xA;     Reconnect to the given database.&#xA;&#xA;Parameters:&#xA;    string $name;;d4,123;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f30;122;35;122;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="refreshPdoConnections;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f14;139;5;146;;;;vpos;;v;;r&#xA;Definition&#xA;    refreshPdoConnections($name)&#xA;&#xA;Description&#xA;     Refresh the PDO connections on a given connection.&#xA;&#xA;Parameters:&#xA;    string $name;;d4,140;;b2,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f45;139;50;139;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setDefaultConnection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f11;259;5;262;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setDefaultConnection($name)&#xA;&#xA;Description&#xA;     Set the default connection name.&#xA;&#xA;Parameters:&#xA;    string $name;;d4,260;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f41;259;46;259;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setPdoForType;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f14;208;5;217;;;;vpos;;v;;r&#xA;Definition&#xA;    setPdoForType(Connection $connection, $type = null)&#xA;&#xA;Description&#xA;     Prepare the read write mode for database connection instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Connection $connection&#xA;    string $type;;d4,209;;b2,0;;m\Illuminate\Database\Connection $connection;;pstring $type;;p">
					<treenode node="connection;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f48;208;59;208;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f61;208;66;208;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="app;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f14;16;18;16;;;;vpos;;v;;r&#xA;Description&#xA;     The application instance.;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="connections;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f14;30;26;30;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="extensions;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f14;37;25;37;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="factory;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php;f14;23;22;23;;;;vpos;;v;;r&#xA;Description&#xA;     The database connection factory instance.;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="DatabaseMigrationRepository;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\DatabaseMigrationRepository.php;f0;6;1;183;;;;vpos;;vMigrationRepositoryInterface;;c;;r;;d0,7;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\DatabaseMigrationRepository.php;f11;36;5;40;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct(Resolver $resolver, $table)&#xA;&#xA;Description&#xA;     Create a new database migration repository instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\ConnectionResolverInterface $resolver&#xA;    string $table;;d4,37;;b1,0;;m\Illuminate\Database\ConnectionResolverInterface $resolver;;pstring $table;;p">
					<treenode node="resolver;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\DatabaseMigrationRepository.php;f41;36;50;36;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\DatabaseMigrationRepository.php;f52;36;58;36;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="createRepository;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\DatabaseMigrationRepository.php;f11;117;5;129;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    createRepository()&#xA;&#xA;Description&#xA;     Create the migration repository data store.;;d4,118;;b1,0;;m">
				</treenode>
				<treenode node="delete;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\DatabaseMigrationRepository.php;f11;87;5;90;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    delete($migration)&#xA;&#xA;Description&#xA;     Remove a migration from the log.&#xA;&#xA;Parameters:&#xA;    object $migration;;d4,88;;b1,0;;mobject $migration;;p">
					<treenode node="migration;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\DatabaseMigrationRepository.php;f27;87;37;87;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getConnection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\DatabaseMigrationRepository.php;f11;168;5;171;;;;vpos;;v;;r&#xA;Definition&#xA;    getConnection()&#xA;&#xA;Description&#xA;     Resolve the database connection instance.;;d4,169;;b1,0;;m">
				</treenode>
				<treenode node="getConnectionResolver;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\DatabaseMigrationRepository.php;f11;158;5;161;;;;vpos;;v;;r&#xA;Definition&#xA;    getConnectionResolver()&#xA;&#xA;Description&#xA;     Get the connection resolver instance.;;d4,159;;b1,0;;m">
				</treenode>
				<treenode node="getLast;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\DatabaseMigrationRepository.php;f11;60;5;65;;;;vpos;;varray;;r&#xA;Definition&#xA;    getLast()&#xA;&#xA;Description&#xA;     Get the last migration batch.;;d4,61;;b1,0;;m">
				</treenode>
				<treenode node="getLastBatchNumber;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\DatabaseMigrationRepository.php;f11;107;5;110;;;;vpos;;vint;;r&#xA;Definition&#xA;    getLastBatchNumber()&#xA;&#xA;Description&#xA;     Get the last migration batch number.;;d4,108;;b1,0;;m">
				</treenode>
				<treenode node="getNextBatchNumber;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\DatabaseMigrationRepository.php;f11;97;5;100;;;;vpos;;vint;;r&#xA;Definition&#xA;    getNextBatchNumber()&#xA;&#xA;Description&#xA;     Get the next migration batch number.;;d4,98;;b1,0;;m">
				</treenode>
				<treenode node="getRan;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\DatabaseMigrationRepository.php;f11;47;5;53;;;;vpos;;varray;;r&#xA;Definition&#xA;    getRan()&#xA;&#xA;Description&#xA;     Get the ran migrations.;;d4,48;;b1,0;;m">
				</treenode>
				<treenode node="log;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\DatabaseMigrationRepository.php;f11;74;5;79;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    log($file, $batch)&#xA;&#xA;Description&#xA;     Log that a migration was run.&#xA;&#xA;Parameters:&#xA;    string $file&#xA;    int $batch;;d4,75;;b1,0;;mstring $file;;pint $batch;;p">
					<treenode node="batch;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\DatabaseMigrationRepository.php;f31;74;37;74;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="file;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\DatabaseMigrationRepository.php;f24;74;29;74;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="repositoryExists;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\DatabaseMigrationRepository.php;f11;136;5;141;;;;vpos;;vbool;;r&#xA;Definition&#xA;    repositoryExists()&#xA;&#xA;Description&#xA;     Determine if the migration repository exists.;;d4,137;;b1,0;;m">
				</treenode>
				<treenode node="setSource;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\DatabaseMigrationRepository.php;f11;179;5;182;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setSource($name)&#xA;&#xA;Description&#xA;     Set the information source to gather data.&#xA;&#xA;Parameters:&#xA;    string $name;;d4,180;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\DatabaseMigrationRepository.php;f30;179;35;179;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="table;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\DatabaseMigrationRepository.php;f14;148;5;151;;;;vpos;;v;;r&#xA;Definition&#xA;    table()&#xA;&#xA;Description&#xA;     Get a query builder for the migration table.;;d4,149;;b2,0;;m">
				</treenode>
				<treenode node="connection;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\DatabaseMigrationRepository.php;f14;27;25;27;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="resolver;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\DatabaseMigrationRepository.php;f14;13;23;13;;;;vpos;;v;;r&#xA;Description&#xA;     The database connection resolver instance.;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\DatabaseMigrationRepository.php;f14;20;20;20;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="DatabaseServiceProvider;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseServiceProvider.php;f0;12;1;83;;;;vpos;;vServiceProvider;;c;;r;;d0,13;;b0,0;;m">
				<treenode node="boot;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseServiceProvider.php;f11;19;5;24;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    boot()&#xA;&#xA;Description&#xA;     Bootstrap the application events.;;d4,20;;b1,0;;m">
				</treenode>
				<treenode node="register;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseServiceProvider.php;f11;31;5;52;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    register()&#xA;&#xA;Description&#xA;     Register the service provider.;;d4,32;;b1,0;;m">
				</treenode>
				<treenode node="registerEloquentFactory;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseServiceProvider.php;f14;59;5;70;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    registerEloquentFactory()&#xA;&#xA;Description&#xA;     Register the Eloquent factory instance in the container.;;d4,60;;b2,0;;m">
				</treenode>
				<treenode node="registerQueueableEntityResolver;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseServiceProvider.php;f14;77;5;82;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    registerQueueableEntityResolver()&#xA;&#xA;Description&#xA;     Register the queueable entity resolver implementation.;;d4,78;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="DataCollectorTranslator;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php;f0;18;1;164;;;;vpos;;vTranslatorInterface;;cTranslatorBagInterface;;c;;r&#xA;Definition&#xA;    class DataCollectorTranslator implements TranslatorInterface, TranslatorBagInterface&#xA;&#xA;Description&#xA;      author Abdellatif Ait boudad &lt;a.aitboudad gmail.com&gt;;;d0,19;;b0,0;;m">
				<treenode node="MESSAGE_DEFINED;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php;f9;20;25;20;;;;vpos;;v;;r0;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="MESSAGE_EQUALS_FALLBACK;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php;f9;22;33;22;;;;vpos;;v;;r2;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="MESSAGE_MISSING;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php;f9;21;25;21;;;;vpos;;v;;r1;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="__call;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php;f11;106;5;109;;;;vpos;;v;;r&#xA;Definition&#xA;    __call($method, $args)&#xA;&#xA;Description&#xA;     Passes through all unknown calls onto the translator object.;;d4,107;;b1,0;;mmethod;;pargs;;p">
					<treenode node="args;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php;f36;106;41;106;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="method;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php;f27;106;34;106;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php;f11;34;5;41;;;;vpos;;v;;r&#xA;Definition&#xA;    __construct(TranslatorInterface $translator)&#xA;&#xA;Description&#xA;      The translator must implement TranslatorBagInterface&#xA;&#xA;Parameters:&#xA;    TranslatorInterface $translator - The translator must implement TranslatorBagInterface;;d4,35;;b1,0;;mTranslatorInterface $translator;;p">
					<treenode node="translator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php;f52;34;63;34;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="collectMessage;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php;f12;127;5;163;;;;vpos;;v;;r&#xA;Definition&#xA;    collectMessage($locale, $domain, $id, $translation, $parameters = array(), $number = null)&#xA;&#xA;Description&#xA;     &#xA;&#xA;Parameters:&#xA;    string|null $locale&#xA;    string|null $domain&#xA;    string $id&#xA;    string $translation&#xA;    array|null $parameters&#xA;    int|null $number;;d4,128;;b3,0;;mstring|null $locale;;pstring|null $domain;;pstring $id;;pstring $translation;;parray|null $parameters;;pint|null $number;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php;f45;127;52;127;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php;f54;127;57;127;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php;f36;127;43;127;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="number;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php;f96;127;103;127;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php;f73;127;84;127;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="translation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php;f59;127;71;127;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php;f11;84;5;87;;;;vpos;;v;;r&#xA;Definition&#xA;    getCatalogue($locale = null)&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,85;;b1,0;;mlocale;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php;f33;84;40;84;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getCollectedMessages;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php;f11;114;5;117;;;;vpos;;varray;;r&#xA;Definition&#xA;    getCollectedMessages()&#xA;&#xA;Description&#xA;     ;;d4,115;;b1,0;;m">
				</treenode>
				<treenode node="getFallbackLocales;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php;f11;94;5;101;;;;vpos;;varray;;r&#xA;Definition&#xA;    getFallbackLocales()&#xA;&#xA;Description&#xA;     Gets the fallback locales.&#xA;&#xA;Return:&#xA;   $locales The fallback locales;;d4,95;;b1,0;;m">
				</treenode>
				<treenode node="getLocale;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php;f11;76;5;79;;;;vpos;;v;;r&#xA;Definition&#xA;    getLocale()&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,77;;b1,0;;m">
				</treenode>
				<treenode node="setLocale;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php;f11;68;5;71;;;;vpos;;v;;r&#xA;Definition&#xA;    setLocale($locale)&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,69;;b1,0;;mlocale;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php;f30;68;37;68;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="trans;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php;f11;46;5;52;;;;vpos;;v;;r&#xA;Definition&#xA;    trans($id, array $parameters = array(), $domain = null, $locale = null)&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,47;;b1,0;;mid;;pparameters;;pdomain;;plocale;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php;f60;46;67;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php;f26;46;29;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php;f76;46;83;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php;f37;46;48;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="transChoice;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php;f11;57;5;63;;;;vpos;;v;;r&#xA;Definition&#xA;    transChoice($id, $number, array $parameters = array(), $domain = null, $locale = null)&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,58;;b1,0;;mid;;pnumber;;pparameters;;pdomain;;plocale;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php;f75;57;82;57;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php;f32;57;35;57;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php;f91;57;98;57;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="number;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php;f37;57;44;57;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php;f52;57;63;57;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php;f12;29;21;29;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="translator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php;f12;27;23;27;;;;vposTranslatorInterface;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
			</treenode>
			<treenode node="DataCollectorTranslatorTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\DataCollectorTranslatorTest.php;f0;18;1;91;;;;vpos;;vTestCase;;c;;r;;d0,19;;b0,0;;m">
				<treenode node="createCollector;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\DataCollectorTranslatorTest.php;f12;81;5;90;;;;vpos;;v;;r;;d4,82;;b3,0;;m">
				</treenode>
				<treenode node="testCollectMessages;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\DataCollectorTranslatorTest.php;f11;20;5;79;;;;vpos;;v;;r;;d4,21;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DB;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\DB.php;f0;8;1;19;;;;vpos;;vFacade;;c;;r&#xA;Definition&#xA;    class DB extends Facade&#xA;&#xA;Description&#xA;      see \Illuminate\Database\DatabaseManager;;d0,9;;b0,0;;m">
				<treenode node="getFacadeAccessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\DB.php;f21;15;5;18;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getFacadeAccessor()&#xA;&#xA;Description&#xA;     Get the registered name of the component.;;d4,16;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="DecryptException;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Encryption\DecryptException.php;f0;6;1;9;;;;vpos;;vRuntimeException;;c;;r;;d0,7;;b0,0;;m">
			</treenode>
			<treenode node="Dumper;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Debug\Dumper.php;f0;7;1;25;;;;vpos;;v;;r;;d0,8;;b0,0;;m">
				<treenode node="dump;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Debug\Dumper.php;f11;15;5;24;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    dump($value)&#xA;&#xA;Description&#xA;     Dump a value with elegance.&#xA;&#xA;Parameters:&#xA;    mixed $value;;d4,16;;b1,0;;mmixed $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Debug\Dumper.php;f25;15;31;15;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="EncryptException;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Encryption\EncryptException.php;f0;6;1;9;;;;vpos;;vRuntimeException;;c;;r;;d0,7;;b0,0;;m">
			</treenode>
			<treenode node="EntityNotFoundException;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\EntityNotFoundException.php;f0;6;1;21;;;;vpos;;vInvalidArgumentException;;c;;r;;d0,7;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\EntityNotFoundException.php;f11;15;5;20;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct($type, $id)&#xA;&#xA;Description&#xA;     Create a new exception instance.&#xA;&#xA;Parameters:&#xA;    string $type&#xA;    mixed $id;;d4,16;;b1,0;;mstring $type;;pmixed $id;;p">
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\EntityNotFoundException.php;f39;15;42;15;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\EntityNotFoundException.php;f32;15;37;15;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="Error;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\error_polyfill.php;f4;30;5;33;;;;vpos;;vException;;c;;r&#xA;Definition&#xA;    class Error extends Exception&#xA;&#xA;Description&#xA;     Random_* Compatibility Library for using the new PHP 7 random_* API in PHP 5 projects;;d4,31;;b0,0;;m">
			</treenode>
			<treenode node="Event;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Event.php;f0;7;1;18;;;;vpos;;vFacade;;c;;r&#xA;Definition&#xA;    class Event extends Facade&#xA;&#xA;Description&#xA;      see \Illuminate\Events\Dispatcher;;d0,8;;b0,0;;m">
				<treenode node="getFacadeAccessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Event.php;f21;14;5;17;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getFacadeAccessor()&#xA;&#xA;Description&#xA;     Get the registered name of the component.;;d4,15;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="Expression;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Expression.php;f0;4;1;43;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Expression.php;f11;19;5;22;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct($value)&#xA;&#xA;Description&#xA;     Create a new raw query expression.&#xA;&#xA;Parameters:&#xA;    mixed $value;;d4,20;;b1,0;;mmixed $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Expression.php;f32;19;38;19;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__toString;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Expression.php;f11;39;5;42;;;;vpos;;vstring;;r&#xA;Definition&#xA;    __toString()&#xA;&#xA;Description&#xA;     Get the value of the expression.;;d4,40;;b1,0;;m">
				</treenode>
				<treenode node="getValue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Expression.php;f11;29;5;32;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    getValue()&#xA;&#xA;Description&#xA;     Get the value of the expression.;;d4,30;;b1,0;;m">
				</treenode>
				<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Expression.php;f14;11;20;11;;;;vposmixed;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="Facade;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Facade.php;f9;8;1;225;;;;vpos;;v;;r;;d0,9;;b0,0;;m">
				<treenode node="__callStatic;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Facade.php;f18;202;5;224;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    __callStatic($method, $args)&#xA;&#xA;Description&#xA;     Handle dynamic, static calls to the object.&#xA;&#xA;Parameters:&#xA;    string $method&#xA;    array $args;;d4,203;;b1,5;;mstring $method;;parray $args;;p">
					<treenode node="args;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Facade.php;f49;202;54;202;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="method;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Facade.php;f40;202;47;202;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="clearResolvedInstance;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Facade.php;f18;159;5;162;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    clearResolvedInstance($name)&#xA;&#xA;Description&#xA;     Clear a resolved facade instance.&#xA;&#xA;Parameters:&#xA;    string $name;;d4,160;;b1,5;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Facade.php;f49;159;54;159;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="clearResolvedInstances;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Facade.php;f18;169;5;172;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    clearResolvedInstances()&#xA;&#xA;Description&#xA;     Clear all of the resolved instances.;;d4,170;;b1,5;;m">
				</treenode>
				<treenode node="createFreshMockInstance;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Facade.php;f21;62;5;73;;;;vpos;;v;;r&#xA;Definition&#xA;    createFreshMockInstance($name)&#xA;&#xA;Description&#xA;     Create a fresh mock instance for the given class.&#xA;&#xA;Parameters:&#xA;    string $name;;d4,63;;b2,5;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Facade.php;f54;62;59;62;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="createMockByName;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Facade.php;f21;81;5;86;;;;vpos;;v;;r&#xA;Definition&#xA;    createMockByName($name)&#xA;&#xA;Description&#xA;     Create a fresh mock instance for the given class.&#xA;&#xA;Parameters:&#xA;    string $name;;d4,82;;b2,5;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Facade.php;f47;81;52;81;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getFacadeAccessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Facade.php;f21;129;5;132;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getFacadeAccessor()&#xA;&#xA;Description&#xA;     Get the registered name of the component.;;d4,130;;b2,5;;m">
				</treenode>
				<treenode node="getFacadeApplication;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Facade.php;f18;179;5;182;;;;vpos;;v;;r&#xA;Definition&#xA;    getFacadeApplication()&#xA;&#xA;Description&#xA;     Get the application instance behind the facade.;;d4,180;;b1,5;;m">
				</treenode>
				<treenode node="getFacadeRoot;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Facade.php;f18;117;5;120;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    getFacadeRoot()&#xA;&#xA;Description&#xA;     Get the root object behind the facade.;;d4,118;;b1,5;;m">
				</treenode>
				<treenode node="getMockableClass;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Facade.php;f21;105;5;110;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getMockableClass()&#xA;&#xA;Description&#xA;     Get the mockable class for the bound instance.&#xA;&#xA;Return:&#xA;   |null;;d4,106;;b2,5;;m">
				</treenode>
				<treenode node="isMock;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Facade.php;f21;93;5;98;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isMock()&#xA;&#xA;Description&#xA;     Determines whether a mock is set as the instance of the facade.;;d4,94;;b2,5;;m">
				</treenode>
				<treenode node="resolveFacadeInstance;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Facade.php;f21;140;5;151;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    resolveFacadeInstance($name)&#xA;&#xA;Description&#xA;     Resolve the facade root instance from the container.&#xA;&#xA;Parameters:&#xA;    string|object $name;;d4,141;;b2,5;;mstring|object $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Facade.php;f52;140;57;140;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setFacadeApplication;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Facade.php;f18;190;5;193;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setFacadeApplication($app)&#xA;&#xA;Description&#xA;     Set the application instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Contracts\Foundation\Application $app;;d4,191;;b1,5;;m\Illuminate\Contracts\Foundation\Application $app;;p">
					<treenode node="app;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Facade.php;f48;190;52;190;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="shouldReceive;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Facade.php;f18;43;5;54;;;;vpos;;v;;r&#xA;Definition&#xA;    shouldReceive()&#xA;&#xA;Description&#xA;     Initiate a mock expectation on the facade.&#xA;&#xA;Parameters:&#xA;    mixed;;d4,44;;b1,5;;m">
				</treenode>
				<treenode node="swap;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Facade.php;f18;30;5;35;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    swap($instance)&#xA;&#xA;Description&#xA;     Hotswap the underlying instance behind the facade.&#xA;&#xA;Parameters:&#xA;    mixed $instance;;d4,31;;b1,5;;mmixed $instance;;p">
					<treenode node="instance;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Facade.php;f32;30;41;30;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="app;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Facade.php;f21;15;25;15;;;;vpos;;v;;r&#xA;Description&#xA;     The application instance being facaded.;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="resolvedInstance;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Facade.php;f21;22;38;22;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="Factory;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f0;8;1;217;;;;vpos;;vArrayAccess;;c;;r;;d0,9;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f11;23;5;26;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct(Faker $faker)&#xA;&#xA;Description&#xA;     Create a new factory instance.&#xA;&#xA;Parameters:&#xA;    \Faker\Generator $faker;;d4,24;;b1,0;;m\Faker\Generator $faker;;p">
					<treenode node="faker;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f38;23;44;23;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f18;42;5;55;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    construct(Faker $faker, $pathToFactories = null)&#xA;&#xA;Description&#xA;     Create a new factory container.&#xA;&#xA;Parameters:&#xA;    \Faker\Generator $faker&#xA;    string|null $pathToFactories;;d4,43;;b1,5;;m\Faker\Generator $faker;;pstring|null $pathToFactories;;p">
					<treenode node="faker;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f43;42;49;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="pathToFactories;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f51;42;67;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="create;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f11;90;5;93;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    create($class, array $attributes = [])&#xA;&#xA;Description&#xA;     Create an instance of the given model and persist it to the database.&#xA;&#xA;Parameters:&#xA;    string $class&#xA;    array $attributes;;d4,91;;b1,0;;mstring $class;;parray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f41;90;52;90;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="class;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f27;90;33;90;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="createAs;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f11;103;5;106;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    createAs($class, $name, array $attributes = [])&#xA;&#xA;Description&#xA;     Create an instance of the given model and type and persist it to the database.&#xA;&#xA;Parameters:&#xA;    string $class&#xA;    string $name&#xA;    array $attributes;;d4,104;;b1,0;;mstring $class;;pstring $name;;parray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f50;103;61;103;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="class;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f29;103;35;103;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f37;103;42;103;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="define;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f11;78;5;81;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    define($class, callable $attributes, $name = 'default')&#xA;&#xA;Description&#xA;     Define a class with a given set of attributes.&#xA;&#xA;Parameters:&#xA;    string $class&#xA;    callable $attributes&#xA;    string $name;;d4,79;;b1,0;;mstring $class;;pcallable $attributes;;pstring $name;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f44;78;55;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="class;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f27;78;33;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f57;78;62;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="defineAs;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f11;65;5;68;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    defineAs($class, $name, callable $attributes)&#xA;&#xA;Description&#xA;     Define a class with a given short-name.&#xA;&#xA;Parameters:&#xA;    string $class&#xA;    string $name&#xA;    callable $attributes;;d4,66;;b1,0;;mstring $class;;pstring $name;;pcallable $attributes;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f53;65;64;65;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="class;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f29;65;35;65;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f37;65;42;65;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="make;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f11;115;5;118;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    make($class, array $attributes = [])&#xA;&#xA;Description&#xA;     Create an instance of the given model.&#xA;&#xA;Parameters:&#xA;    string $class&#xA;    array $attributes;;d4,116;;b1,0;;mstring $class;;parray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f39;115;50;115;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="class;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f25;115;31;115;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="makeAs;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f11;128;5;131;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    makeAs($class, $name, array $attributes = [])&#xA;&#xA;Description&#xA;     Create an instance of the given model and type.&#xA;&#xA;Parameters:&#xA;    string $class&#xA;    string $name&#xA;    array $attributes;;d4,129;;b1,0;;mstring $class;;pstring $name;;parray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f48;128;59;128;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="class;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f27;128;33;128;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f35;128;40;128;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="of;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f11;168;5;171;;;;vpos;;v;;r&#xA;Definition&#xA;    of($class, $name = 'default')&#xA;&#xA;Description&#xA;     Create a builder for the given model.&#xA;&#xA;Parameters:&#xA;    string $class&#xA;    string $name;;d4,169;;b1,0;;mstring $class;;pstring $name;;p">
					<treenode node="class;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f23;168;29;168;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f31;168;36;168;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="offsetExists;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f11;179;5;182;;;;vpos;;vbool;;r&#xA;Definition&#xA;    offsetExists($offset)&#xA;&#xA;Description&#xA;     Determine if the given offset exists.&#xA;&#xA;Parameters:&#xA;    string $offset;;d4,180;;b1,0;;mstring $offset;;p">
					<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f33;179;40;179;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="offsetGet;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f11;190;5;193;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    offsetGet($offset)&#xA;&#xA;Description&#xA;     Get the value of the given offset.&#xA;&#xA;Parameters:&#xA;    string $offset;;d4,191;;b1,0;;mstring $offset;;p">
					<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f30;190;37;190;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="offsetSet;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f11;202;5;205;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    offsetSet($offset, $value)&#xA;&#xA;Description&#xA;     Set the given offset to the given value.&#xA;&#xA;Parameters:&#xA;    string $offset&#xA;    callable $value;;d4,203;;b1,0;;mstring $offset;;pcallable $value;;p">
					<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f30;202;37;202;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f39;202;45;202;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="offsetUnset;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f11;213;5;216;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    offsetUnset($offset)&#xA;&#xA;Description&#xA;     Unset the value at the given offset.&#xA;&#xA;Parameters:&#xA;    string $offset;;d4,214;;b1,0;;mstring $offset;;p">
					<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f32;213;39;213;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="raw;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f11;154;5;159;;;;vpos;;varray;;r&#xA;Definition&#xA;    raw($class, array $attributes = [], $name = 'default')&#xA;&#xA;Description&#xA;     Get the raw attribute array for a given model.&#xA;&#xA;Parameters:&#xA;    string $class&#xA;    array $attributes&#xA;    string $name;;d4,155;;b1,0;;mstring $class;;parray $attributes;;pstring $name;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f38;154;49;154;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="class;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f24;154;30;154;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f56;154;61;154;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="rawOf;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f11;141;5;144;;;;vpos;;varray;;r&#xA;Definition&#xA;    rawOf($class, $name, array $attributes = [])&#xA;&#xA;Description&#xA;     Get the raw attribute array for a given named model.&#xA;&#xA;Parameters:&#xA;    string $class&#xA;    string $name&#xA;    array $attributes;;d4,142;;b1,0;;mstring $class;;pstring $name;;parray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f47;141;58;141;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="class;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f26;141;32;141;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f34;141;39;141;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="definitions;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f14;33;26;33;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="faker;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php;f14;15;20;15;;;;vpos;;v;;r&#xA;Description&#xA;     The Faker instance for the builder.;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="FactoryBuilder;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\FactoryBuilder.php;f0;7;1;134;;;;vpos;;v;;r;;d0,8;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\FactoryBuilder.php;f11;53;5;59;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct($class, $name, array $definitions, Faker $faker)&#xA;&#xA;Description&#xA;     Create an new builder instance.&#xA;&#xA;Parameters:&#xA;    string $class&#xA;    string $name&#xA;    array $definitions&#xA;    \Faker\Generator $faker;;d4,54;;b1,0;;mstring $class;;pstring $name;;parray $definitions;;p\Faker\Generator $faker;;p">
					<treenode node="class;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\FactoryBuilder.php;f32;53;38;53;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="definitions;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\FactoryBuilder.php;f53;53;65;53;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="faker;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\FactoryBuilder.php;f73;53;79;53;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\FactoryBuilder.php;f40;53;45;53;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="create;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\FactoryBuilder.php;f11;80;5;93;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    create(array $attributes = [])&#xA;&#xA;Description&#xA;     Create a collection of models and persist them to the database.&#xA;&#xA;Parameters:&#xA;    array $attributes;;d4,81;;b1,0;;marray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\FactoryBuilder.php;f33;80;44;80;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="make;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\FactoryBuilder.php;f11;101;5;114;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    make(array $attributes = [])&#xA;&#xA;Description&#xA;     Create a collection of models.&#xA;&#xA;Parameters:&#xA;    array $attributes;;d4,102;;b1,0;;marray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\FactoryBuilder.php;f31;101;42;101;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="makeInstance;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\FactoryBuilder.php;f14;122;5;133;;;;vpos;;v;;r&#xA;Definition&#xA;    makeInstance(array $attributes = [])&#xA;&#xA;Description&#xA;     Make an instance of the model with the given attributes.&#xA;&#xA;Parameters:&#xA;    array $attributes;;d4,123;;b2,0;;marray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\FactoryBuilder.php;f42;122;53;122;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="times;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\FactoryBuilder.php;f11;67;5;72;;;;vpos;;v;;r&#xA;Definition&#xA;    times($amount)&#xA;&#xA;Description&#xA;     Set the amount of models you wish to create / make.&#xA;&#xA;Parameters:&#xA;    int $amount;;d4,68;;b1,0;;mint $amount;;p">
					<treenode node="amount;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\FactoryBuilder.php;f26;67;33;67;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="amount;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\FactoryBuilder.php;f14;35;21;35;;;;vposint;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="class;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\FactoryBuilder.php;f14;21;20;21;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="definitions;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\FactoryBuilder.php;f14;14;26;14;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="faker;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\FactoryBuilder.php;f14;42;20;42;;;;vpos;;v;;r&#xA;Description&#xA;     The Faker instance for the builder.;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\FactoryBuilder.php;f14;28;19;28;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="File;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\File.php;f0;7;1;18;;;;vpos;;vFacade;;c;;r&#xA;Definition&#xA;    class File extends Facade&#xA;&#xA;Description&#xA;      see \Illuminate\Filesystem\Filesystem;;d0,8;;b0,0;;m">
				<treenode node="getFacadeAccessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\File.php;f21;14;5;17;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getFacadeAccessor()&#xA;&#xA;Description&#xA;     Get the registered name of the component.;;d4,15;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="FileDumper;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\FileDumper.php;f9;25;1;111;;;;vpos;;vDumperInterface;;c;;r&#xA;Definition&#xA;    class FileDumper implements DumperInterface&#xA;&#xA;Description&#xA;     FileDumper is an implementation of DumperInterface that dump a message catalogue to file(s).;;d0,26;;b0,0;;m">
				<treenode node="dump;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\FileDumper.php;f11;62;5;80;;;;vpos;;v;;r&#xA;Definition&#xA;    dump(MessageCatalogue $messages, $options = array())&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,63;;b1,0;;mmessages;;poptions;;p">
					<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\FileDumper.php;f42;62;51;62;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\FileDumper.php;f53;62;61;62;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="formatCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\FileDumper.php;f20;91;107;91;;;;vpos;;vstring;;r&#xA;Description&#xA;     Transforms a domain of a message catalogue to its string representation.&#xA;&#xA;Parameters:&#xA;    MessageCatalogue $messages&#xA;    string $domain&#xA;    array $options&#xA;&#xA;Return:&#xA;   representation;;d-1,-1;;b1,0;;mMessageCatalogue $messages;;pstring $domain;;parray $options;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\FileDumper.php;f73;91;80;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\FileDumper.php;f62;91;71;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\FileDumper.php;f88;91;96;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getExtension;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\FileDumper.php;f23;98;46;98;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets the file extension of the dumper.&#xA;&#xA;Return:&#xA;   file extension;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="getRelativePath;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\FileDumper.php;f12;103;68;103;;;;vpos;;v;;r&#xA;Description&#xA;     Gets the relative file path using the template.;;d-1,-1;;b3,0;;mdomain;;plocale;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\FileDumper.php;f44;103;51;103;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\FileDumper.php;f60;103;67;103;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setBackup;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\FileDumper.php;f11;49;5;57;;;;vpos;;v;;r&#xA;Definition&#xA;    setBackup($backup)&#xA;&#xA;Description&#xA;     Sets backup flag.&#xA;&#xA;Parameters:&#xA;    bool;;d4,50;;b1,0;;mbool;;p">
					<treenode node="backup;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\FileDumper.php;f30;49;37;49;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setRelativePathTemplate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\FileDumper.php;f11;39;5;42;;;;vpos;;v;;r&#xA;Definition&#xA;    setRelativePathTemplate($relativePathTemplate)&#xA;&#xA;Description&#xA;     Sets the template for the relative paths to files.&#xA;&#xA;Parameters:&#xA;    string $relativePathTemplate - A template for the relative paths to files;;d4,40;;b1,0;;mstring $relativePathTemplate;;p">
					<treenode node="relativePathTemplate;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\FileDumper.php;f44;39;65;39;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\FileDumper.php;f26;106;33;106;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\FileDumper.php;f26;107;33;107;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="relativePathTemplate;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\FileDumper.php;f14;32;35;32;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\FileDumper.php;f21;105;26;105;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="FileDumperTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\FileDumperTest.php;f0;17;1;52;;;;vpos;;vTestCase;;c;;r;;d0,18;;b0,0;;m">
				<treenode node="testDump;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\FileDumperTest.php;f11;19;5;32;;;;vpos;;v;;r;;d4,20;;b1,0;;m">
				</treenode>
				<treenode node="testDumpCreatesNestedDirectoriesAndFile;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\FileDumperTest.php;f11;34;5;51;;;;vpos;;v;;r;;d4,35;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="FileLoader;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\FileLoader.php;f9;20;1;64;;;;vpos;;vArrayLoader;;c;;r&#xA;Definition&#xA;    class FileLoader extends ArrayLoader&#xA;&#xA;Description&#xA;      author Abdellatif Ait boudad &lt;a.aitboudad gmail.com&gt;;;d0,21;;b0,0;;m">
				<treenode node="load;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\FileLoader.php;f11;25;5;54;;;;vpos;;v;;r&#xA;Definition&#xA;    load($resource, $locale, $domain = 'messages')&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,26;;b1,0;;mresource;;plocale;;pdomain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\FileLoader.php;f45;25;52;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\FileLoader.php;f36;25;43;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="resource;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\FileLoader.php;f25;25;34;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="loadResource;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\FileLoader.php;f23;63;55;63;;;;vpos;;varray;;r&#xA;Description&#xA;     &#xA;&#xA;Parameters:&#xA;    string $resource;;d-1,-1;;b2,0;;mstring $resource;;p">
					<treenode node="resource;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\FileLoader.php;f45;63;54;63;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="FileNotFoundException;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\FileNotFoundException.php;f0;6;1;9;;;;vpos;;vException;;c;;r;;d0,7;;b0,0;;m">
			</treenode>
			<treenode node="Fluent;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Fluent.php;f0;9;1;191;;;;vpos;;vArrayAccess;;cArrayable;;cJsonable;;cJsonSerializable;;c;;r;;d0,10;;b0,0;;m">
				<treenode node="__call;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Fluent.php;f11;140;5;145;;;;vpos;;v;;r&#xA;Definition&#xA;    __call($method, $parameters)&#xA;&#xA;Description&#xA;     Handle dynamic calls to the container to set attributes.&#xA;&#xA;Parameters:&#xA;    string $method&#xA;    array $parameters;;d4,141;;b1,0;;mstring $method;;parray $parameters;;p">
					<treenode node="method;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Fluent.php;f27;140;34;140;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Fluent.php;f36;140;47;140;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Fluent.php;f11;24;5;29;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct($attributes = [])&#xA;&#xA;Description&#xA;     Create a new fluent container instance.&#xA;&#xA;Parameters:&#xA;    array|object $attributes;;d4,25;;b1,0;;marray|object $attributes;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Fluent.php;f32;24;43;24;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__get;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Fluent.php;f11;153;5;156;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    __get($key)&#xA;&#xA;Description&#xA;     Dynamically retrieve the value of an attribute.&#xA;&#xA;Parameters:&#xA;    string $key;;d4,154;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Fluent.php;f26;153;30;153;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__isset;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Fluent.php;f11;176;5;179;;;;vpos;;vbool;;r&#xA;Definition&#xA;    __isset($key)&#xA;&#xA;Description&#xA;     Dynamically check if an attribute is set.&#xA;&#xA;Parameters:&#xA;    string $key;;d4,177;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Fluent.php;f28;176;32;176;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__set;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Fluent.php;f11;165;5;168;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __set($key, $value)&#xA;&#xA;Description&#xA;     Dynamically set the value of an attribute.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    mixed $value;;d4,166;;b1,0;;mstring $key;;pmixed $value;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Fluent.php;f26;165;30;165;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Fluent.php;f32;165;38;165;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__unset;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Fluent.php;f11;187;5;190;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __unset($key)&#xA;&#xA;Description&#xA;     Dynamically unset an attribute.&#xA;&#xA;Parameters:&#xA;    string $key;;d4,188;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Fluent.php;f28;187;32;187;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="get;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Fluent.php;f11;38;5;45;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    get($key, $default = null)&#xA;&#xA;Description&#xA;     Get an attribute from the container.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    mixed $default;;d4,39;;b1,0;;mstring $key;;pmixed $default;;p">
					<treenode node="default;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Fluent.php;f30;38;38;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Fluent.php;f24;38;28;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getAttributes;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Fluent.php;f11;52;5;55;;;;vpos;;varray;;r&#xA;Definition&#xA;    getAttributes()&#xA;&#xA;Description&#xA;     Get the attributes from the container.;;d4,53;;b1,0;;m">
				</treenode>
				<treenode node="jsonSerialize;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Fluent.php;f11;72;5;75;;;;vpos;;varray;;r&#xA;Definition&#xA;    jsonSerialize()&#xA;&#xA;Description&#xA;     Convert the object into something JSON serializable.;;d4,73;;b1,0;;m">
				</treenode>
				<treenode node="offsetExists;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Fluent.php;f11;94;5;97;;;;vpos;;vbool;;r&#xA;Definition&#xA;    offsetExists($offset)&#xA;&#xA;Description&#xA;     Determine if the given offset exists.&#xA;&#xA;Parameters:&#xA;    string $offset;;d4,95;;b1,0;;mstring $offset;;p">
					<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Fluent.php;f33;94;40;94;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="offsetGet;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Fluent.php;f11;105;5;108;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    offsetGet($offset)&#xA;&#xA;Description&#xA;     Get the value for a given offset.&#xA;&#xA;Parameters:&#xA;    string $offset;;d4,106;;b1,0;;mstring $offset;;p">
					<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Fluent.php;f30;105;37;105;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="offsetSet;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Fluent.php;f11;117;5;120;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    offsetSet($offset, $value)&#xA;&#xA;Description&#xA;     Set the value at the given offset.&#xA;&#xA;Parameters:&#xA;    string $offset&#xA;    mixed $value;;d4,118;;b1,0;;mstring $offset;;pmixed $value;;p">
					<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Fluent.php;f30;117;37;117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Fluent.php;f39;117;45;117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="offsetUnset;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Fluent.php;f11;128;5;131;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    offsetUnset($offset)&#xA;&#xA;Description&#xA;     Unset the value at the given offset.&#xA;&#xA;Parameters:&#xA;    string $offset;;d4,129;;b1,0;;mstring $offset;;p">
					<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Fluent.php;f32;128;39;128;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="toArray;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Fluent.php;f11;62;5;65;;;;vpos;;varray;;r&#xA;Definition&#xA;    toArray()&#xA;&#xA;Description&#xA;     Convert the Fluent instance to an array.;;d4,63;;b1,0;;m">
				</treenode>
				<treenode node="toJson;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Fluent.php;f11;83;5;86;;;;vpos;;vstring;;r&#xA;Definition&#xA;    toJson($options = 0)&#xA;&#xA;Description&#xA;     Convert the Fluent instance to JSON.&#xA;&#xA;Parameters:&#xA;    int $options;;d4,84;;b1,0;;mint $options;;p">
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Fluent.php;f27;83;35;83;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Fluent.php;f14;16;25;16;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="Gate;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Gate.php;f0;7;1;18;;;;vpos;;vFacade;;c;;r&#xA;Definition&#xA;    class Gate extends Facade&#xA;&#xA;Description&#xA;      see \Illuminate\Contracts\Auth\Access\Gate;;d0,8;;b0,0;;m">
				<treenode node="getFacadeAccessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Gate.php;f21;14;5;17;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getFacadeAccessor()&#xA;&#xA;Description&#xA;     Get the registered name of the component.;;d4,15;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="Grammar;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f9;16;1;450;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f0;7;1;760;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Grammar.php;f9;6;1;187;;;;vpos;;vBaseGrammar;;c;;r;;d0,17;;b0,0;;m">
				<treenode node="addModifiers;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f14;140;5;149;;;;vpos;;vstring;;r&#xA;Definition&#xA;    addModifiers($sql, Blueprint $blueprint, Fluent $column)&#xA;&#xA;Description&#xA;     Add the column modifiers to the definition.&#xA;&#xA;Parameters:&#xA;    string $sql&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $column;;d4,141;;b2,0;;mstring $sql;;p\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $column;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f52;140;62;140;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f71;140;78;140;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sql;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f36;140;40;140;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="calculateDoctrineTextLength;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f14;398;5;410;;;;vpos;;vint;;r&#xA;Definition&#xA;    calculateDoctrineTextLength($type)&#xA;&#xA;Description&#xA;     Calculate the proper column length to force the Doctrine text type.&#xA;&#xA;Parameters:&#xA;    string $type;;d4,399;;b2,0;;mstring $type;;p">
					<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f51;398;56;398;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="columnize;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Grammar.php;f11;106;5;109;;;;vpos;;vstring;;r&#xA;Definition&#xA;    columnize(array $columns)&#xA;&#xA;Description&#xA;     Convert an array of column names into a delimited string.&#xA;&#xA;Parameters:&#xA;    array $columns;;d4,107;;b1,0;;marray $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Grammar.php;f36;106;44;106;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileAggregate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;75;5;87;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileAggregate(Builder $query, $aggregate)&#xA;&#xA;Description&#xA;     Compile an aggregated select clause.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $aggregate;;d4,76;;b2,0;;m\Illuminate\Database\Query\Builder $query;;parray $aggregate;;p">
					<treenode node="aggregate;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f56;75;66;75;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f48;75;54;75;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileBasicHaving;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;520;5;527;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileBasicHaving($having)&#xA;&#xA;Description&#xA;     Compile a basic having clause.&#xA;&#xA;Parameters:&#xA;    array $having;;d4,521;;b2,0;;marray $having;;p">
					<treenode node="having;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f42;520;49;520;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileChange;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f11;279;5;290;;;;vpos;;varray;;r&#xA;Definition&#xA;    compileChange(Blueprint $blueprint, Fluent $command, Connection $connection)&#xA;&#xA;Description&#xA;     Compile a change column command into a series of SQL statements.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command&#xA;    \Illuminate\Database\Connection $connection;;d4,280;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p\Illuminate\Database\Connection $connection;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f44;279;54;279;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f63;279;71;279;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="connection;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f84;279;95;279;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileColumns;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;96;5;108;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileColumns(Builder $query, $columns)&#xA;&#xA;Description&#xA;     Compile the &quot;select *&quot; portion of the query.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $columns;;d4,97;;b2,0;;m\Illuminate\Database\Query\Builder $query;;parray $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f54;96;62;96;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f46;96;52;96;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileComponents;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;50;5;66;;;;vpos;;varray;;r&#xA;Definition&#xA;    compileComponents(Builder $query)&#xA;&#xA;Description&#xA;     Compile the components necessary for a select clause.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query;;d4,51;;b2,0;;m\Illuminate\Database\Query\Builder $query;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f49;50;55;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileDelete;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f11;705;5;712;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileDelete(Builder $query)&#xA;&#xA;Description&#xA;     Compile a delete statement into SQL.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query;;d4,706;;b1,0;;m\Illuminate\Database\Query\Builder $query;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f42;705;48;705;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileForeign;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f11;79;5;108;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileForeign(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a foreign key command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,80;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f45;79;55;79;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f64;79;72;79;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileFrom;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;117;5;120;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileFrom(Builder $query, $table)&#xA;&#xA;Description&#xA;     Compile the &quot;from&quot; portion of the query.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    string $table;;d4,118;;b2,0;;m\Illuminate\Database\Query\Builder $query;;pstring $table;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f43;117;49;117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f51;117;57;117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileGroups;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;477;5;480;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileGroups(Builder $query, $groups)&#xA;&#xA;Description&#xA;     Compile the &quot;group by&quot; portions of the query.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $groups;;d4,478;;b2,0;;m\Illuminate\Database\Query\Builder $query;;parray $groups;;p">
					<treenode node="groups;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f53;477;60;477;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f45;477;51;477;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileHaving;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;502;5;512;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileHaving(array $having)&#xA;&#xA;Description&#xA;     Compile a single having clause.&#xA;&#xA;Parameters:&#xA;    array $having;;d4,503;;b2,0;;marray $having;;p">
					<treenode node="having;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f43;502;50;502;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileHavings;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;489;5;494;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileHavings(Builder $query, $havings)&#xA;&#xA;Description&#xA;     Compile the &quot;having&quot; portions of the query.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $havings;;d4,490;;b2,0;;m\Illuminate\Database\Query\Builder $query;;parray $havings;;p">
					<treenode node="havings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f54;489;62;489;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f46;489;52;489;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileInsert;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f11;620;5;645;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileInsert(Builder $query, array $values)&#xA;&#xA;Description&#xA;     Compile an insert statement into SQL.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $values;;d4,621;;b1,0;;m\Illuminate\Database\Query\Builder $query;;parray $values;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f42;620;48;620;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f56;620;63;620;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileInsertGetId;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f11;655;5;658;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileInsertGetId(Builder $query, $values, $sequence)&#xA;&#xA;Description&#xA;     Compile an insert and get ID statement into SQL.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $values&#xA;    string $sequence;;d4,656;;b1,0;;m\Illuminate\Database\Query\Builder $query;;parray $values;;pstring $sequence;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f47;655;53;655;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sequence;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f64;655;73;655;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f55;655;62;655;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileJoinConstraint;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;175;5;190;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileJoinConstraint(array $clause)&#xA;&#xA;Description&#xA;     Create a join clause constraint segment.&#xA;&#xA;Parameters:&#xA;    array $clause;;d4,176;;b2,0;;marray $clause;;p">
					<treenode node="clause;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f51;175;58;175;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileJoins;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;129;5;167;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileJoins(Builder $query, $joins)&#xA;&#xA;Description&#xA;     Compile the &quot;join&quot; portions of the query.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $joins;;d4,130;;b2,0;;m\Illuminate\Database\Query\Builder $query;;parray $joins;;p">
					<treenode node="joins;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f52;129;58;129;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f44;129;50;129;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileLimit;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;554;5;557;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileLimit(Builder $query, $limit)&#xA;&#xA;Description&#xA;     Compile the &quot;limit&quot; portions of the query.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    int $limit;;d4,555;;b2,0;;m\Illuminate\Database\Query\Builder $query;;pint $limit;;p">
					<treenode node="limit;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f52;554;58;554;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f44;554;50;554;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileLock;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;732;5;735;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileLock(Builder $query, $value)&#xA;&#xA;Description&#xA;     Compile the lock into SQL.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    bool|string $value;;d4,733;;b2,0;;m\Illuminate\Database\Query\Builder $query;;pbool|string $value;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f43;732;49;732;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f51;732;57;732;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileOffset;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;566;5;569;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileOffset(Builder $query, $offset)&#xA;&#xA;Description&#xA;     Compile the &quot;offset&quot; portions of the query.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    int $offset;;d4,567;;b2,0;;m\Illuminate\Database\Query\Builder $query;;pint $offset;;p">
					<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f53;566;60;566;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f45;566;51;566;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileOrders;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;536;5;545;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileOrders(Builder $query, $orders)&#xA;&#xA;Description&#xA;     Compile the &quot;order by&quot; portions of the query.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $orders;;d4,537;;b2,0;;m\Illuminate\Database\Query\Builder $query;;parray $orders;;p">
					<treenode node="orders;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f53;536;60;536;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f45;536;51;536;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileRenameColumn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f11;26;5;37;;;;vpos;;varray;;r&#xA;Definition&#xA;    compileRenameColumn(Blueprint $blueprint, Fluent $command, Connection $connection)&#xA;&#xA;Description&#xA;     Compile a rename column command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command&#xA;    \Illuminate\Database\Connection $connection;;d4,27;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p\Illuminate\Database\Connection $connection;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f50;26;60;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f69;26;77;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="connection;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f90;26;101;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileSelect;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f11;35;5;42;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileSelect(Builder $query)&#xA;&#xA;Description&#xA;     Compile a select query into SQL.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query;;d4,36;;b1,0;;m\Illuminate\Database\Query\Builder $query;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f42;35;48;35;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileTruncate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f11;720;5;723;;;;vpos;;varray;;r&#xA;Definition&#xA;    compileTruncate(Builder $query)&#xA;&#xA;Description&#xA;     Compile a truncate table statement into SQL.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query;;d4,721;;b1,0;;m\Illuminate\Database\Query\Builder $query;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f44;720;50;720;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileUnion;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;606;5;611;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileUnion(array $union)&#xA;&#xA;Description&#xA;     Compile a single union statement.&#xA;&#xA;Parameters:&#xA;    array $union;;d4,607;;b2,0;;marray $union;;p">
					<treenode node="union;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f42;606;48;606;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileUnions;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;577;5;598;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileUnions(Builder $query)&#xA;&#xA;Description&#xA;     Compile the &quot;union&quot; queries attached to the main query.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query;;d4,578;;b2,0;;m\Illuminate\Database\Query\Builder $query;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f45;577;51;577;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileUpdate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f11;667;5;697;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileUpdate(Builder $query, $values)&#xA;&#xA;Description&#xA;     Compile an update statement into SQL.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $values;;d4,668;;b1,0;;m\Illuminate\Database\Query\Builder $query;;parray $values;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f42;667;48;667;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f50;667;57;667;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileWheres;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;198;5;225;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileWheres(Builder $query)&#xA;&#xA;Description&#xA;     Compile the &quot;where&quot; portions of the query.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query;;d4,199;;b2,0;;m\Illuminate\Database\Query\Builder $query;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f45;198;51;198;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="concatenate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;743;5;748;;;;vpos;;vstring;;r&#xA;Definition&#xA;    concatenate($segments)&#xA;&#xA;Description&#xA;     Concatenate an array of segments, removing empties.&#xA;&#xA;Parameters:&#xA;    array $segments;;d4,744;;b2,0;;marray $segments;;p">
					<treenode node="segments;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f35;743;44;743;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dateBasedWhere;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;451;5;456;;;;vpos;;vstring;;r&#xA;Definition&#xA;    dateBasedWhere($type, Builder $query, $where)&#xA;&#xA;Description&#xA;     Compile a date based where clause.&#xA;&#xA;Parameters:&#xA;    string $type&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $where;;d4,452;;b2,0;;mstring $type;;p\Illuminate\Database\Query\Builder $query;;parray $where;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f53;451;59;451;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f38;451;43;451;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="where;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f61;451;67;451;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getChangedDiff;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f14;299;5;304;;;;vpos;;v;;r&#xA;Definition&#xA;    getChangedDiff(Blueprint $blueprint, SchemaManager $schema)&#xA;&#xA;Description&#xA;     Get the Doctrine table difference for the given changes.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Doctrine\DBAL\Schema\AbstractSchemaManager $schema;;d4,300;;b2,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Doctrine\DBAL\Schema\AbstractSchemaManager $schema;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f48;299;58;299;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="schema;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f74;299;81;299;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getColumns;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f14;116;5;130;;;;vpos;;varray;;r&#xA;Definition&#xA;    getColumns(Blueprint $blueprint)&#xA;&#xA;Description&#xA;     Compile the blueprint's column definitions.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint;;d4,117;;b2,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f44;116;54;116;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getCommandByName;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f14;158;5;165;;;;vpos;;v;;r&#xA;Definition&#xA;    getCommandByName(Blueprint $blueprint, $name)&#xA;&#xA;Description&#xA;     Get the primary key command if it exists on the blueprint.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    string $name;;d4,159;;b2,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;pstring $name;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f50;158;60;158;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f62;158;67;158;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getCommandsByName;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f14;174;5;179;;;;vpos;;varray;;r&#xA;Definition&#xA;    getCommandsByName(Blueprint $blueprint, $name)&#xA;&#xA;Description&#xA;     Get all of the commands with a given name.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    string $name;;d4,175;;b2,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;pstring $name;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f51;174;61;174;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f63;174;68;174;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getDateFormat;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Grammar.php;f11;160;5;163;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getDateFormat()&#xA;&#xA;Description&#xA;     Get the format for database stored dates.;;d4,161;;b1,0;;m">
				</treenode>
				<treenode node="getDefaultValue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f14;240;5;251;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getDefaultValue($value)&#xA;&#xA;Description&#xA;     Format a value so that it can be used in &quot;default&quot; clauses.&#xA;&#xA;Parameters:&#xA;    mixed $value;;d4,241;;b2,0;;mmixed $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f39;240;45;240;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getDoctrineColumnChangeOptions;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f14;355;5;364;;;;vpos;;varray;;r&#xA;Definition&#xA;    getDoctrineColumnChangeOptions(Fluent $fluent)&#xA;&#xA;Description&#xA;     Get the Doctrine column change options.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $fluent;;d4,356;;b2,0;;m\Illuminate\Support\Fluent $fluent;;p">
					<treenode node="fluent;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f61;355;68;355;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getDoctrineColumnForChange;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f14;342;5;347;;;;vpos;;v;;r&#xA;Definition&#xA;    getDoctrineColumnForChange(Table $table, Fluent $fluent)&#xA;&#xA;Description&#xA;     Get the Doctrine column instance for a column change.&#xA;&#xA;Parameters:&#xA;    \Doctrine\DBAL\Schema\Table $table&#xA;    \Illuminate\Support\Fluent $fluent;;d4,343;;b2,0;;m\Doctrine\DBAL\Schema\Table $table;;p\Illuminate\Support\Fluent $fluent;;p">
					<treenode node="fluent;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f71;342;78;342;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f56;342;62;342;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getDoctrineColumnType;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f14;372;5;390;;;;vpos;;v;;r&#xA;Definition&#xA;    getDoctrineColumnType($type)&#xA;&#xA;Description&#xA;     Get the doctrine column type.&#xA;&#xA;Parameters:&#xA;    string $type;;d4,373;;b2,0;;mstring $type;;p">
					<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f45;372;50;372;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getDoctrineTableDiff;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f14;260;5;269;;;;vpos;;v;;r&#xA;Definition&#xA;    getDoctrineTableDiff(Blueprint $blueprint, SchemaManager $schema)&#xA;&#xA;Description&#xA;     Create an empty Doctrine DBAL TableDiff from the Blueprint.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Doctrine\DBAL\Schema\AbstractSchemaManager $schema;;d4,261;;b2,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Doctrine\DBAL\Schema\AbstractSchemaManager $schema;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f54;260;64;260;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="schema;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f80;260;87;260;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getRenamedDiff;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f14;48;5;53;;;;vpos;;v;;r&#xA;Definition&#xA;    getRenamedDiff(Blueprint $blueprint, Fluent $command, Column $column, SchemaManager $schema)&#xA;&#xA;Description&#xA;     Get a new column instance with the new column name.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command&#xA;    \Doctrine\DBAL\Schema\Column $column&#xA;    \Doctrine\DBAL\Schema\AbstractSchemaManager $schema;;d4,49;;b2,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p\Doctrine\DBAL\Schema\Column $column;;p\Doctrine\DBAL\Schema\AbstractSchemaManager $schema;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f48;48;58;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f84;48;91;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f67;48;75;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="schema;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f107;48;114;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getTablePrefix;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Grammar.php;f11;170;5;173;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getTablePrefix()&#xA;&#xA;Description&#xA;     Get the grammar's table prefix.;;d4,171;;b1,0;;m">
				</treenode>
				<treenode node="getTableWithColumnChanges;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f14;313;5;333;;;;vpos;;v;;r&#xA;Definition&#xA;    getTableWithColumnChanges(Blueprint $blueprint, Table $table)&#xA;&#xA;Description&#xA;     Get a copy of the given Doctrine table after making the column changes.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Doctrine\DBAL\Schema\Table $table;;d4,314;;b2,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Doctrine\DBAL\Schema\Table $table;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f59;313;69;313;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f77;313;83;313;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getType;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f14;187;5;190;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getType(Fluent $column)&#xA;&#xA;Description&#xA;     Get the SQL for the column data type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,188;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f38;187;45;187;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getValue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Grammar.php;f11;139;5;142;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getValue($expression)&#xA;&#xA;Description&#xA;     Get the value of a raw expression.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Expression $expression;;d4,140;;b1,0;;m\Illuminate\Database\Query\Expression $expression;;p">
					<treenode node="expression;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Grammar.php;f29;139;40;139;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isExpression;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Grammar.php;f11;150;5;153;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isExpression($value)&#xA;&#xA;Description&#xA;     Determine if the given value is a raw expression.&#xA;&#xA;Parameters:&#xA;    mixed $value;;d4,151;;b1,0;;mmixed $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Grammar.php;f33;150;39;150;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mapFluentOptionToDoctrine;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f14;418;5;437;;;;vpos;;vstring;;r&#xA;Definition&#xA;    mapFluentOptionToDoctrine($attribute)&#xA;&#xA;Description&#xA;     Get the matching Doctrine option for a given Fluent attribute name.&#xA;&#xA;Parameters:&#xA;    string $attribute;;d4,419;;b2,0;;mstring $attribute;;p">
					<treenode node="attribute;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f49;418;59;418;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mapFluentValueToDoctrine;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f14;446;5;449;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    mapFluentValueToDoctrine($option, $value)&#xA;&#xA;Description&#xA;     Get the matching Doctrine value for a given Fluent attribute.&#xA;&#xA;Parameters:&#xA;    string $option&#xA;    mixed $value;;d4,447;;b2,0;;mstring $option;;pmixed $value;;p">
					<treenode node="option;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f48;446;55;446;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f57;446;63;446;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="parameter;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Grammar.php;f11;128;5;131;;;;vpos;;vstring;;r&#xA;Definition&#xA;    parameter($value)&#xA;&#xA;Description&#xA;     Get the appropriate query parameter place-holder for a value.&#xA;&#xA;Parameters:&#xA;    mixed $value;;d4,129;;b1,0;;mmixed $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Grammar.php;f30;128;36;128;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="parameterize;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Grammar.php;f11;117;5;120;;;;vpos;;vstring;;r&#xA;Definition&#xA;    parameterize(array $values)&#xA;&#xA;Description&#xA;     Create query parameter place-holders for an array.&#xA;&#xA;Parameters:&#xA;    array $values;;d4,118;;b1,0;;marray $values;;p">
					<treenode node="values;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Grammar.php;f39;117;46;117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="prefixArray;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f11;199;5;205;;;;vpos;;varray;;r&#xA;Definition&#xA;    prefixArray($prefix, array $values)&#xA;&#xA;Description&#xA;     Add a prefix to an array of values.&#xA;&#xA;Parameters:&#xA;    string $prefix&#xA;    array $values;;d4,200;;b1,0;;mstring $prefix;;parray $values;;p">
					<treenode node="prefix;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f32;199;39;199;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f47;199;54;199;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="removeLeadingBoolean;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;756;5;759;;;;vpos;;vstring;;r&#xA;Definition&#xA;    removeLeadingBoolean($value)&#xA;&#xA;Description&#xA;     Remove the leading boolean from a statement.&#xA;&#xA;Parameters:&#xA;    string $value;;d4,757;;b2,0;;mstring $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f44;756;50;756;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setRenamedColumns;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f14;63;5;70;;;;vpos;;v;;r&#xA;Definition&#xA;    setRenamedColumns(TableDiff $tableDiff, Fluent $command, Column $column)&#xA;&#xA;Description&#xA;     Set the renamed columns on the table diff.&#xA;&#xA;Parameters:&#xA;    \Doctrine\DBAL\Schema\TableDiff $tableDiff&#xA;    \Illuminate\Support\Fluent $command&#xA;    \Doctrine\DBAL\Schema\Column $column;;d4,64;;b2,0;;m\Doctrine\DBAL\Schema\TableDiff $tableDiff;;p\Illuminate\Support\Fluent $command;;p\Doctrine\DBAL\Schema\Column $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f87;63;94;63;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f70;63;78;63;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="tableDiff;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f51;63;61;63;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setTablePrefix;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Grammar.php;f11;181;5;186;;;;vpos;;v;;r&#xA;Definition&#xA;    setTablePrefix($prefix)&#xA;&#xA;Description&#xA;     Set the grammar's table prefix.&#xA;&#xA;Parameters:&#xA;    string $prefix;;d4,182;;b1,0;;mstring $prefix;;p">
					<treenode node="prefix;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Grammar.php;f35;181;42;181;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereBasic;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;262;5;267;;;;vpos;;vstring;;r&#xA;Definition&#xA;    whereBasic(Builder $query, $where)&#xA;&#xA;Description&#xA;     Compile a basic where clause.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $where;;d4,263;;b2,0;;m\Illuminate\Database\Query\Builder $query;;parray $where;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f42;262;48;262;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="where;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f50;262;56;262;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereBetween;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;276;5;281;;;;vpos;;vstring;;r&#xA;Definition&#xA;    whereBetween(Builder $query, $where)&#xA;&#xA;Description&#xA;     Compile a &quot;between&quot; where clause.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $where;;d4,277;;b2,0;;m\Illuminate\Database\Query\Builder $query;;parray $where;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f44;276;50;276;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="where;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f52;276;58;276;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereDate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;402;5;405;;;;vpos;;vstring;;r&#xA;Definition&#xA;    whereDate(Builder $query, $where)&#xA;&#xA;Description&#xA;     Compile a &quot;where date&quot; clause.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $where;;d4,403;;b2,0;;m\Illuminate\Database\Query\Builder $query;;parray $where;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f41;402;47;402;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="where;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f49;402;55;402;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereDay;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;414;5;417;;;;vpos;;vstring;;r&#xA;Definition&#xA;    whereDay(Builder $query, $where)&#xA;&#xA;Description&#xA;     Compile a &quot;where day&quot; clause.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $where;;d4,415;;b2,0;;m\Illuminate\Database\Query\Builder $query;;parray $where;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f40;414;46;414;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="where;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f48;414;54;414;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereExists;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;290;5;293;;;;vpos;;vstring;;r&#xA;Definition&#xA;    whereExists(Builder $query, $where)&#xA;&#xA;Description&#xA;     Compile a where exists clause.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $where;;d4,291;;b2,0;;m\Illuminate\Database\Query\Builder $query;;parray $where;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f43;290;49;290;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="where;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f51;290;57;290;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereIn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;314;5;323;;;;vpos;;vstring;;r&#xA;Definition&#xA;    whereIn(Builder $query, $where)&#xA;&#xA;Description&#xA;     Compile a &quot;where in&quot; clause.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $where;;d4,315;;b2,0;;m\Illuminate\Database\Query\Builder $query;;parray $where;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f39;314;45;314;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="where;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f47;314;53;314;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereInSub;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;350;5;355;;;;vpos;;vstring;;r&#xA;Definition&#xA;    whereInSub(Builder $query, $where)&#xA;&#xA;Description&#xA;     Compile a where in sub-select clause.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $where;;d4,351;;b2,0;;m\Illuminate\Database\Query\Builder $query;;parray $where;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f42;350;48;350;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="where;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f50;350;56;350;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereMonth;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;426;5;429;;;;vpos;;vstring;;r&#xA;Definition&#xA;    whereMonth(Builder $query, $where)&#xA;&#xA;Description&#xA;     Compile a &quot;where month&quot; clause.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $where;;d4,427;;b2,0;;m\Illuminate\Database\Query\Builder $query;;parray $where;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f42;426;48;426;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="where;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f50;426;56;426;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereNested;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;234;5;239;;;;vpos;;vstring;;r&#xA;Definition&#xA;    whereNested(Builder $query, $where)&#xA;&#xA;Description&#xA;     Compile a nested where clause.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $where;;d4,235;;b2,0;;m\Illuminate\Database\Query\Builder $query;;parray $where;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f43;234;49;234;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="where;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f51;234;57;234;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereNotExists;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;302;5;305;;;;vpos;;vstring;;r&#xA;Definition&#xA;    whereNotExists(Builder $query, $where)&#xA;&#xA;Description&#xA;     Compile a where exists clause.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $where;;d4,303;;b2,0;;m\Illuminate\Database\Query\Builder $query;;parray $where;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f46;302;52;302;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="where;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f54;302;60;302;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereNotIn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;332;5;341;;;;vpos;;vstring;;r&#xA;Definition&#xA;    whereNotIn(Builder $query, $where)&#xA;&#xA;Description&#xA;     Compile a &quot;where not in&quot; clause.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $where;;d4,333;;b2,0;;m\Illuminate\Database\Query\Builder $query;;parray $where;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f42;332;48;332;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="where;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f50;332;56;332;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereNotInSub;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;364;5;369;;;;vpos;;vstring;;r&#xA;Definition&#xA;    whereNotInSub(Builder $query, $where)&#xA;&#xA;Description&#xA;     Compile a where not in sub-select clause.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $where;;d4,365;;b2,0;;m\Illuminate\Database\Query\Builder $query;;parray $where;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f45;364;51;364;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="where;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f53;364;59;364;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereNotNull;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;390;5;393;;;;vpos;;vstring;;r&#xA;Definition&#xA;    whereNotNull(Builder $query, $where)&#xA;&#xA;Description&#xA;     Compile a &quot;where not null&quot; clause.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $where;;d4,391;;b2,0;;m\Illuminate\Database\Query\Builder $query;;parray $where;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f44;390;50;390;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="where;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f52;390;58;390;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereNull;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;378;5;381;;;;vpos;;vstring;;r&#xA;Definition&#xA;    whereNull(Builder $query, $where)&#xA;&#xA;Description&#xA;     Compile a &quot;where null&quot; clause.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $where;;d4,379;;b2,0;;m\Illuminate\Database\Query\Builder $query;;parray $where;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f41;378;47;378;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="where;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f49;378;55;378;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereRaw;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;465;5;468;;;;vpos;;vstring;;r&#xA;Definition&#xA;    whereRaw(Builder $query, $where)&#xA;&#xA;Description&#xA;     Compile a raw where clause.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $where;;d4,466;;b2,0;;m\Illuminate\Database\Query\Builder $query;;parray $where;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f40;465;46;465;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="where;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f48;465;54;465;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereSub;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;248;5;253;;;;vpos;;vstring;;r&#xA;Definition&#xA;    whereSub(Builder $query, $where)&#xA;&#xA;Description&#xA;     Compile a where condition with a sub-select.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $where;;d4,249;;b2,0;;m\Illuminate\Database\Query\Builder $query;;parray $where;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f40;248;46;248;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="where;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f48;248;54;248;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereYear;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;438;5;441;;;;vpos;;vstring;;r&#xA;Definition&#xA;    whereYear(Builder $query, $where)&#xA;&#xA;Description&#xA;     Compile a &quot;where year&quot; clause.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $where;;d4,439;;b2,0;;m\Illuminate\Database\Query\Builder $query;;parray $where;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f41;438;47;438;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="where;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f49;438;55;438;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="wrap;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f11;225;5;232;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Grammar.php;f11;48;5;83;;;;vpos;;v;;r&#xA;Definition&#xA;    wrap($value, $prefixAlias = false)&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,226;;b1,0;;mvalue;;pprefixAlias;;p">
					<treenode node="prefixAlias;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f33;225;45;225;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Grammar.php;f33;48;45;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f25;225;31;225;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Grammar.php;f25;48;31;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="wrapArray;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Grammar.php;f11;21;5;24;;;;vpos;;varray;;r&#xA;Definition&#xA;    wrapArray(array $values)&#xA;&#xA;Description&#xA;     Wrap an array of values.&#xA;&#xA;Parameters:&#xA;    array $values;;d4,22;;b1,0;;marray $values;;p">
					<treenode node="values;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Grammar.php;f36;21;43;21;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="wrapTable;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f11;213;5;220;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Grammar.php;f11;32;5;39;;;;vpos;;vstring;;r&#xA;Definition&#xA;    wrapTable($table)&#xA;&#xA;Description&#xA;     Wrap a table in keyword identifiers.&#xA;&#xA;Parameters:&#xA;    mixed $table;;d4,214;;b1,0;;mmixed $table;;p">
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php;f30;213;36;213;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Grammar.php;f30;32;36;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="wrapValue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Grammar.php;f14;91;5;98;;;;vpos;;vstring;;r&#xA;Definition&#xA;    wrapValue($value)&#xA;&#xA;Description&#xA;     Wrap a single string in keyword identifiers.&#xA;&#xA;Parameters:&#xA;    string $value;;d4,92;;b2,0;;mstring $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Grammar.php;f33;91;39;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="selectComponents;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php;f14;14;31;14;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="tablePrefix;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Grammar.php;f14;13;26;13;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="Hash;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Hash.php;f0;7;1;18;;;;vpos;;vFacade;;c;;r&#xA;Definition&#xA;    class Hash extends Facade&#xA;&#xA;Description&#xA;      see \Illuminate\Hashing\BcryptHasher;;d0,8;;b0,0;;m">
				<treenode node="getFacadeAccessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Hash.php;f21;14;5;17;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getFacadeAccessor()&#xA;&#xA;Description&#xA;     Get the registered name of the component.;;d4,15;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="HasMany;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasMany.php;f0;6;1;46;;;;vpos;;vHasOneOrMany;;c;;r;;d0,7;;b0,0;;m">
				<treenode node="getResults;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasMany.php;f11;13;5;16;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    getResults()&#xA;&#xA;Description&#xA;     Get the results of the relationship.;;d4,14;;b1,0;;m">
				</treenode>
				<treenode node="initRelation;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasMany.php;f11;25;5;32;;;;vpos;;varray;;r&#xA;Definition&#xA;    initRelation(array $models, $relation)&#xA;&#xA;Description&#xA;     Initialize the relation on a set of models.&#xA;&#xA;Parameters:&#xA;    array $models&#xA;    string $relation;;d4,26;;b1,0;;marray $models;;pstring $relation;;p">
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasMany.php;f39;25;46;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasMany.php;f48;25;57;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="match;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasMany.php;f11;42;5;45;;;;vpos;;varray;;r&#xA;Definition&#xA;    match(array $models, Collection $results, $relation)&#xA;&#xA;Description&#xA;     Match the eagerly loaded results to their parents.&#xA;&#xA;Parameters:&#xA;    array $models&#xA;    \Illuminate\Database\Eloquent\Collection $results&#xA;    string $relation;;d4,43;;b1,0;;marray $models;;p\Illuminate\Database\Eloquent\Collection $results;;pstring $relation;;p">
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasMany.php;f32;42;39;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasMany.php;f62;42;71;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="results;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasMany.php;f52;42;60;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="HasManyThrough;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f0;9;1;365;;;;vpos;;vRelation;;c;;r;;d0,10;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f11;50;5;58;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct(Builder $query, Model $farParent, Model $parent, $firstKey, $secondKey, $localKey)&#xA;&#xA;Description&#xA;     Create a new has many through relationship instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $query&#xA;    \Illuminate\Database\Eloquent\Model $farParent&#xA;    \Illuminate\Database\Eloquent\Model $parent&#xA;    string $firstKey&#xA;    string $secondKey&#xA;    string $localKey;;d4,51;;b1,0;;m\Illuminate\Database\Eloquent\Builder $query;;p\Illuminate\Database\Eloquent\Model $farParent;;p\Illuminate\Database\Eloquent\Model $parent;;pstring $firstKey;;pstring $secondKey;;pstring $localKey;;p">
					<treenode node="farParent;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f54;50;64;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="firstKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f81;50;90;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="localKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f104;50;113;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parent;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f72;50;79;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f40;50;46;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="secondKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f92;50;102;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addConstraints;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f11;65;5;76;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    addConstraints()&#xA;&#xA;Description&#xA;     Set the base constraints on the relation query.;;d4,66;;b1,0;;m">
				</treenode>
				<treenode node="addEagerConstraints;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f11;133;5;138;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    addEagerConstraints(array $models)&#xA;&#xA;Description&#xA;     Set the constraints for an eager load of the relation.&#xA;&#xA;Parameters:&#xA;    array $models;;d4,134;;b1,0;;marray $models;;p">
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f46;133;53;133;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="buildDictionary;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f14;190;5;204;;;;vpos;;varray;;r&#xA;Definition&#xA;    buildDictionary(Collection $results)&#xA;&#xA;Description&#xA;     Build model dictionary keyed by the relation's foreign key.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Collection $results;;d4,191;;b2,0;;m\Illuminate\Database\Eloquent\Collection $results;;p">
					<treenode node="results;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f50;190;58;190;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="find;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f11;236;5;245;;;;vpos;;v;;r&#xA;Definition&#xA;    find($id, $columns = ['*'])&#xA;&#xA;Description&#xA;     Find a related model by its primary key.&#xA;&#xA;Parameters:&#xA;    mixed $id&#xA;    array $columns;;d4,237;;b1,0;;mmixed $id;;parray $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f30;236;38;236;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f25;236;28;236;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="findMany;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f11;254;5;263;;;;vpos;;v;;r&#xA;Definition&#xA;    findMany($ids, $columns = ['*'])&#xA;&#xA;Description&#xA;     Find multiple related models by their primary keys.&#xA;&#xA;Parameters:&#xA;    mixed $ids&#xA;    array $columns;;d4,255;;b1,0;;mmixed $ids;;parray $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f35;254;43;254;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="ids;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f29;254;33;254;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="first;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f11;222;5;227;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    first($columns = ['*'])&#xA;&#xA;Description&#xA;     Execute the query and get the first related model.&#xA;&#xA;Parameters:&#xA;    array $columns;;d4,223;;b1,0;;marray $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f26;222;34;222;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="get;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f11;271;5;290;;;;vpos;;v;;r&#xA;Definition&#xA;    get($columns = ['*'])&#xA;&#xA;Description&#xA;     Execute the query as a &quot;select&quot; statement.&#xA;&#xA;Parameters:&#xA;    array $columns;;d4,272;;b1,0;;marray $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f24;271;32;271;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getForeignKey;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f11;351;5;354;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getForeignKey()&#xA;&#xA;Description&#xA;     Get the qualified foreign key on the related model.;;d4,352;;b1,0;;m">
				</treenode>
				<treenode node="getHasCompareKey;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f11;341;5;344;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getHasCompareKey()&#xA;&#xA;Description&#xA;     Get the key for comparing against the parent key in &quot;has&quot; query.;;d4,342;;b1,0;;m">
				</treenode>
				<treenode node="getRelationCountQuery;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f11;85;5;96;;;;vpos;;v;;r&#xA;Definition&#xA;    getRelationCountQuery(Builder $query, Builder $parent)&#xA;&#xA;Description&#xA;     Add the constraints for a relationship count query.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $query&#xA;    \Illuminate\Database\Eloquent\Builder $parent;;d4,86;;b1,0;;m\Illuminate\Database\Eloquent\Builder $query;;p\Illuminate\Database\Eloquent\Builder $parent;;p">
					<treenode node="parent;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f66;85;73;85;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f50;85;56;85;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getResults;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f11;211;5;214;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    getResults()&#xA;&#xA;Description&#xA;     Get the results of the relationship.;;d4,212;;b1,0;;m">
				</treenode>
				<treenode node="getSelectColumns;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f14;298;5;305;;;;vpos;;varray;;r&#xA;Definition&#xA;    getSelectColumns(array $columns = ['*'])&#xA;&#xA;Description&#xA;     Set the select clause for the relation query.&#xA;&#xA;Parameters:&#xA;    array $columns;;d4,299;;b2,0;;marray $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f46;298;54;298;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getThroughKey;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f11;361;5;364;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getThroughKey()&#xA;&#xA;Description&#xA;     Get the qualified foreign key on the &quot;through&quot; model.;;d4,362;;b1,0;;m">
				</treenode>
				<treenode node="initRelation;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f11;147;5;154;;;;vpos;;varray;;r&#xA;Definition&#xA;    initRelation(array $models, $relation)&#xA;&#xA;Description&#xA;     Initialize the relation on a set of models.&#xA;&#xA;Parameters:&#xA;    array $models&#xA;    string $relation;;d4,148;;b1,0;;marray $models;;pstring $relation;;p">
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f39;147;46;147;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f48;147;57;147;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="match;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f11;164;5;182;;;;vpos;;varray;;r&#xA;Definition&#xA;    match(array $models, Collection $results, $relation)&#xA;&#xA;Description&#xA;     Match the eagerly loaded results to their parents.&#xA;&#xA;Parameters:&#xA;    array $models&#xA;    \Illuminate\Database\Eloquent\Collection $results&#xA;    string $relation;;d4,165;;b1,0;;marray $models;;p\Illuminate\Database\Eloquent\Collection $results;;pstring $relation;;p">
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f32;164;39;164;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f62;164;71;164;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="results;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f52;164;60;164;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="paginate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f11;315;5;320;;;;vpos;;v;;r&#xA;Definition&#xA;    paginate($perPage = null, $columns = ['*'], $pageName = 'page')&#xA;&#xA;Description&#xA;     Get a paginator for the &quot;select&quot; statement.&#xA;&#xA;Parameters:&#xA;    int $perPage&#xA;    array $columns&#xA;    string $pageName;;d4,316;;b1,0;;mint $perPage;;parray $columns;;pstring $pageName;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f46;315;54;315;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="pageName;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f64;315;73;315;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="perPage;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f29;315;37;315;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="parentSoftDeletes;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f11;122;5;125;;;;vpos;;vbool;;r&#xA;Definition&#xA;    parentSoftDeletes()&#xA;&#xA;Description&#xA;     Determine whether close parent of the relation uses Soft Deletes.;;d4,123;;b1,0;;m">
				</treenode>
				<treenode node="setJoin;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f14;104;5;115;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setJoin(Builder $query = null)&#xA;&#xA;Description&#xA;     Set the join clause on the query.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder|null $query;;d4,105;;b2,0;;m\Illuminate\Database\Eloquent\Builder|null $query;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f39;104;45;104;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="simplePaginate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f11;329;5;334;;;;vpos;;v;;r&#xA;Definition&#xA;    simplePaginate($perPage = null, $columns = ['*'])&#xA;&#xA;Description&#xA;     Paginate the given query into a simple paginator.&#xA;&#xA;Parameters:&#xA;    int $perPage&#xA;    array $columns;;d4,330;;b1,0;;mint $perPage;;parray $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f52;329;60;329;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="perPage;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f35;329;43;329;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="farParent;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f14;16;24;16;;;;vpos;;v;;r&#xA;Description&#xA;     The distance parent model instance.;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="firstKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f14;23;23;23;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="localKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f14;37;23;37;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="secondKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php;f14;30;24;30;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="HasOne;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOne.php;f0;6;1;46;;;;vpos;;vHasOneOrMany;;c;;r;;d0,7;;b0,0;;m">
				<treenode node="getResults;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOne.php;f11;13;5;16;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    getResults()&#xA;&#xA;Description&#xA;     Get the results of the relationship.;;d4,14;;b1,0;;m">
				</treenode>
				<treenode node="initRelation;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOne.php;f11;25;5;32;;;;vpos;;varray;;r&#xA;Definition&#xA;    initRelation(array $models, $relation)&#xA;&#xA;Description&#xA;     Initialize the relation on a set of models.&#xA;&#xA;Parameters:&#xA;    array $models&#xA;    string $relation;;d4,26;;b1,0;;marray $models;;pstring $relation;;p">
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOne.php;f39;25;46;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOne.php;f48;25;57;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="match;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOne.php;f11;42;5;45;;;;vpos;;varray;;r&#xA;Definition&#xA;    match(array $models, Collection $results, $relation)&#xA;&#xA;Description&#xA;     Match the eagerly loaded results to their parents.&#xA;&#xA;Parameters:&#xA;    array $models&#xA;    \Illuminate\Database\Eloquent\Collection $results&#xA;    string $relation;;d4,43;;b1,0;;marray $models;;p\Illuminate\Database\Eloquent\Collection $results;;pstring $relation;;p">
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOne.php;f32;42;39;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOne.php;f62;42;71;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="results;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOne.php;f52;42;60;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="HasOneOrMany;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f9;9;1;402;;;;vpos;;vRelation;;c;;r;;d0,10;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f11;34;5;40;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct(Builder $query, Model $parent, $foreignKey, $localKey)&#xA;&#xA;Description&#xA;     Create a new has one or many relationship instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $query&#xA;    \Illuminate\Database\Eloquent\Model $parent&#xA;    string $foreignKey&#xA;    string $localKey;;d4,35;;b1,0;;m\Illuminate\Database\Eloquent\Builder $query;;p\Illuminate\Database\Eloquent\Model $parent;;pstring $foreignKey;;pstring $localKey;;p">
					<treenode node="foreignKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f63;34;74;34;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="localKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f76;34;85;34;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parent;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f54;34;61;34;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f40;34;46;34;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addConstraints;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f11;47;5;54;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    addConstraints()&#xA;&#xA;Description&#xA;     Set the base constraints on the relation query.;;d4,48;;b1,0;;m">
				</treenode>
				<treenode node="addEagerConstraints;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f11;106;5;109;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    addEagerConstraints(array $models)&#xA;&#xA;Description&#xA;     Set the constraints for an eager load of the relation.&#xA;&#xA;Parameters:&#xA;    array $models;;d4,107;;b1,0;;marray $models;;p">
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f46;106;53;106;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="buildDictionary;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f14;187;5;201;;;;vpos;;varray;;r&#xA;Definition&#xA;    buildDictionary(Collection $results)&#xA;&#xA;Description&#xA;     Build model dictionary keyed by the relation's foreign key.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Collection $results;;d4,188;;b2,0;;m\Illuminate\Database\Eloquent\Collection $results;;p">
					<treenode node="results;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f50;187;58;187;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="create;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f11;305;5;317;;;;vpos;;v;;r&#xA;Definition&#xA;    create(array $attributes)&#xA;&#xA;Description&#xA;     Create a new instance of the related model.&#xA;&#xA;Parameters:&#xA;    array $attributes;;d4,306;;b1,0;;marray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f33;305;44;305;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="createMany;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f11;325;5;334;;;;vpos;;varray;;r&#xA;Definition&#xA;    createMany(array $records)&#xA;&#xA;Description&#xA;     Create an array of new instances of the related model.&#xA;&#xA;Parameters:&#xA;    array $records;;d4,326;;b1,0;;marray $records;;p">
					<treenode node="records;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f37;325;45;325;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="findOrNew;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f11;238;5;247;;;;vpos;;v;;r&#xA;Definition&#xA;    findOrNew($id, $columns = ['*'])&#xA;&#xA;Description&#xA;     Find a model by its primary key or return new instance of the related model.&#xA;&#xA;Parameters:&#xA;    mixed $id&#xA;    array $columns;;d4,239;;b1,0;;mmixed $id;;parray $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f35;238;43;238;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f30;238;33;238;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="firstOrCreate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f11;272;5;279;;;;vpos;;v;;r&#xA;Definition&#xA;    firstOrCreate(array $attributes)&#xA;&#xA;Description&#xA;     Get the first related record matching the attributes or create it.&#xA;&#xA;Parameters:&#xA;    array $attributes;;d4,273;;b1,0;;marray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f40;272;51;272;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="firstOrNew;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f11;255;5;264;;;;vpos;;v;;r&#xA;Definition&#xA;    firstOrNew(array $attributes)&#xA;&#xA;Description&#xA;     Get the first related model record matching the attributes or instantiate it.&#xA;&#xA;Parameters:&#xA;    array $attributes;;d4,256;;b1,0;;marray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f37;255;48;255;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getForeignKey;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f11;366;5;369;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getForeignKey()&#xA;&#xA;Description&#xA;     Get the foreign key for the relationship.;;d4,367;;b1,0;;m">
				</treenode>
				<treenode node="getHasCompareKey;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f11;356;5;359;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getHasCompareKey()&#xA;&#xA;Description&#xA;     Get the key for comparing against the parent key in &quot;has&quot; query.;;d4,357;;b1,0;;m">
				</treenode>
				<treenode node="getParentKey;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f11;388;5;391;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    getParentKey()&#xA;&#xA;Description&#xA;     Get the key value of the parent's local key.;;d4,389;;b1,0;;m">
				</treenode>
				<treenode node="getPlainForeignKey;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f11;376;5;381;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getPlainForeignKey()&#xA;&#xA;Description&#xA;     Get the plain foreign key.;;d4,377;;b1,0;;m">
				</treenode>
				<treenode node="getQualifiedParentKeyName;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f11;398;5;401;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getQualifiedParentKeyName()&#xA;&#xA;Description&#xA;     Get the fully qualified parent key name.;;d4,399;;b1,0;;m">
				</treenode>
				<treenode node="getRelationCountHash;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f11;95;5;98;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getRelationCountHash()&#xA;&#xA;Description&#xA;     Get a relationship join table hash.;;d4,96;;b1,0;;m">
				</treenode>
				<treenode node="getRelationCountQuery;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f11;63;5;70;;;;vpos;;v;;r&#xA;Definition&#xA;    getRelationCountQuery(Builder $query, Builder $parent)&#xA;&#xA;Description&#xA;     Add the constraints for a relationship count query.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $query&#xA;    \Illuminate\Database\Eloquent\Builder $parent;;d4,64;;b1,0;;m\Illuminate\Database\Eloquent\Builder $query;;p\Illuminate\Database\Eloquent\Builder $parent;;p">
					<treenode node="parent;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f66;63;73;63;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f50;63;56;63;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getRelationCountQueryForSelfRelation;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f11;79;5;88;;;;vpos;;v;;r&#xA;Definition&#xA;    getRelationCountQueryForSelfRelation(Builder $query, Builder $parent)&#xA;&#xA;Description&#xA;     Add the constraints for a relationship count query on the same table.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $query&#xA;    \Illuminate\Database\Eloquent\Builder $parent;;d4,80;;b1,0;;m\Illuminate\Database\Eloquent\Builder $query;;p\Illuminate\Database\Eloquent\Builder $parent;;p">
					<treenode node="parent;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f81;79;88;79;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f65;79;71;79;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getRelationValue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f14;174;5;179;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    getRelationValue(array $dictionary, $key, $type)&#xA;&#xA;Description&#xA;     Get the value of a relationship by one or many type.&#xA;&#xA;Parameters:&#xA;    array $dictionary&#xA;    string $key&#xA;    string $type;;d4,175;;b2,0;;marray $dictionary;;pstring $key;;pstring $type;;p">
					<treenode node="dictionary;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f46;174;57;174;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f59;174;63;174;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f65;174;70;174;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="matchMany;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f11;132;5;135;;;;vpos;;varray;;r&#xA;Definition&#xA;    matchMany(array $models, Collection $results, $relation)&#xA;&#xA;Description&#xA;     Match the eagerly loaded results to their many parents.&#xA;&#xA;Parameters:&#xA;    array $models&#xA;    \Illuminate\Database\Eloquent\Collection $results&#xA;    string $relation;;d4,133;;b1,0;;marray $models;;p\Illuminate\Database\Eloquent\Collection $results;;pstring $relation;;p">
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f36;132;43;132;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f66;132;75;132;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="results;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f56;132;64;132;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="matchOne;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f11;119;5;122;;;;vpos;;varray;;r&#xA;Definition&#xA;    matchOne(array $models, Collection $results, $relation)&#xA;&#xA;Description&#xA;     Match the eagerly loaded results to their single parents.&#xA;&#xA;Parameters:&#xA;    array $models&#xA;    \Illuminate\Database\Eloquent\Collection $results&#xA;    string $relation;;d4,120;;b1,0;;marray $models;;p\Illuminate\Database\Eloquent\Collection $results;;pstring $relation;;p">
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f35;119;42;119;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f65;119;74;119;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="results;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f55;119;63;119;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="matchOneOrMany;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f14;146;5;164;;;;vpos;;varray;;r&#xA;Definition&#xA;    matchOneOrMany(array $models, Collection $results, $relation, $type)&#xA;&#xA;Description&#xA;     Match the eagerly loaded results to their many parents.&#xA;&#xA;Parameters:&#xA;    array $models&#xA;    \Illuminate\Database\Eloquent\Collection $results&#xA;    string $relation&#xA;    string $type;;d4,147;;b2,0;;marray $models;;p\Illuminate\Database\Eloquent\Collection $results;;pstring $relation;;pstring $type;;p">
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f44;146;51;146;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f74;146;83;146;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="results;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f64;146;72;146;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f85;146;90;146;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="save;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f11;209;5;214;;;;vpos;;v;;r&#xA;Definition&#xA;    save(Model $model)&#xA;&#xA;Description&#xA;     Attach a model instance to the parent model.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Model $model;;d4,210;;b1,0;;m\Illuminate\Database\Eloquent\Model $model;;p">
					<treenode node="model;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f31;209;37;209;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="saveMany;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f11;222;5;229;;;;vpos;;v;;r&#xA;Definition&#xA;    saveMany($models)&#xA;&#xA;Description&#xA;     Attach a collection of models to the parent instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Collection|array $models;;d4,223;;b1,0;;m\Illuminate\Database\Eloquent\Collection|array $models;;p">
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f29;222;36;222;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="update;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f11;342;5;349;;;;vpos;;vint;;r&#xA;Definition&#xA;    update(array $attributes)&#xA;&#xA;Description&#xA;     Perform an update on all the related models.&#xA;&#xA;Parameters:&#xA;    array $attributes;;d4,343;;b1,0;;marray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f33;342;44;342;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="updateOrCreate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f11;288;5;297;;;;vpos;;v;;r&#xA;Definition&#xA;    updateOrCreate(array $attributes, array $values = [])&#xA;&#xA;Description&#xA;     Create or update a related record matching the attributes, and fill it with values.&#xA;&#xA;Parameters:&#xA;    array $attributes&#xA;    array $values;;d4,289;;b1,0;;marray $attributes;;parray $values;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f41;288;52;288;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f60;288;67;288;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="foreignKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f14;16;25;16;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="localKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php;f14;23;23;23;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="HtmlDumper;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Debug\HtmlDumper.php;f0;6;1;28;;;;vpos;;vSymfonyHtmlDumper;;c;;r;;d0,7;;b0,0;;m">
				<treenode node="styles;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Debug\HtmlDumper.php;f14;13;21;13;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="HtmlString;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\HtmlString.php;f0;6;1;45;;;;vpos;;vHtmlable;;c;;r;;d0,7;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\HtmlString.php;f11;21;5;24;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct($html)&#xA;&#xA;Description&#xA;     Create a new HTML string instance.&#xA;&#xA;Parameters:&#xA;    string $html;;d4,22;;b1,0;;mstring $html;;p">
					<treenode node="html;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\HtmlString.php;f32;21;37;21;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__toString;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\HtmlString.php;f11;41;5;44;;;;vpos;;vstring;;r&#xA;Definition&#xA;    __toString()&#xA;&#xA;Description&#xA;     Get the the HTML string.;;d4,42;;b1,0;;m">
				</treenode>
				<treenode node="toHtml;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\HtmlString.php;f11;31;5;34;;;;vpos;;vstring;;r&#xA;Definition&#xA;    toHtml()&#xA;&#xA;Description&#xA;     Get the the HTML string.;;d4,32;;b1,0;;m">
				</treenode>
				<treenode node="html;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\HtmlString.php;f14;13;19;13;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="IcuDatFileLoader;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\IcuDatFileLoader.php;f0;23;1;60;;;;vpos;;vIcuResFileLoader;;c;;r&#xA;Definition&#xA;    class IcuDatFileLoader extends IcuResFileLoader&#xA;&#xA;Description&#xA;     IcuResFileLoader loads translations from a resource bundle.;;d0,24;;b0,0;;m">
				<treenode node="load;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\IcuDatFileLoader.php;f11;28;5;59;;;;vpos;;v;;r&#xA;Definition&#xA;    load($resource, $locale, $domain = 'messages')&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,29;;b1,0;;mresource;;plocale;;pdomain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\IcuDatFileLoader.php;f45;28;52;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\IcuDatFileLoader.php;f36;28;43;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="resource;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\IcuDatFileLoader.php;f25;28;34;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="IcuDatFileLoaderTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\IcuDatFileLoaderTest.php;f0;19;1;63;;;;vpos;;vLocalizedTestCase;;c;;r&#xA;Definition&#xA;    class IcuDatFileLoaderTest extends LocalizedTestCase&#xA;&#xA;Description&#xA;      requires extension intl;;d0,20;;b0,0;;m">
				<treenode node="testDatEnglishLoad;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\IcuDatFileLoaderTest.php;f11;30;5;42;;;;vpos;;v;;r;;d4,31;;b1,0;;m">
				</treenode>
				<treenode node="testDatFrenchLoad;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\IcuDatFileLoaderTest.php;f11;44;5;53;;;;vpos;;v;;r;;d4,45;;b1,0;;m">
				</treenode>
				<treenode node="testLoadInvalidResource;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\IcuDatFileLoaderTest.php;f11;24;5;28;;;;vpos;;v;;r&#xA;Definition&#xA;    testLoadInvalidResource()&#xA;&#xA;Description&#xA;      expectedException \Symfony\Component\Translation\Exception\InvalidResourceException;;d4,25;;b1,0;;m">
				</treenode>
				<treenode node="testLoadNonExistingResource;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\IcuDatFileLoaderTest.php;f11;58;5;62;;;;vpos;;v;;r&#xA;Definition&#xA;    testLoadNonExistingResource()&#xA;&#xA;Description&#xA;      expectedException \Symfony\Component\Translation\Exception\NotFoundResourceException;;d4,59;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="IcuResFileDumper;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\IcuResFileDumper.php;f0;20;1;105;;;;vpos;;vFileDumper;;c;;r&#xA;Definition&#xA;    class IcuResFileDumper extends FileDumper&#xA;&#xA;Description&#xA;     IcuResDumper generates an ICU ResourceBundle formatted string representation of a message catalogue.;;d0,21;;b0,0;;m">
				<treenode node="formatCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\IcuResFileDumper.php;f11;30;5;82;;;;vpos;;v;;r&#xA;Definition&#xA;    formatCatalogue(MessageCatalogue $messages, $domain, array $options = array())&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,31;;b1,0;;mmessages;;pdomain;;poptions;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\IcuResFileDumper.php;f64;30;71;30;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\IcuResFileDumper.php;f53;30;62;30;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\IcuResFileDumper.php;f79;30;87;30;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getExtension;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\IcuResFileDumper.php;f14;101;5;104;;;;vpos;;v;;r&#xA;Definition&#xA;    getExtension()&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,102;;b2,0;;m">
				</treenode>
				<treenode node="getPosition;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\IcuResFileDumper.php;f12;93;5;96;;;;vpos;;v;;r;;d4,94;;b3,0;;mdata;;p">
					<treenode node="data;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\IcuResFileDumper.php;f33;93;38;93;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="writePadding;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\IcuResFileDumper.php;f12;84;5;91;;;;vpos;;v;;r;;d4,85;;b3,0;;mdata;;p">
					<treenode node="data;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\IcuResFileDumper.php;f34;84;39;84;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="relativePathTemplate;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\IcuResFileDumper.php;f14;25;35;25;;;;vpos;;v;;r&#xA;Description&#xA;     { inheritdoc};;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="IcuResFileDumperTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\IcuResFileDumperTest.php;f0;17;1;28;;;;vpos;;vTestCase;;c;;r;;d0,18;;b0,0;;m">
				<treenode node="testFormatCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\IcuResFileDumperTest.php;f11;19;5;27;;;;vpos;;v;;r;;d4,20;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="IcuResFileLoader;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\IcuResFileLoader.php;f0;23;1;90;;;;vpos;;vLoaderInterface;;c;;r&#xA;Definition&#xA;    class IcuResFileLoader implements LoaderInterface&#xA;&#xA;Description&#xA;     IcuResFileLoader loads translations from a resource bundle.;;d0,24;;b0,0;;m">
				<treenode node="flatten;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\IcuResFileLoader.php;f14;77;5;89;;;;vpos;;varray;;r&#xA;Definition&#xA;    flatten(\ResourceBundle $rb, array &amp;$messages = array(), $path = null)&#xA;&#xA;Description&#xA;     Flattens an ResourceBundle.&#xA;&#xA;Parameters:&#xA;    \ResourceBundle $rb - The ResourceBundle that will be flattened&#xA;    array $messages - Used internally for recursive calls&#xA;    string $path - Current path being parsed, used internally for recursive calls&#xA;&#xA;Return:&#xA;   the flattened ResourceBundle;;d4,78;;b2,0;;m\ResourceBundle $rb;;parray $messages;;pstring $path;;p">
					<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\IcuResFileLoader.php;f59;77;68;77;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\IcuResFileLoader.php;f80;77;85;77;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="rb;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\IcuResFileLoader.php;f47;77;50;77;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="load;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\IcuResFileLoader.php;f11;28;5;59;;;;vpos;;v;;r&#xA;Definition&#xA;    load($resource, $locale, $domain = 'messages')&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,29;;b1,0;;mresource;;plocale;;pdomain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\IcuResFileLoader.php;f45;28;52;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\IcuResFileLoader.php;f36;28;43;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="resource;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\IcuResFileLoader.php;f25;28;34;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="IcuResFileLoaderTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\IcuResFileLoaderTest.php;f0;19;1;50;;;;vpos;;vLocalizedTestCase;;c;;r&#xA;Definition&#xA;    class IcuResFileLoaderTest extends LocalizedTestCase&#xA;&#xA;Description&#xA;      requires extension intl;;d0,20;;b0,0;;m">
				<treenode node="testLoad;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\IcuResFileLoaderTest.php;f11;21;5;31;;;;vpos;;v;;r;;d4,22;;b1,0;;m">
				</treenode>
				<treenode node="testLoadInvalidResource;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\IcuResFileLoaderTest.php;f11;45;5;49;;;;vpos;;v;;r&#xA;Definition&#xA;    testLoadInvalidResource()&#xA;&#xA;Description&#xA;      expectedException \Symfony\Component\Translation\Exception\InvalidResourceException;;d4,46;;b1,0;;m">
				</treenode>
				<treenode node="testLoadNonExistingResource;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\IcuResFileLoaderTest.php;f11;36;5;40;;;;vpos;;v;;r&#xA;Definition&#xA;    testLoadNonExistingResource()&#xA;&#xA;Description&#xA;      expectedException \Symfony\Component\Translation\Exception\NotFoundResourceException;;d4,37;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="IdentityTranslator;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\IdentityTranslator.php;f0;18;1;62;;;;vpos;;vTranslatorInterface;;c;;r&#xA;Definition&#xA;    class IdentityTranslator implements TranslatorInterface&#xA;&#xA;Description&#xA;     IdentityTranslator does not translate anything.;;d0,19;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\IdentityTranslator.php;f11;26;5;29;;;;vpos;;v;;r&#xA;Definition&#xA;    __construct(MessageSelector $selector = null)&#xA;&#xA;Description&#xA;      The message selector for pluralization&#xA;&#xA;Parameters:&#xA;    MessageSelector|null $selector - The message selector for pluralization;;d4,27;;b1,0;;mMessageSelector|null $selector;;p">
					<treenode node="selector;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\IdentityTranslator.php;f48;26;57;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getLocale;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\IdentityTranslator.php;f11;42;5;45;;;;vpos;;v;;r&#xA;Definition&#xA;    getLocale()&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,43;;b1,0;;m">
				</treenode>
				<treenode node="setLocale;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\IdentityTranslator.php;f11;34;5;37;;;;vpos;;v;;r&#xA;Definition&#xA;    setLocale($locale)&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,35;;b1,0;;mlocale;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\IdentityTranslator.php;f30;34;37;34;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="trans;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\IdentityTranslator.php;f11;50;5;53;;;;vpos;;v;;r&#xA;Definition&#xA;    trans($id, array $parameters = array(), $domain = null, $locale = null)&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,51;;b1,0;;mid;;pparameters;;pdomain;;plocale;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\IdentityTranslator.php;f60;50;67;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\IdentityTranslator.php;f26;50;29;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\IdentityTranslator.php;f76;50;83;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\IdentityTranslator.php;f37;50;48;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="transChoice;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\IdentityTranslator.php;f11;58;5;61;;;;vpos;;v;;r&#xA;Definition&#xA;    transChoice($id, $number, array $parameters = array(), $domain = null, $locale = null)&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,59;;b1,0;;mid;;pnumber;;pparameters;;pdomain;;plocale;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\IdentityTranslator.php;f75;58;82;58;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\IdentityTranslator.php;f32;58;35;58;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\IdentityTranslator.php;f91;58;98;58;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="number;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\IdentityTranslator.php;f37;58;44;58;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\IdentityTranslator.php;f52;58;63;58;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\IdentityTranslator.php;f12;21;19;21;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="selector;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\IdentityTranslator.php;f12;20;21;20;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
			</treenode>
			<treenode node="IdentityTranslatorTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\IdentityTranslatorTest.php;f0;17;1;95;;;;vpos;;vTestCase;;c;;r;;d0,18;;b0,0;;m">
				<treenode node="getTransChoiceTests;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\IdentityTranslatorTest.php;f11;82;5;94;;;;vpos;;v;;r;;d4,83;;b1,0;;m">
				</treenode>
				<treenode node="getTransTests;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\IdentityTranslatorTest.php;f11;74;5;80;;;;vpos;;v;;r;;d4,75;;b1,0;;m">
				</treenode>
				<treenode node="testGetLocaleReturnsDefaultLocaleIfNotSet;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\IdentityTranslatorTest.php;f11;60;5;72;;;;vpos;;v;;r;;d4,61;;b1,0;;m">
				</treenode>
				<treenode node="testGetSetLocale;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\IdentityTranslatorTest.php;f11;52;5;58;;;;vpos;;v;;r;;d4,53;;b1,0;;m">
				</treenode>
				<treenode node="testTrans;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\IdentityTranslatorTest.php;f11;22;5;27;;;;vpos;;v;;r&#xA;Definition&#xA;    testTrans($expected, $id, $parameters)&#xA;&#xA;Description&#xA;      dataProvider getTransTests;;d4,23;;b1,0;;mexpected;;pid;;pparameters;;p">
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\IdentityTranslatorTest.php;f30;22;39;22;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\IdentityTranslatorTest.php;f41;22;44;22;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\IdentityTranslatorTest.php;f46;22;57;22;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testTransChoiceWithDefaultLocale;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\IdentityTranslatorTest.php;f11;43;5;50;;;;vpos;;v;;r&#xA;Definition&#xA;    testTransChoiceWithDefaultLocale($expected, $id, $number, $parameters)&#xA;&#xA;Description&#xA;      dataProvider getTransChoiceTests;;d4,44;;b1,0;;mexpected;;pid;;pnumber;;pparameters;;p">
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\IdentityTranslatorTest.php;f53;43;62;43;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\IdentityTranslatorTest.php;f64;43;67;43;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="number;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\IdentityTranslatorTest.php;f69;43;76;43;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\IdentityTranslatorTest.php;f78;43;89;43;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testTransChoiceWithExplicitLocale;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\IdentityTranslatorTest.php;f11;32;5;38;;;;vpos;;v;;r&#xA;Definition&#xA;    testTransChoiceWithExplicitLocale($expected, $id, $number, $parameters)&#xA;&#xA;Description&#xA;      dataProvider getTransChoiceTests;;d4,33;;b1,0;;mexpected;;pid;;pnumber;;pparameters;;p">
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\IdentityTranslatorTest.php;f54;32;63;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\IdentityTranslatorTest.php;f65;32;68;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="number;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\IdentityTranslatorTest.php;f70;32;77;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\IdentityTranslatorTest.php;f79;32;90;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="Inflector;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php;f0;35;1;489;;;;vpos;;v;;r&#xA;Definition&#xA;    class Inflector&#xA;&#xA;Description&#xA;     Doctrine inflector has static methods for inflecting text.;;d0,36;;b0,0;;m">
				<treenode node="camelize;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php;f18;280;49;280;;;;vpos;;v;;r&#xA;Description&#xA;     Camelizes a word. This uses the classify() method and turns the first character to lowercase.;;d-1,-1;;b1,5;;mword;;p">
					<treenode node="word;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php;f43;280;48;280;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="classify;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php;f18;272;49;272;;;;vpos;;v;;r&#xA;Description&#xA;     Converts a word into the format for a Doctrine class name. Converts 'table_name' to 'TableName'.;;d-1,-1;;b1,5;;mword;;p">
					<treenode node="word;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php;f43;272;48;272;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="pluralize;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php;f18;393;50;393;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a word in plural form.&#xA;&#xA;Parameters:&#xA;    string $word - The word in singular form&#xA;&#xA;Return:&#xA;   The word in plural form;;d-1,-1;;b1,5;;mstring $word;;p">
					<treenode node="word;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php;f44;393;49;393;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="reset;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php;f18;319;34;319;;;;vpos;;v;;r&#xA;Description&#xA;     Clears Inflectors inflected value caches, and resets the inflection rules to the initial values.;;d-1,-1;;b1,5;;m">
				</treenode>
				<treenode node="rules;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php;f18;355;84;355;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Adds custom inflection $rules, of either 'plural' or 'singular' $type.&#xA;&#xA;Parameters:&#xA;    string $type - The type of inflection, either 'plural' or 'singular'&#xA;    array|iterable $rules - An array of rules to be added&#xA;    boolean $reset - If true, will unset default inflections for all;;d-1,-1;;b1,5;;mstring $type;;parray|iterable $rules;;pboolean $reset;;p">
					<treenode node="reset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php;f69;355;75;355;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="rules;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php;f56;355;62;355;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php;f40;355;45;355;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="singularize;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php;f18;440;52;440;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a word in singular form.&#xA;&#xA;Parameters:&#xA;    string $word - The word in plural form&#xA;&#xA;Return:&#xA;   The word in singular form;;d-1,-1;;b1,5;;mstring $word;;p">
					<treenode node="word;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php;f46;440;51;440;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="tableize;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php;f18;264;49;264;;;;vpos;;v;;r&#xA;Description&#xA;     Converts a word into the format for a Doctrine table name. Converts 'ModelName' to 'model_name'.;;d-1,-1;;b1,5;;mword;;p">
					<treenode node="word;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php;f43;264;48;264;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="ucwords;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php;f18;310;89;310;;;;vpos;;vstring;;r&#xA;Description&#xA;     Uppercases words with configurable delimeters between words.&#xA;&#xA;Parameters:&#xA;    string $string - The string to operate on&#xA;    string $delimiters - A list of word separators&#xA;&#xA;Return:&#xA;   The string with all delimeter-separated words capitalized;;d-1,-1;;b1,5;;mstring $string;;pstring $delimiters;;p">
					<treenode node="delimiters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php;f58;310;69;310;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="string;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php;f42;310;49;310;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="cache;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php;f19;252;25;252;;;;vposarray;;v;;r;;d-1,-1;;b3,5;;m">
				</treenode>
				<treenode node="delimiters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php;f32;312;43;312;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="initialState;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php;f19;259;32;259;;;;vposarray;;v;;r;;d-1,-1;;b3,5;;m">
				</treenode>
				<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php;f40;327;44;327;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="pattern;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php;f36;357;44;357;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="plural;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php;f19;42;26;42;;;;vposstring;;v;;r;;d-1,-1;;b3,5;;m">
				</treenode>
				<treenode node="regs;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php;f86;412;91;412;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="replacement;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php;f52;424;64;424;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="reset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php;f16;362;22;362;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="rule;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php;f27;357;32;357;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="rules;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php;f17;357;23;357;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="singular;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php;f19;152;28;152;;;;vposstring;;v;;r;;d-1,-1;;b3,5;;m">
				</treenode>
				<treenode node="string;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php;f23;312;30;312;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php;f24;363;29;363;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="uninflected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php;f19;232;31;232;;;;vposarray;;v;;r;;d-1,-1;;b3,5;;m">
				</treenode>
				<treenode node="val;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php;f48;327;52;327;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="word;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php;f67;266;72;266;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="IniFileDumper;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\IniFileDumper.php;f0;20;1;44;;;;vpos;;vFileDumper;;c;;r&#xA;Definition&#xA;    class IniFileDumper extends FileDumper&#xA;&#xA;Description&#xA;     IniFileDumper generates an ini formatted string representation of a message catalogue.;;d0,21;;b0,0;;m">
				<treenode node="formatCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\IniFileDumper.php;f11;25;5;35;;;;vpos;;v;;r&#xA;Definition&#xA;    formatCatalogue(MessageCatalogue $messages, $domain, array $options = array())&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,26;;b1,0;;mmessages;;pdomain;;poptions;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\IniFileDumper.php;f64;25;71;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\IniFileDumper.php;f53;25;62;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\IniFileDumper.php;f79;25;87;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getExtension;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\IniFileDumper.php;f14;40;5;43;;;;vpos;;v;;r&#xA;Definition&#xA;    getExtension()&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,41;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="IniFileDumperTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\IniFileDumperTest.php;f0;17;1;28;;;;vpos;;vTestCase;;c;;r;;d0,18;;b0,0;;m">
				<treenode node="testFormatCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\IniFileDumperTest.php;f11;19;5;27;;;;vpos;;v;;r;;d4,20;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="IniFileLoader;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\IniFileLoader.php;f0;18;1;27;;;;vpos;;vFileLoader;;c;;r&#xA;Definition&#xA;    class IniFileLoader extends FileLoader&#xA;&#xA;Description&#xA;     IniFileLoader loads translations from an ini file.;;d0,19;;b0,0;;m">
				<treenode node="loadResource;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\IniFileLoader.php;f14;23;5;26;;;;vpos;;v;;r&#xA;Definition&#xA;    loadResource($resource)&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,24;;b2,0;;mresource;;p">
					<treenode node="resource;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\IniFileLoader.php;f36;23;45;23;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="IniFileLoaderTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\IniFileLoaderTest.php;f0;17;1;50;;;;vpos;;vTestCase;;c;;r;;d0,18;;b0,0;;m">
				<treenode node="testLoad;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\IniFileLoaderTest.php;f11;19;5;28;;;;vpos;;v;;r;;d4,20;;b1,0;;m">
				</treenode>
				<treenode node="testLoadDoesNothingIfEmpty;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\IniFileLoaderTest.php;f11;30;5;39;;;;vpos;;v;;r;;d4,31;;b1,0;;m">
				</treenode>
				<treenode node="testLoadNonExistingResource;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\IniFileLoaderTest.php;f11;44;5;49;;;;vpos;;v;;r&#xA;Definition&#xA;    testLoadNonExistingResource()&#xA;&#xA;Description&#xA;      expectedException \Symfony\Component\Translation\Exception\NotFoundResourceException;;d4,45;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Input;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Input.php;f0;7;1;32;;;;vpos;;vFacade;;c;;r&#xA;Definition&#xA;    class Input extends Facade&#xA;&#xA;Description&#xA;      see \Illuminate\Http\Request;;d0,8;;b0,0;;m">
				<treenode node="get;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Input.php;f18;18;5;21;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    get($key = null, $default = null)&#xA;&#xA;Description&#xA;     Get an item from the input data.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    mixed $default;;d4,19;;b1,5;;mstring $key;;pmixed $default;;p">
					<treenode node="default;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Input.php;f44;18;52;18;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Input.php;f31;18;35;18;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getFacadeAccessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Input.php;f21;28;5;31;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getFacadeAccessor()&#xA;&#xA;Description&#xA;     Get the registered name of the component.;;d4,29;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="InstallCommand;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\InstallCommand.php;f0;8;1;69;;;;vpos;;vCommand;;c;;r;;d0,9;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\InstallCommand.php;f11;37;5;42;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct(MigrationRepositoryInterface $repository)&#xA;&#xA;Description&#xA;     Create a new migration install command instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Migrations\MigrationRepositoryInterface $repository;;d4,38;;b1,0;;m\Illuminate\Database\Migrations\MigrationRepositoryInterface $repository;;p">
					<treenode node="repository;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\InstallCommand.php;f61;37;72;37;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fire;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\InstallCommand.php;f11;49;5;56;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    fire()&#xA;&#xA;Description&#xA;     Execute the console command.;;d4,50;;b1,0;;m">
				</treenode>
				<treenode node="getOptions;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\InstallCommand.php;f14;63;5;68;;;;vpos;;varray;;r&#xA;Definition&#xA;    getOptions()&#xA;&#xA;Description&#xA;     Get the console command options.;;d4,64;;b2,0;;m">
				</treenode>
				<treenode node="description;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\InstallCommand.php;f14;22;26;22;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\InstallCommand.php;f14;15;19;15;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="repository;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\InstallCommand.php;f14;29;25;29;;;;vpos;;v;;r&#xA;Description&#xA;     The repository instance.;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="Interval;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Interval.php;f0;35;1;108;;;;vpos;;v;;r&#xA;Definition&#xA;    class Interval&#xA;&#xA;Description&#xA;     Tests if a given number belongs to a given math interval.;;d0,36;;b0,0;;m">
				<treenode node="convertNumber;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Interval.php;f19;98;5;107;;;;vpos;;v;;r;;d4,99;;b3,5;;mnumber;;p">
					<treenode node="number;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Interval.php;f42;98;49;98;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getIntervalRegexp;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Interval.php;f18;79;5;96;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getIntervalRegexp()&#xA;&#xA;Description&#xA;     Returns a Regexp that matches valid intervals.&#xA;&#xA;Return:&#xA;   A Regexp (without the delimiters);;d4,80;;b1,5;;m">
				</treenode>
				<treenode node="test;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Interval.php;f18;47;5;72;;;;vpos;;vbool;;r&#xA;Definition&#xA;    test($number, $interval)&#xA;&#xA;Description&#xA;     Tests if the given number is in the math interval.&#xA;&#xA;Parameters:&#xA;    int $number - A number&#xA;    string $interval - An interval;;d4,48;;b1,5;;mint $number;;pstring $interval;;p">
					<treenode node="interval;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Interval.php;f41;47;50;47;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="number;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Interval.php;f32;47;39;47;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="IntervalTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\IntervalTest.php;f0;16;1;48;;;;vpos;;vTestCase;;c;;r;;d0,17;;b0,0;;m">
				<treenode node="getTests;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\IntervalTest.php;f11;34;5;47;;;;vpos;;v;;r;;d4,35;;b1,0;;m">
				</treenode>
				<treenode node="testTest;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\IntervalTest.php;f11;21;5;24;;;;vpos;;v;;r&#xA;Definition&#xA;    testTest($expected, $number, $interval)&#xA;&#xA;Description&#xA;      dataProvider getTests;;d4,22;;b1,0;;mexpected;;pnumber;;pinterval;;p">
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\IntervalTest.php;f29;21;38;21;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="interval;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\IntervalTest.php;f49;21;58;21;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="number;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\IntervalTest.php;f40;21;47;21;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testTestException;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\IntervalTest.php;f11;29;5;32;;;;vpos;;v;;r&#xA;Definition&#xA;    testTestException()&#xA;&#xA;Description&#xA;      expectedException \Symfony\Component\Translation\Exception\InvalidArgumentException;;d4,30;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="InvalidArgumentException;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Exception\InvalidArgumentException.php;f0;18;38;18;;;;vpos;;v;;r&#xA;Description&#xA;     Base InvalidArgumentException for the Translation component.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="InvalidDateException;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Exceptions\InvalidDateException.php;f0;16;1;66;;;;vpos;;vInvalidArgumentException;;c;;r;;d0,17;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Exceptions\InvalidDateException.php;f11;40;5;45;;;;vpos;;v;;r&#xA;Definition&#xA;    __construct($field, $value, $code = 0, Exception $previous = null)&#xA;&#xA;Description&#xA;     Constructor.&#xA;&#xA;Parameters:&#xA;    string $field&#xA;    mixed $value&#xA;    int $code&#xA;    \Exception|null $previous;;d4,41;;b1,0;;mstring $field;;pmixed $value;;pint $code;;p\Exception|null $previous;;p">
					<treenode node="code;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Exceptions\InvalidDateException.php;f48;40;53;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="field;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Exceptions\InvalidDateException.php;f32;40;38;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="previous;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Exceptions\InvalidDateException.php;f69;40;78;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Exceptions\InvalidDateException.php;f40;40;46;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getField;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Exceptions\InvalidDateException.php;f11;52;5;55;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getField()&#xA;&#xA;Description&#xA;     Get the invalid field.;;d4,53;;b1,0;;m">
				</treenode>
				<treenode node="getValue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Exceptions\InvalidDateException.php;f11;62;5;65;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    getValue()&#xA;&#xA;Description&#xA;     Get the invalid value.;;d4,63;;b1,0;;m">
				</treenode>
				<treenode node="field;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Exceptions\InvalidDateException.php;f12;23;18;23;;;;vposstring;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Exceptions\InvalidDateException.php;f12;30;18;30;;;;vposmixed;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
			</treenode>
			<treenode node="InvalidResourceException;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Exception\InvalidResourceException.php;f0;18;38;18;;;;vpos;;v;;r&#xA;Description&#xA;     Thrown when a resource cannot be loaded.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="JoinClause;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f0;4;1;205;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f11;41;5;45;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct($type, $table)&#xA;&#xA;Description&#xA;     Create a new join clause instance.&#xA;&#xA;Parameters:&#xA;    string $type&#xA;    string $table;;d4,42;;b1,0;;mstring $type;;pstring $table;;p">
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f39;41;45;41;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f32;41;37;41;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="on;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f11;57;5;70;;;;vpos;;v;;r&#xA;Definition&#xA;    on($first, $operator, $second, $boolean = 'and', $where = false)&#xA;&#xA;Description&#xA;     Add an &quot;on&quot; clause to the join.&#xA;&#xA;Parameters:&#xA;    string $first&#xA;    string $operator&#xA;    string $second&#xA;    string $boolean&#xA;    bool $where;;d4,58;;b1,0;;mstring $first;;pstring $operator;;pstring $second;;pstring $boolean;;pbool $where;;p">
					<treenode node="boolean;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f51;57;59;57;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="first;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f23;57;29;57;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="operator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f31;57;40;57;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="second;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f42;57;49;57;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="where;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f69;57;75;57;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="orOn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f11;80;5;83;;;;vpos;;v;;r&#xA;Definition&#xA;    orOn($first, $operator, $second)&#xA;&#xA;Description&#xA;     Add an &quot;or on&quot; clause to the join.&#xA;&#xA;Parameters:&#xA;    string $first&#xA;    string $operator&#xA;    string $second;;d4,81;;b1,0;;mstring $first;;pstring $operator;;pstring $second;;p">
					<treenode node="first;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f25;80;31;80;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="operator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f33;80;42;80;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="second;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f44;80;51;80;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="orWhere;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f11;107;5;110;;;;vpos;;v;;r&#xA;Definition&#xA;    orWhere($first, $operator, $second)&#xA;&#xA;Description&#xA;     Add an &quot;or on where&quot; clause to the join.&#xA;&#xA;Parameters:&#xA;    string $first&#xA;    string $operator&#xA;    string $second;;d4,108;;b1,0;;mstring $first;;pstring $operator;;pstring $second;;p">
					<treenode node="first;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f28;107;34;107;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="operator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f36;107;45;107;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="second;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f47;107;54;107;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="orWhereIn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f11;189;5;192;;;;vpos;;v;;r&#xA;Definition&#xA;    orWhereIn($column, array $values)&#xA;&#xA;Description&#xA;     Add an &quot;or on where in (...)&quot; clause to the join.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    array $values;;d4,190;;b1,0;;mstring $column;;parray $values;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f30;189;37;189;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f45;189;52;189;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="orWhereNotIn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f11;201;5;204;;;;vpos;;v;;r&#xA;Definition&#xA;    orWhereNotIn($column, array $values)&#xA;&#xA;Description&#xA;     Add an &quot;or on where not in (...)&quot; clause to the join.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    array $values;;d4,202;;b1,0;;mstring $column;;parray $values;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f33;201;40;201;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f48;201;55;201;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="orWhereNotNull;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f11;153;5;156;;;;vpos;;v;;r&#xA;Definition&#xA;    orWhereNotNull($column)&#xA;&#xA;Description&#xA;     Add an &quot;or on where is not null&quot; clause to the join.&#xA;&#xA;Parameters:&#xA;    string $column;;d4,154;;b1,0;;mstring $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f35;153;42;153;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="orWhereNull;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f11;130;5;133;;;;vpos;;v;;r&#xA;Definition&#xA;    orWhereNull($column)&#xA;&#xA;Description&#xA;     Add an &quot;or on where is null&quot; clause to the join.&#xA;&#xA;Parameters:&#xA;    string $column;;d4,131;;b1,0;;mstring $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f32;130;39;130;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="where;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f11;94;5;97;;;;vpos;;v;;r&#xA;Definition&#xA;    where($first, $operator, $second, $boolean = 'and')&#xA;&#xA;Description&#xA;     Add an &quot;on where&quot; clause to the join.&#xA;&#xA;Parameters:&#xA;    string $first&#xA;    string $operator&#xA;    string $second&#xA;    string $boolean;;d4,95;;b1,0;;mstring $first;;pstring $operator;;pstring $second;;pstring $boolean;;p">
					<treenode node="boolean;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f54;94;62;94;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="first;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f26;94;32;94;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="operator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f34;94;43;94;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="second;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f45;94;52;94;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereIn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f11;165;5;168;;;;vpos;;v;;r&#xA;Definition&#xA;    whereIn($column, array $values)&#xA;&#xA;Description&#xA;     Add an &quot;on where in (...)&quot; clause to the join.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    array $values;;d4,166;;b1,0;;mstring $column;;parray $values;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f28;165;35;165;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f43;165;50;165;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereNotIn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f11;177;5;180;;;;vpos;;v;;r&#xA;Definition&#xA;    whereNotIn($column, array $values)&#xA;&#xA;Description&#xA;     Add an &quot;on where not in (...)&quot; clause to the join.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    array $values;;d4,178;;b1,0;;mstring $column;;parray $values;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f31;177;38;177;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f46;177;53;177;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereNotNull;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f11;142;5;145;;;;vpos;;v;;r&#xA;Definition&#xA;    whereNotNull($column, $boolean = 'and')&#xA;&#xA;Description&#xA;     Add an &quot;on where is not null&quot; clause to the join.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    string $boolean;;d4,143;;b1,0;;mstring $column;;pstring $boolean;;p">
					<treenode node="boolean;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f42;142;50;142;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f33;142;40;142;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereNull;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f11;119;5;122;;;;vpos;;v;;r&#xA;Definition&#xA;    whereNull($column, $boolean = 'and')&#xA;&#xA;Description&#xA;     Add an &quot;on where is null&quot; clause to the join.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    string $boolean;;d4,120;;b1,0;;mstring $column;;pstring $boolean;;p">
					<treenode node="boolean;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f39;119;47;119;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f30;119;37;119;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f11;32;20;32;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="clauses;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f11;25;19;25;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f11;18;17;18;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php;f11;11;16;11;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="JsonFileDumper;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\JsonFileDumper.php;f0;20;1;43;;;;vpos;;vFileDumper;;c;;r&#xA;Definition&#xA;    class JsonFileDumper extends FileDumper&#xA;&#xA;Description&#xA;     JsonFileDumper generates an json formatted string representation of a message catalogue.;;d0,21;;b0,0;;m">
				<treenode node="formatCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\JsonFileDumper.php;f11;25;5;34;;;;vpos;;v;;r&#xA;Definition&#xA;    formatCatalogue(MessageCatalogue $messages, $domain, array $options = array())&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,26;;b1,0;;mmessages;;pdomain;;poptions;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\JsonFileDumper.php;f64;25;71;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\JsonFileDumper.php;f53;25;62;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\JsonFileDumper.php;f79;25;87;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getExtension;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\JsonFileDumper.php;f14;39;5;42;;;;vpos;;v;;r&#xA;Definition&#xA;    getExtension()&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,40;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="JsonFileDumperTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\JsonFileDumperTest.php;f0;17;1;38;;;;vpos;;vTestCase;;c;;r;;d0,18;;b0,0;;m">
				<treenode node="testDumpWithCustomEncoding;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\JsonFileDumperTest.php;f11;29;5;37;;;;vpos;;v;;r;;d4,30;;b1,0;;m">
				</treenode>
				<treenode node="testFormatCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\JsonFileDumperTest.php;f11;19;5;27;;;;vpos;;v;;r;;d4,20;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="JsonFileLoader;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\JsonFileLoader.php;f0;20;1;63;;;;vpos;;vFileLoader;;c;;r&#xA;Definition&#xA;    class JsonFileLoader extends FileLoader&#xA;&#xA;Description&#xA;     JsonFileLoader loads translations from an json file.;;d0,21;;b0,0;;m">
				<treenode node="getJSONErrorMessage;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\JsonFileLoader.php;f12;46;5;62;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getJSONErrorMessage($errorCode)&#xA;&#xA;Description&#xA;     Translates JSON_ERROR_* constant into meaningful message.&#xA;&#xA;Parameters:&#xA;    int $errorCode - Error code returned by json_last_error() call&#xA;&#xA;Return:&#xA;   Message string;;d4,47;;b3,0;;mint $errorCode;;p">
					<treenode node="errorCode;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\JsonFileLoader.php;f41;46;51;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="loadResource;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\JsonFileLoader.php;f14;25;5;37;;;;vpos;;v;;r&#xA;Definition&#xA;    loadResource($resource)&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,26;;b2,0;;mresource;;p">
					<treenode node="resource;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\JsonFileLoader.php;f36;25;45;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="JsonFileLoaderTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\JsonFileLoaderTest.php;f0;17;1;61;;;;vpos;;vTestCase;;c;;r;;d0,18;;b0,0;;m">
				<treenode node="testLoad;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\JsonFileLoaderTest.php;f11;19;5;28;;;;vpos;;v;;r;;d4,20;;b1,0;;m">
				</treenode>
				<treenode node="testLoadDoesNothingIfEmpty;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\JsonFileLoaderTest.php;f11;30;5;39;;;;vpos;;v;;r;;d4,31;;b1,0;;m">
				</treenode>
				<treenode node="testLoadNonExistingResource;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\JsonFileLoaderTest.php;f11;44;5;49;;;;vpos;;v;;r&#xA;Definition&#xA;    testLoadNonExistingResource()&#xA;&#xA;Description&#xA;      expectedException \Symfony\Component\Translation\Exception\NotFoundResourceException;;d4,45;;b1,0;;m">
				</treenode>
				<treenode node="testParseException;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\JsonFileLoaderTest.php;f11;55;5;60;;;;vpos;;v;;r&#xA;Definition&#xA;    testParseException()&#xA;&#xA;Description&#xA;      expectedException           \Symfony\Component\Translation\Exception\InvalidResourceException;;d4,56;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Lang;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Lang.php;f0;7;1;18;;;;vpos;;vFacade;;c;;r&#xA;Definition&#xA;    class Lang extends Facade&#xA;&#xA;Description&#xA;      see \Illuminate\Translation\Translator;;d0,8;;b0,0;;m">
				<treenode node="getFacadeAccessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Lang.php;f21;14;5;17;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getFacadeAccessor()&#xA;&#xA;Description&#xA;     Get the registered name of the component.;;d4,15;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="LocalizedTestCase;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\LocalizedTestCase.php;f9;15;1;23;;;;vpos;;vTestCase;;c;;r;;d0,16;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\LocalizedTestCase.php;f14;17;5;22;;;;vpos;;v;;r;;d4,18;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="Log;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Log.php;f0;7;1;18;;;;vpos;;vFacade;;c;;r&#xA;Definition&#xA;    class Log extends Facade&#xA;&#xA;Description&#xA;      see \Illuminate\Log\Writer;;d0,8;;b0,0;;m">
				<treenode node="getFacadeAccessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Log.php;f21;14;5;17;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getFacadeAccessor()&#xA;&#xA;Description&#xA;     Get the registered name of the component.;;d4,15;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="LoggingTranslator;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\LoggingTranslator.php;f0;19;1;135;;;;vpos;;vTranslatorInterface;;cTranslatorBagInterface;;c;;r&#xA;Definition&#xA;    class LoggingTranslator implements TranslatorInterface, TranslatorBagInterface&#xA;&#xA;Description&#xA;      author Abdellatif Ait boudad &lt;a.aitboudad gmail.com&gt;;;d0,20;;b0,0;;m">
				<treenode node="__call;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\LoggingTranslator.php;f11;105;5;108;;;;vpos;;v;;r&#xA;Definition&#xA;    __call($method, $args)&#xA;&#xA;Description&#xA;     Passes through all unknown calls onto the translator object.;;d4,106;;b1,0;;mmethod;;pargs;;p">
					<treenode node="args;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\LoggingTranslator.php;f36;105;41;105;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="method;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\LoggingTranslator.php;f27;105;34;105;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\LoggingTranslator.php;f11;32;5;40;;;;vpos;;v;;r&#xA;Definition&#xA;    __construct(TranslatorInterface $translator, LoggerInterface $logger)&#xA;&#xA;Description&#xA;      The translator must implement TranslatorBagInterface&#xA;&#xA;Parameters:&#xA;    TranslatorInterface $translator - The translator must implement TranslatorBagInterface&#xA;    LoggerInterface $logger;;d4,33;;b1,0;;mTranslatorInterface $translator;;pLoggerInterface $logger;;p">
					<treenode node="logger;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\LoggingTranslator.php;f81;32;88;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="translator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\LoggingTranslator.php;f52;32;63;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\LoggingTranslator.php;f11;83;5;86;;;;vpos;;v;;r&#xA;Definition&#xA;    getCatalogue($locale = null)&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,84;;b1,0;;mlocale;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\LoggingTranslator.php;f33;83;40;83;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getFallbackLocales;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\LoggingTranslator.php;f11;93;5;100;;;;vpos;;varray;;r&#xA;Definition&#xA;    getFallbackLocales()&#xA;&#xA;Description&#xA;     Gets the fallback locales.&#xA;&#xA;Return:&#xA;   $locales The fallback locales;;d4,94;;b1,0;;m">
				</treenode>
				<treenode node="getLocale;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\LoggingTranslator.php;f11;75;5;78;;;;vpos;;v;;r&#xA;Definition&#xA;    getLocale()&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,76;;b1,0;;m">
				</treenode>
				<treenode node="log;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\LoggingTranslator.php;f12;117;5;134;;;;vpos;;v;;r&#xA;Definition&#xA;    log($id, $domain, $locale)&#xA;&#xA;Description&#xA;     Logs for missing translations.&#xA;&#xA;Parameters:&#xA;    string $id&#xA;    string|null $domain&#xA;    string|null $locale;;d4,118;;b3,0;;mstring $id;;pstring|null $domain;;pstring|null $locale;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\LoggingTranslator.php;f30;117;37;117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\LoggingTranslator.php;f25;117;28;117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\LoggingTranslator.php;f39;117;46;117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setLocale;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\LoggingTranslator.php;f11;67;5;70;;;;vpos;;v;;r&#xA;Definition&#xA;    setLocale($locale)&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,68;;b1,0;;mlocale;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\LoggingTranslator.php;f30;67;37;67;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="trans;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\LoggingTranslator.php;f11;45;5;51;;;;vpos;;v;;r&#xA;Definition&#xA;    trans($id, array $parameters = array(), $domain = null, $locale = null)&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,46;;b1,0;;mid;;pparameters;;pdomain;;plocale;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\LoggingTranslator.php;f60;45;67;45;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\LoggingTranslator.php;f26;45;29;45;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\LoggingTranslator.php;f76;45;83;45;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\LoggingTranslator.php;f37;45;48;45;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="transChoice;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\LoggingTranslator.php;f11;56;5;62;;;;vpos;;v;;r&#xA;Definition&#xA;    transChoice($id, $number, array $parameters = array(), $domain = null, $locale = null)&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,57;;b1,0;;mid;;pnumber;;pparameters;;pdomain;;plocale;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\LoggingTranslator.php;f75;56;82;56;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\LoggingTranslator.php;f32;56;35;56;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\LoggingTranslator.php;f91;56;98;56;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="number;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\LoggingTranslator.php;f37;56;44;56;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\LoggingTranslator.php;f52;56;63;56;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="logger;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\LoggingTranslator.php;f12;26;19;26;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="translator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\LoggingTranslator.php;f12;24;23;24;;;;vposTranslatorInterface;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
			</treenode>
			<treenode node="LoggingTranslatorTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\LoggingTranslatorTest.php;f0;18;1;49;;;;vpos;;vTestCase;;c;;r;;d0,19;;b0,0;;m">
				<treenode node="testTransChoiceFallbackIsLogged;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\LoggingTranslatorTest.php;f11;34;5;48;;;;vpos;;v;;r;;d4,35;;b1,0;;m">
				</treenode>
				<treenode node="testTransWithNoTranslationIsLogged;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\LoggingTranslatorTest.php;f11;20;5;32;;;;vpos;;v;;r;;d4,21;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="LogicException;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Exception\LogicException.php;f0;18;28;18;;;;vpos;;v;;r&#xA;Description&#xA;     Base LogicException for Translation component.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="Mail;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Mail.php;f0;7;1;18;;;;vpos;;vFacade;;c;;r&#xA;Definition&#xA;    class Mail extends Facade&#xA;&#xA;Description&#xA;      see \Illuminate\Mail\Mailer;;d0,8;;b0,0;;m">
				<treenode node="getFacadeAccessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Mail.php;f21;14;5;17;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getFacadeAccessor()&#xA;&#xA;Description&#xA;     Get the registered name of the component.;;d4,15;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="Manager;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Manager.php;f9;7;1;138;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Capsule\Manager.php;f0;12;1;200;;;;vpos;;v;;r;;d0,8;;b0,0;;m">
				<treenode node="__call;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Manager.php;f11;134;5;137;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    __call($method, $parameters)&#xA;&#xA;Description&#xA;     Dynamically call the default driver instance.&#xA;&#xA;Parameters:&#xA;    string $method&#xA;    array $parameters;;d4,135;;b1,0;;mstring $method;;parray $parameters;;p">
					<treenode node="method;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Manager.php;f27;134;34;134;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Manager.php;f36;134;47;134;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__callStatic;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Capsule\Manager.php;f18;196;5;199;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    __callStatic($method, $parameters)&#xA;&#xA;Description&#xA;     Dynamically pass methods to the default connection.&#xA;&#xA;Parameters:&#xA;    string $method&#xA;    array $parameters;;d4,197;;b1,5;;mstring $method;;parray $parameters;;p">
					<treenode node="method;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Capsule\Manager.php;f40;196;47;196;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Capsule\Manager.php;f49;196;60;196;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Manager.php;f11;36;5;39;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Capsule\Manager.php;f11;29;5;39;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct($app)&#xA;&#xA;Description&#xA;     Create a new manager instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Foundation\Application $app;;d4,37;;b1,0;;m\Illuminate\Foundation\Application $app;;p">
					<treenode node="app;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Manager.php;f32;36;36;36;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="container;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Capsule\Manager.php;f42;29;52;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addConnection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Capsule\Manager.php;f11;117;5;124;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    addConnection(array $config, $name = 'default')&#xA;&#xA;Description&#xA;     Register a connection with the manager.&#xA;&#xA;Parameters:&#xA;    array $config&#xA;    string $name;;d4,118;;b1,0;;marray $config;;pstring $name;;p">
					<treenode node="config;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Capsule\Manager.php;f40;117;47;117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Capsule\Manager.php;f49;117;54;117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="bootEloquent;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Capsule\Manager.php;f11;131;5;141;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    bootEloquent()&#xA;&#xA;Description&#xA;     Bootstrap Eloquent so it is ready for usage.;;d4,132;;b1,0;;m">
				</treenode>
				<treenode node="callCustomCreator;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Manager.php;f14;98;5;101;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    callCustomCreator($driver)&#xA;&#xA;Description&#xA;     Call a custom driver creator.&#xA;&#xA;Parameters:&#xA;    string $driver;;d4,99;;b2,0;;mstring $driver;;p">
					<treenode node="driver;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Manager.php;f41;98;48;98;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="connection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Capsule\Manager.php;f18;71;5;74;;;;vpos;;v;;r&#xA;Definition&#xA;    connection($connection = null)&#xA;&#xA;Description&#xA;     Get a connection instance from the global manager.&#xA;&#xA;Parameters:&#xA;    string $connection;;d4,72;;b1,5;;mstring $connection;;p">
					<treenode node="connection;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Capsule\Manager.php;f38;71;49;71;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="createDriver;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Manager.php;f14;76;5;90;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    createDriver($driver)&#xA;&#xA;Description&#xA;     Create a new driver instance.&#xA;&#xA;Parameters:&#xA;    string $driver;;d4,77;;b2,0;;mstring $driver;;p">
					<treenode node="driver;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Manager.php;f36;76;43;76;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="driver;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Manager.php;f11;54;5;66;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    driver($driver = null)&#xA;&#xA;Description&#xA;     Get a driver instance.&#xA;&#xA;Parameters:&#xA;    string $driver;;d4,55;;b1,0;;mstring $driver;;p">
					<treenode node="driver;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Manager.php;f27;54;34;54;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="extend;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Manager.php;f11;110;5;115;;;;vpos;;v;;r&#xA;Definition&#xA;    extend($driver, Closure $callback)&#xA;&#xA;Description&#xA;     Register a custom driver creator Closure.&#xA;&#xA;Parameters:&#xA;    string $driver&#xA;    \Closure $callback;;d4,111;;b1,0;;mstring $driver;;p\Closure $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Manager.php;f44;110;53;110;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="driver;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Manager.php;f27;110;34;110;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getConnection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Capsule\Manager.php;f11;105;5;108;;;;vpos;;v;;r&#xA;Definition&#xA;    getConnection($name = null)&#xA;&#xA;Description&#xA;     Get a registered connection instance.&#xA;&#xA;Parameters:&#xA;    string $name;;d4,106;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Capsule\Manager.php;f34;105;39;105;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getDatabaseManager;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Capsule\Manager.php;f11;161;5;164;;;;vpos;;v;;r&#xA;Definition&#xA;    getDatabaseManager()&#xA;&#xA;Description&#xA;     Get the database manager instance.;;d4,162;;b1,0;;m">
				</treenode>
				<treenode node="getDefaultDriver;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Manager.php;f20;46;47;46;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the default driver name.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="getDrivers;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Manager.php;f11;122;5;125;;;;vpos;;varray;;r&#xA;Definition&#xA;    getDrivers()&#xA;&#xA;Description&#xA;     Get all of the created &quot;drivers&quot;.;;d4,123;;b1,0;;m">
				</treenode>
				<treenode node="getEventDispatcher;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Capsule\Manager.php;f11;171;5;176;;;;vpos;;v;;r&#xA;Definition&#xA;    getEventDispatcher()&#xA;&#xA;Description&#xA;     Get the current event dispatcher instance.;;d4,172;;b1,0;;m">
				</treenode>
				<treenode node="schema;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Capsule\Manager.php;f18;94;5;97;;;;vpos;;v;;r&#xA;Definition&#xA;    schema($connection = null)&#xA;&#xA;Description&#xA;     Get a schema builder instance.&#xA;&#xA;Parameters:&#xA;    string $connection;;d4,95;;b1,5;;mstring $connection;;p">
					<treenode node="connection;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Capsule\Manager.php;f34;94;45;94;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setEventDispatcher;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Capsule\Manager.php;f11;184;5;187;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setEventDispatcher(Dispatcher $dispatcher)&#xA;&#xA;Description&#xA;     Set the event dispatcher instance to be used by connections.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Contracts\Events\Dispatcher $dispatcher;;d4,185;;b1,0;;m\Illuminate\Contracts\Events\Dispatcher $dispatcher;;p">
					<treenode node="dispatcher;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Capsule\Manager.php;f50;184;61;184;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setFetchMode;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Capsule\Manager.php;f11;149;5;154;;;;vpos;;v;;r&#xA;Definition&#xA;    setFetchMode($fetchMode)&#xA;&#xA;Description&#xA;     Set the fetch mode for the database connections.&#xA;&#xA;Parameters:&#xA;    int $fetchMode;;d4,150;;b1,0;;mint $fetchMode;;p">
					<treenode node="fetchMode;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Capsule\Manager.php;f33;149;43;149;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setupDefaultConfiguration;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Capsule\Manager.php;f14;46;5;51;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setupDefaultConfiguration()&#xA;&#xA;Description&#xA;     Setup the default database configuration options.;;d4,47;;b2,0;;m">
				</treenode>
				<treenode node="setupManager;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Capsule\Manager.php;f14;58;5;63;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setupManager()&#xA;&#xA;Description&#xA;     Build the database manager instance.;;d4,59;;b2,0;;m">
				</treenode>
				<treenode node="table;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Capsule\Manager.php;f18;83;5;86;;;;vpos;;v;;r&#xA;Definition&#xA;    table($table, $connection = null)&#xA;&#xA;Description&#xA;     Get a fluent query builder instance.&#xA;&#xA;Parameters:&#xA;    string $table&#xA;    string $connection;;d4,84;;b1,5;;mstring $table;;pstring $connection;;p">
					<treenode node="connection;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Capsule\Manager.php;f41;83;52;83;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Capsule\Manager.php;f33;83;39;83;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="app;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Manager.php;f14;14;18;14;;;;vpos;;v;;r&#xA;Description&#xA;     The application instance.;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="customCreators;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Manager.php;f14;21;29;21;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="drivers;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Manager.php;f14;28;22;28;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="manager;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Capsule\Manager.php;f14;21;22;21;;;;vpos;;v;;r&#xA;Description&#xA;     The database manager instance.;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="MassAssignmentException;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\MassAssignmentException.php;f0;6;1;8;;;;vpos;;vRuntimeException;;c;;r;;d0,7;;b0,0;;m">
			</treenode>
			<treenode node="Mbstring;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f6;66;1;790;;;;vpos;;v;;r&#xA;Definition&#xA;    class Mbstring&#xA;&#xA;Description&#xA;     Partial mbstring implementation in PHP, iconv based, UTF-8 centric.;;d0,67;;b0,0;;m">
				<treenode node="MB_CASE_FOLD;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f9;68;22;68;;;;vpos;;v;;rarray('ASCII', 'UTF-8');;d-1,-1;;b0,0;;m">
					<treenode node="PHP_INT_MAX;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f24;68;36;68;;;;vpos;;v;;rPHP_INT_MAX;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getData;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f19;764;5;771;;;;vpos;;v;;r;;d4,765;;b3,5;;mfile;;p">
					<treenode node="file;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f36;764;41;764;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getEncoding;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f19;773;5;789;;;;vpos;;v;;r;;d4,774;;b3,5;;mencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f40;773;49;773;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getSubpart;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f19;717;5;727;;;;vpos;;v;;r;;d4,718;;b3,5;;mpos;;ppart;;phaystack;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f63;717;72;717;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="haystack;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f52;717;61;717;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="part;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f45;717;50;717;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="pos;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f39;717;43;717;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="html_encoding_callback;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f19;729;5;752;;;;vpos;;v;;r;;d4,730;;b3,5;;mm;;p">
					<treenode node="m;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f57;729;59;729;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mb_check_encoding;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;389;5;399;;;;vpos;;v;;r;;d4,390;;b1,5;;mvar;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f58;389;67;389;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="var;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f45;389;49;389;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mb_chr;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;678;5;695;;;;vpos;;v;;r;;d4,679;;b1,5;;mcode;;pencoding;;p">
					<treenode node="code;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f34;678;39;678;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f41;678;50;678;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mb_convert_case;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;264;5;337;;;;vpos;;v;;r;;d4,265;;b1,5;;ms;;pmode;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f54;264;63;264;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="mode;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f47;264;52;264;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="s;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f43;264;45;264;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mb_convert_encoding;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;78;5;114;;;;vpos;;v;;r;;d4,79;;b1,5;;ms;;ptoEncoding;;pfromEncoding;;p">
					<treenode node="fromEncoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f64;78;77;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="s;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f47;78;49;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="toEncoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f51;78;62;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mb_convert_variables;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;116;5;128;;;;vpos;;v;;r;;d4,117;;b1,5;;mtoEncoding;;pfromEncoding;;pa;;pb;;pc;;pd;;pe;;pf;;p">
					<treenode node="a;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f77;116;79;116;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="b;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f89;116;91;116;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="c;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f101;116;103;116;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="d;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f113;116;115;116;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="e;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f125;116;127;116;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="f;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f137;116;139;116;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fromEncoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f61;116;74;116;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="toEncoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f48;116;59;116;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mb_decode_mimeheader;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;130;5;133;;;;vpos;;v;;r;;d4,131;;b1,5;;ms;;p">
					<treenode node="s;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f48;130;50;130;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mb_decode_numericentity;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;140;5;195;;;;vpos;;v;;r;;d4,141;;b1,5;;ms;;pconvmap;;pencoding;;p">
					<treenode node="convmap;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f55;140;63;140;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f65;140;74;140;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="s;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f51;140;53;140;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mb_detect_encoding;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;401;5;435;;;;vpos;;v;;r;;d4,402;;b1,5;;mstr;;pencodingList;;pstrict;;p">
					<treenode node="encodingList;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f52;401;65;401;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f46;401;50;401;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="strict;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f74;401;81;401;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mb_detect_order;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;437;5;463;;;;vpos;;v;;r;;d4,438;;b1,5;;mencodingList;;p">
					<treenode node="encodingList;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f43;437;56;437;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mb_encode_mimeheader;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;135;5;138;;;;vpos;;v;;r;;d4,136;;b1,5;;ms;;pcharset;;ptransferEncoding;;plinefeed;;pindent;;p">
					<treenode node="charset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f52;135;60;135;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="indent;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f113;135;120;135;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="linefeed;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f95;135;104;135;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="s;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f48;135;50;135;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="transferEncoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f69;135;86;135;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mb_encode_numericentity;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;197;5;262;;;;vpos;;v;;r;;d4,198;;b1,5;;ms;;pconvmap;;pencoding;;pis_hex;;p">
					<treenode node="convmap;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f55;197;63;197;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f65;197;74;197;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="is_hex;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f83;197;90;197;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="s;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f51;197;53;197;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mb_encoding_aliases;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;378;5;387;;;;vpos;;v;;r;;d4,379;;b1,5;;mencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f47;378;56;378;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mb_get_info;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;616;5;643;;;;vpos;;v;;r;;d4,617;;b1,5;;mtype;;p">
					<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f39;616;44;616;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mb_http_input;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;645;5;648;;;;vpos;;v;;r;;d4,646;;b1,5;;mtype;;p">
					<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f41;645;46;645;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mb_http_output;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;650;5;653;;;;vpos;;v;;r;;d4,651;;b1,5;;mencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f42;650;51;650;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mb_internal_encoding;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;339;5;354;;;;vpos;;v;;r;;d4,340;;b1,5;;mencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f48;339;57;339;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mb_language;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;356;5;371;;;;vpos;;v;;r;;d4,357;;b1,5;;mlang;;p">
					<treenode node="lang;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f39;356;44;356;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mb_list_encodings;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;373;5;376;;;;vpos;;v;;r;;d4,374;;b1,5;;m">
				</treenode>
				<treenode node="mb_ord;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;697;5;715;;;;vpos;;v;;r;;d4,698;;b1,5;;ms;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f38;697;47;697;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="s;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f34;697;36;697;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mb_output_handler;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;673;5;676;;;;vpos;;v;;r;;d4,674;;b1,5;;mcontents;;pstatus;;p">
					<treenode node="contents;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f45;673;54;673;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="status;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f56;673;63;673;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mb_stripos;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;560;5;566;;;;vpos;;v;;r;;d4,561;;b1,5;;mhaystack;;pneedle;;poffset;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f71;560;80;560;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="haystack;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f38;560;47;560;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="needle;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f49;560;56;560;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f58;560;65;560;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mb_stristr;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;568;5;573;;;;vpos;;v;;r;;d4,569;;b1,5;;mhaystack;;pneedle;;ppart;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f73;568;82;568;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="haystack;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f38;568;47;568;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="needle;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f49;568;56;568;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="part;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f58;568;63;568;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mb_strlen;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;465;5;473;;;;vpos;;v;;r;;d4,466;;b1,5;;ms;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f41;465;50;465;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="s;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f37;465;39;465;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mb_strpos;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;475;5;490;;;;vpos;;v;;r;;d4,476;;b1,5;;mhaystack;;pneedle;;poffset;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f70;475;79;475;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="haystack;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f37;475;46;475;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="needle;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f48;475;55;475;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f57;475;64;475;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mb_strrchr;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;575;5;585;;;;vpos;;v;;r;;d4,576;;b1,5;;mhaystack;;pneedle;;ppart;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f73;575;82;575;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="haystack;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f38;575;47;575;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="needle;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f49;575;56;575;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="part;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f58;575;63;575;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mb_strrichr;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;587;5;593;;;;vpos;;v;;r;;d4,588;;b1,5;;mhaystack;;pneedle;;ppart;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f74;587;83;587;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="haystack;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f39;587;48;587;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="needle;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f50;587;57;587;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="part;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f59;587;64;587;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mb_strripos;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;595;5;601;;;;vpos;;v;;r;;d4,596;;b1,5;;mhaystack;;pneedle;;poffset;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f72;595;81;595;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="haystack;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f39;595;48;595;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="needle;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f50;595;57;595;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f59;595;66;595;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mb_strrpos;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;492;5;513;;;;vpos;;v;;r;;d4,493;;b1,5;;mhaystack;;pneedle;;poffset;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f71;492;80;492;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="haystack;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f38;492;47;492;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="needle;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f49;492;56;492;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f58;492;65;492;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mb_strstr;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;603;5;614;;;;vpos;;v;;r;;d4,604;;b1,5;;mhaystack;;pneedle;;ppart;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f72;603;81;603;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="haystack;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f37;603;46;603;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="needle;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f48;603;55;603;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="part;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f57;603;62;603;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mb_strtolower;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;515;5;518;;;;vpos;;v;;r;;d4,516;;b1,5;;ms;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f45;515;54;515;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="s;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f41;515;43;515;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mb_strtoupper;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;520;5;523;;;;vpos;;v;;r;;d4,521;;b1,5;;ms;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f45;520;54;520;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="s;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f41;520;43;520;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mb_strwidth;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;655;5;666;;;;vpos;;v;;r;;d4,656;;b1,5;;ms;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f43;655;52;655;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="s;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f39;655;41;655;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mb_substitute_character;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;525;5;532;;;;vpos;;v;;r;;d4,526;;b1,5;;mc;;p">
					<treenode node="c;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f51;525;53;525;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mb_substr;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;534;5;558;;;;vpos;;v;;r;;d4,535;;b1,5;;ms;;pstart;;plength;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f65;534;74;534;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f49;534;56;534;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="s;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f37;534;39;534;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="start;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f41;534;47;534;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mb_substr_count;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;668;5;671;;;;vpos;;v;;r;;d4,669;;b1,5;;mhaystack;;pneedle;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f63;668;72;668;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="haystack;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f43;668;52;668;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="needle;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f54;668;61;668;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="title_case_lower;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f19;754;5;757;;;;vpos;;v;;r;;d4,755;;b3,5;;ms;;p">
					<treenode node="s;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f51;754;53;754;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="title_case_upper;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f19;759;5;762;;;;vpos;;v;;r;;d4,760;;b3,5;;ms;;p">
					<treenode node="s;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f51;759;53;759;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="caseFold;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f19;73;28;73;;;;vpos;;v;;r;;d-1,-1;;b3,5;;m">
				</treenode>
				<treenode node="internalEncoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f19;72;36;72;;;;vpos;;v;;r;;d-1,-1;;b3,5;;m">
				</treenode>
				<treenode node="language;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php;f19;71;28;71;;;;vpos;;v;;r;;d-1,-1;;b3,5;;m">
				</treenode>
			</treenode>
			<treenode node="MergeOperation;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\MergeOperation.php;f0;22;1;54;;;;vpos;;vAbstractOperation;;c;;r&#xA;Definition&#xA;    class MergeOperation extends AbstractOperation&#xA;&#xA;Description&#xA;     Merge operation between two catalogues as follows: all = source ∪ target = {x: x ∈ source ∨ x ∈ target} new = all ∖ source = {x: x ∈ target ∧ x ∉ source} obsolete = source ∖ all = {x: x ∈ source ∧ x ∉ source ∧ x ∉ target} = ∅ Basically, the result contains messages from both catalogues.;;d0,23;;b0,0;;m">
				<treenode node="processDomain;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\MergeOperation.php;f14;27;5;53;;;;vpos;;v;;r&#xA;Definition&#xA;    processDomain($domain)&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,28;;b2,0;;mdomain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\MergeOperation.php;f37;27;44;27;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="MergeOperationTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Catalogue\MergeOperationTest.php;f0;17;1;82;;;;vpos;;vAbstractOperationTest;;c;;r;;d0,18;;b0,0;;m">
				<treenode node="createOperation;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Catalogue\MergeOperationTest.php;f14;78;5;81;;;;vpos;;v;;r;;d4,79;;b2,0;;msource;;ptarget;;p">
					<treenode node="source;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Catalogue\MergeOperationTest.php;f65;78;72;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="target;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Catalogue\MergeOperationTest.php;f100;78;107;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testGetMessagesFromSingleDomain;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Catalogue\MergeOperationTest.php;f11;19;5;40;;;;vpos;;v;;r;;d4,20;;b1,0;;m">
				</treenode>
				<treenode node="testGetResultFromSingleDomain;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Catalogue\MergeOperationTest.php;f11;42;5;53;;;;vpos;;v;;r;;d4,43;;b1,0;;m">
				</treenode>
				<treenode node="testGetResultWithMetadata;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Catalogue\MergeOperationTest.php;f11;55;5;76;;;;vpos;;v;;r;;d4,56;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MessageBag;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f0;11;1;308;;;;vpos;;vArrayable;;cCountable;;cJsonable;;cJsonSerializable;;cMessageBagContract;;cMessageProvider;;c;;r;;d0,12;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f11;33;5;38;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct(array $messages = [])&#xA;&#xA;Description&#xA;     Create a new message bag instance.&#xA;&#xA;Parameters:&#xA;    array $messages;;d4,34;;b1,0;;marray $messages;;p">
					<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f38;33;47;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__toString;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f11;304;5;307;;;;vpos;;vstring;;r&#xA;Definition&#xA;    __toString()&#xA;&#xA;Description&#xA;     Convert the message bag to its string representation.;;d4,305;;b1,0;;m">
				</treenode>
				<treenode node="add;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f11;57;5;64;;;;vpos;;v;;r&#xA;Definition&#xA;    add($key, $message)&#xA;&#xA;Description&#xA;     Add a message to the bag.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    string $message;;d4,58;;b1,0;;mstring $key;;pstring $message;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f24;57;28;57;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f30;57;38;57;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="all;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f11;147;5;158;;;;vpos;;varray;;r&#xA;Definition&#xA;    all($format = null)&#xA;&#xA;Description&#xA;     Get all of the messages for every key in the bag.&#xA;&#xA;Parameters:&#xA;    string $format;;d4,148;;b1,0;;mstring $format;;p">
					<treenode node="format;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f24;147;31;147;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="any;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f11;253;5;256;;;;vpos;;vbool;;r&#xA;Definition&#xA;    any()&#xA;&#xA;Description&#xA;     Determine if the message bag has any messages.;;d4,254;;b1,0;;m">
				</treenode>
				<treenode node="checkFormat;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f14;190;5;193;;;;vpos;;vstring;;r&#xA;Definition&#xA;    checkFormat($format)&#xA;&#xA;Description&#xA;     Get the appropriate format based on the given format.&#xA;&#xA;Parameters:&#xA;    string $format;;d4,191;;b2,0;;mstring $format;;p">
					<treenode node="format;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f35;190;42;190;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="count;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f11;263;5;266;;;;vpos;;vint;;r&#xA;Definition&#xA;    count()&#xA;&#xA;Description&#xA;     Get the number of messages in the container.;;d4,264;;b1,0;;m">
				</treenode>
				<treenode node="first;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f11;115;5;120;;;;vpos;;vstring;;r&#xA;Definition&#xA;    first($key = null, $format = null)&#xA;&#xA;Description&#xA;     Get the first message from the bag for a given key.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    string $format;;d4,116;;b1,0;;mstring $key;;pstring $format;;p">
					<treenode node="format;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f39;115;46;115;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f26;115;30;115;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="get;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f11;129;5;139;;;;vpos;;varray;;r&#xA;Definition&#xA;    get($key, $format = null)&#xA;&#xA;Description&#xA;     Get all of the messages from the bag for a given key.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    string $format;;d4,130;;b1,0;;mstring $key;;pstring $format;;p">
					<treenode node="format;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f30;129;37;129;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f24;129;28;129;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getFormat;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f11;220;5;223;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getFormat()&#xA;&#xA;Description&#xA;     Get the default message format.;;d4,221;;b1,0;;m">
				</treenode>
				<treenode node="getMessageBag;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f11;210;5;213;;;;vpos;;v;;r&#xA;Definition&#xA;    getMessageBag()&#xA;&#xA;Description&#xA;     Get the messages for the instance.;;d4,211;;b1,0;;m">
				</treenode>
				<treenode node="getMessages;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f11;200;5;203;;;;vpos;;varray;;r&#xA;Definition&#xA;    getMessages()&#xA;&#xA;Description&#xA;     Get the raw messages in the container.;;d4,201;;b1,0;;m">
				</treenode>
				<treenode node="has;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f11;103;5;106;;;;vpos;;vbool;;r&#xA;Definition&#xA;    has($key = null)&#xA;&#xA;Description&#xA;     Determine if messages exist for a given key.&#xA;&#xA;Parameters:&#xA;    string $key;;d4,104;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f24;103;28;103;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isEmpty;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f11;243;5;246;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isEmpty()&#xA;&#xA;Description&#xA;     Determine if the message bag has any messages.;;d4,244;;b1,0;;m">
				</treenode>
				<treenode node="isUnique;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f14;90;5;95;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isUnique($key, $message)&#xA;&#xA;Description&#xA;     Determine if a key and message combination already exists.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    string $message;;d4,91;;b2,0;;mstring $key;;pstring $message;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f32;90;36;90;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f38;90;46;90;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="jsonSerialize;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f11;283;5;286;;;;vpos;;varray;;r&#xA;Definition&#xA;    jsonSerialize()&#xA;&#xA;Description&#xA;     Convert the object into something JSON serializable.;;d4,284;;b1,0;;m">
				</treenode>
				<treenode node="keys;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f11;45;5;48;;;;vpos;;varray;;r&#xA;Definition&#xA;    keys()&#xA;&#xA;Description&#xA;     Get the keys present in the message bag.;;d4,46;;b1,0;;m">
				</treenode>
				<treenode node="merge;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f11;72;5;81;;;;vpos;;v;;r&#xA;Definition&#xA;    merge($messages)&#xA;&#xA;Description&#xA;     Merge a new array of messages into the bag.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Contracts\Support\MessageProvider|array $messages;;d4,73;;b1,0;;m\Illuminate\Contracts\Support\MessageProvider|array $messages;;p">
					<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f26;72;35;72;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setFormat;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f11;231;5;236;;;;vpos;;v;;r&#xA;Definition&#xA;    setFormat($format = ':message')&#xA;&#xA;Description&#xA;     Set the default message format.&#xA;&#xA;Parameters:&#xA;    string $format;;d4,232;;b1,0;;mstring $format;;p">
					<treenode node="format;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f30;231;37;231;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="toArray;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f11;273;5;276;;;;vpos;;varray;;r&#xA;Definition&#xA;    toArray()&#xA;&#xA;Description&#xA;     Get the instance as an array.;;d4,274;;b1,0;;m">
				</treenode>
				<treenode node="toJson;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f11;294;5;297;;;;vpos;;vstring;;r&#xA;Definition&#xA;    toJson($options = 0)&#xA;&#xA;Description&#xA;     Convert the object to its JSON representation.&#xA;&#xA;Parameters:&#xA;    int $options;;d4,295;;b1,0;;mint $options;;p">
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f27;294;35;294;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="transform;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f14;168;5;182;;;;vpos;;varray;;r&#xA;Definition&#xA;    transform($messages, $format, $messageKey)&#xA;&#xA;Description&#xA;     Format an array of messages.&#xA;&#xA;Parameters:&#xA;    array $messages&#xA;    string $format&#xA;    string $messageKey;;d4,169;;b2,0;;marray $messages;;pstring $format;;pstring $messageKey;;p">
					<treenode node="format;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f44;168;51;168;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="messageKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f53;168;64;168;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f33;168;42;168;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="format;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f14;25;21;25;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php;f14;18;23;18;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="MessageCatalogue;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f0;19;1;270;;;;vpos;;vMessageCatalogueInterface;;cMetadataAwareInterface;;c;;r&#xA;Definition&#xA;    class MessageCatalogue implements MessageCatalogueInterface, MetadataAwareInterface&#xA;&#xA;Description&#xA;      author Fabien Potencier &lt;fabien symfony.com&gt;;;d0,20;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f11;32;5;36;;;;vpos;;v;;r&#xA;Definition&#xA;    __construct(?string $locale, array $messages = array())&#xA;&#xA;Description&#xA;      The locale&#xA;&#xA;Parameters:&#xA;    string $locale - The locale&#xA;    array $messages - An array of messages classified by domain;;d4,33;;b1,0;;mstring $locale;;parray $messages;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f40;32;47;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f55;32;64;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="add;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f11;127;5;134;;;;vpos;;v;;r&#xA;Definition&#xA;    add($messages, $domain = 'messages')&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,128;;b1,0;;mmessages;;pdomain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f35;127;42;127;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f24;127;33;127;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f11;139;5;157;;;;vpos;;v;;r&#xA;Definition&#xA;    addCatalogue(MessageCatalogueInterface $catalogue)&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,140;;b1,0;;mcatalogue;;p">
					<treenode node="catalogue;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f59;139;69;139;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addFallbackCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f11;162;5;189;;;;vpos;;v;;r&#xA;Definition&#xA;    addFallbackCatalogue(MessageCatalogueInterface $catalogue)&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,163;;b1,0;;mcatalogue;;p">
					<treenode node="catalogue;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f67;162;77;162;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addMetadata;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f12;262;5;269;;;;vpos;;v;;r&#xA;Definition&#xA;    addMetadata(array $values)&#xA;&#xA;Description&#xA;     Adds current values with the new values.&#xA;&#xA;Parameters:&#xA;    array $values - Values to add;;d4,263;;b3,0;;marray $values;;p">
					<treenode node="values;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f39;262;46;262;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addResource;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f11;210;5;213;;;;vpos;;v;;r&#xA;Definition&#xA;    addResource(ResourceInterface $resource)&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,211;;b1,0;;mresource;;p">
					<treenode node="resource;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f50;210;59;210;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="all;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f11;57;5;64;;;;vpos;;v;;r&#xA;Definition&#xA;    all($domain = null)&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,58;;b1,0;;mdomain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f24;57;31;57;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="defines;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f11;93;5;96;;;;vpos;;v;;r&#xA;Definition&#xA;    defines($id, $domain = 'messages')&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,94;;b1,0;;mid;;pdomain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f33;93;40;93;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f28;93;31;93;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="deleteMetadata;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f11;246;5;255;;;;vpos;;v;;r&#xA;Definition&#xA;    deleteMetadata($key = '', $domain = 'messages')&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,247;;b1,0;;mkey;;pdomain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f46;246;53;246;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f35;246;39;246;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="get;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f11;101;5;112;;;;vpos;;v;;r&#xA;Definition&#xA;    get($id, $domain = 'messages')&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,102;;b1,0;;mid;;pdomain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f29;101;36;101;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f24;101;27;101;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getDomains;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f11;49;5;52;;;;vpos;;v;;r&#xA;Definition&#xA;    getDomains()&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,50;;b1,0;;m">
				</treenode>
				<treenode node="getFallbackCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f11;194;5;197;;;;vpos;;v;;r&#xA;Definition&#xA;    getFallbackCatalogue()&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,195;;b1,0;;m">
				</treenode>
				<treenode node="getLocale;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f11;41;5;44;;;;vpos;;v;;r&#xA;Definition&#xA;    getLocale()&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,42;;b1,0;;m">
				</treenode>
				<treenode node="getMetadata;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f11;218;5;233;;;;vpos;;v;;r&#xA;Definition&#xA;    getMetadata($key = '', $domain = 'messages')&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,219;;b1,0;;mkey;;pdomain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f43;218;50;218;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f32;218;36;218;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getResources;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f11;202;5;205;;;;vpos;;v;;r&#xA;Definition&#xA;    getResources()&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,203;;b1,0;;m">
				</treenode>
				<treenode node="has;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f11;77;5;88;;;;vpos;;v;;r&#xA;Definition&#xA;    has($id, $domain = 'messages')&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,78;;b1,0;;mid;;pdomain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f29;77;36;77;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f24;77;27;77;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="replace;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f11;117;5;122;;;;vpos;;v;;r&#xA;Definition&#xA;    replace($messages, $domain = 'messages')&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,118;;b1,0;;mmessages;;pdomain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f39;117;46;117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f28;117;37;117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="set;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f11;69;5;72;;;;vpos;;v;;r&#xA;Definition&#xA;    set($id, $translation, $domain = 'messages')&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,70;;b1,0;;mid;;ptranslation;;pdomain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f43;69;50;69;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f24;69;27;69;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="translation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f29;69;41;69;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setMetadata;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f11;238;5;241;;;;vpos;;v;;r&#xA;Definition&#xA;    setMetadata($key, $value, $domain = 'messages')&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,239;;b1,0;;mkey;;pvalue;;pdomain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f46;238;53;238;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f32;238;36;238;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f38;238;44;238;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fallbackCatalogue;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f12;25;30;25;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f12;24;19;24;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f12;21;21;21;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="metadata;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f12;22;21;22;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="parent;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f12;26;19;26;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="resources;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php;f12;23;22;23;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
			</treenode>
			<treenode node="MessageCatalogueTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\MessageCatalogueTest.php;f0;16;1;221;;;;vpos;;vTestCase;;c;;r;;d0,17;;b0,0;;m">
				<treenode node="testAdd;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\MessageCatalogueTest.php;f11;59;5;73;;;;vpos;;v;;r;;d4,60;;b1,0;;m">
				</treenode>
				<treenode node="testAddCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\MessageCatalogueTest.php;f11;83;5;103;;;;vpos;;v;;r;;d4,84;;b1,0;;m">
				</treenode>
				<treenode node="testAddCatalogueWhenLocaleIsNotTheSameAsTheCurrentOne;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\MessageCatalogueTest.php;f11;163;5;167;;;;vpos;;v;;r&#xA;Definition&#xA;    testAddCatalogueWhenLocaleIsNotTheSameAsTheCurrentOne()&#xA;&#xA;Description&#xA;      expectedException \Symfony\Component\Translation\Exception\LogicException;;d4,164;;b1,0;;m">
				</treenode>
				<treenode node="testAddFallbackCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\MessageCatalogueTest.php;f11;105;5;132;;;;vpos;;v;;r;;d4,106;;b1,0;;m">
				</treenode>
				<treenode node="testAddFallbackCatalogueWithFallbackCircularReference;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\MessageCatalogueTest.php;f11;149;5;158;;;;vpos;;v;;r&#xA;Definition&#xA;    testAddFallbackCatalogueWithFallbackCircularReference()&#xA;&#xA;Description&#xA;      expectedException \Symfony\Component\Translation\Exception\LogicException;;d4,150;;b1,0;;m">
				</treenode>
				<treenode node="testAddFallbackCatalogueWithParentCircularReference;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\MessageCatalogueTest.php;f11;137;5;144;;;;vpos;;v;;r&#xA;Definition&#xA;    testAddFallbackCatalogueWithParentCircularReference()&#xA;&#xA;Description&#xA;      expectedException \Symfony\Component\Translation\Exception\LogicException;;d4,138;;b1,0;;m">
				</treenode>
				<treenode node="testAll;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\MessageCatalogueTest.php;f11;32;5;39;;;;vpos;;v;;r;;d4,33;;b1,0;;m">
				</treenode>
				<treenode node="testGetAddResource;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\MessageCatalogueTest.php;f11;169;5;181;;;;vpos;;v;;r;;d4,170;;b1,0;;m">
				</treenode>
				<treenode node="testGetDomains;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\MessageCatalogueTest.php;f11;25;5;30;;;;vpos;;v;;r;;d4,26;;b1,0;;m">
				</treenode>
				<treenode node="testGetLocale;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\MessageCatalogueTest.php;f11;18;5;23;;;;vpos;;v;;r;;d4,19;;b1,0;;m">
				</treenode>
				<treenode node="testGetSet;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\MessageCatalogueTest.php;f11;50;5;57;;;;vpos;;v;;r;;d4,51;;b1,0;;m">
				</treenode>
				<treenode node="testHas;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\MessageCatalogueTest.php;f11;41;5;48;;;;vpos;;v;;r;;d4,42;;b1,0;;m">
				</treenode>
				<treenode node="testMetadataDelete;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\MessageCatalogueTest.php;f11;183;5;190;;;;vpos;;v;;r;;d4,184;;b1,0;;m">
				</treenode>
				<treenode node="testMetadataMerge;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\MessageCatalogueTest.php;f11;208;5;220;;;;vpos;;v;;r;;d4,209;;b1,0;;m">
				</treenode>
				<treenode node="testMetadataSetGetDelete;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\MessageCatalogueTest.php;f11;192;5;206;;;;vpos;;v;;r;;d4,193;;b1,0;;m">
				</treenode>
				<treenode node="testReplace;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\MessageCatalogueTest.php;f11;75;5;81;;;;vpos;;v;;r;;d4,76;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MessageFormatter;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Formatter\MessageFormatter.php;f0;18;1;47;;;;vpos;;vMessageFormatterInterface;;cChoiceMessageFormatterInterface;;c;;r&#xA;Definition&#xA;    class MessageFormatter implements MessageFormatterInterface, ChoiceMessageFormatterInterface&#xA;&#xA;Description&#xA;      author Abdellatif Ait boudad &lt;a.aitboudad gmail.com&gt;;;d0,19;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Formatter\MessageFormatter.php;f11;25;5;28;;;;vpos;;v;;r&#xA;Definition&#xA;    __construct(MessageSelector $selector = null)&#xA;&#xA;Description&#xA;      The message selector for pluralization&#xA;&#xA;Parameters:&#xA;    MessageSelector|null $selector - The message selector for pluralization;;d4,26;;b1,0;;mMessageSelector|null $selector;;p">
					<treenode node="selector;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Formatter\MessageFormatter.php;f48;25;57;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="choiceFormat;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Formatter\MessageFormatter.php;f11;41;5;46;;;;vpos;;v;;r&#xA;Definition&#xA;    choiceFormat($message, $number, $locale, array $parameters = array())&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,42;;b1,0;;mmessage;;pnumber;;plocale;;pparameters;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Formatter\MessageFormatter.php;f52;41;59;41;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Formatter\MessageFormatter.php;f33;41;41;41;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="number;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Formatter\MessageFormatter.php;f43;41;50;41;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Formatter\MessageFormatter.php;f67;41;78;41;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="format;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Formatter\MessageFormatter.php;f11;33;5;36;;;;vpos;;v;;r&#xA;Definition&#xA;    format($message, $locale, array $parameters = array())&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,34;;b1,0;;mmessage;;plocale;;pparameters;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Formatter\MessageFormatter.php;f37;33;44;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Formatter\MessageFormatter.php;f27;33;35;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Formatter\MessageFormatter.php;f52;33;63;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="selector;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Formatter\MessageFormatter.php;f12;20;21;20;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
			</treenode>
			<treenode node="MessageFormatterTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Formatter\MessageFormatterTest.php;f0;16;1;81;;;;vpos;;vTestCase;;c;;r;;d0,17;;b0,0;;m">
				<treenode node="getMessageFormatter;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Formatter\MessageFormatterTest.php;f12;77;5;80;;;;vpos;;v;;r;;d4,78;;b3,0;;m">
				</treenode>
				<treenode node="getTransChoiceMessages;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Formatter\MessageFormatterTest.php;f11;54;5;75;;;;vpos;;v;;r;;d4,55;;b1,0;;m">
				</treenode>
				<treenode node="getTransMessages;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Formatter\MessageFormatterTest.php;f11;34;5;52;;;;vpos;;v;;r;;d4,35;;b1,0;;m">
				</treenode>
				<treenode node="testFormat;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Formatter\MessageFormatterTest.php;f11;21;5;24;;;;vpos;;v;;r&#xA;Definition&#xA;    testFormat($expected, $message, $parameters = array())&#xA;&#xA;Description&#xA;      dataProvider getTransMessages;;d4,22;;b1,0;;mexpected;;pmessage;;pparameters;;p">
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Formatter\MessageFormatterTest.php;f31;21;40;21;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Formatter\MessageFormatterTest.php;f42;21;50;21;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Formatter\MessageFormatterTest.php;f52;21;63;21;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testFormatPlural;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Formatter\MessageFormatterTest.php;f11;29;5;32;;;;vpos;;v;;r&#xA;Definition&#xA;    testFormatPlural($expected, $message, $number, $parameters)&#xA;&#xA;Description&#xA;      dataProvider getTransChoiceMessages;;d4,30;;b1,0;;mexpected;;pmessage;;pnumber;;pparameters;;p">
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Formatter\MessageFormatterTest.php;f37;29;46;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Formatter\MessageFormatterTest.php;f48;29;56;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="number;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Formatter\MessageFormatterTest.php;f58;29;65;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Formatter\MessageFormatterTest.php;f67;29;78;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="MessageSelector;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageSelector.php;f0;21;1;93;;;;vpos;;v;;r&#xA;Definition&#xA;    class MessageSelector&#xA;&#xA;Description&#xA;     MessageSelector.;;d0,22;;b0,0;;m">
				<treenode node="choose;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageSelector.php;f11;49;5;92;;;;vpos;;vstring;;r&#xA;Definition&#xA;    choose($message, $number, $locale)&#xA;&#xA;Description&#xA;     Given a message with different plural translations separated by a pipe (|), this method returns the correct portion of the message based on the given number, locale and the pluralization rules in the message itself.&#xA;&#xA;Parameters:&#xA;    string $message - The message being translated&#xA;    int $number - The number of items represented for the message&#xA;    string $locale - The locale to use for choosing;;d4,50;;b1,0;;mstring $message;;pint $number;;pstring $locale;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageSelector.php;f46;49;53;49;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageSelector.php;f27;49;35;49;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="number;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageSelector.php;f37;49;44;49;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="MessageSelectorTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\MessageSelectorTest.php;f0;16;1;136;;;;vpos;;vTestCase;;c;;r;;d0,17;;b0,0;;m">
				<treenode node="getChooseTests;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\MessageSelectorTest.php;f11;56;5;135;;;;vpos;;v;;r;;d4,57;;b1,0;;m">
				</treenode>
				<treenode node="getNonMatchingMessages;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\MessageSelectorTest.php;f11;46;5;54;;;;vpos;;v;;r;;d4,47;;b1,0;;m">
				</treenode>
				<treenode node="testChoose;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\MessageSelectorTest.php;f11;21;5;26;;;;vpos;;v;;r&#xA;Definition&#xA;    testChoose($expected, $id, $number)&#xA;&#xA;Description&#xA;      dataProvider getChooseTests;;d4,22;;b1,0;;mexpected;;pid;;pnumber;;p">
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\MessageSelectorTest.php;f31;21;40;21;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\MessageSelectorTest.php;f42;21;45;21;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="number;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\MessageSelectorTest.php;f47;21;54;21;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testReturnMessageIfExactlyOneStandardRuleIsGiven;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\MessageSelectorTest.php;f11;28;5;33;;;;vpos;;v;;r;;d4,29;;b1,0;;m">
				</treenode>
				<treenode node="testThrowExceptionIfMatchingMessageCannotBeFound;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\MessageSelectorTest.php;f11;39;5;44;;;;vpos;;v;;r&#xA;Definition&#xA;    testThrowExceptionIfMatchingMessageCannotBeFound($id, $number)&#xA;&#xA;Description&#xA;      dataProvider getNonMatchingMessages;;d4,40;;b1,0;;mid;;pnumber;;p">
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\MessageSelectorTest.php;f69;39;72;39;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="number;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\MessageSelectorTest.php;f74;39;81;39;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="MigrateCommand;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\MigrateCommand.php;f0;8;1;125;;;;vpos;;vBaseCommand;;c;;r;;d0,9;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\MigrateCommand.php;f11;39;5;44;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct(Migrator $migrator)&#xA;&#xA;Description&#xA;     Create a new migration command instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Migrations\Migrator $migrator;;d4,40;;b1,0;;m\Illuminate\Database\Migrations\Migrator $migrator;;p">
					<treenode node="migrator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\MigrateCommand.php;f41;39;50;39;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fire;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\MigrateCommand.php;f11;51;5;88;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    fire()&#xA;&#xA;Description&#xA;     Execute the console command.;;d4,52;;b1,0;;m">
				</treenode>
				<treenode node="getOptions;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\MigrateCommand.php;f14;111;5;124;;;;vpos;;varray;;r&#xA;Definition&#xA;    getOptions()&#xA;&#xA;Description&#xA;     Get the console command options.;;d4,112;;b2,0;;m">
				</treenode>
				<treenode node="prepareDatabase;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\MigrateCommand.php;f14;95;5;104;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    prepareDatabase()&#xA;&#xA;Description&#xA;     Prepare the migration database for running.;;d4,96;;b2,0;;m">
				</treenode>
				<treenode node="description;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\MigrateCommand.php;f14;24;26;24;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="migrator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\MigrateCommand.php;f14;31;23;31;;;;vpos;;v;;r&#xA;Description&#xA;     The migrator instance.;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\MigrateCommand.php;f14;17;19;17;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="MigrateMakeCommand;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\MigrateMakeCommand.php;f0;7;1;113;;;;vpos;;vBaseCommand;;c;;r;;d0,8;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\MigrateMakeCommand.php;f11;47;5;53;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct(MigrationCreator $creator, Composer $composer)&#xA;&#xA;Description&#xA;     Create a new migration install command instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Migrations\MigrationCreator $creator&#xA;    \Illuminate\Foundation\Composer $composer;;d4,48;;b1,0;;m\Illuminate\Database\Migrations\MigrationCreator $creator;;p\Illuminate\Foundation\Composer $composer;;p">
					<treenode node="composer;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\MigrateMakeCommand.php;f68;47;77;47;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="creator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\MigrateMakeCommand.php;f49;47;57;47;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fire;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\MigrateMakeCommand.php;f11;60;5;81;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    fire()&#xA;&#xA;Description&#xA;     Execute the console command.;;d4,61;;b1,0;;m">
				</treenode>
				<treenode node="getMigrationPath;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\MigrateMakeCommand.php;f14;105;5;112;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getMigrationPath()&#xA;&#xA;Description&#xA;     Get migration path (either specified by '--path' option or default location).;;d4,106;;b2,0;;m">
				</treenode>
				<treenode node="writeMigration;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\MigrateMakeCommand.php;f14;91;5;98;;;;vpos;;vstring;;r&#xA;Definition&#xA;    writeMigration($name, $table, $create)&#xA;&#xA;Description&#xA;     Write the migration file to disk.&#xA;&#xA;Parameters:&#xA;    string $name&#xA;    string $table&#xA;    bool $create;;d4,92;;b2,0;;mstring $name;;pstring $table;;pbool $create;;p">
					<treenode node="create;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\MigrateMakeCommand.php;f53;91;60;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\MigrateMakeCommand.php;f38;91;43;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\MigrateMakeCommand.php;f45;91;51;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="composer;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\MigrateMakeCommand.php;f14;38;23;38;;;;vpos;;v;;r&#xA;Description&#xA;     The Composer instance.;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="creator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\MigrateMakeCommand.php;f14;31;22;31;;;;vpos;;v;;r&#xA;Description&#xA;     The migration creator instance.;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="description;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\MigrateMakeCommand.php;f14;24;26;24;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="signature;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\MigrateMakeCommand.php;f14;14;24;14;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="Migration;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migration.php;f9;4;1;22;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="getConnection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migration.php;f11;18;5;21;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getConnection()&#xA;&#xA;Description&#xA;     Get the migration connection name.;;d4,19;;b1,0;;m">
				</treenode>
				<treenode node="connection;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migration.php;f14;11;25;11;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="MigrationCreator;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationCreator.php;f0;8;1;180;;;;vpos;;v;;r;;d0,9;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationCreator.php;f11;30;5;33;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct(Filesystem $files)&#xA;&#xA;Description&#xA;     Create a new migration creator instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Filesystem\Filesystem $files;;d4,31;;b1,0;;m\Illuminate\Filesystem\Filesystem $files;;p">
					<treenode node="files;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationCreator.php;f43;30;49;30;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="afterCreate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationCreator.php;f11;134;5;137;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    afterCreate(Closure $callback)&#xA;&#xA;Description&#xA;     Register a post migration create hook.&#xA;&#xA;Parameters:&#xA;    \Closure $callback;;d4,135;;b1,0;;m\Closure $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationCreator.php;f40;134;49;134;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="create;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationCreator.php;f11;44;5;58;;;;vpos;;vstring;;r&#xA;Definition&#xA;    create($name, $path, $table = null, $create = false)&#xA;&#xA;Description&#xA;     Create a new migration at the given path.&#xA;&#xA;Parameters:&#xA;    string $name&#xA;    string $path&#xA;    string $table&#xA;    bool $create;;d4,45;;b1,0;;mstring $name;;pstring $path;;pstring $table;;pbool $create;;p">
					<treenode node="create;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationCreator.php;f56;44;63;44;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationCreator.php;f27;44;32;44;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationCreator.php;f34;44;39;44;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationCreator.php;f41;44;47;44;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="firePostCreateHooks;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationCreator.php;f14;121;5;126;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    firePostCreateHooks()&#xA;&#xA;Description&#xA;     Fire the registered post create hooks.;;d4,122;;b2,0;;m">
				</treenode>
				<treenode node="getClassName;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationCreator.php;f14;111;5;114;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getClassName($name)&#xA;&#xA;Description&#xA;     Get the class name of a migration name.&#xA;&#xA;Parameters:&#xA;    string $name;;d4,112;;b2,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationCreator.php;f36;111;41;111;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getDatePrefix;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationCreator.php;f14;156;5;159;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getDatePrefix()&#xA;&#xA;Description&#xA;     Get the date prefix for the migration.;;d4,157;;b2,0;;m">
				</treenode>
				<treenode node="getFilesystem;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationCreator.php;f11;176;5;179;;;;vpos;;v;;r&#xA;Definition&#xA;    getFilesystem()&#xA;&#xA;Description&#xA;     Get the filesystem instance.;;d4,177;;b1,0;;m">
				</treenode>
				<treenode node="getPath;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationCreator.php;f14;146;5;149;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getPath($name, $path)&#xA;&#xA;Description&#xA;     Get the full path name to the migration.&#xA;&#xA;Parameters:&#xA;    string $name&#xA;    string $path;;d4,147;;b2,0;;mstring $name;;pstring $path;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationCreator.php;f31;146;36;146;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationCreator.php;f38;146;43;146;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getStub;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationCreator.php;f14;67;5;81;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getStub($table, $create)&#xA;&#xA;Description&#xA;     Get the migration stub file.&#xA;&#xA;Parameters:&#xA;    string $table&#xA;    bool $create;;d4,68;;b2,0;;mstring $table;;pbool $create;;p">
					<treenode node="create;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationCreator.php;f39;67;46;67;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationCreator.php;f31;67;37;67;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getStubPath;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationCreator.php;f11;166;5;169;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getStubPath()&#xA;&#xA;Description&#xA;     Get the path to the stubs.;;d4,167;;b1,0;;m">
				</treenode>
				<treenode node="populateStub;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationCreator.php;f14;91;5;103;;;;vpos;;vstring;;r&#xA;Definition&#xA;    populateStub($name, $stub, $table)&#xA;&#xA;Description&#xA;     Populate the place-holders in the migration stub.&#xA;&#xA;Parameters:&#xA;    string $name&#xA;    string $stub&#xA;    string $table;;d4,92;;b2,0;;mstring $name;;pstring $stub;;pstring $table;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationCreator.php;f36;91;41;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="stub;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationCreator.php;f43;91;48;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationCreator.php;f50;91;56;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="files;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationCreator.php;f14;15;20;15;;;;vpos;;v;;r&#xA;Description&#xA;     The filesystem instance.;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="postCreate;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationCreator.php;f14;22;25;22;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="MigrationServiceProvider;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\MigrationServiceProvider.php;f0;16;1;215;;;;vpos;;vServiceProvider;;c;;r;;d0,17;;b0,0;;m">
				<treenode node="provides;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\MigrationServiceProvider.php;f11;205;5;214;;;;vpos;;varray;;r&#xA;Definition&#xA;    provides()&#xA;&#xA;Description&#xA;     Get the services provided by the provider.;;d4,206;;b1,0;;m">
				</treenode>
				<treenode node="register;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\MigrationServiceProvider.php;f11;30;5;40;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    register()&#xA;&#xA;Description&#xA;     Register the service provider.;;d4,31;;b1,0;;m">
				</treenode>
				<treenode node="registerCommands;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\MigrationServiceProvider.php;f14;78;5;98;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    registerCommands()&#xA;&#xA;Description&#xA;     Register all of the migration commands.;;d4,79;;b2,0;;m">
				</treenode>
				<treenode node="registerCreator;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\MigrationServiceProvider.php;f14;193;5;198;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    registerCreator()&#xA;&#xA;Description&#xA;     Register the migration creator.;;d4,194;;b2,0;;m">
				</treenode>
				<treenode node="registerInstallCommand;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\MigrationServiceProvider.php;f14;160;5;165;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    registerInstallCommand()&#xA;&#xA;Description&#xA;     Register the &quot;install&quot; migration command.;;d4,161;;b2,0;;m">
				</treenode>
				<treenode node="registerMakeCommand;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\MigrationServiceProvider.php;f14;172;5;186;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    registerMakeCommand()&#xA;&#xA;Description&#xA;     Register the &quot;make&quot; migration command.;;d4,173;;b2,0;;m">
				</treenode>
				<treenode node="registerMigrateCommand;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\MigrationServiceProvider.php;f14;105;5;110;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    registerMigrateCommand()&#xA;&#xA;Description&#xA;     Register the &quot;migrate&quot; migration command.;;d4,106;;b2,0;;m">
				</treenode>
				<treenode node="registerMigrator;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\MigrationServiceProvider.php;f14;61;5;71;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    registerMigrator()&#xA;&#xA;Description&#xA;     Register the migrator service.;;d4,62;;b2,0;;m">
				</treenode>
				<treenode node="registerRefreshCommand;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\MigrationServiceProvider.php;f14;141;5;146;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    registerRefreshCommand()&#xA;&#xA;Description&#xA;     Register the &quot;refresh&quot; migration command.;;d4,142;;b2,0;;m">
				</treenode>
				<treenode node="registerRepository;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\MigrationServiceProvider.php;f14;47;5;54;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    registerRepository()&#xA;&#xA;Description&#xA;     Register the migration repository service.;;d4,48;;b2,0;;m">
				</treenode>
				<treenode node="registerResetCommand;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\MigrationServiceProvider.php;f14;129;5;134;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    registerResetCommand()&#xA;&#xA;Description&#xA;     Register the &quot;reset&quot; migration command.;;d4,130;;b2,0;;m">
				</treenode>
				<treenode node="registerRollbackCommand;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\MigrationServiceProvider.php;f14;117;5;122;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    registerRollbackCommand()&#xA;&#xA;Description&#xA;     Register the &quot;rollback&quot; migration command.;;d4,118;;b2,0;;m">
				</treenode>
				<treenode node="registerStatusCommand;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\MigrationServiceProvider.php;f14;148;5;153;;;;vpos;;v;;r;;d4,149;;b2,0;;m">
				</treenode>
				<treenode node="defer;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\MigrationServiceProvider.php;f14;23;20;23;;;;vposbool;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="Migrator;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f0;8;1;404;;;;vpos;;v;;r;;d0,9;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f11;53;5;60;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct(MigrationRepositoryInterface $repository,&#xA;                                Resolver $resolver,&#xA;                                Filesystem $files)&#xA;&#xA;Description&#xA;     Create a new migrator instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Migrations\MigrationRepositoryInterface $repository&#xA;    \Illuminate\Database\ConnectionResolverInterface $resolver&#xA;    \Illuminate\Filesystem\Filesystem $files;;d4,56;;b1,0;;m\Illuminate\Database\Migrations\MigrationRepositoryInterface $repository;;p\Illuminate\Database\ConnectionResolverInterface $resolver;;p\Illuminate\Filesystem\Filesystem $files;;p">
					<treenode node="files;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f43;55;49;55;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="repository;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f61;53;72;53;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="resolver;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f41;54;50;54;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getFilesystem;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f11;400;5;403;;;;vpos;;v;;r&#xA;Definition&#xA;    getFilesystem()&#xA;&#xA;Description&#xA;     Get the file system instance.;;d4,401;;b1,0;;m">
				</treenode>
				<treenode node="getMigrationFiles;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f11;236;5;258;;;;vpos;;varray;;r&#xA;Definition&#xA;    getMigrationFiles($path)&#xA;&#xA;Description&#xA;     Get all of the migration files in a given path.&#xA;&#xA;Parameters:&#xA;    string $path;;d4,237;;b1,0;;mstring $path;;p">
					<treenode node="path;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f38;236;43;236;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getNotes;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f11;342;5;345;;;;vpos;;varray;;r&#xA;Definition&#xA;    getNotes()&#xA;&#xA;Description&#xA;     Get the notes for the last operation.;;d4,343;;b1,0;;m">
				</treenode>
				<treenode node="getQueries;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f14;297;5;309;;;;vpos;;varray;;r&#xA;Definition&#xA;    getQueries($migration, $method)&#xA;&#xA;Description&#xA;     Get all of the queries that would be run for a migration.&#xA;&#xA;Parameters:&#xA;    object $migration&#xA;    string $method;;d4,298;;b2,0;;mobject $migration;;pstring $method;;p">
					<treenode node="method;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f46;297;53;297;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="migration;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f34;297;44;297;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getRepository;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f11;380;5;383;;;;vpos;;v;;r&#xA;Definition&#xA;    getRepository()&#xA;&#xA;Description&#xA;     Get the migration repository instance.;;d4,381;;b1,0;;m">
				</treenode>
				<treenode node="note;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f14;332;5;335;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    note($message)&#xA;&#xA;Description&#xA;     Raise a note event for the migrator.&#xA;&#xA;Parameters:&#xA;    string $message;;d4,333;;b2,0;;mstring $message;;p">
					<treenode node="message;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f28;332;36;332;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="pretendToRun;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f14;281;5;288;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    pretendToRun($migration, $method)&#xA;&#xA;Description&#xA;     Pretend to run the migrations.&#xA;&#xA;Parameters:&#xA;    object $migration&#xA;    string $method;;d4,282;;b2,0;;mobject $migration;;pstring $method;;p">
					<treenode node="method;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f48;281;55;281;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="migration;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f36;281;46;281;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="repositoryExists;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f11;390;5;393;;;;vpos;;vbool;;r&#xA;Definition&#xA;    repositoryExists()&#xA;&#xA;Description&#xA;     Determine if the migration repository exists.;;d4,391;;b1,0;;m">
				</treenode>
				<treenode node="requireFiles;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f11;267;5;272;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    requireFiles($path, array $files)&#xA;&#xA;Description&#xA;     Require in all the migration files in a given path.&#xA;&#xA;Parameters:&#xA;    string $path&#xA;    array $files;;d4,268;;b1,0;;mstring $path;;parray $files;;p">
					<treenode node="files;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f46;267;52;267;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f33;267;38;267;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="reset;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f11;181;5;198;;;;vpos;;vint;;r&#xA;Definition&#xA;    reset($pretend = false)&#xA;&#xA;Description&#xA;     Rolls all of the currently applied migrations back.&#xA;&#xA;Parameters:&#xA;    bool $pretend;;d4,182;;b1,0;;mbool $pretend;;p">
					<treenode node="pretend;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f26;181;34;181;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="resolve;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f11;317;5;324;;;;vpos;;vobject;;r&#xA;Definition&#xA;    resolve($file)&#xA;&#xA;Description&#xA;     Resolve a migration instance from a file.&#xA;&#xA;Parameters:&#xA;    string $file;;d4,318;;b1,0;;mstring $file;;p">
					<treenode node="file;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f28;317;33;317;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="resolveConnection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f11;353;5;356;;;;vpos;;v;;r&#xA;Definition&#xA;    resolveConnection($connection)&#xA;&#xA;Description&#xA;     Resolve the database connection instance.&#xA;&#xA;Parameters:&#xA;    string $connection;;d4,354;;b1,0;;mstring $connection;;p">
					<treenode node="connection;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f38;353;49;353;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="rollback;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f11;150;5;173;;;;vpos;;vint;;r&#xA;Definition&#xA;    rollback($pretend = false)&#xA;&#xA;Description&#xA;     Rollback the last migration operation.&#xA;&#xA;Parameters:&#xA;    bool $pretend;;d4,151;;b1,0;;mbool $pretend;;p">
					<treenode node="pretend;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f29;150;37;150;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="run;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f11;69;5;85;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    run($path, $pretend = false)&#xA;&#xA;Description&#xA;     Run the outstanding migrations at a given path.&#xA;&#xA;Parameters:&#xA;    string $path&#xA;    bool $pretend;;d4,70;;b1,0;;mstring $path;;pbool $pretend;;p">
					<treenode node="path;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f24;69;29;69;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="pretend;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f31;69;39;69;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="runDown;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f14;207;5;228;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    runDown($migration, $pretend)&#xA;&#xA;Description&#xA;     Run &quot;down&quot; a migration instance.&#xA;&#xA;Parameters:&#xA;    object $migration&#xA;    bool $pretend;;d4,208;;b2,0;;mobject $migration;;pbool $pretend;;p">
					<treenode node="migration;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f31;207;41;207;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="pretend;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f43;207;51;207;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="runMigrationList;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f11;94;5;113;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    runMigrationList($migrations, $pretend = false)&#xA;&#xA;Description&#xA;     Run an array of migrations.&#xA;&#xA;Parameters:&#xA;    array $migrations&#xA;    bool $pretend;;d4,95;;b1,0;;marray $migrations;;pbool $pretend;;p">
					<treenode node="migrations;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f37;94;48;94;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="pretend;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f50;94;58;94;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="runUp;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f14;123;5;142;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    runUp($file, $batch, $pretend)&#xA;&#xA;Description&#xA;     Run &quot;up&quot; a migration instance.&#xA;&#xA;Parameters:&#xA;    string $file&#xA;    int $batch&#xA;    bool $pretend;;d4,124;;b2,0;;mstring $file;;pint $batch;;pbool $pretend;;p">
					<treenode node="batch;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f36;123;42;123;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="file;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f29;123;34;123;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="pretend;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f44;123;52;123;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setConnection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f11;364;5;373;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setConnection($name)&#xA;&#xA;Description&#xA;     Set the default connection name.&#xA;&#xA;Parameters:&#xA;    string $name;;d4,365;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f34;364;39;364;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="connection;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f14;36;25;36;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="files;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f14;22;20;22;;;;vpos;;v;;r&#xA;Description&#xA;     The filesystem instance.;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="notes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f14;43;20;43;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="repository;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f14;15;25;15;;;;vpos;;v;;r&#xA;Description&#xA;     The migration repository implementation.;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="resolver;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php;f14;29;23;29;;;;vpos;;v;;r&#xA;Description&#xA;     The connection resolver instance.;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="Model;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f9;32;1;3401;;;;vpos;;vArrayAccess;;cArrayable;;cJsonable;;cJsonSerializable;;cQueueableEntity;;cUrlRoutable;;c;;r;;d0,33;;b0,0;;m">
				<treenode node="CREATED_AT;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f9;249;20;249;;;;vposstring;;v;;r'created_at';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="UPDATED_AT;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f9;256;20;256;;;;vposstring;;v;;r'updated_at';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="__call;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;3357;5;3366;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    __call($method, $parameters)&#xA;&#xA;Description&#xA;     Handle dynamic method calls into the model.&#xA;&#xA;Parameters:&#xA;    string $method&#xA;    array $parameters;;d4,3358;;b1,0;;mstring $method;;parray $parameters;;p">
					<treenode node="method;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f27;3357;34;3357;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f36;3357;47;3357;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;3363;14;3363;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f41;3360;46;3360;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__callStatic;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;3375;5;3380;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    __callStatic($method, $parameters)&#xA;&#xA;Description&#xA;     Handle dynamic static method calls into the method.&#xA;&#xA;Parameters:&#xA;    string $method&#xA;    array $parameters;;d4,3376;;b1,5;;mstring $method;;parray $parameters;;p">
					<treenode node="instance;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;3377;17;3377;;;;vposstatic;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="method;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f40;3375;47;3375;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f49;3375;60;3375;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;264;5;271;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct(array $attributes = [])&#xA;&#xA;Description&#xA;     Create a new Eloquent model instance.&#xA;&#xA;Parameters:&#xA;    array $attributes;;d4,265;;b1,0;;marray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f38;264;49;264;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;266;13;266;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__get;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;3265;5;3268;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    __get($key)&#xA;&#xA;Description&#xA;     Dynamically retrieve attributes on the model.&#xA;&#xA;Parameters:&#xA;    string $key;;d4,3266;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f26;3265;30;3265;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f15;3267;20;3267;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__isset;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;3333;5;3337;;;;vpos;;vbool;;r&#xA;Definition&#xA;    __isset($key)&#xA;&#xA;Description&#xA;     Determine if an attribute exists on the model.&#xA;&#xA;Parameters:&#xA;    string $key;;d4,3334;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f28;3333;32;3333;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f22;3335;27;3335;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__set;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;3277;5;3280;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __set($key, $value)&#xA;&#xA;Description&#xA;     Dynamically set attributes on the model.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    mixed $value;;d4,3278;;b1,0;;mstring $key;;pmixed $value;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f26;3277;30;3277;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;3279;13;3279;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f32;3277;38;3277;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__toString;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;3387;5;3390;;;;vpos;;vstring;;r&#xA;Definition&#xA;    __toString()&#xA;&#xA;Description&#xA;     Convert the model to its string representation.;;d4,3388;;b1,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f15;3389;20;3389;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__unset;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;3345;5;3348;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __unset($key)&#xA;&#xA;Description&#xA;     Unset an attribute on the model.&#xA;&#xA;Parameters:&#xA;    string $key;;d4,3346;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f28;3345;32;3345;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;3347;19;3347;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__wakeup;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;3397;5;3400;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __wakeup()&#xA;&#xA;Description&#xA;     When a model is being unserialized, check if it needs to be booted.;;d4,3398;;b1,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;3399;13;3399;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addGlobalScope;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;333;5;336;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    addGlobalScope(ScopeInterface $scope)&#xA;&#xA;Description&#xA;     Register a new global scope on the model.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\ScopeInterface $scope;;d4,334;;b1,5;;m\Illuminate\Database\Eloquent\ScopeInterface $scope;;p">
					<treenode node="globalScopes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f16;335;29;335;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="scope;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f57;333;63;333;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addHidden;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2088;5;2093;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    addHidden($attributes = null)&#xA;&#xA;Description&#xA;     Add hidden attributes for the model.&#xA;&#xA;Parameters:&#xA;    array|string|null $attributes;;d4,2089;;b1,0;;marray|string|null $attributes;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f30;2088;41;2088;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;2092;13;2092;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addObservableEvents;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1319;5;1324;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    addObservableEvents($observables)&#xA;&#xA;Description&#xA;     Add an observable event name.&#xA;&#xA;Parameters:&#xA;    mixed $observables;;d4,1320;;b1,0;;mmixed $observables;;p">
					<treenode node="observables;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f40;1319;52;1319;;;;vposbool;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;1323;13;1323;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addVisible;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2122;5;2127;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    addVisible($attributes = null)&#xA;&#xA;Description&#xA;     Add visible attributes for the model.&#xA;&#xA;Parameters:&#xA;    array|string|null $attributes;;d4,2123;;b1,0;;marray|string|null $attributes;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f31;2122;42;2122;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;2126;13;2126;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="all;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;653;5;660;;;;vpos;;v;;r&#xA;Definition&#xA;    all($columns = ['*'])&#xA;&#xA;Description&#xA;     Get all of the models from the database.&#xA;&#xA;Parameters:&#xA;    array $columns;;d4,654;;b1,5;;marray $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f31;653;39;653;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="instance;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;657;17;657;;;;vposstatic;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="applyGlobalScopes;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1823;5;1830;;;;vpos;;v;;r&#xA;Definition&#xA;    applyGlobalScopes($builder)&#xA;&#xA;Description&#xA;     Apply all of the global scopes to an Eloquent builder.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $builder;;d4,1824;;b1,0;;m\Illuminate\Database\Eloquent\Builder $builder;;p">
					<treenode node="builder;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f38;1823;46;1823;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="scope;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f45;1825;51;1825;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f17;1825;22;1825;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="asDateTime;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;2834;5;2868;;;;vpos;;v;;r&#xA;Definition&#xA;    asDateTime($value)&#xA;&#xA;Description&#xA;     Return a timestamp as DateTime object.&#xA;&#xA;Parameters:&#xA;    mixed $value;;d4,2835;;b2,0;;mmixed $value;;p">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f40;2867;45;2867;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f34;2834;40;2834;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="attributesToArray;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2380;5;2434;;;;vpos;;varray;;r&#xA;Definition&#xA;    attributesToArray()&#xA;&#xA;Description&#xA;     Convert the model's attributes to an array.;;d4,2381;;b1,0;;m">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;2382;19;2382;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f38;2387;42;2387;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="mutatedAttributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;2397;26;2397;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f22;2382;27;2382;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f41;2415;47;2415;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="belongsTo;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;782;5;810;;;;vpos;;v;;r&#xA;Definition&#xA;    belongsTo($related, $foreignKey = null, $otherKey = null, $relation = null)&#xA;&#xA;Description&#xA;     Define an inverse one-to-one or many relationship.&#xA;&#xA;Parameters:&#xA;    string $related&#xA;    string $foreignKey&#xA;    string $otherKey&#xA;    string $relation;;d4,783;;b1,0;;mstring $related;;pstring $foreignKey;;pstring $otherKey;;pstring $relation;;p">
					<treenode node="caller;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f19;788;26;788;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="foreignKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f40;782;51;782;;;;vposstring;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="instance;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;800;17;800;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="otherKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f60;782;69;782;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;805;14;805;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="related;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f30;782;38;782;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f78;782;87;782;;;;vposbool;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f37;809;42;809;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="belongsToMany;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;931;5;962;;;;vpos;;v;;r&#xA;Definition&#xA;    belongsToMany($related, $table = null, $foreignKey = null, $otherKey = null, $relation = null)&#xA;&#xA;Description&#xA;     Define a many-to-many relationship.&#xA;&#xA;Parameters:&#xA;    string $related&#xA;    string $table&#xA;    string $foreignKey&#xA;    string $otherKey&#xA;    string $relation;;d4,932;;b1,0;;mstring $related;;pstring $table;;pstring $foreignKey;;pstring $otherKey;;pstring $relation;;p">
					<treenode node="foreignKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f59;931;70;931;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="instance;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;945;17;945;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="otherKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f79;931;88;931;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;959;14;959;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="related;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f34;931;42;931;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f97;931;106;931;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f44;931;50;931;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f24;937;29;937;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="boot;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f21;298;5;301;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    boot()&#xA;&#xA;Description&#xA;     The &quot;booting&quot; method of the model.;;d4,299;;b2,5;;m">
				</treenode>
				<treenode node="bootIfNotBooted;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;278;5;291;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    bootIfNotBooted()&#xA;&#xA;Description&#xA;     Check if the model needs to be booted and if so, do it.;;d4,279;;b2,0;;m">
					<treenode node="booted;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f27;282;34;282;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="class;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;280;14;280;;;;vposstring;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f27;280;32;280;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="bootTraits;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f21;308;5;315;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    bootTraits()&#xA;&#xA;Description&#xA;     Boot all of the bootable traits on the model.;;d4,309;;b2,5;;m">
					<treenode node="method;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f50;311;57;311;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="trait;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f61;310;67;310;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="cacheMutatedAttributes;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;3238;5;3257;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    cacheMutatedAttributes($class)&#xA;&#xA;Description&#xA;     Extract and cache all the mutated attributes of a class.&#xA;&#xA;Parameters:&#xA;    string $class;;d4,3239;;b1,5;;mstring $class;;p">
					<treenode node="class;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f50;3238;56;3238;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="matches;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f68;3247;76;3247;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="method;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f46;3245;53;3245;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="mutatedAttributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;3240;26;3240;;;;vposarray;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="mutatorCache;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f16;3256;29;3256;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="snakeAttributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f28;3248;44;3248;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="castAttribute;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;2727;5;2756;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    castAttribute($key, $value)&#xA;&#xA;Description&#xA;     Cast an attribute to a native PHP type.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    mixed $value;;d4,2728;;b2,0;;mstring $key;;pmixed $value;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f37;2727;41;2727;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f16;2733;21;2733;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f43;2727;49;2727;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="clearBootedModels;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;322;5;325;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    clearBootedModels()&#xA;&#xA;Description&#xA;     Clear the list of booted models so they will be re-booted.;;d4,323;;b1,5;;m">
					<treenode node="booted;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f16;324;23;324;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="create;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;534;5;541;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    create(array $attributes = [])&#xA;&#xA;Description&#xA;     Save a new model and return the instance.&#xA;&#xA;Parameters:&#xA;    array $attributes;;d4,535;;b1,5;;marray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f40;534;51;534;;;;vposstatic;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;536;14;536;;;;vposstatic;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="created;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;1221;5;1224;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    created($callback, $priority = 0)&#xA;&#xA;Description&#xA;     Register a created model event with the dispatcher.&#xA;&#xA;Parameters:&#xA;    \Closure|string $callback&#xA;    int $priority;;d4,1222;;b1,5;;m\Closure|string $callback;;pint $priority;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f35;1221;44;1221;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="priority;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f46;1221;55;1221;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="creating;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;1209;5;1212;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    creating($callback, $priority = 0)&#xA;&#xA;Description&#xA;     Register a creating model event with the dispatcher.&#xA;&#xA;Parameters:&#xA;    \Closure|string $callback&#xA;    int $priority;;d4,1210;;b1,5;;m\Closure|string $callback;;pint $priority;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f36;1209;45;1209;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="priority;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f47;1209;56;1209;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="decrement;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;1358;5;1361;;;;vpos;;vint;;r&#xA;Definition&#xA;    decrement($column, $amount = 1)&#xA;&#xA;Description&#xA;     Decrement a column's value by a given amount.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    int $amount;;d4,1359;;b2,0;;mstring $column;;pint $amount;;p">
					<treenode node="amount;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f42;1358;49;1358;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f33;1358;40;1358;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f15;1360;20;1360;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="delete;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1103;5;1130;;;;vpos;;vbool;;r&#xA;Definition&#xA;    delete()&#xA;&#xA;Description&#xA;     Delete the model from the database.&#xA;&#xA;Return:&#xA;   |null;;d4,1104;;b1,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f20;1105;25;1105;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="deleted;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;1245;5;1248;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    deleted($callback, $priority = 0)&#xA;&#xA;Description&#xA;     Register a deleted model event with the dispatcher.&#xA;&#xA;Parameters:&#xA;    \Closure|string $callback&#xA;    int $priority;;d4,1246;;b1,5;;m\Closure|string $callback;;pint $priority;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f35;1245;44;1245;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="priority;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f46;1245;55;1245;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="deleting;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;1233;5;1236;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    deleting($callback, $priority = 0)&#xA;&#xA;Description&#xA;     Register a deleting model event with the dispatcher.&#xA;&#xA;Parameters:&#xA;    \Closure|string $callback&#xA;    int $priority;;d4,1234;;b1,5;;m\Closure|string $callback;;pint $priority;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f36;1233;45;1233;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="priority;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f47;1233;56;1233;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="destroy;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;1072;5;1095;;;;vpos;;vint;;r&#xA;Definition&#xA;    destroy($ids)&#xA;&#xA;Description&#xA;     Destroy the models for the given IDs.&#xA;&#xA;Parameters:&#xA;    array|int $ids;;d4,1073;;b1,5;;marray|int $ids;;p">
					<treenode node="count;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;1077;14;1077;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="ids;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f35;1072;39;1072;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="instance;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;1081;17;1081;;;;vposstatic;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;1086;12;1086;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f58;1088;64;1088;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fill;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;403;5;421;;;;vpos;;v;;r&#xA;Definition&#xA;    fill(array $attributes)&#xA;&#xA;Description&#xA;     Fill the model with an array of attributes.&#xA;&#xA;Parameters:&#xA;    array $attributes;;d4,404;;b1,0;;marray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f31;403;42;403;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f58;407;62;407;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f26;405;31;405;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="totallyGuarded;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;405;23;405;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f66;407;72;407;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fillable;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2156;5;2161;;;;vpos;;v;;r&#xA;Definition&#xA;    fillable(array $fillable)&#xA;&#xA;Description&#xA;     Set the fillable attributes for the model.&#xA;&#xA;Parameters:&#xA;    array $fillable;;d4,2157;;b1,0;;marray $fillable;;p">
					<treenode node="fillable;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f35;2156;44;2156;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;2158;13;2158;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fillableFromArray;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;447;5;454;;;;vpos;;varray;;r&#xA;Definition&#xA;    fillableFromArray(array $attributes)&#xA;&#xA;Description&#xA;     Get the fillable attributes of a given array.&#xA;&#xA;Parameters:&#xA;    array $attributes;;d4,448;;b2,0;;marray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f47;447;58;447;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;449;23;449;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="unguarded;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f51;449;61;449;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="findOrNew;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;669;5;676;;;;vpos;;v;;r&#xA;Definition&#xA;    findOrNew($id, $columns = ['*'])&#xA;&#xA;Description&#xA;     Find a model by its primary key or return new static.&#xA;&#xA;Parameters:&#xA;    mixed $id&#xA;    array $columns;;d4,670;;b1,5;;mmixed $id;;parray $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f42;669;50;669;;;;vposbool;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f37;669;40;669;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f21;671;27;671;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="finishSave;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;1486;5;1495;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    finishSave(array $options)&#xA;&#xA;Description&#xA;     Finish processing on a successful save operation.&#xA;&#xA;Parameters:&#xA;    array $options;;d4,1487;;b2,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f40;1486;48;1486;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;1488;13;1488;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fireModelEvent;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;1636;5;1650;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    fireModelEvent($event, $halt = true)&#xA;&#xA;Description&#xA;     Fire the given event for the model.&#xA;&#xA;Parameters:&#xA;    string $event&#xA;    bool $halt;;d4,1637;;b2,0;;mstring $event;;pbool $halt;;p">
					<treenode node="dispatcher;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f27;1638;38;1638;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="event;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f38;1636;44;1636;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="halt;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f46;1636;51;1636;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="method;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;1647;15;1647;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f49;1645;54;1645;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="firstOrCreate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;567;5;574;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    firstOrCreate(array $attributes)&#xA;&#xA;Description&#xA;     Get the first record matching the attributes or create it.&#xA;&#xA;Parameters:&#xA;    array $attributes;;d4,568;;b1,5;;marray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f47;567;58;567;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="instance;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f21;569;30;569;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="firstOrNew;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;582;5;589;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    firstOrNew(array $attributes)&#xA;&#xA;Description&#xA;     Get the first record matching the attributes or instantiate it.&#xA;&#xA;Parameters:&#xA;    array $attributes;;d4,583;;b1,5;;marray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f44;582;55;582;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="instance;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f21;584;30;584;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="flushEventListeners;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;1255;5;1266;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    flushEventListeners()&#xA;&#xA;Description&#xA;     Remove all of the event listeners for the model.;;d4,1256;;b1,5;;m">
					<treenode node="dispatcher;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f27;1257;38;1257;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="event;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f53;1263;59;1263;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="instance;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;1261;17;1261;;;;vposstatic;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="forceCreate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;549;5;559;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    forceCreate(array $attributes)&#xA;&#xA;Description&#xA;     Save a new model and return the instance. Allow mass-assignment.&#xA;&#xA;Parameters:&#xA;    array $attributes;;d4,550;;b1,5;;marray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f45;549;56;549;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;554;14;554;;;;vposstatic;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="forceDelete;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1139;5;1142;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    forceDelete()&#xA;&#xA;Description&#xA;     Force a hard delete on a soft deleted model.;;d4,1140;;b1,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f15;1141;20;1141;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="forceFill;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;429;5;439;;;;vpos;;v;;r&#xA;Definition&#xA;    forceFill(array $attributes)&#xA;&#xA;Description&#xA;     Fill the model with an array of attributes. Force mass assignment.&#xA;&#xA;Parameters:&#xA;    array $attributes;;d4,430;;b1,0;;marray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f36;429;47;429;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;434;14;434;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f17;434;22;434;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fresh;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;684;5;693;;;;vpos;;v;;r&#xA;Definition&#xA;    fresh(array $with = [])&#xA;&#xA;Description&#xA;     Reload a fresh model instance from the database.&#xA;&#xA;Parameters:&#xA;    array $with;;d4,685;;b1,0;;marray $with;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;690;12;690;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f13;686;18;686;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="with;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f32;684;37;684;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="freshTimestamp;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1760;5;1763;;;;vpos;;v;;r&#xA;Definition&#xA;    freshTimestamp()&#xA;&#xA;Description&#xA;     Get a fresh timestamp for the model.;;d4,1761;;b1,0;;m">
				</treenode>
				<treenode node="freshTimestampString;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1770;5;1773;;;;vpos;;vstring;;r&#xA;Definition&#xA;    freshTimestampString()&#xA;&#xA;Description&#xA;     Get a fresh timestamp for the model.;;d4,1771;;b1,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f15;1772;20;1772;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fromDateTime;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2819;5;2826;;;;vpos;;vstring;;r&#xA;Definition&#xA;    fromDateTime($value)&#xA;&#xA;Description&#xA;     Convert a DateTime to a storable string.&#xA;&#xA;Parameters:&#xA;    \DateTime|int $value;;d4,2820;;b1,0;;m\DateTime|int $value;;p">
					<treenode node="format;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;2821;15;2821;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;2821;23;2821;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f33;2819;39;2819;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getArrayableAppends;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;2451;5;2460;;;;vpos;;varray;;r&#xA;Definition&#xA;    getArrayableAppends()&#xA;&#xA;Description&#xA;     Get all of the appendable values that are arrayable.;;d4,2452;;b2,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f19;2453;24;2453;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getArrayableAttributes;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;2441;5;2444;;;;vpos;;varray;;r&#xA;Definition&#xA;    getArrayableAttributes()&#xA;&#xA;Description&#xA;     Get an attribute array of all arrayable attributes.;;d4,2442;;b2,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f15;2443;20;2443;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getArrayableItems;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;2528;5;2535;;;;vpos;;varray;;r&#xA;Definition&#xA;    getArrayableItems(array $values)&#xA;&#xA;Description&#xA;     Get an attribute array of all arrayable values.&#xA;&#xA;Parameters:&#xA;    array $values;;d4,2529;;b2,0;;marray $values;;p">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;2530;23;2530;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f47;2528;54;2528;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getArrayableRelations;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;2517;5;2520;;;;vpos;;varray;;r&#xA;Definition&#xA;    getArrayableRelations()&#xA;&#xA;Description&#xA;     Get an attribute array of all arrayable relations.;;d4,2518;;b2,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f15;2519;20;2519;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getAttribute;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2543;5;2550;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    getAttribute($key)&#xA;&#xA;Description&#xA;     Get an attribute from the model.&#xA;&#xA;Parameters:&#xA;    string $key;;d4,2544;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f33;2543;37;2543;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f35;2545;40;2545;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getAttributeFromArray;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;2617;5;2622;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    getAttributeFromArray($key)&#xA;&#xA;Description&#xA;     Get an attribute from the $attributes array.&#xA;&#xA;Parameters:&#xA;    string $key;;d4,2618;;b2,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f45;2617;49;2617;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f35;2619;40;2619;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getAttributes;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2930;5;2933;;;;vpos;;varray;;r&#xA;Definition&#xA;    getAttributes()&#xA;&#xA;Description&#xA;     Get all of the current attributes on the model.;;d4,2931;;b1,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f15;2932;20;2932;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getAttributeValue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2558;5;2586;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    getAttributeValue($key)&#xA;&#xA;Description&#xA;     Get a plain attribute (not a relationship).&#xA;&#xA;Parameters:&#xA;    string $key;;d4,2559;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f38;2558;42;2558;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f17;2560;22;2560;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;2560;14;2560;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getBelongsToManyCaller;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;1028;5;1039;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getBelongsToManyCaller()&#xA;&#xA;Description&#xA;     Get the relationship name of the belongs to many.;;d4,1029;;b2,0;;m">
					<treenode node="caller;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;1032;15;1032;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f63;1032;67;1032;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="manyMethods;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f45;1035;57;1035;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="self;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;1030;13;1030;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="trace;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f69;1032;75;1032;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getCastType;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;2715;5;2718;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getCastType($key)&#xA;&#xA;Description&#xA;     Get the type of cast for a model attribute.&#xA;&#xA;Parameters:&#xA;    string $key;;d4,2716;;b2,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f35;2715;39;2715;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f31;2717;36;2717;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getConnection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;3115;5;3118;;;;vpos;;v;;r&#xA;Definition&#xA;    getConnection()&#xA;&#xA;Description&#xA;     Get the database connection for the model.;;d4,3116;;b1,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f41;3117;46;3117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getConnectionName;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;3125;5;3128;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getConnectionName()&#xA;&#xA;Description&#xA;     Get the current connection name for the model.;;d4,3126;;b1,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f15;3127;20;3127;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getConnectionResolver;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;3159;5;3162;;;;vpos;;v;;r&#xA;Definition&#xA;    getConnectionResolver()&#xA;&#xA;Description&#xA;     Get the connection resolver instance.;;d4,3160;;b1,5;;m">
					<treenode node="resolver;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f23;3161;32;3161;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getCreatedAtColumn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1740;5;1743;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getCreatedAtColumn()&#xA;&#xA;Description&#xA;     Get the name of the &quot;created at&quot; column.;;d4,1741;;b1,0;;m">
				</treenode>
				<treenode node="getDateFormat;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;2886;5;2889;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getDateFormat()&#xA;&#xA;Description&#xA;     Get the format for database stored dates.;;d4,2887;;b2,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f15;2888;20;2888;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getDates;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2806;5;2811;;;;vpos;;varray;;r&#xA;Definition&#xA;    getDates()&#xA;&#xA;Description&#xA;     Get the attributes that should be converted to dates.;;d4,2807;;b1,0;;m">
					<treenode node="defaults;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;2808;17;2808;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f27;2810;32;2810;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getDirty;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;3020;5;3034;;;;vpos;;varray;;r&#xA;Definition&#xA;    getDirty()&#xA;&#xA;Description&#xA;     Get the attributes that have been changed since last sync.;;d4,3021;;b1,0;;m">
					<treenode node="dirty;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;3022;14;3022;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f38;3024;42;3024;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f17;3024;22;3024;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f46;3024;52;3024;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getEventDispatcher;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;3190;5;3193;;;;vpos;;v;;r&#xA;Definition&#xA;    getEventDispatcher()&#xA;&#xA;Description&#xA;     Get the event dispatcher instance.;;d4,3191;;b1,5;;m">
					<treenode node="dispatcher;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f23;3192;34;3192;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getFillable;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2145;5;2148;;;;vpos;;varray;;r&#xA;Definition&#xA;    getFillable()&#xA;&#xA;Description&#xA;     Get the fillable attributes for the model.;;d4,2146;;b1,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f15;2147;20;2147;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getForeignKey;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2056;5;2059;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getForeignKey()&#xA;&#xA;Description&#xA;     Get the default foreign key name for the model.;;d4,2057;;b1,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f41;2058;46;2058;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getGlobalScope;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;355;5;360;;;;vpos;;v;;r&#xA;Definition&#xA;    getGlobalScope($scope)&#xA;&#xA;Description&#xA;     Get a global scope registered with the model.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\ScopeInterface $scope;;d4,356;;b1,5;;m\Illuminate\Database\Eloquent\ScopeInterface $scope;;p">
					<treenode node="globalScopes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f34;357;47;357;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f79;357;83;357;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="scope;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f42;355;48;355;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f85;357;91;357;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getGlobalScopes;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;367;5;370;;;;vpos;;v;;r&#xA;Definition&#xA;    getGlobalScopes()&#xA;&#xA;Description&#xA;     Get the global scopes for this class instance.;;d4,368;;b1,0;;m">
					<treenode node="globalScopes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f32;369;45;369;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f57;369;62;369;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getGuarded;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2168;5;2171;;;;vpos;;varray;;r&#xA;Definition&#xA;    getGuarded()&#xA;&#xA;Description&#xA;     Get the guarded attributes for the model.;;d4,2169;;b1,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f15;2170;20;2170;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getHidden;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2066;5;2069;;;;vpos;;varray;;r&#xA;Definition&#xA;    getHidden()&#xA;&#xA;Description&#xA;     Get the hidden attributes for the model.;;d4,2067;;b1,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f15;2068;20;2068;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getIncrementing;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2326;5;2329;;;;vpos;;vbool;;r&#xA;Definition&#xA;    getIncrementing()&#xA;&#xA;Description&#xA;     Get the value indicating whether the IDs are incrementing.;;d4,2327;;b1,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f15;2328;20;2328;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getKey;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1927;5;1930;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    getKey()&#xA;&#xA;Description&#xA;     Get the value of the model's primary key.;;d4,1928;;b1,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f15;1929;20;1929;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getKeyForSaveQuery;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;1670;5;1677;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    getKeyForSaveQuery()&#xA;&#xA;Description&#xA;     Get the primary key value for a save query.;;d4,1671;;b2,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;1672;23;1672;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getKeyName;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1947;5;1950;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getKeyName()&#xA;&#xA;Description&#xA;     Get the primary key for the model.;;d4,1948;;b1,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f15;1949;20;1949;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getMorphClass;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2025;5;2028;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getMorphClass()&#xA;&#xA;Description&#xA;     Get the class name for polymorphic relations.;;d4,2026;;b1,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f15;2027;20;2027;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getMorphs;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;2011;5;2018;;;;vpos;;varray;;r&#xA;Definition&#xA;    getMorphs($name, $type, $id)&#xA;&#xA;Description&#xA;     Get the polymorphic relationship columns.&#xA;&#xA;Parameters:&#xA;    string $name&#xA;    string $type&#xA;    string $id;;d4,2012;;b2,0;;mstring $name;;pstring $type;;pstring $id;;p">
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f47;2011;50;2011;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f33;2011;38;2011;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f40;2011;45;2011;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getMutatedAttributes;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;3221;5;3230;;;;vpos;;varray;;r&#xA;Definition&#xA;    getMutatedAttributes()&#xA;&#xA;Description&#xA;     Get the mutated attributes for a given instance.;;d4,3222;;b1,0;;m">
					<treenode node="class;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;3223;14;3223;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="mutatorCache;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f27;3225;40;3225;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f27;3223;32;3223;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getObservableEvents;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1290;5;1300;;;;vpos;;varray;;r&#xA;Definition&#xA;    getObservableEvents()&#xA;&#xA;Description&#xA;     Get the observable event names.;;d4,1291;;b1,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f12;1298;17;1298;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getOriginal;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2958;5;2961;;;;vpos;;varray;;r&#xA;Definition&#xA;    getOriginal($key = null, $default = null)&#xA;&#xA;Description&#xA;     Get the model's original attribute values.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    mixed $default;;d4,2959;;b1,0;;mstring $key;;pmixed $default;;p">
					<treenode node="default;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f45;2958;53;2958;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f32;2958;36;2958;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f24;2960;29;2960;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getPerPage;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2035;5;2038;;;;vpos;;vint;;r&#xA;Definition&#xA;    getPerPage()&#xA;&#xA;Description&#xA;     Get the number of models to return per page.;;d4,2036;;b1,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f15;2037;20;2037;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getQualifiedKeyName;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1968;5;1971;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getQualifiedKeyName()&#xA;&#xA;Description&#xA;     Get the table qualified key name.;;d4,1969;;b1,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f15;1970;20;1970;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getQueueableId;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1937;5;1940;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    getQueueableId()&#xA;&#xA;Description&#xA;     Get the queueable identity for the entity.;;d4,1938;;b1,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f15;1939;20;1939;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getRelation;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;3067;5;3070;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    getRelation($relation)&#xA;&#xA;Description&#xA;     Get a specified relationship.&#xA;&#xA;Parameters:&#xA;    string $relation;;d4,3068;;b1,0;;mstring $relation;;p">
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f32;3067;41;3067;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f15;3069;20;3069;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getRelations;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;3056;5;3059;;;;vpos;;varray;;r&#xA;Definition&#xA;    getRelations()&#xA;&#xA;Description&#xA;     Get all the loaded relations for the instance.;;d4,3057;;b1,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f15;3058;20;3058;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getRelationshipFromMethod;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;2632;5;2642;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    getRelationshipFromMethod($method)&#xA;&#xA;Description&#xA;     Get a relationship value from a method.&#xA;&#xA;Parameters:&#xA;    string $method;;d4,2633;;b2,0;;mstring $method;;p">
					<treenode node="method;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f49;2632;56;2632;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relations;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;2634;18;2634;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f21;2634;26;2634;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getRelationValue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2594;5;2609;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    getRelationValue($key)&#xA;&#xA;Description&#xA;     Get a relationship.&#xA;&#xA;Parameters:&#xA;    string $key;;d4,2595;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f37;2594;41;2594;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f12;2599;17;2599;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getRouteKey;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1978;5;1981;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    getRouteKey()&#xA;&#xA;Description&#xA;     Get the value of the model's route key.;;d4,1979;;b1,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f15;1980;20;1980;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getRouteKeyName;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1988;5;1991;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getRouteKeyName()&#xA;&#xA;Description&#xA;     Get the route key for the model.;;d4,1989;;b1,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f15;1990;20;1990;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getTable;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1902;5;1909;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getTable()&#xA;&#xA;Description&#xA;     Get the table associated with the model.;;d4,1903;;b1,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;1904;23;1904;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getTouchedRelations;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2305;5;2308;;;;vpos;;varray;;r&#xA;Definition&#xA;    getTouchedRelations()&#xA;&#xA;Description&#xA;     Get the relationships that are touched on save.;;d4,2306;;b1,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f15;2307;20;2307;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getUpdatedAtColumn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1750;5;1753;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getUpdatedAtColumn()&#xA;&#xA;Description&#xA;     Get the name of the &quot;updated at&quot; column.;;d4,1751;;b1,0;;m">
				</treenode>
				<treenode node="getVisible;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2100;5;2103;;;;vpos;;varray;;r&#xA;Definition&#xA;    getVisible()&#xA;&#xA;Description&#xA;     Get the visible attributes for the model.;;d4,2101;;b1,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f15;2102;20;2102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="guard;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2179;5;2184;;;;vpos;;v;;r&#xA;Definition&#xA;    guard(array $guarded)&#xA;&#xA;Description&#xA;     Set the guarded attributes for the model.&#xA;&#xA;Parameters:&#xA;    array $guarded;;d4,2180;;b1,0;;marray $guarded;;p">
					<treenode node="guarded;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f32;2179;40;2179;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;2181;13;2181;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hasCast;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;2687;5;2690;;;;vpos;;vbool;;r&#xA;Definition&#xA;    hasCast($key)&#xA;&#xA;Description&#xA;     Determine whether an attribute should be casted to a native type.&#xA;&#xA;Parameters:&#xA;    string $key;;d4,2688;;b2,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f31;2687;35;2687;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f38;2689;43;2689;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hasGetMutator;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2650;5;2653;;;;vpos;;vbool;;r&#xA;Definition&#xA;    hasGetMutator($key)&#xA;&#xA;Description&#xA;     Determine if a get mutator exists for an attribute.&#xA;&#xA;Parameters:&#xA;    string $key;;d4,2651;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f34;2650;38;2650;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f29;2652;34;2652;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hasGlobalScope;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;344;5;347;;;;vpos;;vbool;;r&#xA;Definition&#xA;    hasGlobalScope($scope)&#xA;&#xA;Description&#xA;     Determine if a model has a global scope.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\ScopeInterface $scope;;d4,345;;b1,5;;m\Illuminate\Database\Eloquent\ScopeInterface $scope;;p">
					<treenode node="scope;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f42;344;48;344;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hasMany;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;862;5;871;;;;vpos;;v;;r&#xA;Definition&#xA;    hasMany($related, $foreignKey = null, $localKey = null)&#xA;&#xA;Description&#xA;     Define a one-to-many relationship.&#xA;&#xA;Parameters:&#xA;    string $related&#xA;    string $foreignKey&#xA;    string $localKey;;d4,863;;b1,0;;mstring $related;;pstring $foreignKey;;pstring $localKey;;p">
					<treenode node="foreignKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f38;862;49;862;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="instance;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;866;17;866;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="localKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f58;862;67;862;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="related;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f28;862;36;862;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f37;864;42;864;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hasManyThrough;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;882;5;893;;;;vpos;;v;;r&#xA;Definition&#xA;    hasManyThrough($related, $through, $firstKey = null, $secondKey = null, $localKey = null)&#xA;&#xA;Description&#xA;     Define a has-many-through relationship.&#xA;&#xA;Parameters:&#xA;    string $related&#xA;    string $through&#xA;    string|null $firstKey&#xA;    string|null $secondKey;;d4,883;;b1,0;;mrelated;;pthrough;;pfirstKey;;psecondKey;;plocalKey;;p">
					<treenode node="firstKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f55;882;64;882;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="localKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f92;882;101;882;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="related;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f35;882;43;882;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="secondKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f73;882;83;882;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f33;886;38;886;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="through;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f45;882;53;882;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hasOne;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;739;5;748;;;;vpos;;v;;r&#xA;Definition&#xA;    hasOne($related, $foreignKey = null, $localKey = null)&#xA;&#xA;Description&#xA;     Define a one-to-one relationship.&#xA;&#xA;Parameters:&#xA;    string $related&#xA;    string $foreignKey&#xA;    string $localKey;;d4,740;;b1,0;;mstring $related;;pstring $foreignKey;;pstring $localKey;;p">
					<treenode node="foreignKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f37;739;48;739;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="instance;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;743;17;743;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="localKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f57;739;66;739;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="related;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f27;739;35;739;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f37;741;42;741;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hasSetMutator;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2796;5;2799;;;;vpos;;vbool;;r&#xA;Definition&#xA;    hasSetMutator($key)&#xA;&#xA;Description&#xA;     Determine if a set mutator exists for an attribute.&#xA;&#xA;Parameters:&#xA;    string $key;;d4,2797;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f34;2796;38;2796;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f29;2798;34;2798;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hydrate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;500;5;509;;;;vpos;;v;;r&#xA;Definition&#xA;    hydrate(array $items, $connection = null)&#xA;&#xA;Description&#xA;     Create a collection of models from plain arrays.&#xA;&#xA;Parameters:&#xA;    array $items&#xA;    string|null $connection;;d4,501;;b1,5;;marray $items;;pstring|null $connection;;p">
					<treenode node="connection;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f49;500;60;500;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="instance;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;502;17;502;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="item;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f37;504;42;504;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="items;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f41;500;47;500;;;;vposarray;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hydrateRaw;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;519;5;526;;;;vpos;;v;;r&#xA;Definition&#xA;    hydrateRaw($query, $bindings = [], $connection = null)&#xA;&#xA;Description&#xA;     Create a collection of models from a raw query.&#xA;&#xA;Parameters:&#xA;    string $query&#xA;    array $bindings&#xA;    string|null $connection;;d4,520;;b1,5;;mstring $query;;parray $bindings;;pstring|null $connection;;p">
					<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f46;519;55;519;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="connection;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f62;519;73;519;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="instance;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;521;17;521;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="items;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;523;14;523;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f38;519;44;519;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="increment;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;1346;5;1349;;;;vpos;;vint;;r&#xA;Definition&#xA;    increment($column, $amount = 1)&#xA;&#xA;Description&#xA;     Increment a column's value by a given amount.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    int $amount;;d4,1347;;b2,0;;mstring $column;;pint $amount;;p">
					<treenode node="amount;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f42;1346;49;1346;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f33;1346;40;1346;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f15;1348;20;1348;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="incrementOrDecrement;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;1371;5;1382;;;;vpos;;vint;;r&#xA;Definition&#xA;    incrementOrDecrement($column, $amount, $method)&#xA;&#xA;Description&#xA;     Run the increment or decrement method on the model.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    int $amount&#xA;    string $method;;d4,1372;;b2,0;;mstring $column;;pint $amount;;pstring $method;;p">
					<treenode node="amount;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f53;1371;60;1371;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f44;1371;51;1371;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="method;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f62;1371;69;1371;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;1373;14;1373;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f17;1373;22;1373;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="incrementOrDecrementAttributeValue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;1392;5;1397;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    incrementOrDecrementAttributeValue($column, $amount, $method)&#xA;&#xA;Description&#xA;     Increment the underlying attribute value and sync with original.&#xA;&#xA;Parameters:&#xA;    string $column&#xA;    int $amount&#xA;    string $method;;d4,1393;;b2,0;;mstring $column;;pint $amount;;pstring $method;;p">
					<treenode node="amount;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f67;1392;74;1392;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f58;1392;65;1392;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="method;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f76;1392;83;1392;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;1394;13;1394;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="insertAndSetId;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;1591;5;1596;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    insertAndSetId(Builder $query, $attributes)&#xA;&#xA;Description&#xA;     Insert the given attributes and set the ID on the model.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $query&#xA;    array $attributes;;d4,1592;;b2,0;;m\Illuminate\Database\Eloquent\Builder $query;;parray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f54;1591;65;1591;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;1593;11;1593;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="keyName;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f47;1593;55;1593;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f46;1591;52;1591;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f58;1593;63;1593;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isDirty;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2994;5;3013;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isDirty($attributes = null)&#xA;&#xA;Description&#xA;     Determine if the model or given attribute(s) have been modified.&#xA;&#xA;Parameters:&#xA;    array|string|null $attributes;;d4,2995;;b1,0;;marray|string|null $attributes;;p">
					<treenode node="attribute;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f32;3006;42;3006;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f28;2994;39;2994;;;;vposarray;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="dirty;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;2996;14;2996;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f17;2996;22;2996;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isFillable;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2244;5;2262;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isFillable($key)&#xA;&#xA;Description&#xA;     Determine if the given attribute may be mass assigned.&#xA;&#xA;Parameters:&#xA;    string $key;;d4,2245;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f31;2244;35;2244;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f27;2253;32;2253;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="unguarded;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f20;2246;30;2246;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isGuarded;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2270;5;2273;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isGuarded($key)&#xA;&#xA;Description&#xA;     Determine if the given key is guarded.&#xA;&#xA;Parameters:&#xA;    string $key;;d4,2271;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f30;2270;34;2270;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f30;2272;35;2272;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isJsonCastable;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;2698;5;2707;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isJsonCastable($key)&#xA;&#xA;Description&#xA;     Determine whether a value is JSON castable for inbound manipulation.&#xA;&#xA;Parameters:&#xA;    string $key;;d4,2699;;b2,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f38;2698;42;2698;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f12;2700;17;2700;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isUnguarded;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;2212;5;2215;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isUnguarded()&#xA;&#xA;Description&#xA;     Determine if current state is &quot;unguarded&quot;.;;d4,2213;;b1,5;;m">
					<treenode node="unguarded;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f23;2214;33;2214;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="joiningTable;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1047;5;1064;;;;vpos;;vstring;;r&#xA;Definition&#xA;    joiningTable($related)&#xA;&#xA;Description&#xA;     Get the joining table name for a many-to-many relation.&#xA;&#xA;Parameters:&#xA;    string $related;;d4,1048;;b1,0;;mstring $related;;p">
					<treenode node="base;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;1052;13;1052;;;;vposstring;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;1056;15;1056;;;;vposstring;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="related;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f33;1047;41;1047;;;;vposstring;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f42;1052;47;1052;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="jsonSerialize;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2358;5;2361;;;;vpos;;varray;;r&#xA;Definition&#xA;    jsonSerialize()&#xA;&#xA;Description&#xA;     Convert the object into something JSON serializable.;;d4,2359;;b1,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f15;2360;20;2360;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="load;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;701;5;712;;;;vpos;;v;;r&#xA;Definition&#xA;    load($relations)&#xA;&#xA;Description&#xA;     Eager load relations on the model.&#xA;&#xA;Parameters:&#xA;    array|string $relations;;d4,702;;b1,0;;marray|string $relations;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;707;14;707;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relations;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f25;701;35;701;;;;vposarray;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f17;707;22;707;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="morphedByMany;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1011;5;1021;;;;vpos;;v;;r&#xA;Definition&#xA;    morphedByMany($related, $name, $table = null, $foreignKey = null, $otherKey = null)&#xA;&#xA;Description&#xA;     Define a polymorphic, inverse many-to-many relationship.&#xA;&#xA;Parameters:&#xA;    string $related&#xA;    string $name&#xA;    string $table&#xA;    string $foreignKey&#xA;    string $otherKey;;d4,1012;;b1,0;;mstring $related;;pstring $name;;pstring $table;;pstring $foreignKey;;pstring $otherKey;;p">
					<treenode node="foreignKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f66;1011;77;1011;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f44;1011;49;1011;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="otherKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f86;1011;95;1011;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="related;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f34;1011;42;1011;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f51;1011;57;1011;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f37;1013;42;1013;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="morphMany;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;905;5;919;;;;vpos;;v;;r&#xA;Definition&#xA;    morphMany($related, $name, $type = null, $id = null, $localKey = null)&#xA;&#xA;Description&#xA;     Define a polymorphic one-to-many relationship.&#xA;&#xA;Parameters:&#xA;    string $related&#xA;    string $name&#xA;    string $type&#xA;    string $id&#xA;    string $localKey;;d4,906;;b1,0;;mstring $related;;pstring $name;;pstring $type;;pstring $id;;pstring $localKey;;p">
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f61;905;64;905;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="instance;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;907;17;907;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="localKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f73;905;82;905;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f40;905;45;905;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="related;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f30;905;38;905;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;914;14;914;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f27;912;32;912;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f47;905;52;905;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="morphOne;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;760;5;771;;;;vpos;;v;;r&#xA;Definition&#xA;    morphOne($related, $name, $type = null, $id = null, $localKey = null)&#xA;&#xA;Description&#xA;     Define a polymorphic one-to-one relationship.&#xA;&#xA;Parameters:&#xA;    string $related&#xA;    string $name&#xA;    string $type&#xA;    string $id&#xA;    string $localKey;;d4,761;;b1,0;;mstring $related;;pstring $name;;pstring $type;;pstring $id;;pstring $localKey;;p">
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f60;760;63;760;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="instance;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;762;17;762;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="localKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f72;760;81;760;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f39;760;44;760;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="related;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f29;760;37;760;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;766;14;766;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f27;764;32;764;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f46;760;51;760;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="morphTo;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;820;5;852;;;;vpos;;v;;r&#xA;Definition&#xA;    morphTo($name = null, $type = null, $id = null)&#xA;&#xA;Description&#xA;     Define a polymorphic, inverse one-to-one or many relationship.&#xA;&#xA;Parameters:&#xA;    string $name&#xA;    string $type&#xA;    string $id;;d4,821;;b1,0;;mstring $name;;pstring $type;;pstring $id;;p">
					<treenode node="caller;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f19;826;26;826;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="class;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f20;836;26;836;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f56;820;59;820;;;;vposbool;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="instance;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f12;846;21;846;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f28;820;33;820;;;;vposstring;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f27;831;32;831;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f42;820;47;820;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="morphToMany;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;975;5;999;;;;vpos;;v;;r&#xA;Definition&#xA;    morphToMany($related, $name, $table = null, $foreignKey = null, $otherKey = null, $inverse = false)&#xA;&#xA;Description&#xA;     Define a polymorphic many-to-many relationship.&#xA;&#xA;Parameters:&#xA;    string $related&#xA;    string $name&#xA;    string $table&#xA;    string $foreignKey&#xA;    string $otherKey&#xA;    bool $inverse;;d4,976;;b1,0;;mstring $related;;pstring $name;;pstring $table;;pstring $foreignKey;;pstring $otherKey;;pbool $inverse;;p">
					<treenode node="caller;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;977;15;977;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="foreignKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f64;975;75;975;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="instance;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;984;17;984;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="inverse;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f102;975;110;975;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f42;975;47;975;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="otherKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f84;975;93;975;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;991;14;991;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="related;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f32;975;40;975;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f49;975;55;975;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;977;23;977;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mutateAttribute;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;2662;5;2665;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    mutateAttribute($key, $value)&#xA;&#xA;Description&#xA;     Get the value of an attribute using its mutator.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    mixed $value;;d4,2663;;b2,0;;mstring $key;;pmixed $value;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f39;2662;43;2662;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f15;2664;20;2664;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f45;2662;51;2662;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mutateAttributeForArray;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;2674;5;2679;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    mutateAttributeForArray($key, $value)&#xA;&#xA;Description&#xA;     Get the value of an attribute using its mutator for array conversion.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    mixed $value;;d4,2675;;b2,0;;mstring $key;;pmixed $value;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f47;2674;51;2674;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f17;2676;22;2676;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f53;2674;59;2674;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="newBaseQueryBuilder;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;1863;5;1870;;;;vpos;;v;;r&#xA;Definition&#xA;    newBaseQueryBuilder()&#xA;&#xA;Description&#xA;     Get a new query builder instance for the connection.;;d4,1864;;b2,0;;m">
					<treenode node="conn;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;1865;13;1865;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="grammar;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;1867;16;1867;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f16;1865;21;1865;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="newCollection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1878;5;1881;;;;vpos;;v;;r&#xA;Definition&#xA;    newCollection(array $models = [])&#xA;&#xA;Description&#xA;     Create a new Eloquent Collection instance.&#xA;&#xA;Parameters:&#xA;    array $models;;d4,1879;;b1,0;;marray $models;;p">
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f40;1878;47;1878;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="newEloquentBuilder;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1853;5;1856;;;;vpos;;v;;r&#xA;Definition&#xA;    newEloquentBuilder($query)&#xA;&#xA;Description&#xA;     Create a new Eloquent query builder for the model.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query;;d4,1854;;b1,0;;m\Illuminate\Database\Query\Builder $query;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f39;1853;45;1853;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="newFromBuilder;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;482;5;491;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    newFromBuilder($attributes = [], $connection = null)&#xA;&#xA;Description&#xA;     Create a new model instance that is existing.&#xA;&#xA;Parameters:&#xA;    array $attributes&#xA;    string|null $connection;;d4,483;;b1,0;;marray $attributes;;pstring|null $connection;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f35;482;46;482;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="connection;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f53;482;64;482;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;484;14;484;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f17;484;22;484;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="newInstance;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;463;5;473;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    newInstance($attributes = [], $exists = false)&#xA;&#xA;Description&#xA;     Create a new instance of the given model.&#xA;&#xA;Parameters:&#xA;    array $attributes&#xA;    bool $exists;;d4,464;;b1,0;;marray $attributes;;pbool $exists;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f32;463;43;463;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="exists;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f50;463;57;463;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;468;14;468;;;;vposstatic;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="newPivot;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1892;5;1895;;;;vpos;;v;;r&#xA;Definition&#xA;    newPivot(Model $parent, array $attributes, $table, $exists)&#xA;&#xA;Description&#xA;     Create a new pivot model instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Model $parent&#xA;    array $attributes&#xA;    string $table&#xA;    bool $exists;;d4,1893;;b1,0;;m\Illuminate\Database\Eloquent\Model $parent;;parray $attributes;;pstring $table;;pbool $exists;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f50;1892;61;1892;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="exists;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f71;1892;78;1892;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parent;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f35;1892;42;1892;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f63;1892;69;1892;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="newQuery;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1780;5;1785;;;;vpos;;v;;r&#xA;Definition&#xA;    newQuery()&#xA;&#xA;Description&#xA;     Get a new query builder for the model's table.;;d4,1781;;b1,0;;m">
					<treenode node="builder;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;1782;16;1782;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f19;1782;24;1782;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="newQueryWithoutScope;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1793;5;1798;;;;vpos;;v;;r&#xA;Definition&#xA;    newQueryWithoutScope($scope)&#xA;&#xA;Description&#xA;     Get a new query instance without a given scope.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\ScopeInterface $scope;;d4,1794;;b1,0;;m\Illuminate\Database\Eloquent\ScopeInterface $scope;;p">
					<treenode node="builder;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f46;1795;54;1795;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="scope;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f41;1793;47;1793;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;1795;13;1795;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="newQueryWithoutScopes;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1805;5;1815;;;;vpos;;v;;r&#xA;Definition&#xA;    newQueryWithoutScopes()&#xA;&#xA;Description&#xA;     Get a new query builder that doesn't have any global scopes.;;d4,1806;;b1,0;;m">
					<treenode node="builder;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;1807;16;1807;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f19;1807;24;1807;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="observe;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;379;5;393;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    observe($class, $priority = 0)&#xA;&#xA;Description&#xA;     Register an observer with the Model.&#xA;&#xA;Parameters:&#xA;    object|string $class&#xA;    int $priority;;d4,380;;b1,5;;mobject|string $class;;pint $priority;;p">
					<treenode node="class;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f35;379;41;379;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="className;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;383;18;383;;;;vposbool;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="event;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f53;388;59;388;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="instance;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;381;17;381;;;;vposstatic;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="priority;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f43;379;52;379;;;;vposstatic;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="offsetExists;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;3288;5;3291;;;;vpos;;vbool;;r&#xA;Definition&#xA;    offsetExists($offset)&#xA;&#xA;Description&#xA;     Determine if the given attribute exists.&#xA;&#xA;Parameters:&#xA;    mixed $offset;;d4,3289;;b1,0;;mmixed $offset;;p">
					<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f33;3288;40;3288;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f21;3290;26;3290;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="offsetGet;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;3299;5;3302;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    offsetGet($offset)&#xA;&#xA;Description&#xA;     Get the value for a given offset.&#xA;&#xA;Parameters:&#xA;    mixed $offset;;d4,3300;;b1,0;;mmixed $offset;;p">
					<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f30;3299;37;3299;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f15;3301;20;3301;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="offsetSet;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;3311;5;3314;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    offsetSet($offset, $value)&#xA;&#xA;Description&#xA;     Set the value for a given offset.&#xA;&#xA;Parameters:&#xA;    mixed $offset&#xA;    mixed $value;;d4,3312;;b1,0;;mmixed $offset;;pmixed $value;;p">
					<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f30;3311;37;3311;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;3313;13;3313;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f39;3311;45;3311;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="offsetUnset;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;3322;5;3325;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    offsetUnset($offset)&#xA;&#xA;Description&#xA;     Unset the value for a given offset.&#xA;&#xA;Parameters:&#xA;    mixed $offset;;d4,3323;;b1,0;;mmixed $offset;;p">
					<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f32;3322;39;3322;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;3324;19;3324;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="on;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;623;5;633;;;;vpos;;v;;r&#xA;Definition&#xA;    on($connection = null)&#xA;&#xA;Description&#xA;     Begin querying the model on a given connection.&#xA;&#xA;Parameters:&#xA;    string|null $connection;;d4,624;;b1,5;;mstring|null $connection;;p">
					<treenode node="connection;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f30;623;41;623;;;;vposstatic;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="instance;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;628;17;628;;;;vposstatic;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="onWriteConnection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;640;5;645;;;;vpos;;v;;r&#xA;Definition&#xA;    onWriteConnection()&#xA;&#xA;Description&#xA;     Begin querying the model on the write connection.;;d4,641;;b1,5;;m">
					<treenode node="instance;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;642;17;642;;;;vposstatic;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="originalIsNumericallyEquivalent;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;3042;5;3049;;;;vpos;;vbool;;r&#xA;Definition&#xA;    originalIsNumericallyEquivalent($key)&#xA;&#xA;Description&#xA;     Determine if the new and old values for a given key are numerically equivalent.&#xA;&#xA;Parameters:&#xA;    string $key;;d4,3043;;b2,0;;mstring $key;;p">
					<treenode node="current;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;3044;16;3044;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f55;3042;59;3042;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="original;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;3046;17;3046;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f19;3044;24;3044;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="performDeleteOnModel;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;1149;5;1152;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    performDeleteOnModel()&#xA;&#xA;Description&#xA;     Perform the actual delete query on this model instance.;;d4,1150;;b2,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;1151;13;1151;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="performInsert;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;1545;5;1582;;;;vpos;;vbool;;r&#xA;Definition&#xA;    performInsert(Builder $query, array $options = [])&#xA;&#xA;Description&#xA;     Perform a model insert operation.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $query&#xA;    array $options;;d4,1546;;b2,0;;m\Illuminate\Database\Eloquent\Builder $query;;parray $options;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;1561;19;1561;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f59;1545;67;1545;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f45;1545;51;1545;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f12;1547;17;1547;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="performUpdate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;1504;5;1536;;;;vpos;;vbool;;r&#xA;Definition&#xA;    performUpdate(Builder $query, array $options = [])&#xA;&#xA;Description&#xA;     Perform a model update operation.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $query&#xA;    array $options&#xA;&#xA;Return:&#xA;   |null;;d4,1505;;b2,0;;m\Illuminate\Database\Eloquent\Builder $query;;parray $options;;p">
					<treenode node="dirty;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;1506;14;1506;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f59;1504;67;1504;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f45;1504;51;1504;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f17;1506;22;1506;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="push;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1419;5;1440;;;;vpos;;vbool;;r&#xA;Definition&#xA;    push()&#xA;&#xA;Description&#xA;     Save the model and all of its relationships.;;d4,1420;;b1,0;;m">
					<treenode node="model;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f46;1432;52;1432;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f37;1428;44;1428;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f13;1421;18;1421;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="query;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;612;5;615;;;;vpos;;v;;r&#xA;Definition&#xA;    query()&#xA;&#xA;Description&#xA;     Begin querying the model.;;d4,613;;b1,5;;m">
				</treenode>
				<treenode node="registerModelEvent;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f21;1276;5;1283;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    registerModelEvent($event, $callback, $priority = 0)&#xA;&#xA;Description&#xA;     Register a model event with the dispatcher.&#xA;&#xA;Parameters:&#xA;    string $event&#xA;    \Closure|string $callback&#xA;    int $priority;;d4,1277;;b2,5;;mstring $event;;p\Closure|string $callback;;pint $priority;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f57;1276;66;1276;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="dispatcher;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f26;1278;37;1278;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="event;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f49;1276;55;1276;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f12;1279;17;1279;;;;vposstring;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="priority;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f68;1276;77;1276;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="reguard;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;2202;5;2205;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    reguard()&#xA;&#xA;Description&#xA;     Enable the mass assignment restrictions.;;d4,2203;;b1,5;;m">
					<treenode node="unguarded;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f16;2204;26;2204;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="relationLoaded;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;3078;5;3081;;;;vpos;;vbool;;r&#xA;Definition&#xA;    relationLoaded($key)&#xA;&#xA;Description&#xA;     Determine if the given relation is loaded.&#xA;&#xA;Parameters:&#xA;    string $key;;d4,3079;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f35;3078;39;3078;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f38;3080;43;3080;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="relationsToArray;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2467;5;2510;;;;vpos;;varray;;r&#xA;Definition&#xA;    relationsToArray()&#xA;&#xA;Description&#xA;     Get the model's relationships in array form.;;d4,2468;;b1,0;;m">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;2469;19;2469;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="hidden;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;2471;15;2471;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f51;2473;55;2473;;;;vposstring;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f16;2482;25;2482;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="snakeAttributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f24;2495;40;2495;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;2471;23;2471;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f59;2473;65;2473;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="removeGlobalScopes;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1838;5;1845;;;;vpos;;v;;r&#xA;Definition&#xA;    removeGlobalScopes($builder)&#xA;&#xA;Description&#xA;     Remove all of the global scopes from an Eloquent builder.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $builder;;d4,1839;;b1,0;;m\Illuminate\Database\Eloquent\Builder $builder;;p">
					<treenode node="builder;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f39;1838;47;1838;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="scope;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f45;1840;51;1840;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f17;1840;22;1840;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="removeObservableEvents;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1332;5;1337;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    removeObservableEvents($observables)&#xA;&#xA;Description&#xA;     Remove an observable event name.&#xA;&#xA;Parameters:&#xA;    mixed $observables;;d4,1333;;b1,0;;mmixed $observables;;p">
					<treenode node="observables;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f43;1332;55;1332;;;;vposbool;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;1336;13;1336;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="removeTableFromKey;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;2291;5;2298;;;;vpos;;vstring;;r&#xA;Definition&#xA;    removeTableFromKey($key)&#xA;&#xA;Description&#xA;     Remove the table name from a given key.&#xA;&#xA;Parameters:&#xA;    string $key;;d4,2292;;b2,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f42;2291;46;2291;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="replicate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2910;5;2923;;;;vpos;;v;;r&#xA;Definition&#xA;    replicate(array $except = null)&#xA;&#xA;Description&#xA;     Clone the model into a new, non-existing instance.&#xA;&#xA;Parameters:&#xA;    array $except;;d4,2911;;b1,0;;marray $except;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;2918;19;2918;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="except;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f36;2910;43;2910;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="instance;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f13;2920;22;2920;;;;vposstatic;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f12;2913;17;2913;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="resolveConnection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;3149;5;3152;;;;vpos;;v;;r&#xA;Definition&#xA;    resolveConnection($connection = null)&#xA;&#xA;Description&#xA;     Resolve a connection instance.&#xA;&#xA;Parameters:&#xA;    string $connection;;d4,3150;;b1,5;;mstring $connection;;p">
					<treenode node="connection;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f45;3149;56;3149;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="resolver;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f23;3151;32;3151;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="save;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1448;5;1478;;;;vpos;;vbool;;r&#xA;Definition&#xA;    save(array $options = [])&#xA;&#xA;Description&#xA;     Save the model to the database.&#xA;&#xA;Parameters:&#xA;    array $options;;d4,1449;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f31;1448;39;1448;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;1450;14;1450;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="saved;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f12;1463;18;1463;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f17;1450;22;1450;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="saved;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;1173;5;1176;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    saved($callback, $priority = 0)&#xA;&#xA;Description&#xA;     Register a saved model event with the dispatcher.&#xA;&#xA;Parameters:&#xA;    \Closure|string $callback&#xA;    int $priority;;d4,1174;;b1,5;;m\Closure|string $callback;;pint $priority;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f33;1173;42;1173;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="priority;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f44;1173;53;1173;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="saving;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;1161;5;1164;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    saving($callback, $priority = 0)&#xA;&#xA;Description&#xA;     Register a saving model event with the dispatcher.&#xA;&#xA;Parameters:&#xA;    \Closure|string $callback&#xA;    int $priority;;d4,1162;;b1,5;;m\Closure|string $callback;;pint $priority;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f34;1161;43;1161;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="priority;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f45;1161;54;1161;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="serializeDate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;2876;5;2879;;;;vpos;;vstring;;r&#xA;Definition&#xA;    serializeDate(DateTime $date)&#xA;&#xA;Description&#xA;     Prepare a date for array / JSON serialization.&#xA;&#xA;Parameters:&#xA;    \DateTime $date;;d4,2877;;b2,0;;m\DateTime $date;;p">
					<treenode node="date;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f46;2876;51;2876;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f29;2878;34;2878;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setAppends;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2135;5;2138;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setAppends(array $appends)&#xA;&#xA;Description&#xA;     Set the accessors to append to model arrays.&#xA;&#xA;Parameters:&#xA;    array $appends;;d4,2136;;b1,0;;marray $appends;;p">
					<treenode node="appends;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f37;2135;45;2135;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;2137;13;2137;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setAttribute;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2765;5;2788;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setAttribute($key, $value)&#xA;&#xA;Description&#xA;     Set a given attribute on the model.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    mixed $value;;d4,2766;;b1,0;;mstring $key;;pmixed $value;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f33;2765;37;2765;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="method;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f12;2771;19;2771;;;;vposstring;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f12;2770;17;2770;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f39;2765;45;2765;;;;vposstring;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setConnection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;3136;5;3141;;;;vpos;;v;;r&#xA;Definition&#xA;    setConnection($name)&#xA;&#xA;Description&#xA;     Set the connection associated with the model.&#xA;&#xA;Parameters:&#xA;    string $name;;d4,3137;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f34;3136;39;3136;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;3138;13;3138;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setConnectionResolver;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;3170;5;3173;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setConnectionResolver(Resolver $resolver)&#xA;&#xA;Description&#xA;     Set the connection resolver instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\ConnectionResolverInterface $resolver;;d4,3171;;b1,5;;m\Illuminate\Database\ConnectionResolverInterface $resolver;;p">
					<treenode node="resolver;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f58;3170;67;3170;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setCreatedAt;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1719;5;1722;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setCreatedAt($value)&#xA;&#xA;Description&#xA;     Set the value of the &quot;created at&quot; attribute.&#xA;&#xA;Parameters:&#xA;    mixed $value;;d4,1720;;b1,0;;mmixed $value;;p">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;1721;13;1721;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f33;1719;39;1719;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setDateFormat;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2897;5;2902;;;;vpos;;v;;r&#xA;Definition&#xA;    setDateFormat($format)&#xA;&#xA;Description&#xA;     Set the date format used by the model.&#xA;&#xA;Parameters:&#xA;    string $format;;d4,2898;;b1,0;;mstring $format;;p">
					<treenode node="format;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f34;2897;41;2897;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;2899;13;2899;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setEventDispatcher;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;3201;5;3204;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setEventDispatcher(Dispatcher $dispatcher)&#xA;&#xA;Description&#xA;     Set the event dispatcher instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Contracts\Events\Dispatcher $dispatcher;;d4,3202;;b1,5;;m\Illuminate\Contracts\Events\Dispatcher $dispatcher;;p">
					<treenode node="dispatcher;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f57;3201;68;3201;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setHidden;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2077;5;2080;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setHidden(array $hidden)&#xA;&#xA;Description&#xA;     Set the hidden attributes for the model.&#xA;&#xA;Parameters:&#xA;    array $hidden;;d4,2078;;b1,0;;marray $hidden;;p">
					<treenode node="hidden;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f36;2077;43;2077;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;2079;13;2079;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setIncrementing;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2337;5;2340;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setIncrementing($value)&#xA;&#xA;Description&#xA;     Set whether IDs are incrementing.&#xA;&#xA;Parameters:&#xA;    bool $value;;d4,2338;;b1,0;;mbool $value;;p">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;2339;13;2339;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f36;2337;42;2337;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setKeyName;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1958;5;1961;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setKeyName($key)&#xA;&#xA;Description&#xA;     Set the primary key for the model.&#xA;&#xA;Parameters:&#xA;    string $key;;d4,1959;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f31;1958;35;1958;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;1960;13;1960;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setKeysForSaveQuery;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;1658;5;1663;;;;vpos;;v;;r&#xA;Definition&#xA;    setKeysForSaveQuery(Builder $query)&#xA;&#xA;Description&#xA;     Set the keys for a save update query.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $query;;d4,1659;;b2,0;;m\Illuminate\Database\Eloquent\Builder $query;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f51;1658;57;1658;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f22;1660;27;1660;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setObservableEvents;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1308;5;1311;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setObservableEvents(array $observables)&#xA;&#xA;Description&#xA;     Set the observable event names.&#xA;&#xA;Parameters:&#xA;    array $observables;;d4,1309;;b1,0;;marray $observables;;p">
					<treenode node="observables;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f46;1308;58;1308;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;1310;13;1310;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setPerPage;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2046;5;2049;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setPerPage($perPage)&#xA;&#xA;Description&#xA;     Set the number of models to return per page.&#xA;&#xA;Parameters:&#xA;    int $perPage;;d4,2047;;b1,0;;mint $perPage;;p">
					<treenode node="perPage;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f31;2046;39;2046;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;2048;13;2048;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setRawAttributes;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2942;5;2949;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setRawAttributes(array $attributes, $sync = false)&#xA;&#xA;Description&#xA;     Set the array of model attributes. No checking is done.&#xA;&#xA;Parameters:&#xA;    array $attributes&#xA;    bool $sync;;d4,2943;;b1,0;;marray $attributes;;pbool $sync;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f43;2942;54;2942;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sync;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f56;2942;61;2942;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;2944;13;2944;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setRelation;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;3090;5;3095;;;;vpos;;v;;r&#xA;Definition&#xA;    setRelation($relation, $value)&#xA;&#xA;Description&#xA;     Set the specific relationship in the model.&#xA;&#xA;Parameters:&#xA;    string $relation&#xA;    mixed $value;;d4,3091;;b1,0;;mstring $relation;;pmixed $value;;p">
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f32;3090;41;3090;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;3092;13;3092;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f43;3090;49;3090;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setRelations;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;3103;5;3108;;;;vpos;;v;;r&#xA;Definition&#xA;    setRelations(array $relations)&#xA;&#xA;Description&#xA;     Set the entire relations array on the model.&#xA;&#xA;Parameters:&#xA;    array $relations;;d4,3104;;b1,0;;marray $relations;;p">
					<treenode node="relations;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f39;3103;49;3103;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;3105;13;3105;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setTable;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1917;5;1920;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setTable($table)&#xA;&#xA;Description&#xA;     Set the table associated with the model.&#xA;&#xA;Parameters:&#xA;    string $table;;d4,1918;;b1,0;;mstring $table;;p">
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f29;1917;35;1917;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;1919;13;1919;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setTouchedRelations;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2316;5;2319;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setTouchedRelations(array $touches)&#xA;&#xA;Description&#xA;     Set the relationships that are touched on save.&#xA;&#xA;Parameters:&#xA;    array $touches;;d4,2317;;b1,0;;marray $touches;;p">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;2318;13;2318;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="touches;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f46;2316;54;2316;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setUpdatedAt;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1730;5;1733;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setUpdatedAt($value)&#xA;&#xA;Description&#xA;     Set the value of the &quot;updated at&quot; attribute.&#xA;&#xA;Parameters:&#xA;    mixed $value;;d4,1731;;b1,0;;mmixed $value;;p">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;1732;13;1732;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f33;1730;39;1730;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setVisible;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2111;5;2114;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setVisible(array $visible)&#xA;&#xA;Description&#xA;     Set the visible attributes for the model.&#xA;&#xA;Parameters:&#xA;    array $visible;;d4,2112;;b1,0;;marray $visible;;p">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;2113;13;2113;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="visible;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f37;2111;45;2111;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="syncOriginal;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2968;5;2973;;;;vpos;;v;;r&#xA;Definition&#xA;    syncOriginal()&#xA;&#xA;Description&#xA;     Sync the original attributes with the current.;;d4,2969;;b1,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;2970;13;2970;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="syncOriginalAttribute;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2981;5;2986;;;;vpos;;v;;r&#xA;Definition&#xA;    syncOriginalAttribute($attribute)&#xA;&#xA;Description&#xA;     Sync a single original attribute with its current value.&#xA;&#xA;Parameters:&#xA;    string $attribute;;d4,2982;;b1,0;;mstring $attribute;;p">
					<treenode node="attribute;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f42;2981;52;2981;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;2983;13;2983;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="toArray;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2368;5;2373;;;;vpos;;varray;;r&#xA;Definition&#xA;    toArray()&#xA;&#xA;Description&#xA;     Convert the model instance to an array.;;d4,2369;;b1,0;;m">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;2370;19;2370;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f22;2370;27;2370;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="toJson;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2348;5;2351;;;;vpos;;vstring;;r&#xA;Definition&#xA;    toJson($options = 0)&#xA;&#xA;Description&#xA;     Convert the model instance to JSON.&#xA;&#xA;Parameters:&#xA;    int $options;;d4,2349;;b1,0;;mint $options;;p">
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f27;2348;35;2348;;;;vposstring;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f27;2350;32;2350;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="totallyGuarded;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;2280;5;2283;;;;vpos;;vbool;;r&#xA;Definition&#xA;    totallyGuarded()&#xA;&#xA;Description&#xA;     Determine if the model is totally guarded.;;d4,2281;;b1,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f21;2282;26;2282;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="touch;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1684;5;1693;;;;vpos;;vbool;;r&#xA;Definition&#xA;    touch()&#xA;&#xA;Description&#xA;     Update the model's update timestamp.;;d4,1685;;b1,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f13;1686;18;1686;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="touches;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1624;5;1627;;;;vpos;;vbool;;r&#xA;Definition&#xA;    touches($relation)&#xA;&#xA;Description&#xA;     Determine if the model touches a given relation.&#xA;&#xA;Parameters:&#xA;    string $relation;;d4,1625;;b1,0;;mstring $relation;;p">
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f28;1624;37;1624;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f35;1626;40;1626;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="touchOwners;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1603;5;1616;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    touchOwners()&#xA;&#xA;Description&#xA;     Touch the owning relations of the model.;;d4,1604;;b1,0;;m">
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f35;1605;44;1605;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f17;1605;22;1605;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="unguard;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;2192;5;2195;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    unguard($state = true)&#xA;&#xA;Description&#xA;     Disable all mass assignable restrictions.&#xA;&#xA;Parameters:&#xA;    bool $state;;d4,2193;;b1,5;;mbool $state;;p">
					<treenode node="state;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f35;2192;41;2192;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="unguarded;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f16;2194;26;2194;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="unguarded;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;2223;5;2236;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    unguarded(callable $callback)&#xA;&#xA;Description&#xA;     Run the given callable while being unguarded.&#xA;&#xA;Parameters:&#xA;    callable $callback;;d4,2224;;b1,5;;mcallable $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f46;2223;55;2223;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="result;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;2231;15;2231;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="unguarded;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f20;2225;30;2225;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="unsetConnectionResolver;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;3180;5;3183;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    unsetConnectionResolver()&#xA;&#xA;Description&#xA;     Unset the connection resolver for models.;;d4,3181;;b1,5;;m">
					<treenode node="resolver;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f16;3182;25;3182;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="unsetEventDispatcher;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;3211;5;3214;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    unsetEventDispatcher()&#xA;&#xA;Description&#xA;     Unset the event dispatcher for models.;;d4,3212;;b1,5;;m">
					<treenode node="dispatcher;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f16;3213;27;3213;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="update;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1405;5;1412;;;;vpos;;vbool;;r&#xA;Definition&#xA;    update(array $attributes = [])&#xA;&#xA;Description&#xA;     Update the model in the database.&#xA;&#xA;Parameters:&#xA;    array $attributes&#xA;&#xA;Return:&#xA;   |int;;d4,1406;;b1,0;;marray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f33;1405;44;1405;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f13;1407;18;1407;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="updated;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;1197;5;1200;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    updated($callback, $priority = 0)&#xA;&#xA;Description&#xA;     Register an updated model event with the dispatcher.&#xA;&#xA;Parameters:&#xA;    \Closure|string $callback&#xA;    int $priority;;d4,1198;;b1,5;;m\Closure|string $callback;;pint $priority;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f35;1197;44;1197;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="priority;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f46;1197;55;1197;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="updateOrCreate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;598;5;605;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    updateOrCreate(array $attributes, array $values = [])&#xA;&#xA;Description&#xA;     Create or update a record matching the attributes, and fill it with values.&#xA;&#xA;Parameters:&#xA;    array $attributes&#xA;    array $values;;d4,599;;b1,5;;marray $attributes;;parray $values;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f48;598;59;598;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="instance;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;600;17;600;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f67;598;74;598;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="updateTimestamps;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;1700;5;1711;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    updateTimestamps()&#xA;&#xA;Description&#xA;     Update the creation and update timestamps.;;d4,1701;;b2,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f16;1702;21;1702;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="time;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;1702;13;1702;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="updating;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;1185;5;1188;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    updating($callback, $priority = 0)&#xA;&#xA;Description&#xA;     Register an updating model event with the dispatcher.&#xA;&#xA;Parameters:&#xA;    \Closure|string $callback&#xA;    int $priority;;d4,1186;;b1,5;;m\Closure|string $callback;;pint $priority;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f36;1185;45;1185;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="priority;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f47;1185;56;1185;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="usesTimestamps;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;1998;5;2001;;;;vpos;;vbool;;r&#xA;Definition&#xA;    usesTimestamps()&#xA;&#xA;Description&#xA;     Determine if the model uses timestamps.;;d4,1999;;b1,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f15;2000;20;2000;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="with;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;720;5;729;;;;vpos;;v;;r&#xA;Definition&#xA;    with($relations)&#xA;&#xA;Description&#xA;     Begin querying a model with eager loading.&#xA;&#xA;Parameters:&#xA;    array|string $relations;;d4,721;;b1,5;;marray|string $relations;;p">
					<treenode node="instance;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f8;726;17;726;;;;vposstatic;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relations;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f32;720;42;720;;;;vposarray;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="appends;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;116;22;116;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;81;25;81;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="booted;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f21;214;28;214;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="casts;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;151;20;151;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="connection;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;39;25;39;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="dateFormat;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;144;25;144;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="dates;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;137;20;137;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="dispatcher;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f21;207;32;207;;;;vpos;;v;;r&#xA;Description&#xA;     The event dispatcher instance.;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="exists;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;186;18;186;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="fillable;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;123;23;123;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="globalScopes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f21;221;34;221;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="guarded;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;130;22;130;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="hidden;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;102;21;102;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="incrementing;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;67;24;67;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="manyMethods;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;242;30;242;;;;vposarray;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
				<treenode node="morphClass;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;179;25;179;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="mutatorCache;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f21;235;34;235;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="observables;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;165;26;165;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="original;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;88;23;88;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="perPage;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;60;22;60;;;;vposint;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="primaryKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;53;25;53;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="relations;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;95;24;95;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="resolver;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f21;200;30;200;;;;vpos;;v;;r&#xA;Description&#xA;     The connection resolver instance.;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="snakeAttributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f18;193;34;193;;;;vposbool;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;46;20;46;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="timestamps;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f11;74;22;74;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="touches;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;158;22;158;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="unguarded;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f21;228;31;228;;;;vposbool;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="visible;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;109;22;109;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="with;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php;f14;172;19;172;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="ModelIdentifier;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Database\ModelIdentifier.php;f0;4;1;32;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Database\ModelIdentifier.php;f11;27;5;31;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct($class, $id)&#xA;&#xA;Description&#xA;     Create a new model identifier.&#xA;&#xA;Parameters:&#xA;    string $class&#xA;    mixed $id;;d4,28;;b1,0;;mstring $class;;pmixed $id;;p">
					<treenode node="class;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Database\ModelIdentifier.php;f32;27;38;27;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Database\ModelIdentifier.php;f40;27;43;27;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="class;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Database\ModelIdentifier.php;f11;11;17;11;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Database\ModelIdentifier.php;f11;18;14;18;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ModelNotFoundException;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\ModelNotFoundException.php;f0;6;1;39;;;;vpos;;vRuntimeException;;c;;r;;d0,7;;b0,0;;m">
				<treenode node="getModel;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\ModelNotFoundException.php;f11;35;5;38;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getModel()&#xA;&#xA;Description&#xA;     Get the affected Eloquent model.;;d4,36;;b1,0;;m">
				</treenode>
				<treenode node="setModel;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\ModelNotFoundException.php;f11;21;5;28;;;;vpos;;v;;r&#xA;Definition&#xA;    setModel($model)&#xA;&#xA;Description&#xA;     Set the affected Eloquent model.&#xA;&#xA;Parameters:&#xA;    string $model;;d4,22;;b1,0;;mstring $model;;p">
					<treenode node="model;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\ModelNotFoundException.php;f29;21;35;21;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="model;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\ModelNotFoundException.php;f14;13;20;13;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="MoFileDumper;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\MoFileDumper.php;f0;21;1;81;;;;vpos;;vFileDumper;;c;;r&#xA;Definition&#xA;    class MoFileDumper extends FileDumper&#xA;&#xA;Description&#xA;     MoFileDumper generates a gettext formatted string representation of a message catalogue.;;d0,22;;b0,0;;m">
				<treenode node="formatCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\MoFileDumper.php;f11;26;5;67;;;;vpos;;v;;r&#xA;Definition&#xA;    formatCatalogue(MessageCatalogue $messages, $domain, array $options = array())&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,27;;b1,0;;mmessages;;pdomain;;poptions;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\MoFileDumper.php;f64;26;71;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\MoFileDumper.php;f53;26;62;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\MoFileDumper.php;f79;26;87;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getExtension;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\MoFileDumper.php;f14;72;5;75;;;;vpos;;v;;r&#xA;Definition&#xA;    getExtension()&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,73;;b2,0;;m">
				</treenode>
				<treenode node="writeLong;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\MoFileDumper.php;f12;77;5;80;;;;vpos;;v;;r;;d4,78;;b3,0;;mstr;;p">
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\MoFileDumper.php;f31;77;35;77;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="MoFileDumperTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\MoFileDumperTest.php;f0;17;1;28;;;;vpos;;vTestCase;;c;;r;;d0,18;;b0,0;;m">
				<treenode node="testFormatCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\MoFileDumperTest.php;f11;19;5;27;;;;vpos;;v;;r;;d4,20;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MoFileLoader;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\MoFileLoader.php;f0;18;1;144;;;;vpos;;vFileLoader;;c;;r&#xA;Definition&#xA;    class MoFileLoader extends FileLoader&#xA;&#xA;Description&#xA;      copyright Copyright (c) 2010, Union of RAD http://union-of-rad.org (http://lithify.me/);;d0,19;;b0,0;;m">
				<treenode node="MO_BIG_ENDIAN_MAGIC;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\MoFileLoader.php;f9;30;29;30;;;;vpos;;v;;r&#xA;Description&#xA;     Magic used for validating the format of a MO file as well as detecting if the machine used to create that file was big endian.;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="MO_HEADER_SIZE;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\MoFileLoader.php;f9;35;24;35;;;;vpos;;v;;r&#xA;Description&#xA;     The size of the header of a MO file in bytes.;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="MO_LITTLE_ENDIAN_MAGIC;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\MoFileLoader.php;f9;24;32;24;;;;vpos;;v;;r&#xA;Description&#xA;     Magic used for validating the format of a MO file as well as detecting if the machine used to create that file was little endian.;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="loadResource;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\MoFileLoader.php;f14;43;5;130;;;;vpos;;v;;r&#xA;Definition&#xA;    loadResource($resource)&#xA;&#xA;Description&#xA;     Parses machine object (MO) format, independent of the machine's endian it was created on. Both 32bit and 64bit systems are supported.;;d4,44;;b2,0;;mresource;;p">
					<treenode node="resource;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\MoFileLoader.php;f36;43;45;43;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="readLong;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\MoFileLoader.php;f12;137;57;137;;;;vpos;;v;;r&#xA;Description&#xA;     Reads an unsigned long from stream respecting endianness.&#xA;&#xA;Parameters:&#xA;    resource $stream;;d-1,-1;;b3,0;;mstream;;pisBigEndian;;p">
					<treenode node="isBigEndian;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\MoFileLoader.php;f44;137;56;137;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="stream;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\MoFileLoader.php;f30;137;37;137;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isBigEndian;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\MoFileLoader.php;f25;139;37;139;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="result;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\MoFileLoader.php;f8;139;15;139;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="stream;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\MoFileLoader.php;f59;139;66;139;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="MoFileLoaderTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\MoFileLoaderTest.php;f0;17;1;71;;;;vpos;;vTestCase;;c;;r;;d0,18;;b0,0;;m">
				<treenode node="testLoad;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\MoFileLoaderTest.php;f11;19;5;28;;;;vpos;;v;;r;;d4,20;;b1,0;;m">
				</treenode>
				<treenode node="testLoadEmptyTranslation;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\MoFileLoaderTest.php;f11;61;5;70;;;;vpos;;v;;r;;d4,62;;b1,0;;m">
				</treenode>
				<treenode node="testLoadInvalidResource;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\MoFileLoaderTest.php;f11;54;5;59;;;;vpos;;v;;r&#xA;Definition&#xA;    testLoadInvalidResource()&#xA;&#xA;Description&#xA;      expectedException \Symfony\Component\Translation\Exception\InvalidResourceException;;d4,55;;b1,0;;m">
				</treenode>
				<treenode node="testLoadNonExistingResource;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\MoFileLoaderTest.php;f11;44;5;49;;;;vpos;;v;;r&#xA;Definition&#xA;    testLoadNonExistingResource()&#xA;&#xA;Description&#xA;      expectedException \Symfony\Component\Translation\Exception\NotFoundResourceException;;d4,45;;b1,0;;m">
				</treenode>
				<treenode node="testLoadPlurals;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\MoFileLoaderTest.php;f11;30;5;39;;;;vpos;;v;;r;;d4,31;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MorphMany;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphMany.php;f0;6;1;46;;;;vpos;;vMorphOneOrMany;;c;;r;;d0,7;;b0,0;;m">
				<treenode node="getResults;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphMany.php;f11;13;5;16;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    getResults()&#xA;&#xA;Description&#xA;     Get the results of the relationship.;;d4,14;;b1,0;;m">
				</treenode>
				<treenode node="initRelation;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphMany.php;f11;25;5;32;;;;vpos;;varray;;r&#xA;Definition&#xA;    initRelation(array $models, $relation)&#xA;&#xA;Description&#xA;     Initialize the relation on a set of models.&#xA;&#xA;Parameters:&#xA;    array $models&#xA;    string $relation;;d4,26;;b1,0;;marray $models;;pstring $relation;;p">
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphMany.php;f39;25;46;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphMany.php;f48;25;57;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="match;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphMany.php;f11;42;5;45;;;;vpos;;varray;;r&#xA;Definition&#xA;    match(array $models, Collection $results, $relation)&#xA;&#xA;Description&#xA;     Match the eagerly loaded results to their parents.&#xA;&#xA;Parameters:&#xA;    array $models&#xA;    \Illuminate\Database\Eloquent\Collection $results&#xA;    string $relation;;d4,43;;b1,0;;marray $models;;p\Illuminate\Database\Eloquent\Collection $results;;pstring $relation;;p">
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphMany.php;f32;42;39;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphMany.php;f62;42;71;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="results;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphMany.php;f52;42;60;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="MorphOne;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOne.php;f0;6;1;46;;;;vpos;;vMorphOneOrMany;;c;;r;;d0,7;;b0,0;;m">
				<treenode node="getResults;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOne.php;f11;13;5;16;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    getResults()&#xA;&#xA;Description&#xA;     Get the results of the relationship.;;d4,14;;b1,0;;m">
				</treenode>
				<treenode node="initRelation;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOne.php;f11;25;5;32;;;;vpos;;varray;;r&#xA;Definition&#xA;    initRelation(array $models, $relation)&#xA;&#xA;Description&#xA;     Initialize the relation on a set of models.&#xA;&#xA;Parameters:&#xA;    array $models&#xA;    string $relation;;d4,26;;b1,0;;marray $models;;pstring $relation;;p">
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOne.php;f39;25;46;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOne.php;f48;25;57;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="match;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOne.php;f11;42;5;45;;;;vpos;;varray;;r&#xA;Definition&#xA;    match(array $models, Collection $results, $relation)&#xA;&#xA;Description&#xA;     Match the eagerly loaded results to their parents.&#xA;&#xA;Parameters:&#xA;    array $models&#xA;    \Illuminate\Database\Eloquent\Collection $results&#xA;    string $relation;;d4,43;;b1,0;;marray $models;;p\Illuminate\Database\Eloquent\Collection $results;;pstring $relation;;p">
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOne.php;f32;42;39;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOne.php;f62;42;71;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="results;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOne.php;f52;42;60;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="MorphOneOrMany;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOneOrMany.php;f9;7;1;232;;;;vpos;;vHasOneOrMany;;c;;r;;d0,8;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOneOrMany.php;f11;33;5;40;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct(Builder $query, Model $parent, $type, $id, $localKey)&#xA;&#xA;Description&#xA;     Create a new morph one or many relationship instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $query&#xA;    \Illuminate\Database\Eloquent\Model $parent&#xA;    string $type&#xA;    string $id&#xA;    string $localKey;;d4,34;;b1,0;;m\Illuminate\Database\Eloquent\Builder $query;;p\Illuminate\Database\Eloquent\Model $parent;;pstring $type;;pstring $id;;pstring $localKey;;p">
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOneOrMany.php;f70;33;73;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="localKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOneOrMany.php;f75;33;84;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parent;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOneOrMany.php;f54;33;61;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOneOrMany.php;f40;33;46;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOneOrMany.php;f63;33;68;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addConstraints;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOneOrMany.php;f11;47;5;54;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    addConstraints()&#xA;&#xA;Description&#xA;     Set the base constraints on the relation query.;;d4,48;;b1,0;;m">
				</treenode>
				<treenode node="addEagerConstraints;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOneOrMany.php;f11;76;5;81;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    addEagerConstraints(array $models)&#xA;&#xA;Description&#xA;     Set the constraints for an eager load of the relation.&#xA;&#xA;Parameters:&#xA;    array $models;;d4,77;;b1,0;;marray $models;;p">
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOneOrMany.php;f46;76;53;76;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="create;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOneOrMany.php;f11;176;5;188;;;;vpos;;v;;r&#xA;Definition&#xA;    create(array $attributes)&#xA;&#xA;Description&#xA;     Create a new instance of the related model.&#xA;&#xA;Parameters:&#xA;    array $attributes;;d4,177;;b1,0;;marray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOneOrMany.php;f33;176;44;176;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="findOrNew;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOneOrMany.php;f11;103;5;115;;;;vpos;;v;;r&#xA;Definition&#xA;    findOrNew($id, $columns = ['*'])&#xA;&#xA;Description&#xA;     Find a related model by its primary key or return new instance of the related model.&#xA;&#xA;Parameters:&#xA;    mixed $id&#xA;    array $columns;;d4,104;;b1,0;;mmixed $id;;parray $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOneOrMany.php;f35;103;43;103;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOneOrMany.php;f30;103;33;103;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="firstOrCreate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOneOrMany.php;f11;143;5;150;;;;vpos;;v;;r&#xA;Definition&#xA;    firstOrCreate(array $attributes)&#xA;&#xA;Description&#xA;     Get the first related record matching the attributes or create it.&#xA;&#xA;Parameters:&#xA;    array $attributes;;d4,144;;b1,0;;marray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOneOrMany.php;f40;143;51;143;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="firstOrNew;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOneOrMany.php;f11;123;5;135;;;;vpos;;v;;r&#xA;Definition&#xA;    firstOrNew(array $attributes)&#xA;&#xA;Description&#xA;     Get the first related model record matching the attributes or instantiate it.&#xA;&#xA;Parameters:&#xA;    array $attributes;;d4,124;;b1,0;;marray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOneOrMany.php;f37;123;48;123;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getMorphClass;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOneOrMany.php;f11;228;5;231;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getMorphClass()&#xA;&#xA;Description&#xA;     Get the class name of the parent model.;;d4,229;;b1,0;;m">
				</treenode>
				<treenode node="getMorphType;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOneOrMany.php;f11;208;5;211;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getMorphType()&#xA;&#xA;Description&#xA;     Get the foreign key &quot;type&quot; name.;;d4,209;;b1,0;;m">
				</treenode>
				<treenode node="getPlainMorphType;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOneOrMany.php;f11;218;5;221;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getPlainMorphType()&#xA;&#xA;Description&#xA;     Get the plain morph type name without the table.;;d4,219;;b1,0;;m">
				</treenode>
				<treenode node="getRelationCountQuery;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOneOrMany.php;f11;63;5;68;;;;vpos;;v;;r&#xA;Definition&#xA;    getRelationCountQuery(Builder $query, Builder $parent)&#xA;&#xA;Description&#xA;     Get the relationship count query.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $query&#xA;    \Illuminate\Database\Eloquent\Builder $parent;;d4,64;;b1,0;;m\Illuminate\Database\Eloquent\Builder $query;;p\Illuminate\Database\Eloquent\Builder $parent;;p">
					<treenode node="parent;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOneOrMany.php;f66;63;73;63;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOneOrMany.php;f50;63;56;63;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="save;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOneOrMany.php;f11;89;5;94;;;;vpos;;v;;r&#xA;Definition&#xA;    save(Model $model)&#xA;&#xA;Description&#xA;     Attach a model instance to the parent model.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Model $model;;d4,90;;b1,0;;m\Illuminate\Database\Eloquent\Model $model;;p">
					<treenode node="model;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOneOrMany.php;f31;89;37;89;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setForeignAttributesForCreate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOneOrMany.php;f14;196;5;201;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setForeignAttributesForCreate(Model $model)&#xA;&#xA;Description&#xA;     Set the foreign ID and type for creating a related model.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Model $model;;d4,197;;b2,0;;m\Illuminate\Database\Eloquent\Model $model;;p">
					<treenode node="model;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOneOrMany.php;f59;196;65;196;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="updateOrCreate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOneOrMany.php;f11;159;5;168;;;;vpos;;v;;r&#xA;Definition&#xA;    updateOrCreate(array $attributes, array $values = [])&#xA;&#xA;Description&#xA;     Create or update a related record matching the attributes, and fill it with values.&#xA;&#xA;Parameters:&#xA;    array $attributes&#xA;    array $values;;d4,160;;b1,0;;marray $attributes;;parray $values;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOneOrMany.php;f41;159;52;159;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOneOrMany.php;f60;159;67;159;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="morphClass;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOneOrMany.php;f14;21;25;21;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="morphType;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOneOrMany.php;f14;14;24;14;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="MorphPivot;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphPivot.php;f0;6;1;78;;;;vpos;;vPivot;;c;;r;;d0,7;;b0,0;;m">
				<treenode node="delete;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphPivot.php;f11;44;5;51;;;;vpos;;vint;;r&#xA;Definition&#xA;    delete()&#xA;&#xA;Description&#xA;     Delete the pivot model record from the database.;;d4,45;;b1,0;;m">
				</treenode>
				<treenode node="setKeysForSaveQuery;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphPivot.php;f14;32;5;37;;;;vpos;;v;;r&#xA;Definition&#xA;    setKeysForSaveQuery(Builder $query)&#xA;&#xA;Description&#xA;     Set the keys for a save update query.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $query;;d4,33;;b2,0;;m\Illuminate\Database\Eloquent\Builder $query;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphPivot.php;f51;32;57;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setMorphClass;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphPivot.php;f11;72;5;77;;;;vpos;;v;;r&#xA;Definition&#xA;    setMorphClass($morphClass)&#xA;&#xA;Description&#xA;     Set the morph class for the pivot.&#xA;&#xA;Parameters:&#xA;    string $morphClass;;d4,73;;b1,0;;mstring $morphClass;;p">
					<treenode node="morphClass;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphPivot.php;f34;72;45;72;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setMorphType;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphPivot.php;f11;59;5;64;;;;vpos;;v;;r&#xA;Definition&#xA;    setMorphType($morphType)&#xA;&#xA;Description&#xA;     Set the morph type for the pivot.&#xA;&#xA;Parameters:&#xA;    string $morphType;;d4,60;;b1,0;;mstring $morphType;;p">
					<treenode node="morphType;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphPivot.php;f33;59;43;59;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="morphClass;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphPivot.php;f14;24;25;24;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="morphType;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphPivot.php;f14;15;24;15;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="MorphTo;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f0;8;1;266;;;;vpos;;vBelongsTo;;c;;r;;d0,9;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f11;49;5;54;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct(Builder $query, Model $parent, $foreignKey, $otherKey, $type, $relation)&#xA;&#xA;Description&#xA;     Create a new morph to relationship instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $query&#xA;    \Illuminate\Database\Eloquent\Model $parent&#xA;    string $foreignKey&#xA;    string $otherKey&#xA;    string $type&#xA;    string $relation;;d4,50;;b1,0;;m\Illuminate\Database\Eloquent\Builder $query;;p\Illuminate\Database\Eloquent\Model $parent;;pstring $foreignKey;;pstring $otherKey;;pstring $type;;pstring $relation;;p">
					<treenode node="foreignKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f63;49;74;49;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="otherKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f76;49;85;49;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parent;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f54;49;61;49;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f40;49;46;49;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f94;49;103;49;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f87;49;92;49;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addEagerConstraints;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f11;76;5;79;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    addEagerConstraints(array $models)&#xA;&#xA;Description&#xA;     Set the constraints for an eager load of the relation.&#xA;&#xA;Parameters:&#xA;    array $models;;d4,77;;b1,0;;marray $models;;p">
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f46;76;53;76;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="associate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f11;115;5;122;;;;vpos;;v;;r&#xA;Definition&#xA;    associate($model)&#xA;&#xA;Description&#xA;     Associate the model instance to the given parent.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Model $model;;d4,116;;b1,0;;m\Illuminate\Database\Eloquent\Model $model;;p">
					<treenode node="model;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f30;115;36;115;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="buildDictionary;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f14;87;5;94;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    buildDictionary(Collection $models)&#xA;&#xA;Description&#xA;     Build a dictionary with the models.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Collection $models;;d4,88;;b2,0;;m\Illuminate\Database\Eloquent\Collection $models;;p">
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f50;87;57;87;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="createModelByType;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f11;213;5;216;;;;vpos;;v;;r&#xA;Definition&#xA;    createModelByType($type)&#xA;&#xA;Description&#xA;     Create a new model instance by type.&#xA;&#xA;Parameters:&#xA;    string $type;;d4,214;;b1,0;;mstring $type;;p">
					<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f38;213;43;213;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dissociate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f11;129;5;136;;;;vpos;;v;;r&#xA;Definition&#xA;    dissociate()&#xA;&#xA;Description&#xA;     Dissociate previously associated model from the given parent.;;d4,130;;b1,0;;m">
				</treenode>
				<treenode node="gatherKeysByType;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f14;197;5;205;;;;vpos;;varray;;r&#xA;Definition&#xA;    gatherKeysByType($type)&#xA;&#xA;Description&#xA;     Gather all of the foreign keys for a given type.&#xA;&#xA;Parameters:&#xA;    string $type;;d4,198;;b2,0;;mstring $type;;p">
					<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f40;197;45;197;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getDictionary;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f11;233;5;236;;;;vpos;;varray;;r&#xA;Definition&#xA;    getDictionary()&#xA;&#xA;Description&#xA;     Get the dictionary used by the relationship.;;d4,234;;b1,0;;m">
				</treenode>
				<treenode node="getEager;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f11;145;5;152;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    getEager()&#xA;&#xA;Description&#xA;     Get the results of the relationship.;;d4,146;;b1,0;;m">
				</treenode>
				<treenode node="getMorphType;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f11;223;5;226;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getMorphType()&#xA;&#xA;Description&#xA;     Get the foreign key &quot;type&quot; name.;;d4,224;;b1,0;;m">
				</treenode>
				<treenode node="getResults;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f11;61;5;68;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    getResults()&#xA;&#xA;Description&#xA;     Get the results of the relationship.;;d4,62;;b1,0;;m">
				</treenode>
				<treenode node="getResultsByType;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f14;178;5;189;;;;vpos;;v;;r&#xA;Definition&#xA;    getResultsByType($type)&#xA;&#xA;Description&#xA;     Get all of the relation results for a type.&#xA;&#xA;Parameters:&#xA;    string $type;;d4,179;;b2,0;;mstring $type;;p">
					<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f40;178;45;178;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="match;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f11;104;5;107;;;;vpos;;varray;;r&#xA;Definition&#xA;    match(array $models, Collection $results, $relation)&#xA;&#xA;Description&#xA;     Match the eagerly loaded results to their parents.&#xA;&#xA;Parameters:&#xA;    array $models&#xA;    \Illuminate\Database\Eloquent\Collection $results&#xA;    string $relation;;d4,105;;b1,0;;marray $models;;p\Illuminate\Database\Eloquent\Collection $results;;pstring $relation;;p">
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f32;104;39;104;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f62;104;71;104;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="results;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f52;104;60;104;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="matchToMorphParents;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f14;161;5;170;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    matchToMorphParents($type, Collection $results)&#xA;&#xA;Description&#xA;     Match the results for a given type to their parents.&#xA;&#xA;Parameters:&#xA;    string $type&#xA;    \Illuminate\Database\Eloquent\Collection $results;;d4,162;;b2,0;;mstring $type;;p\Illuminate\Database\Eloquent\Collection $results;;p">
					<treenode node="results;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f61;161;69;161;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f43;161;48;161;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="useWithTrashed;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f14;258;5;265;;;;vpos;;v;;r&#xA;Definition&#xA;    useWithTrashed(Builder $query)&#xA;&#xA;Description&#xA;     Return trashed models with query if told so.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $query;;d4,259;;b2,0;;m\Illuminate\Database\Eloquent\Builder $query;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f46;258;52;258;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="withTrashed;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f11;243;5;250;;;;vpos;;v;;r&#xA;Definition&#xA;    withTrashed()&#xA;&#xA;Description&#xA;     Fetch soft-deleted model instances with query.;;d4,244;;b1,0;;m">
				</treenode>
				<treenode node="dictionary;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f14;29;25;29;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f14;22;21;22;;;;vpos;;v;;r&#xA;Description&#xA;     The models whose relations are being eager loaded.;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="morphType;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f14;15;24;15;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="withTrashed;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php;f14;36;26;36;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="MorphToMany;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphToMany.php;f0;8;1;159;;;;vpos;;vBelongsToMany;;c;;r;;d0,9;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphToMany.php;f11;46;5;53;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct(Builder $query, Model $parent, $name, $table, $foreignKey, $otherKey, $relationName = null, $inverse = false)&#xA;&#xA;Description&#xA;     Create a new morph to many relationship instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $query&#xA;    \Illuminate\Database\Eloquent\Model $parent&#xA;    string $name&#xA;    string $table&#xA;    string $foreignKey&#xA;    string $otherKey&#xA;    string $relationName&#xA;    bool $inverse;;d4,47;;b1,0;;m\Illuminate\Database\Eloquent\Builder $query;;p\Illuminate\Database\Eloquent\Model $parent;;pstring $name;;pstring $table;;pstring $foreignKey;;pstring $otherKey;;pstring $relationName;;pbool $inverse;;p">
					<treenode node="foreignKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphToMany.php;f78;46;89;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="inverse;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphToMany.php;f124;46;132;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphToMany.php;f63;46;68;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="otherKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphToMany.php;f91;46;100;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parent;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphToMany.php;f54;46;61;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphToMany.php;f40;46;46;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relationName;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphToMany.php;f102;46;115;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphToMany.php;f70;46;76;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addEagerConstraints;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphToMany.php;f11;89;5;94;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    addEagerConstraints(array $models)&#xA;&#xA;Description&#xA;     Set the constraints for an eager load of the relation.&#xA;&#xA;Parameters:&#xA;    array $models;;d4,90;;b1,0;;marray $models;;p">
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphToMany.php;f46;89;53;89;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="createAttachRecord;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphToMany.php;f14;103;5;108;;;;vpos;;varray;;r&#xA;Definition&#xA;    createAttachRecord($id, $timed)&#xA;&#xA;Description&#xA;     Create a new pivot attachment record.&#xA;&#xA;Parameters:&#xA;    int $id&#xA;    bool $timed;;d4,104;;b2,0;;mint $id;;pbool $timed;;p">
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphToMany.php;f42;103;45;103;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timed;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphToMany.php;f47;103;53;103;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getMorphClass;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphToMany.php;f11;155;5;158;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getMorphClass()&#xA;&#xA;Description&#xA;     Get the class name of the parent model.;;d4,156;;b1,0;;m">
				</treenode>
				<treenode node="getMorphType;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphToMany.php;f11;145;5;148;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getMorphType()&#xA;&#xA;Description&#xA;     Get the foreign key &quot;type&quot; name.;;d4,146;;b1,0;;m">
				</treenode>
				<treenode node="getRelationCountQuery;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphToMany.php;f11;76;5;81;;;;vpos;;v;;r&#xA;Definition&#xA;    getRelationCountQuery(Builder $query, Builder $parent)&#xA;&#xA;Description&#xA;     Add the constraints for a relationship count query.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $query&#xA;    \Illuminate\Database\Eloquent\Builder $parent;;d4,77;;b1,0;;m\Illuminate\Database\Eloquent\Builder $query;;p\Illuminate\Database\Eloquent\Builder $parent;;p">
					<treenode node="parent;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphToMany.php;f66;76;73;76;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphToMany.php;f50;76;56;76;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="newPivot;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphToMany.php;f11;129;5;138;;;;vpos;;v;;r&#xA;Definition&#xA;    newPivot(array $attributes = [], $exists = false)&#xA;&#xA;Description&#xA;     Create a new pivot model instance.&#xA;&#xA;Parameters:&#xA;    array $attributes&#xA;    bool $exists;;d4,130;;b1,0;;marray $attributes;;pbool $exists;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphToMany.php;f35;129;46;129;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="exists;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphToMany.php;f53;129;60;129;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="newPivotQuery;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphToMany.php;f14;115;5;120;;;;vpos;;v;;r&#xA;Definition&#xA;    newPivotQuery()&#xA;&#xA;Description&#xA;     Create a new query builder for the pivot table.;;d4,116;;b2,0;;m">
				</treenode>
				<treenode node="setWhere;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphToMany.php;f14;60;5;67;;;;vpos;;v;;r&#xA;Definition&#xA;    setWhere()&#xA;&#xA;Description&#xA;     Set the where clause for the relation query.;;d4,61;;b2,0;;m">
				</treenode>
				<treenode node="inverse;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphToMany.php;f14;31;22;31;;;;vposbool;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="morphClass;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphToMany.php;f14;22;25;22;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="morphType;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphToMany.php;f14;15;24;15;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="MySqlBuilder;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\MySqlBuilder.php;f0;4;1;41;;;;vpos;;vBuilder;;c;;r;;d0,5;;b0,0;;m">
				<treenode node="getColumnListing;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\MySqlBuilder.php;f11;29;5;40;;;;vpos;;varray;;r&#xA;Definition&#xA;    getColumnListing($table)&#xA;&#xA;Description&#xA;     Get the column listing for a given table.&#xA;&#xA;Parameters:&#xA;    string $table;;d4,30;;b1,0;;mstring $table;;p">
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\MySqlBuilder.php;f37;29;43;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hasTable;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\MySqlBuilder.php;f11;12;5;21;;;;vpos;;vbool;;r&#xA;Definition&#xA;    hasTable($table)&#xA;&#xA;Description&#xA;     Determine if the given table exists.&#xA;&#xA;Parameters:&#xA;    string $table;;d4,13;;b1,0;;mstring $table;;p">
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\MySqlBuilder.php;f29;12;35;12;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="MySqlConnection;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\MySqlConnection.php;f0;10;1;65;;;;vpos;;vConnection;;c;;r;;d0,11;;b0,0;;m">
				<treenode node="getDefaultPostProcessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\MySqlConnection.php;f14;51;5;54;;;;vpos;;v;;r&#xA;Definition&#xA;    getDefaultPostProcessor()&#xA;&#xA;Description&#xA;     Get the default post processor instance.;;d4,52;;b2,0;;m">
				</treenode>
				<treenode node="getDefaultQueryGrammar;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\MySqlConnection.php;f14;31;5;34;;;;vpos;;v;;r&#xA;Definition&#xA;    getDefaultQueryGrammar()&#xA;&#xA;Description&#xA;     Get the default query grammar instance.;;d4,32;;b2,0;;m">
				</treenode>
				<treenode node="getDefaultSchemaGrammar;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\MySqlConnection.php;f14;41;5;44;;;;vpos;;v;;r&#xA;Definition&#xA;    getDefaultSchemaGrammar()&#xA;&#xA;Description&#xA;     Get the default schema grammar instance.;;d4,42;;b2,0;;m">
				</treenode>
				<treenode node="getDoctrineDriver;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\MySqlConnection.php;f14;61;5;64;;;;vpos;;v;;r&#xA;Definition&#xA;    getDoctrineDriver()&#xA;&#xA;Description&#xA;     Get the Doctrine DBAL driver.;;d4,62;;b2,0;;m">
				</treenode>
				<treenode node="getSchemaBuilder;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\MySqlConnection.php;f11;17;5;24;;;;vpos;;v;;r&#xA;Definition&#xA;    getSchemaBuilder()&#xA;&#xA;Description&#xA;     Get a schema builder instance for the connection.;;d4,18;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MySqlConnector;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\MySqlConnector.php;f0;4;1;107;;;;vpos;;vConnector;;cConnectorInterface;;c;;r;;d0,5;;b0,0;;m">
				<treenode node="configHasSocket;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\MySqlConnector.php;f14;77;5;80;;;;vpos;;vbool;;r&#xA;Definition&#xA;    configHasSocket(array $config)&#xA;&#xA;Description&#xA;     Determine if the given configuration array has a UNIX socket value.&#xA;&#xA;Parameters:&#xA;    array $config;;d4,78;;b2,0;;marray $config;;p">
					<treenode node="config;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\MySqlConnector.php;f45;77;52;77;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="connect;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\MySqlConnector.php;f11;12;5;56;;;;vpos;;v;;r&#xA;Definition&#xA;    connect(array $config)&#xA;&#xA;Description&#xA;     Establish a database connection.&#xA;&#xA;Parameters:&#xA;    array $config;;d4,13;;b1,0;;marray $config;;p">
					<treenode node="config;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\MySqlConnector.php;f34;12;41;12;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getDsn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\MySqlConnector.php;f14;66;5;69;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getDsn(array $config)&#xA;&#xA;Description&#xA;     Create a DSN string from a configuration.&#xA;&#xA;Parameters:&#xA;    array $config;;d4,67;;b2,0;;marray $config;;p">
					<treenode node="config;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\MySqlConnector.php;f36;66;43;66;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getHostDsn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\MySqlConnector.php;f14;99;5;106;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getHostDsn(array $config)&#xA;&#xA;Description&#xA;     Get the DSN string for a host / port configuration.&#xA;&#xA;Parameters:&#xA;    array $config;;d4,100;;b2,0;;marray $config;;p">
					<treenode node="config;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\MySqlConnector.php;f40;99;47;99;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getSocketDsn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\MySqlConnector.php;f14;88;5;91;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getSocketDsn(array $config)&#xA;&#xA;Description&#xA;     Get the DSN string for a socket configuration.&#xA;&#xA;Parameters:&#xA;    array $config;;d4,89;;b2,0;;marray $config;;p">
					<treenode node="config;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\MySqlConnector.php;f42;88;49;88;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="MySqlGrammar;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f0;8;1;699;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\MySqlGrammar.php;f0;6;1;140;;;;vpos;;vGrammar;;c;;r;;d0,9;;b0,0;;m">
				<treenode node="compileAdd;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f11;102;5;109;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileAdd(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile an add column command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,103;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f41;102;51;102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f60;102;68;102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileColumnExists;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f11;39;5;42;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileColumnExists()&#xA;&#xA;Description&#xA;     Compile the query to determine the list of columns.;;d4,40;;b1,0;;m">
				</treenode>
				<treenode node="compileCreate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f11;52;5;68;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileCreate(Blueprint $blueprint, Fluent $command, Connection $connection)&#xA;&#xA;Description&#xA;     Compile a create table command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command&#xA;    \Illuminate\Database\Connection $connection;;d4,53;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p\Illuminate\Database\Connection $connection;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f44;52;54;52;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f63;52;71;52;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="connection;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f84;52;95;52;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileCreateEncoding;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;78;5;93;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileCreateEncoding($sql, Connection $connection, Blueprint $blueprint)&#xA;&#xA;Description&#xA;     Append the character set specifications to a command.&#xA;&#xA;Parameters:&#xA;    string $sql&#xA;    \Illuminate\Database\Connection $connection&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint;;d4,79;;b2,0;;mstring $sql;;p\Illuminate\Database\Connection $connection;;p\Illuminate\Database\Schema\Blueprint $blueprint;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f85;78;95;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="connection;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f62;78;73;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sql;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f45;78;49;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileDelete;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\MySqlGrammar.php;f11;101;5;124;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileDelete(Builder $query)&#xA;&#xA;Description&#xA;     Compile a delete statement into SQL.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query;;d4,102;;b1,0;;m\Illuminate\Database\Query\Builder $query;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\MySqlGrammar.php;f42;101;48;101;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileDrop;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f11;173;5;176;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileDrop(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a drop table command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,174;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f42;173;52;173;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f61;173;69;173;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileDropColumn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f11;197;5;204;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileDropColumn(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a drop column command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,198;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f48;197;58;197;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f67;197;75;197;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileDropForeign;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f11;253;5;258;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileDropForeign(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a drop foreign key command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,254;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f49;253;59;253;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f68;253;76;253;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileDropIfExists;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f11;185;5;188;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileDropIfExists(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a drop table (if exists) command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,186;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f50;185;60;185;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f69;185;77;185;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileDropIndex;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f11;239;5;244;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileDropIndex(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a drop index command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,240;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f47;239;57;239;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f66;239;74;239;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileDropPrimary;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f11;213;5;216;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileDropPrimary(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a drop primary key command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,214;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f49;213;59;213;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f68;213;76;213;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileDropUnique;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f11;225;5;230;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileDropUnique(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a drop unique key command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,226;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f48;225;58;225;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f67;225;75;225;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileIndex;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f11;144;5;147;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileIndex(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a plain index key command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,145;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f43;144;53;144;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f62;144;70;144;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileKey;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;157;5;164;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileKey(Blueprint $blueprint, Fluent $command, $type)&#xA;&#xA;Description&#xA;     Compile an index creation command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command&#xA;    string $type;;d4,158;;b2,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;pstring $type;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f44;157;54;157;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f63;157;71;157;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f73;157;78;157;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileLock;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\MySqlGrammar.php;f14;64;5;71;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileLock(Builder $query, $value)&#xA;&#xA;Description&#xA;     Compile the lock into SQL.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    bool|string $value;;d4,65;;b2,0;;m\Illuminate\Database\Query\Builder $query;;pbool|string $value;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\MySqlGrammar.php;f43;64;49;64;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\MySqlGrammar.php;f51;64;57;64;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compilePrimary;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f11;118;5;123;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compilePrimary(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a primary key command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,119;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f45;118;55;118;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f64;118;72;118;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileRename;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f11;267;5;272;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileRename(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a rename table command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,268;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f44;267;54;267;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f63;267;71;267;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileSelect;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\MySqlGrammar.php;f11;33;5;42;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileSelect(Builder $query)&#xA;&#xA;Description&#xA;     Compile a select query into SQL.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query;;d4,34;;b1,0;;m\Illuminate\Database\Query\Builder $query;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\MySqlGrammar.php;f42;33;48;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileTableExists;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f11;29;5;32;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileTableExists()&#xA;&#xA;Description&#xA;     Compile the query to determine the list of tables.;;d4,30;;b1,0;;m">
				</treenode>
				<treenode node="compileUnion;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\MySqlGrammar.php;f14;50;5;55;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileUnion(array $union)&#xA;&#xA;Description&#xA;     Compile a single union statement.&#xA;&#xA;Parameters:&#xA;    array $union;;d4,51;;b2,0;;marray $union;;p">
					<treenode node="union;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\MySqlGrammar.php;f42;50;48;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileUnique;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f11;132;5;135;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileUnique(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a unique key command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,133;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f44;132;54;132;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f63;132;71;132;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileUpdate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\MySqlGrammar.php;f11;80;5;93;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileUpdate(Builder $query, $values)&#xA;&#xA;Description&#xA;     Compile an update statement into SQL.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $values;;d4,81;;b1,0;;m\Illuminate\Database\Query\Builder $query;;parray $values;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\MySqlGrammar.php;f42;80;48;80;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\MySqlGrammar.php;f50;80;57;80;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="modifyAfter;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;664;5;669;;;;vpos;;vstring;;r&#xA;Definition&#xA;    modifyAfter(Blueprint $blueprint, Fluent $column)&#xA;&#xA;Description&#xA;     Get the SQL for an &quot;after&quot; column modifier.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $column&#xA;&#xA;Return:&#xA;   |null;;d4,665;;b2,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $column;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f45;664;55;664;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f64;664;71;664;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="modifyCharset;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;582;5;587;;;;vpos;;vstring;;r&#xA;Definition&#xA;    modifyCharset(Blueprint $blueprint, Fluent $column)&#xA;&#xA;Description&#xA;     Get the SQL for a character set column modifier.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $column&#xA;&#xA;Return:&#xA;   |null;;d4,583;;b2,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $column;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f47;582;57;582;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f66;582;73;582;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="modifyCollate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;596;5;601;;;;vpos;;vstring;;r&#xA;Definition&#xA;    modifyCollate(Blueprint $blueprint, Fluent $column)&#xA;&#xA;Description&#xA;     Get the SQL for a collation column modifier.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $column&#xA;&#xA;Return:&#xA;   |null;;d4,597;;b2,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $column;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f47;596;57;596;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f66;596;73;596;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="modifyComment;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;678;5;683;;;;vpos;;vstring;;r&#xA;Definition&#xA;    modifyComment(Blueprint $blueprint, Fluent $column)&#xA;&#xA;Description&#xA;     Get the SQL for a &quot;comment&quot; column modifier.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $column&#xA;&#xA;Return:&#xA;   |null;;d4,679;;b2,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $column;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f47;678;57;678;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f66;678;73;678;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="modifyDefault;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;622;5;627;;;;vpos;;vstring;;r&#xA;Definition&#xA;    modifyDefault(Blueprint $blueprint, Fluent $column)&#xA;&#xA;Description&#xA;     Get the SQL for a default column modifier.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $column&#xA;&#xA;Return:&#xA;   |null;;d4,623;;b2,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $column;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f47;622;57;622;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f66;622;73;622;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="modifyFirst;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;650;5;655;;;;vpos;;vstring;;r&#xA;Definition&#xA;    modifyFirst(Blueprint $blueprint, Fluent $column)&#xA;&#xA;Description&#xA;     Get the SQL for a &quot;first&quot; column modifier.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $column&#xA;&#xA;Return:&#xA;   |null;;d4,651;;b2,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $column;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f45;650;55;650;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f64;650;71;650;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="modifyIncrement;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;636;5;641;;;;vpos;;vstring;;r&#xA;Definition&#xA;    modifyIncrement(Blueprint $blueprint, Fluent $column)&#xA;&#xA;Description&#xA;     Get the SQL for an auto-increment column modifier.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $column&#xA;&#xA;Return:&#xA;   |null;;d4,637;;b2,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $column;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f49;636;59;636;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f68;636;75;636;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="modifyNullable;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;610;5;613;;;;vpos;;vstring;;r&#xA;Definition&#xA;    modifyNullable(Blueprint $blueprint, Fluent $column)&#xA;&#xA;Description&#xA;     Get the SQL for a nullable column modifier.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $column&#xA;&#xA;Return:&#xA;   |null;;d4,611;;b2,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $column;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f48;610;58;610;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f67;610;74;610;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="modifyUnsigned;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;568;5;573;;;;vpos;;vstring;;r&#xA;Definition&#xA;    modifyUnsigned(Blueprint $blueprint, Fluent $column)&#xA;&#xA;Description&#xA;     Get the SQL for an unsigned column modifier.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $column&#xA;&#xA;Return:&#xA;   |null;;d4,569;;b2,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $column;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f48;568;58;568;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f67;568;74;568;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeBigInteger;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;335;5;338;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeBigInteger(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a big integer type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,336;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f45;335;52;335;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeBinary;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;556;5;559;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeBinary(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a binary type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,557;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f41;556;48;556;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeBoolean;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;427;5;430;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeBoolean(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a boolean type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,428;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f42;427;49;427;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeChar;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;280;5;283;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeChar(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a char type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,281;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f39;280;46;280;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeDate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;471;5;474;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeDate(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a date type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,472;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f39;471;46;471;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeDateTime;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;482;5;485;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeDateTime(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a date-time type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,483;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f43;482;50;482;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeDateTimeTz;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;493;5;496;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeDateTimeTz(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a date-time type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,494;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f45;493;52;493;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeDecimal;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;416;5;419;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeDecimal(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a decimal type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,417;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f42;416;49;416;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeDouble;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;401;5;408;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeDouble(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a double type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,402;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f41;401;48;401;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeEnum;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;438;5;441;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeEnum(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for an enum type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,439;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f39;438;46;438;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeFloat;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;390;5;393;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeFloat(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a float type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,391;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f40;390;47;390;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeInteger;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;346;5;349;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeInteger(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a integer type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,347;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f42;346;49;346;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeJson;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;449;5;452;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeJson(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a json type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,450;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f39;449;46;449;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeJsonb;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;460;5;463;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeJsonb(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a jsonb type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,461;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f40;460;47;460;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeLongText;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;324;5;327;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeLongText(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a long text type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,325;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f43;324;50;324;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeMediumInteger;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;357;5;360;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeMediumInteger(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a medium integer type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,358;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f48;357;55;357;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeMediumText;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;313;5;316;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeMediumText(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a medium text type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,314;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f45;313;52;313;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeSmallInteger;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;379;5;382;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeSmallInteger(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a small integer type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,380;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f47;379;54;379;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeString;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;291;5;294;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeString(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a string type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,292;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f41;291;48;291;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeText;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;302;5;305;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeText(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a text type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,303;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f39;302;46;302;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeTime;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;504;5;507;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeTime(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a time type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,505;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f39;504;46;504;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeTimestamp;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;526;5;533;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeTimestamp(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a timestamp type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,527;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f44;526;51;526;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeTimestampTz;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;541;5;548;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeTimestampTz(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a timestamp type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,542;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f46;541;53;541;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeTimeTz;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;515;5;518;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeTimeTz(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a time type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,516;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f41;515;48;515;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeTinyInteger;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;368;5;371;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeTinyInteger(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a tiny integer type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,369;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f46;368;53;368;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="wrapValue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;691;5;698;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\MySqlGrammar.php;f14;132;5;139;;;;vpos;;vstring;;r&#xA;Definition&#xA;    wrapValue($value)&#xA;&#xA;Description&#xA;     Wrap a single string in keyword identifiers.&#xA;&#xA;Parameters:&#xA;    string $value;;d4,692;;b2,0;;mstring $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f33;691;39;691;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\MySqlGrammar.php;f33;132;39;132;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="modifiers;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;15;24;15;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="selectComponents;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\MySqlGrammar.php;f14;13;31;13;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="serials;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php;f14;22;22;22;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="MySqlProcessor;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\MySqlProcessor.php;f0;4;1;22;;;;vpos;;vProcessor;;c;;r;;d0,5;;b0,0;;m">
				<treenode node="processColumnListing;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\MySqlProcessor.php;f11;12;5;21;;;;vpos;;varray;;r&#xA;Definition&#xA;    processColumnListing($results)&#xA;&#xA;Description&#xA;     Process the results of a column listing query.&#xA;&#xA;Parameters:&#xA;    array $results;;d4,13;;b1,0;;marray $results;;p">
					<treenode node="results;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\MySqlProcessor.php;f41;12;49;12;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="NamespacedItemResolver;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\NamespacedItemResolver.php;f0;4;1;103;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="parseBasicSegments;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\NamespacedItemResolver.php;f14;51;5;70;;;;vpos;;varray;;r&#xA;Definition&#xA;    parseBasicSegments(array $segments)&#xA;&#xA;Description&#xA;     Parse an array of basic segments.&#xA;&#xA;Parameters:&#xA;    array $segments;;d4,52;;b2,0;;marray $segments;;p">
					<treenode node="segments;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\NamespacedItemResolver.php;f48;51;57;51;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="parseKey;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\NamespacedItemResolver.php;f11;19;5;43;;;;vpos;;varray;;r&#xA;Definition&#xA;    parseKey($key)&#xA;&#xA;Description&#xA;     Parse a key into namespace, group, and item.&#xA;&#xA;Parameters:&#xA;    string $key;;d4,20;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\NamespacedItemResolver.php;f29;19;33;19;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="parseNamespacedSegments;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\NamespacedItemResolver.php;f14;78;5;90;;;;vpos;;varray;;r&#xA;Definition&#xA;    parseNamespacedSegments($key)&#xA;&#xA;Description&#xA;     Parse an array of namespaced segments.&#xA;&#xA;Parameters:&#xA;    string $key;;d4,79;;b2,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\NamespacedItemResolver.php;f47;78;51;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setParsedKey;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\NamespacedItemResolver.php;f11;99;5;102;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setParsedKey($key, $parsed)&#xA;&#xA;Description&#xA;     Set the parsed value of a key.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    array $parsed;;d4,100;;b1,0;;mstring $key;;parray $parsed;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\NamespacedItemResolver.php;f33;99;37;99;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parsed;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\NamespacedItemResolver.php;f39;99;46;99;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="parsed;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\NamespacedItemResolver.php;f14;11;21;11;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="NonBackupDumper;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Writer\TranslationWriterTest.php;f0;46;1;51;;;;vpos;;vDumperInterface;;c;;r;;d0,47;;b0,0;;m">
				<treenode node="dump;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Writer\TranslationWriterTest.php;f11;48;5;50;;;;vpos;;v;;r;;d4,49;;b1,0;;mmessages;;poptions;;p">
					<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Writer\TranslationWriterTest.php;f42;48;51;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Writer\TranslationWriterTest.php;f53;48;61;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="NotFoundResourceException;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Exception\NotFoundResourceException.php;f0;18;39;18;;;;vpos;;v;;r&#xA;Description&#xA;     Thrown when a resource does not exist.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="Password;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Password.php;f0;7;1;53;;;;vpos;;vFacade;;c;;r&#xA;Definition&#xA;    class Password extends Facade&#xA;&#xA;Description&#xA;      see \Illuminate\Auth\Passwords\PasswordBroker;;d0,8;;b0,0;;m">
				<treenode node="INVALID_PASSWORD;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Password.php;f9;35;26;35;;;;vposstring;;v;;r'passwords.password';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="INVALID_TOKEN;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Password.php;f9;42;23;42;;;;vposstring;;v;;r'passwords.token';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="INVALID_USER;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Password.php;f9;28;22;28;;;;vposstring;;v;;r'passwords.user';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="PASSWORD_RESET;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Password.php;f9;21;24;21;;;;vposstring;;v;;r'passwords.reset';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="RESET_LINK_SENT;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Password.php;f9;14;25;14;;;;vposstring;;v;;r'passwords.sent';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="getFacadeAccessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Password.php;f21;49;5;52;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getFacadeAccessor()&#xA;&#xA;Description&#xA;     Get the registered name of the component.;;d4,50;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="PhpExtractor;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpExtractor.php;f0;21;1;255;;;;vpos;;vAbstractFileExtractor;;cExtractorInterface;;c;;r&#xA;Definition&#xA;    class PhpExtractor extends AbstractFileExtractor implements ExtractorInterface&#xA;&#xA;Description&#xA;     PhpExtractor extracts translation messages from a PHP template.;;d0,22;;b0,0;;m">
				<treenode node="DOMAIN_TOKEN;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpExtractor.php;f9;25;22;25;;;;vpos;;v;;r1001;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="MESSAGE_TOKEN;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpExtractor.php;f9;23;23;23;;;;vpos;;v;;r300;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="METHOD_ARGUMENTS_TOKEN;PHP:PHP Word;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpExtractor.php;f9;24;32;24;;;;vpos;;v;;r1000;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="canBeExtracted;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpExtractor.php;f14;239;5;242;;;;vpos;;vbool;;r&#xA;Definition&#xA;    canBeExtracted($file)&#xA;&#xA;Description&#xA;     &#xA;&#xA;Parameters:&#xA;    string $file;;d4,240;;b2,0;;mstring $file;;p">
					<treenode node="file;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpExtractor.php;f38;239;43;239;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="extract;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpExtractor.php;f11;79;5;88;;;;vpos;;v;;r&#xA;Definition&#xA;    extract($resource, MessageCatalogue $catalog)&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,80;;b1,0;;mresource;;pcatalog;;p">
					<treenode node="catalog;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpExtractor.php;f56;79;64;79;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="resource;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpExtractor.php;f28;79;37;79;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="extractFromDirectory;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpExtractor.php;f14;249;5;254;;;;vpos;;varray;;r&#xA;Definition&#xA;    extractFromDirectory($directory)&#xA;&#xA;Description&#xA;     &#xA;&#xA;Parameters:&#xA;    string|array $directory;;d4,250;;b2,0;;mstring|array $directory;;p">
					<treenode node="directory;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpExtractor.php;f44;249;54;249;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getValue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpExtractor.php;f12;152;5;183;;;;vpos;;v;;r&#xA;Definition&#xA;    getValue(\Iterator $tokenIterator)&#xA;&#xA;Description&#xA;     Extracts the message from the iterator while the tokens match allowed message tokens.;;d4,153;;b3,0;;mtokenIterator;;p">
					<treenode node="tokenIterator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpExtractor.php;f40;152;54;152;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="normalizeToken;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpExtractor.php;f14;105;5;112;;;;vpos;;vstring;;r&#xA;Definition&#xA;    normalizeToken($token)&#xA;&#xA;Description&#xA;     Normalizes a token.&#xA;&#xA;Parameters:&#xA;    mixed $token;;d4,106;;b2,0;;mmixed $token;;p">
					<treenode node="token;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpExtractor.php;f38;105;44;105;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="parseTokens;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpExtractor.php;f14;191;5;230;;;;vpos;;v;;r&#xA;Definition&#xA;    parseTokens($tokens, MessageCatalogue $catalog)&#xA;&#xA;Description&#xA;     Extracts trans message from PHP tokens.&#xA;&#xA;Parameters:&#xA;    array $tokens&#xA;    MessageCatalogue $catalog;;d4,192;;b2,0;;marray $tokens;;pMessageCatalogue $catalog;;p">
					<treenode node="catalog;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpExtractor.php;f61;191;69;191;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="tokens;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpExtractor.php;f35;191;42;191;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="seekToNextRelevantToken;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpExtractor.php;f12;117;5;125;;;;vpos;;v;;r&#xA;Definition&#xA;    seekToNextRelevantToken(\Iterator $tokenIterator)&#xA;&#xA;Description&#xA;     Seeks to a non-whitespace token.;;d4,118;;b3,0;;mtokenIterator;;p">
					<treenode node="tokenIterator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpExtractor.php;f55;117;69;117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setPrefix;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpExtractor.php;f11;93;5;96;;;;vpos;;v;;r&#xA;Definition&#xA;    setPrefix($prefix)&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,94;;b1,0;;mprefix;;p">
					<treenode node="prefix;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpExtractor.php;f30;93;37;93;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="skipMethodArgument;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpExtractor.php;f12;127;5;146;;;;vpos;;v;;r;;d4,128;;b3,0;;mtokenIterator;;p">
					<treenode node="tokenIterator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpExtractor.php;f50;127;64;127;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="prefix;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpExtractor.php;f12;32;19;32;;;;vposstring;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="sequences;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpExtractor.php;f14;39;24;39;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="PhpExtractorTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Extractor\PhpExtractorTest.php;f0;17;1;94;;;;vpos;;vTestCase;;c;;r;;d0,18;;b0,0;;m">
				<treenode node="resourcesProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Extractor\PhpExtractorTest.php;f11;71;5;93;;;;vpos;;v;;r;;d4,72;;b1,0;;m">
				</treenode>
				<treenode node="testExtraction;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Extractor\PhpExtractorTest.php;f11;24;5;69;;;;vpos;;v;;r&#xA;Definition&#xA;    testExtraction($resource)&#xA;&#xA;Description&#xA;      dataProvider resourcesProvider&#xA;&#xA;Parameters:&#xA;    array|string $resource;;d4,25;;b1,0;;marray|string $resource;;p">
					<treenode node="resource;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Extractor\PhpExtractorTest.php;f35;24;44;24;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="PhpFileDumper;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\PhpFileDumper.php;f0;20;1;37;;;;vpos;;vFileDumper;;c;;r&#xA;Definition&#xA;    class PhpFileDumper extends FileDumper&#xA;&#xA;Description&#xA;     PhpFileDumper generates PHP files from a message catalogue.;;d0,21;;b0,0;;m">
				<treenode node="formatCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\PhpFileDumper.php;f11;25;5;28;;;;vpos;;v;;r&#xA;Definition&#xA;    formatCatalogue(MessageCatalogue $messages, $domain, array $options = array())&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,26;;b1,0;;mmessages;;pdomain;;poptions;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\PhpFileDumper.php;f64;25;71;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\PhpFileDumper.php;f53;25;62;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\PhpFileDumper.php;f79;25;87;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getExtension;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\PhpFileDumper.php;f14;33;5;36;;;;vpos;;v;;r&#xA;Definition&#xA;    getExtension()&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,34;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="PhpFileDumperTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\PhpFileDumperTest.php;f0;17;1;28;;;;vpos;;vTestCase;;c;;r;;d0,18;;b0,0;;m">
				<treenode node="testFormatCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\PhpFileDumperTest.php;f11;19;5;27;;;;vpos;;v;;r;;d4,20;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PhpFileLoader;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\PhpFileLoader.php;f0;18;1;27;;;;vpos;;vFileLoader;;c;;r&#xA;Definition&#xA;    class PhpFileLoader extends FileLoader&#xA;&#xA;Description&#xA;     PhpFileLoader loads translations from PHP files returning an array of translations.;;d0,19;;b0,0;;m">
				<treenode node="loadResource;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\PhpFileLoader.php;f14;23;5;26;;;;vpos;;v;;r&#xA;Definition&#xA;    loadResource($resource)&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,24;;b2,0;;mresource;;p">
					<treenode node="resource;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\PhpFileLoader.php;f36;23;45;23;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="PhpFileLoaderTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\PhpFileLoaderTest.php;f0;17;1;49;;;;vpos;;vTestCase;;c;;r;;d0,18;;b0,0;;m">
				<treenode node="testLoad;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\PhpFileLoaderTest.php;f11;19;5;28;;;;vpos;;v;;r;;d4,20;;b1,0;;m">
				</treenode>
				<treenode node="testLoadNonExistingResource;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\PhpFileLoaderTest.php;f11;33;5;38;;;;vpos;;v;;r&#xA;Definition&#xA;    testLoadNonExistingResource()&#xA;&#xA;Description&#xA;      expectedException \Symfony\Component\Translation\Exception\NotFoundResourceException;;d4,34;;b1,0;;m">
				</treenode>
				<treenode node="testLoadThrowsAnExceptionIfFileNotLocal;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\PhpFileLoaderTest.php;f11;43;5;48;;;;vpos;;v;;r&#xA;Definition&#xA;    testLoadThrowsAnExceptionIfFileNotLocal()&#xA;&#xA;Description&#xA;      expectedException \Symfony\Component\Translation\Exception\InvalidResourceException;;d4,44;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PhpStringTokenParser;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpStringTokenParser.php;f0;49;1;141;;;;vpos;;v;;r;;d0,50;;b0,0;;m">
				<treenode node="parse;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpStringTokenParser.php;f18;69;5;85;;;;vpos;;vstring;;r&#xA;Definition&#xA;    parse($str)&#xA;&#xA;Description&#xA;     Parses a string token.&#xA;&#xA;Parameters:&#xA;    string $str - String token content&#xA;&#xA;Return:&#xA;   The parsed string;;d4,70;;b1,5;;mstring $str;;p">
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpStringTokenParser.php;f33;69;37;69;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="parseCallback;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpStringTokenParser.php;f19;108;5;119;;;;vpos;;v;;r;;d4,109;;b3,5;;mmatches;;p">
					<treenode node="matches;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpStringTokenParser.php;f42;108;50;108;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="parseDocString;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpStringTokenParser.php;f18;129;5;140;;;;vpos;;vstring;;r&#xA;Definition&#xA;    parseDocString($startToken, $str)&#xA;&#xA;Description&#xA;     Parses a constant doc string.&#xA;&#xA;Parameters:&#xA;    string $startToken - Doc string start token content (&lt;&lt;&lt;SMTHG)&#xA;    string $str - String token content&#xA;&#xA;Return:&#xA;   Parsed string;;d4,130;;b1,5;;mstring $startToken;;pstring $str;;p">
					<treenode node="startToken;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpStringTokenParser.php;f42;129;53;129;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpStringTokenParser.php;f55;129;59;129;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="parseEscapeSequences;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpStringTokenParser.php;f18;95;5;106;;;;vpos;;vstring;;r&#xA;Definition&#xA;    parseEscapeSequences($str, $quote)&#xA;&#xA;Description&#xA;     Parses escape sequences in strings (all string types apart from single quoted).&#xA;&#xA;Parameters:&#xA;    string $str - String without quotes&#xA;    null|string $quote - Quote type&#xA;&#xA;Return:&#xA;   String with escape sequences parsed;;d4,96;;b1,5;;mstring $str;;pnull|string $quote;;p">
					<treenode node="quote;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpStringTokenParser.php;f54;95;60;95;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpStringTokenParser.php;f48;95;52;95;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="replacements;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpStringTokenParser.php;f21;51;34;51;;;;vpos;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="Pivot;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Pivot.php;f0;7;1;173;;;;vpos;;vModel;;c;;r;;d0,8;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Pivot.php;f11;46;5;69;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct(Model $parent, $attributes, $table, $exists = false)&#xA;&#xA;Description&#xA;     Create a new pivot model instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Model $parent&#xA;    array $attributes&#xA;    string $table&#xA;    bool $exists;;d4,47;;b1,0;;m\Illuminate\Database\Eloquent\Model $parent;;parray $attributes;;pstring $table;;pbool $exists;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Pivot.php;f47;46;58;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="exists;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Pivot.php;f68;46;75;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parent;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Pivot.php;f38;46;45;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Pivot.php;f60;46;66;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="delete;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Pivot.php;f11;89;5;92;;;;vpos;;vint;;r&#xA;Definition&#xA;    delete()&#xA;&#xA;Description&#xA;     Delete the pivot model record from the database.;;d4,90;;b1,0;;m">
				</treenode>
				<treenode node="getCreatedAtColumn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Pivot.php;f11;159;5;162;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getCreatedAtColumn()&#xA;&#xA;Description&#xA;     Get the name of the &quot;created at&quot; column.;;d4,160;;b1,0;;m">
				</treenode>
				<treenode node="getDeleteQuery;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Pivot.php;f14;99;5;106;;;;vpos;;v;;r&#xA;Definition&#xA;    getDeleteQuery()&#xA;&#xA;Description&#xA;     Get the query builder for a delete operation on the pivot.;;d4,100;;b2,0;;m">
				</treenode>
				<treenode node="getForeignKey;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Pivot.php;f11;113;5;116;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getForeignKey()&#xA;&#xA;Description&#xA;     Get the foreign key column name.;;d4,114;;b1,0;;m">
				</treenode>
				<treenode node="getOtherKey;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Pivot.php;f11;123;5;126;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getOtherKey()&#xA;&#xA;Description&#xA;     Get the &quot;other key&quot; column name.;;d4,124;;b1,0;;m">
				</treenode>
				<treenode node="getUpdatedAtColumn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Pivot.php;f11;169;5;172;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getUpdatedAtColumn()&#xA;&#xA;Description&#xA;     Get the name of the &quot;updated at&quot; column.;;d4,170;;b1,0;;m">
				</treenode>
				<treenode node="hasTimestampAttributes;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Pivot.php;f11;149;5;152;;;;vpos;;vbool;;r&#xA;Definition&#xA;    hasTimestampAttributes()&#xA;&#xA;Description&#xA;     Determine if the pivot model has timestamp attributes.;;d4,150;;b1,0;;m">
				</treenode>
				<treenode node="setKeysForSaveQuery;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Pivot.php;f14;77;5;82;;;;vpos;;v;;r&#xA;Definition&#xA;    setKeysForSaveQuery(Builder $query)&#xA;&#xA;Description&#xA;     Set the keys for a save update query.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $query;;d4,78;;b2,0;;m\Illuminate\Database\Eloquent\Builder $query;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Pivot.php;f51;77;57;77;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setPivotKeys;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Pivot.php;f11;135;5;142;;;;vpos;;v;;r&#xA;Definition&#xA;    setPivotKeys($foreignKey, $otherKey)&#xA;&#xA;Description&#xA;     Set the key names for the pivot model instance.&#xA;&#xA;Parameters:&#xA;    string $foreignKey&#xA;    string $otherKey;;d4,136;;b1,0;;mstring $foreignKey;;pstring $otherKey;;p">
					<treenode node="foreignKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Pivot.php;f33;135;44;135;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="otherKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Pivot.php;f46;135;55;135;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="foreignKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Pivot.php;f14;21;25;21;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="guarded;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Pivot.php;f14;35;22;35;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="otherKey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Pivot.php;f14;28;23;28;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="parent;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Pivot.php;f14;14;21;14;;;;vpos;;v;;r&#xA;Description&#xA;     The parent model of the relationship.;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="PluralizationRules;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\PluralizationRules.php;f0;18;1;207;;;;vpos;;v;;r&#xA;Definition&#xA;    class PluralizationRules&#xA;&#xA;Description&#xA;     Returns the plural rules for a given locale.;;d0,19;;b0,0;;m">
				<treenode node="get;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\PluralizationRules.php;f18;30;5;186;;;;vpos;;vint;;r&#xA;Definition&#xA;    get($number, $locale)&#xA;&#xA;Description&#xA;     Returns the plural position to use for the given locale and number.&#xA;&#xA;Parameters:&#xA;    int $number - The number&#xA;    string $locale - The locale&#xA;&#xA;Return:&#xA;   The plural position;;d4,31;;b1,5;;mint $number;;pstring $locale;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\PluralizationRules.php;f40;30;47;30;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="number;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\PluralizationRules.php;f31;30;38;30;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="set;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\PluralizationRules.php;f18;194;5;206;;;;vpos;;v;;r&#xA;Definition&#xA;    set(callable $rule, $locale)&#xA;&#xA;Description&#xA;     Overrides the default plural rule for a given locale.&#xA;&#xA;Parameters:&#xA;    callable $rule - A PHP callable&#xA;    string $locale - The locale;;d4,195;;b1,5;;mcallable $rule;;pstring $locale;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\PluralizationRules.php;f47;194;54;194;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="rule;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\PluralizationRules.php;f40;194;45;194;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="rules;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\PluralizationRules.php;f19;20;25;20;;;;vpos;;v;;r;;d-1,-1;;b3,5;;m">
				</treenode>
			</treenode>
			<treenode node="PluralizationRulesTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\PluralizationRulesTest.php;f0;29;1;121;;;;vpos;;vTestCase;;c;;r&#xA;Definition&#xA;    class PluralizationRulesTest extends TestCase&#xA;&#xA;Description&#xA;     Test should cover all languages mentioned on http://translate.sourceforge.net/wiki/l10n/pluralforms and Plural forms mentioned on http://www.gnu.org/software/gettext/manual/gettext.html#Plural-forms.;;d0,30;;b0,0;;m">
				<treenode node="failingLangcodes;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\PluralizationRulesTest.php;f11;79;5;88;;;;vpos;;varray;;r&#xA;Definition&#xA;    failingLangcodes()&#xA;&#xA;Description&#xA;     This array should be at least empty within the near future.&#xA;&#xA;Return:&#xA;   with nplural together with langcodes;;d4,80;;b1,0;;m">
				</treenode>
				<treenode node="generateTestData;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\PluralizationRulesTest.php;f14;109;5;120;;;;vpos;;v;;r;;d4,110;;b2,0;;mlangCodes;;p">
					<treenode node="langCodes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\PluralizationRulesTest.php;f40;109;50;109;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="successLangcodes;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\PluralizationRulesTest.php;f11;60;5;69;;;;vpos;;varray;;r&#xA;Definition&#xA;    successLangcodes()&#xA;&#xA;Description&#xA;     This array should contain all currently known langcodes.;;d4,61;;b1,0;;m">
				</treenode>
				<treenode node="testFailedLangcodes;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\PluralizationRulesTest.php;f11;38;5;42;;;;vpos;;v;;r&#xA;Definition&#xA;    testFailedLangcodes($nplural, $langCodes)&#xA;&#xA;Description&#xA;     We test failed langcode here.;;d4,39;;b1,0;;mnplural;;plangCodes;;p">
					<treenode node="langCodes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\PluralizationRulesTest.php;f50;38;60;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="nplural;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\PluralizationRulesTest.php;f40;38;48;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testLangcodes;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\PluralizationRulesTest.php;f11;47;5;51;;;;vpos;;v;;r&#xA;Definition&#xA;    testLangcodes($nplural, $langCodes)&#xA;&#xA;Description&#xA;      dataProvider successLangcodes;;d4,48;;b1,0;;mnplural;;plangCodes;;p">
					<treenode node="langCodes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\PluralizationRulesTest.php;f44;47;54;47;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="nplural;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\PluralizationRulesTest.php;f34;47;42;47;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="validateMatrix;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\PluralizationRulesTest.php;f14;97;5;107;;;;vpos;;v;;r&#xA;Definition&#xA;    validateMatrix($nplural, $matrix, $expectSuccess = true)&#xA;&#xA;Description&#xA;     We validate only on the plural coverage. Thus the real rules is not tested.&#xA;&#xA;Parameters:&#xA;    string $nplural - Plural expected&#xA;    array $matrix - Containing langcodes and their plural index values&#xA;    bool $expectSuccess;;d4,98;;b2,0;;mstring $nplural;;parray $matrix;;pbool $expectSuccess;;p">
					<treenode node="expectSuccess;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\PluralizationRulesTest.php;f57;97;71;97;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="matrix;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\PluralizationRulesTest.php;f48;97;55;97;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="nplural;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\PluralizationRulesTest.php;f38;97;46;97;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="Pluralizer;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Pluralizer.php;f0;6;1;103;;;;vpos;;v;;r;;d0,7;;b0,0;;m">
				<treenode node="matchCase;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Pluralizer.php;f21;91;5;102;;;;vpos;;vstring;;r&#xA;Definition&#xA;    matchCase($value, $comparison)&#xA;&#xA;Description&#xA;     Attempt to match the case on two strings.&#xA;&#xA;Parameters:&#xA;    string $value&#xA;    string $comparison;;d4,92;;b2,5;;mstring $value;;pstring $comparison;;p">
					<treenode node="comparison;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Pluralizer.php;f48;91;59;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Pluralizer.php;f40;91;46;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="plural;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Pluralizer.php;f18;49;5;58;;;;vpos;;vstring;;r&#xA;Definition&#xA;    plural($value, $count = 2)&#xA;&#xA;Description&#xA;     Get the plural form of an English word.&#xA;&#xA;Parameters:&#xA;    string $value&#xA;    int $count;;d4,50;;b1,5;;mstring $value;;pint $count;;p">
					<treenode node="count;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Pluralizer.php;f42;49;48;49;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Pluralizer.php;f34;49;40;49;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="singular;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Pluralizer.php;f18;66;5;71;;;;vpos;;vstring;;r&#xA;Definition&#xA;    singular($value)&#xA;&#xA;Description&#xA;     Get the singular form of an English word.&#xA;&#xA;Parameters:&#xA;    string $value;;d4,67;;b1,5;;mstring $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Pluralizer.php;f36;66;42;66;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="uncountable;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Pluralizer.php;f21;79;5;82;;;;vpos;;vbool;;r&#xA;Definition&#xA;    uncountable($value)&#xA;&#xA;Description&#xA;     Determine if the given value is uncountable.&#xA;&#xA;Parameters:&#xA;    string $value;;d4,80;;b2,5;;mstring $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Pluralizer.php;f42;79;48;79;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="uncountable;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Pluralizer.php;f18;13;30;13;;;;vposarray;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="PoFileDumper;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\PoFileDumper.php;f0;20;1;60;;;;vpos;;vFileDumper;;c;;r&#xA;Definition&#xA;    class PoFileDumper extends FileDumper&#xA;&#xA;Description&#xA;     PoFileDumper generates a gettext formatted string representation of a message catalogue.;;d0,21;;b0,0;;m">
				<treenode node="escape;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\PoFileDumper.php;f12;56;5;59;;;;vpos;;v;;r;;d4,57;;b3,0;;mstr;;p">
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\PoFileDumper.php;f28;56;32;56;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="formatCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\PoFileDumper.php;f11;25;5;46;;;;vpos;;v;;r&#xA;Definition&#xA;    formatCatalogue(MessageCatalogue $messages, $domain, array $options = array())&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,26;;b1,0;;mmessages;;pdomain;;poptions;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\PoFileDumper.php;f64;25;71;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\PoFileDumper.php;f53;25;62;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\PoFileDumper.php;f79;25;87;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getExtension;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\PoFileDumper.php;f14;51;5;54;;;;vpos;;v;;r&#xA;Definition&#xA;    getExtension()&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,52;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="PoFileDumperTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\PoFileDumperTest.php;f0;17;1;28;;;;vpos;;vTestCase;;c;;r;;d0,18;;b0,0;;m">
				<treenode node="testFormatCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\PoFileDumperTest.php;f11;19;5;27;;;;vpos;;v;;r;;d4,20;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PoFileLoader;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\PoFileLoader.php;f0;17;1;147;;;;vpos;;vFileLoader;;c;;r&#xA;Definition&#xA;    class PoFileLoader extends FileLoader&#xA;&#xA;Description&#xA;      copyright Copyright (c) 2010, Union of RAD http://union-of-rad.org (http://lithify.me/);;d0,18;;b0,0;;m">
				<treenode node="addMessage;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\PoFileLoader.php;f12;126;5;146;;;;vpos;;v;;r&#xA;Definition&#xA;    addMessage(array &amp;$messages, array $item)&#xA;&#xA;Description&#xA;     Save a translation item to the messages.;;d4,127;;b3,0;;mmessages;;pitem;;p">
					<treenode node="item;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\PoFileLoader.php;f56;126;61;126;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\PoFileLoader.php;f39;126;48;126;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="loadResource;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\PoFileLoader.php;f14;62;5;118;;;;vpos;;v;;r&#xA;Definition&#xA;    loadResource($resource)&#xA;&#xA;Description&#xA;     Parses portable object (PO) format.;;d4,63;;b2,0;;mresource;;p">
					<treenode node="resource;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\PoFileLoader.php;f36;62;45;62;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="PoFileLoaderTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\PoFileLoaderTest.php;f0;17;1;108;;;;vpos;;vTestCase;;c;;r;;d0,18;;b0,0;;m">
				<treenode node="testEscapedId;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\PoFileLoaderTest.php;f11;73;5;82;;;;vpos;;v;;r;;d4,74;;b1,0;;m">
				</treenode>
				<treenode node="testEscapedIdPlurals;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\PoFileLoaderTest.php;f11;84;5;95;;;;vpos;;v;;r;;d4,85;;b1,0;;m">
				</treenode>
				<treenode node="testLoad;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\PoFileLoaderTest.php;f11;19;5;28;;;;vpos;;v;;r;;d4,20;;b1,0;;m">
				</treenode>
				<treenode node="testLoadDoesNothingIfEmpty;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\PoFileLoaderTest.php;f11;41;5;50;;;;vpos;;v;;r;;d4,42;;b1,0;;m">
				</treenode>
				<treenode node="testLoadEmptyTranslation;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\PoFileLoaderTest.php;f11;62;5;71;;;;vpos;;v;;r;;d4,63;;b1,0;;m">
				</treenode>
				<treenode node="testLoadNonExistingResource;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\PoFileLoaderTest.php;f11;55;5;60;;;;vpos;;v;;r&#xA;Definition&#xA;    testLoadNonExistingResource()&#xA;&#xA;Description&#xA;      expectedException \Symfony\Component\Translation\Exception\NotFoundResourceException;;d4,56;;b1,0;;m">
				</treenode>
				<treenode node="testLoadPlurals;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\PoFileLoaderTest.php;f11;30;5;39;;;;vpos;;v;;r;;d4,31;;b1,0;;m">
				</treenode>
				<treenode node="testSkipFuzzyTranslations;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\PoFileLoaderTest.php;f11;97;5;107;;;;vpos;;v;;r;;d4,98;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PostgresConnection;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\PostgresConnection.php;f0;9;1;50;;;;vpos;;vConnection;;c;;r;;d0,10;;b0,0;;m">
				<treenode node="getDefaultPostProcessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\PostgresConnection.php;f14;36;5;39;;;;vpos;;v;;r&#xA;Definition&#xA;    getDefaultPostProcessor()&#xA;&#xA;Description&#xA;     Get the default post processor instance.;;d4,37;;b2,0;;m">
				</treenode>
				<treenode node="getDefaultQueryGrammar;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\PostgresConnection.php;f14;16;5;19;;;;vpos;;v;;r&#xA;Definition&#xA;    getDefaultQueryGrammar()&#xA;&#xA;Description&#xA;     Get the default query grammar instance.;;d4,17;;b2,0;;m">
				</treenode>
				<treenode node="getDefaultSchemaGrammar;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\PostgresConnection.php;f14;26;5;29;;;;vpos;;v;;r&#xA;Definition&#xA;    getDefaultSchemaGrammar()&#xA;&#xA;Description&#xA;     Get the default schema grammar instance.;;d4,27;;b2,0;;m">
				</treenode>
				<treenode node="getDoctrineDriver;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\PostgresConnection.php;f14;46;5;49;;;;vpos;;v;;r&#xA;Definition&#xA;    getDoctrineDriver()&#xA;&#xA;Description&#xA;     Get the Doctrine DBAL driver.;;d4,47;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="PostgresConnector;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\PostgresConnector.php;f0;6;1;107;;;;vpos;;vConnector;;cConnectorInterface;;c;;r;;d0,7;;b0,0;;m">
				<treenode node="connect;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\PostgresConnector.php;f11;26;5;60;;;;vpos;;v;;r&#xA;Definition&#xA;    connect(array $config)&#xA;&#xA;Description&#xA;     Establish a database connection.&#xA;&#xA;Parameters:&#xA;    array $config;;d4,27;;b1,0;;marray $config;;p">
					<treenode node="config;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\PostgresConnector.php;f34;26;41;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="formatSchema;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\PostgresConnector.php;f14;99;5;106;;;;vpos;;vstring;;r&#xA;Definition&#xA;    formatSchema($schema)&#xA;&#xA;Description&#xA;     Format the schema for the DSN.&#xA;&#xA;Parameters:&#xA;    array|string $schema;;d4,100;;b2,0;;marray|string $schema;;p">
					<treenode node="schema;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\PostgresConnector.php;f36;99;43;99;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getDsn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\PostgresConnector.php;f14;68;5;91;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getDsn(array $config)&#xA;&#xA;Description&#xA;     Create a DSN string from a configuration.&#xA;&#xA;Parameters:&#xA;    array $config;;d4,69;;b2,0;;marray $config;;p">
					<treenode node="config;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\PostgresConnector.php;f36;68;43;68;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\PostgresConnector.php;f14;13;22;13;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="PostgresGrammar;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f0;7;1;542;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\PostgresGrammar.php;f0;6;1;179;;;;vpos;;vGrammar;;c;;r;;d0,8;;b0,0;;m">
				<treenode node="compileAdd;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f11;65;5;72;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileAdd(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a create table command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,66;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f41;65;51;65;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f60;65;68;65;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileColumnExists;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f11;39;5;42;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileColumnExists($table)&#xA;&#xA;Description&#xA;     Compile the query to determine the list of columns.&#xA;&#xA;Parameters:&#xA;    string $table;;d4,40;;b1,0;;mstring $table;;p">
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f40;39;46;39;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileCreate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f11;51;5;56;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileCreate(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a create table command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,52;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f44;51;54;51;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f63;51;71;51;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileDrop;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f11;125;5;128;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileDrop(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a drop table command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,126;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f42;125;52;125;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f61;125;69;125;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileDropColumn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f11;149;5;156;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileDropColumn(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a drop column command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,150;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f48;149;58;149;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f67;149;75;149;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileDropForeign;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f11;205;5;210;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileDropForeign(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a drop foreign key command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,206;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f49;205;59;205;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f68;205;76;205;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileDropIfExists;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f11;137;5;140;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileDropIfExists(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a drop table (if exists) command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,138;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f50;137;60;137;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f69;137;77;137;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileDropIndex;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f11;193;5;196;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileDropIndex(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a drop index command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,194;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f47;193;57;193;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f66;193;74;193;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileDropPrimary;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f11;165;5;170;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileDropPrimary(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a drop primary key command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,166;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f49;165;59;165;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f68;165;76;165;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileDropUnique;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f11;179;5;184;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileDropUnique(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a drop unique key command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,180;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f48;179;58;179;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f67;179;75;179;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileIndex;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f11;111;5;116;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileIndex(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a plain index key command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,112;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f43;111;53;111;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f62;111;70;111;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileInsertGetId;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\PostgresGrammar.php;f11;160;5;167;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileInsertGetId(Builder $query, $values, $sequence)&#xA;&#xA;Description&#xA;     Compile an insert and get ID statement into SQL.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $values&#xA;    string $sequence;;d4,161;;b1,0;;m\Illuminate\Database\Query\Builder $query;;parray $values;;pstring $sequence;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\PostgresGrammar.php;f47;160;53;160;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sequence;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\PostgresGrammar.php;f64;160;73;160;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\PostgresGrammar.php;f55;160;62;160;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileLock;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\PostgresGrammar.php;f14;26;5;33;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileLock(Builder $query, $value)&#xA;&#xA;Description&#xA;     Compile the lock into SQL.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    bool|string $value;;d4,27;;b2,0;;m\Illuminate\Database\Query\Builder $query;;pbool|string $value;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\PostgresGrammar.php;f43;26;49;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\PostgresGrammar.php;f51;26;57;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compilePrimary;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f11;81;5;86;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compilePrimary(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a primary key command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,82;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f45;81;55;81;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f64;81;72;81;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileRename;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f11;219;5;224;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileRename(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a rename table command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,220;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f44;219;54;219;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f63;219;71;219;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileTableExists;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f11;28;5;31;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileTableExists()&#xA;&#xA;Description&#xA;     Compile the query to determine if a table exists.;;d4,29;;b1,0;;m">
				</treenode>
				<treenode node="compileTruncate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\PostgresGrammar.php;f11;175;5;178;;;;vpos;;varray;;r&#xA;Definition&#xA;    compileTruncate(Builder $query)&#xA;&#xA;Description&#xA;     Compile a truncate table statement into SQL.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query;;d4,176;;b1,0;;m\Illuminate\Database\Query\Builder $query;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\PostgresGrammar.php;f44;175;50;175;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileUnique;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f11;95;5;102;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileUnique(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a unique key command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,96;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f44;95;54;95;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f63;95;71;95;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileUpdate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\PostgresGrammar.php;f11;42;5;56;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileUpdate(Builder $query, $values)&#xA;&#xA;Description&#xA;     Compile an update statement into SQL.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $values;;d4,43;;b1,0;;m\Illuminate\Database\Query\Builder $query;;parray $values;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\PostgresGrammar.php;f42;42;48;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\PostgresGrammar.php;f50;42;57;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileUpdateColumns;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\PostgresGrammar.php;f14;64;5;76;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileUpdateColumns($values)&#xA;&#xA;Description&#xA;     Compile the columns for the update statement.&#xA;&#xA;Parameters:&#xA;    array $values;;d4,65;;b2,0;;marray $values;;p">
					<treenode node="values;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\PostgresGrammar.php;f44;64;51;64;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileUpdateFrom;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\PostgresGrammar.php;f14;84;5;102;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileUpdateFrom(Builder $query)&#xA;&#xA;Description&#xA;     Compile the &quot;from&quot; clause for an update with a join.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query;;d4,85;;b2,0;;m\Illuminate\Database\Query\Builder $query;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\PostgresGrammar.php;f49;84;55;84;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileUpdateJoinWheres;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\PostgresGrammar.php;f14;136;5;150;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileUpdateJoinWheres(Builder $query)&#xA;&#xA;Description&#xA;     Compile the &quot;join&quot; clauses for an update.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query;;d4,137;;b2,0;;m\Illuminate\Database\Query\Builder $query;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\PostgresGrammar.php;f55;136;61;136;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileUpdateWheres;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\PostgresGrammar.php;f14;110;5;128;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileUpdateWheres(Builder $query)&#xA;&#xA;Description&#xA;     Compile the additional where clauses for updates with joins.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query;;d4,111;;b2,0;;m\Illuminate\Database\Query\Builder $query;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\PostgresGrammar.php;f51;110;57;110;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="modifyDefault;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f14;522;5;527;;;;vpos;;vstring;;r&#xA;Definition&#xA;    modifyDefault(Blueprint $blueprint, Fluent $column)&#xA;&#xA;Description&#xA;     Get the SQL for a default column modifier.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $column&#xA;&#xA;Return:&#xA;   |null;;d4,523;;b2,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $column;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f47;522;57;522;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f66;522;73;522;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="modifyIncrement;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f14;536;5;541;;;;vpos;;vstring;;r&#xA;Definition&#xA;    modifyIncrement(Blueprint $blueprint, Fluent $column)&#xA;&#xA;Description&#xA;     Get the SQL for an auto-increment column modifier.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $column&#xA;&#xA;Return:&#xA;   |null;;d4,537;;b2,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $column;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f49;536;59;536;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f68;536;75;536;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="modifyNullable;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f14;510;5;513;;;;vpos;;vstring;;r&#xA;Definition&#xA;    modifyNullable(Blueprint $blueprint, Fluent $column)&#xA;&#xA;Description&#xA;     Get the SQL for a nullable column modifier.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $column&#xA;&#xA;Return:&#xA;   |null;;d4,511;;b2,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $column;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f48;510;58;510;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f67;510;74;510;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeBigInteger;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f14;298;5;301;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeBigInteger(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a big integer type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,299;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f45;298;52;298;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeBinary;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f14;498;5;501;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeBinary(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a binary type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,499;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f41;498;48;498;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeBoolean;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f14;375;5;378;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeBoolean(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a boolean type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,376;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f42;375;49;375;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeChar;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f14;232;5;235;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeChar(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a char type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,233;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f39;232;46;232;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeDate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f14;421;5;424;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeDate(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a date type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,422;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f39;421;46;421;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeDateTime;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f14;432;5;435;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeDateTime(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a date-time type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,433;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f43;432;50;432;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeDateTimeTz;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f14;443;5;446;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeDateTimeTz(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a date-time type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,444;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f45;443;52;443;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeDecimal;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f14;364;5;367;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeDecimal(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a decimal type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,365;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f42;364;49;364;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeDouble;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f14;353;5;356;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeDouble(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a double type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,354;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f41;353;48;353;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeEnum;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f14;386;5;391;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeEnum(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for an enum type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,387;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f39;386;46;386;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeFloat;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f14;342;5;345;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeFloat(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a float type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,343;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f40;342;47;342;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeInteger;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f14;287;5;290;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeInteger(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a integer type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,288;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f42;287;49;287;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeJson;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f14;399;5;402;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeJson(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a json type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,400;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f39;399;46;399;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeJsonb;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f14;410;5;413;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeJsonb(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a jsonb type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,411;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f40;410;47;410;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeLongText;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f14;276;5;279;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeLongText(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a long text type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,277;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f43;276;50;276;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeMediumInteger;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f14;309;5;312;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeMediumInteger(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a medium integer type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,310;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f48;309;55;309;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeMediumText;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f14;265;5;268;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeMediumText(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a medium text type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,266;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f45;265;52;265;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeSmallInteger;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f14;331;5;334;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeSmallInteger(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a small integer type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,332;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f47;331;54;331;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeString;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f14;243;5;246;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeString(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a string type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,244;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f41;243;48;243;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeText;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f14;254;5;257;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeText(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a text type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,255;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f39;254;46;254;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeTime;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f14;454;5;457;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeTime(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a time type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,455;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f39;454;46;454;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeTimestamp;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f14;476;5;479;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeTimestamp(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a timestamp type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,477;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f44;476;51;476;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeTimestampTz;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f14;487;5;490;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeTimestampTz(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a timestamp type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,488;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f46;487;53;487;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeTimeTz;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f14;465;5;468;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeTimeTz(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a time type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,466;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f41;465;48;465;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeTinyInteger;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f14;320;5;323;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeTinyInteger(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a tiny integer type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,321;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f46;320;53;320;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="modifiers;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f14;14;24;14;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="operators;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\PostgresGrammar.php;f14;13;24;13;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="serials;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php;f14;21;22;21;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="PostgresProcessor;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\PostgresProcessor.php;f0;6;1;46;;;;vpos;;vProcessor;;c;;r;;d0,7;;b0,0;;m">
				<treenode node="processColumnListing;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\PostgresProcessor.php;f11;36;5;45;;;;vpos;;varray;;r&#xA;Definition&#xA;    processColumnListing($results)&#xA;&#xA;Description&#xA;     Process the results of a column listing query.&#xA;&#xA;Parameters:&#xA;    array $results;;d4,37;;b1,0;;marray $results;;p">
					<treenode node="results;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\PostgresProcessor.php;f41;36;49;36;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="processInsertGetId;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\PostgresProcessor.php;f11;17;5;28;;;;vpos;;vint;;r&#xA;Definition&#xA;    processInsertGetId(Builder $query, $sql, $values, $sequence = null)&#xA;&#xA;Description&#xA;     Process an &quot;insert get ID&quot; query.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    string $sql&#xA;    array $values&#xA;    string $sequence;;d4,18;;b1,0;;m\Illuminate\Database\Query\Builder $query;;pstring $sql;;parray $values;;pstring $sequence;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\PostgresProcessor.php;f47;17;53;17;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sequence;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\PostgresProcessor.php;f70;17;79;17;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sql;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\PostgresProcessor.php;f55;17;59;17;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\PostgresProcessor.php;f61;17;68;17;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="Processor;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\Processor.php;f0;6;1;48;;;;vpos;;v;;r;;d0,7;;b0,0;;m">
				<treenode node="processColumnListing;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\Processor.php;f11;44;5;47;;;;vpos;;varray;;r&#xA;Definition&#xA;    processColumnListing($results)&#xA;&#xA;Description&#xA;     Process the results of a column listing query.&#xA;&#xA;Parameters:&#xA;    array $results;;d4,45;;b1,0;;marray $results;;p">
					<treenode node="results;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\Processor.php;f41;44;49;44;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="processInsertGetId;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\Processor.php;f11;29;5;36;;;;vpos;;vint;;r&#xA;Definition&#xA;    processInsertGetId(Builder $query, $sql, $values, $sequence = null)&#xA;&#xA;Description&#xA;     Process an  &quot;insert get ID&quot; query.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    string $sql&#xA;    array $values&#xA;    string $sequence;;d4,30;;b1,0;;m\Illuminate\Database\Query\Builder $query;;pstring $sql;;parray $values;;pstring $sequence;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\Processor.php;f47;29;53;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sequence;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\Processor.php;f70;29;79;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sql;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\Processor.php;f55;29;59;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\Processor.php;f61;29;68;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="processSelect;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\Processor.php;f11;15;5;18;;;;vpos;;varray;;r&#xA;Definition&#xA;    processSelect(Builder $query, $results)&#xA;&#xA;Description&#xA;     Process the results of a &quot;select&quot; query.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $results;;d4,16;;b1,0;;m\Illuminate\Database\Query\Builder $query;;parray $results;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\Processor.php;f42;15;48;15;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="results;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\Processor.php;f50;15;58;15;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="QtFileDumper;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\QtFileDumper.php;f0;20;1;49;;;;vpos;;vFileDumper;;c;;r&#xA;Definition&#xA;    class QtFileDumper extends FileDumper&#xA;&#xA;Description&#xA;     QtFileDumper generates ts files from a message catalogue.;;d0,21;;b0,0;;m">
				<treenode node="formatCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\QtFileDumper.php;f11;25;5;40;;;;vpos;;v;;r&#xA;Definition&#xA;    formatCatalogue(MessageCatalogue $messages, $domain, array $options = array())&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,26;;b1,0;;mmessages;;pdomain;;poptions;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\QtFileDumper.php;f64;25;71;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\QtFileDumper.php;f53;25;62;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\QtFileDumper.php;f79;25;87;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getExtension;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\QtFileDumper.php;f14;45;5;48;;;;vpos;;v;;r&#xA;Definition&#xA;    getExtension()&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,46;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="QtFileDumperTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\QtFileDumperTest.php;f0;17;1;28;;;;vpos;;vTestCase;;c;;r;;d0,18;;b0,0;;m">
				<treenode node="testFormatCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\QtFileDumperTest.php;f11;19;5;27;;;;vpos;;v;;r;;d4,20;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="QtFileLoader;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\QtFileLoader.php;f0;24;1;76;;;;vpos;;vLoaderInterface;;c;;r&#xA;Definition&#xA;    class QtFileLoader implements LoaderInterface&#xA;&#xA;Description&#xA;     QtFileLoader loads translations from QT Translations XML files.;;d0,25;;b0,0;;m">
				<treenode node="load;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\QtFileLoader.php;f11;29;5;75;;;;vpos;;v;;r&#xA;Definition&#xA;    load($resource, $locale, $domain = 'messages')&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,30;;b1,0;;mresource;;plocale;;pdomain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\QtFileLoader.php;f45;29;52;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\QtFileLoader.php;f36;29;43;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="resource;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\QtFileLoader.php;f25;29;34;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="QtFileLoaderTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\QtFileLoaderTest.php;f0;17;1;74;;;;vpos;;vTestCase;;c;;r;;d0,18;;b0,0;;m">
				<treenode node="testLoad;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\QtFileLoaderTest.php;f11;19;5;28;;;;vpos;;v;;r;;d4,20;;b1,0;;m">
				</treenode>
				<treenode node="testLoadEmptyResource;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\QtFileLoaderTest.php;f11;60;5;73;;;;vpos;;v;;r;;d4,61;;b1,0;;m">
				</treenode>
				<treenode node="testLoadInvalidResource;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\QtFileLoaderTest.php;f11;53;5;58;;;;vpos;;v;;r&#xA;Definition&#xA;    testLoadInvalidResource()&#xA;&#xA;Description&#xA;      expectedException \Symfony\Component\Translation\Exception\InvalidResourceException;;d4,54;;b1,0;;m">
				</treenode>
				<treenode node="testLoadNonExistingResource;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\QtFileLoaderTest.php;f11;33;5;38;;;;vpos;;v;;r&#xA;Definition&#xA;    testLoadNonExistingResource()&#xA;&#xA;Description&#xA;      expectedException \Symfony\Component\Translation\Exception\NotFoundResourceException;;d4,34;;b1,0;;m">
				</treenode>
				<treenode node="testLoadNonLocalResource;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\QtFileLoaderTest.php;f11;43;5;48;;;;vpos;;v;;r&#xA;Definition&#xA;    testLoadNonLocalResource()&#xA;&#xA;Description&#xA;      expectedException \Symfony\Component\Translation\Exception\InvalidResourceException;;d4,44;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="QueryException;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\QueryException.php;f0;6;1;77;;;;vpos;;vPDOException;;c;;r;;d0,7;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\QueryException.php;f11;30;5;43;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct($sql, array $bindings, $previous)&#xA;&#xA;Description&#xA;     Create a new query exception instance.&#xA;&#xA;Parameters:&#xA;    string $sql&#xA;    array $bindings&#xA;    \Exception $previous;;d4,31;;b1,0;;mstring $sql;;parray $bindings;;p\Exception $previous;;p">
					<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\QueryException.php;f44;30;53;30;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="previous;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\QueryException.php;f55;30;64;30;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sql;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\QueryException.php;f32;30;36;30;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="formatMessage;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\QueryException.php;f14;53;5;56;;;;vpos;;vstring;;r&#xA;Definition&#xA;    formatMessage($sql, $bindings, $previous)&#xA;&#xA;Description&#xA;     Format the SQL error message.&#xA;&#xA;Parameters:&#xA;    string $sql&#xA;    array $bindings&#xA;    \Exception $previous;;d4,54;;b2,0;;mstring $sql;;parray $bindings;;p\Exception $previous;;p">
					<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\QueryException.php;f43;53;52;53;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="previous;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\QueryException.php;f54;53;63;53;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sql;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\QueryException.php;f37;53;41;53;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getBindings;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\QueryException.php;f11;73;5;76;;;;vpos;;varray;;r&#xA;Definition&#xA;    getBindings()&#xA;&#xA;Description&#xA;     Get the bindings for the query.;;d4,74;;b1,0;;m">
				</treenode>
				<treenode node="getSql;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\QueryException.php;f11;63;5;66;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getSql()&#xA;&#xA;Description&#xA;     Get the SQL for the query.;;d4,64;;b1,0;;m">
				</treenode>
				<treenode node="bindings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\QueryException.php;f14;20;23;20;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="sql;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\QueryException.php;f14;13;18;13;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="Queue;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Queue.php;f0;8;1;19;;;;vpos;;vFacade;;c;;r&#xA;Definition&#xA;    class Queue extends Facade&#xA;&#xA;Description&#xA;      see \Illuminate\Queue\QueueManager;;d0,9;;b0,0;;m">
				<treenode node="getFacadeAccessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Queue.php;f21;15;5;18;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getFacadeAccessor()&#xA;&#xA;Description&#xA;     Get the registered name of the component.;;d4,16;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="QueueEntityResolver;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\QueueEntityResolver.php;f0;7;1;26;;;;vpos;;vEntityResolverContract;;c;;r;;d0,8;;b0,0;;m">
				<treenode node="resolve;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\QueueEntityResolver.php;f11;16;5;25;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    resolve($type, $id)&#xA;&#xA;Description&#xA;     Resolve the entity for the given ID.&#xA;&#xA;Parameters:&#xA;    string $type&#xA;    mixed $id;;d4,17;;b1,0;;mstring $type;;pmixed $id;;p">
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\QueueEntityResolver.php;f35;16;38;16;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\QueueEntityResolver.php;f28;16;33;16;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="Redirect;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Redirect.php;f0;7;1;18;;;;vpos;;vFacade;;c;;r&#xA;Definition&#xA;    class Redirect extends Facade&#xA;&#xA;Description&#xA;      see \Illuminate\Routing\Redirector;;d0,8;;b0,0;;m">
				<treenode node="getFacadeAccessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Redirect.php;f21;14;5;17;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getFacadeAccessor()&#xA;&#xA;Description&#xA;     Get the registered name of the component.;;d4,15;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="Redis;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Redis.php;f0;7;1;18;;;;vpos;;vFacade;;c;;r&#xA;Definition&#xA;    class Redis extends Facade&#xA;&#xA;Description&#xA;      see \Illuminate\Redis\Database;;d0,8;;b0,0;;m">
				<treenode node="getFacadeAccessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Redis.php;f21;14;5;17;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getFacadeAccessor()&#xA;&#xA;Description&#xA;     Get the registered name of the component.;;d4,15;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="RefreshCommand;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\RefreshCommand.php;f0;8;1;101;;;;vpos;;vCommand;;c;;r;;d0,9;;b0,0;;m">
				<treenode node="fire;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\RefreshCommand.php;f11;31;5;55;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    fire()&#xA;&#xA;Description&#xA;     Execute the console command.;;d4,32;;b1,0;;m">
				</treenode>
				<treenode node="getOptions;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\RefreshCommand.php;f14;89;5;100;;;;vpos;;varray;;r&#xA;Definition&#xA;    getOptions()&#xA;&#xA;Description&#xA;     Get the console command options.;;d4,90;;b2,0;;m">
				</treenode>
				<treenode node="needsSeeding;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\RefreshCommand.php;f14;62;5;65;;;;vpos;;vbool;;r&#xA;Definition&#xA;    needsSeeding()&#xA;&#xA;Description&#xA;     Determine if the developer has requested database seeding.;;d4,63;;b2,0;;m">
				</treenode>
				<treenode node="runSeeder;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\RefreshCommand.php;f14;73;5;82;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    runSeeder($database)&#xA;&#xA;Description&#xA;     Run the database seeder command.&#xA;&#xA;Parameters:&#xA;    string $database;;d4,74;;b2,0;;mstring $database;;p">
					<treenode node="database;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\RefreshCommand.php;f33;73;42;73;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="description;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\RefreshCommand.php;f14;24;26;24;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\RefreshCommand.php;f14;17;19;17;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="Relation;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f9;10;1;291;;;;vpos;;v;;r;;d0,11;;b0,0;;m">
				<treenode node="__call;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f11;281;5;290;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    __call($method, $parameters)&#xA;&#xA;Description&#xA;     Handle dynamic method calls to the relationship.&#xA;&#xA;Parameters:&#xA;    string $method&#xA;    array $parameters;;d4,282;;b1,0;;mstring $method;;parray $parameters;;p">
					<treenode node="method;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f27;281;34;281;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f36;281;47;281;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f11;47;5;54;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct(Builder $query, Model $parent)&#xA;&#xA;Description&#xA;     Create a new relation instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $query&#xA;    \Illuminate\Database\Eloquent\Model $parent;;d4,48;;b1,0;;m\Illuminate\Database\Eloquent\Builder $query;;p\Illuminate\Database\Eloquent\Model $parent;;p">
					<treenode node="parent;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f54;47;61;47;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f40;47;46;47;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addConstraints;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f20;61;45;61;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Set the base constraints on the relation query.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="addEagerConstraints;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f20;69;63;69;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Set the constraints for an eager load of the relation.&#xA;&#xA;Parameters:&#xA;    array $models;;d-1,-1;;b1,0;;marray $models;;p">
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f55;69;62;69;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="createdAt;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f11;238;5;241;;;;vpos;;vstring;;r&#xA;Definition&#xA;    createdAt()&#xA;&#xA;Description&#xA;     Get the name of the &quot;created at&quot; column.;;d4,239;;b1,0;;m">
				</treenode>
				<treenode node="getBaseQuery;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f11;198;5;201;;;;vpos;;v;;r&#xA;Definition&#xA;    getBaseQuery()&#xA;&#xA;Description&#xA;     Get the base query builder driving the Eloquent builder.;;d4,199;;b1,0;;m">
				</treenode>
				<treenode node="getEager;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f11;102;5;105;;;;vpos;;v;;r&#xA;Definition&#xA;    getEager()&#xA;&#xA;Description&#xA;     Get the relationship for eager loading.;;d4,103;;b1,0;;m">
				</treenode>
				<treenode node="getKeys;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f14;175;5;181;;;;vpos;;varray;;r&#xA;Definition&#xA;    getKeys(array $models, $key = null)&#xA;&#xA;Description&#xA;     Get all of the primary keys for an array of models.&#xA;&#xA;Parameters:&#xA;    array $models&#xA;    string $key;;d4,176;;b2,0;;marray $models;;pstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f46;175;50;175;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f37;175;44;175;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getParent;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f11;208;5;211;;;;vpos;;v;;r&#xA;Definition&#xA;    getParent()&#xA;&#xA;Description&#xA;     Get the parent model of the relation.;;d4,209;;b1,0;;m">
				</treenode>
				<treenode node="getQualifiedParentKeyName;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f11;218;5;221;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getQualifiedParentKeyName()&#xA;&#xA;Description&#xA;     Get the fully qualified parent key name.;;d4,219;;b1,0;;m">
				</treenode>
				<treenode node="getQuery;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f11;188;5;191;;;;vpos;;v;;r&#xA;Definition&#xA;    getQuery()&#xA;&#xA;Description&#xA;     Get the underlying query for the relation.;;d4,189;;b1,0;;m">
				</treenode>
				<treenode node="getRelated;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f11;228;5;231;;;;vpos;;v;;r&#xA;Definition&#xA;    getRelated()&#xA;&#xA;Description&#xA;     Get the related model of the relation.;;d4,229;;b1,0;;m">
				</treenode>
				<treenode node="getRelationCountQuery;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f11;137;5;144;;;;vpos;;v;;r&#xA;Definition&#xA;    getRelationCountQuery(Builder $query, Builder $parent)&#xA;&#xA;Description&#xA;     Add the constraints for a relationship count query.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $query&#xA;    \Illuminate\Database\Eloquent\Builder $parent;;d4,138;;b1,0;;m\Illuminate\Database\Eloquent\Builder $query;;p\Illuminate\Database\Eloquent\Builder $parent;;p">
					<treenode node="parent;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f66;137;73;137;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f50;137;56;137;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getResults;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f20;95;41;95;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Get the results of the relationship.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="initRelation;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f20;78;67;78;;;;vpos;;varray;;r&#xA;Description&#xA;     Initialize the relation on a set of models.&#xA;&#xA;Parameters:&#xA;    array $models&#xA;    string $relation;;d-1,-1;;b1,0;;marray $models;;pstring $relation;;p">
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f48;78;55;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f57;78;66;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="match;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f20;88;81;88;;;;vpos;;varray;;r&#xA;Description&#xA;     Match the eagerly loaded results to their parents.&#xA;&#xA;Parameters:&#xA;    array $models&#xA;    \Illuminate\Database\Eloquent\Collection $results&#xA;    string $relation;;d-1,-1;;b1,0;;marray $models;;p\Illuminate\Database\Eloquent\Collection $results;;pstring $relation;;p">
					<treenode node="models;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f41;88;48;88;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="relation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f71;88;80;88;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="results;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f61;88;69;88;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="noConstraints;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f18;152;5;166;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    noConstraints(Closure $callback)&#xA;&#xA;Description&#xA;     Run a callback with constraints disabled on the relation.&#xA;&#xA;Parameters:&#xA;    \Closure $callback;;d4,153;;b1,5;;m\Closure $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f49;152;58;152;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="rawUpdate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f11;125;5;128;;;;vpos;;vint;;r&#xA;Definition&#xA;    rawUpdate(array $attributes = [])&#xA;&#xA;Description&#xA;     Run a raw update against the base query.&#xA;&#xA;Parameters:&#xA;    array $attributes;;d4,126;;b1,0;;marray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f36;125;47;125;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="relatedUpdatedAt;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f11;258;5;261;;;;vpos;;vstring;;r&#xA;Definition&#xA;    relatedUpdatedAt()&#xA;&#xA;Description&#xA;     Get the name of the related model's &quot;updated at&quot; column.;;d4,259;;b1,0;;m">
				</treenode>
				<treenode node="touch;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f11;112;5;117;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    touch()&#xA;&#xA;Description&#xA;     Touch all of the related models for the relationship.;;d4,113;;b1,0;;m">
				</treenode>
				<treenode node="updatedAt;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f11;248;5;251;;;;vpos;;vstring;;r&#xA;Definition&#xA;    updatedAt()&#xA;&#xA;Description&#xA;     Get the name of the &quot;updated at&quot; column.;;d4,249;;b1,0;;m">
				</treenode>
				<treenode node="wrap;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f11;269;5;272;;;;vpos;;vstring;;r&#xA;Definition&#xA;    wrap($value)&#xA;&#xA;Description&#xA;     Wrap the given value with the parent query's grammar.&#xA;&#xA;Parameters:&#xA;    string $value;;d4,270;;b1,0;;mstring $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f25;269;31;269;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="constraints;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f21;38;33;38;;;;vposbool;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="parent;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f14;24;21;24;;;;vpos;;v;;r&#xA;Description&#xA;     The parent model instance.;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f14;17;20;17;;;;vpos;;v;;r&#xA;Description&#xA;     The Eloquent query builder instance.;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="related;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php;f14;31;22;31;;;;vpos;;v;;r&#xA;Description&#xA;     The related model instance.;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="Request;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Request.php;f0;7;1;18;;;;vpos;;vFacade;;c;;r&#xA;Definition&#xA;    class Request extends Facade&#xA;&#xA;Description&#xA;      see \Illuminate\Http\Request;;d0,8;;b0,0;;m">
				<treenode node="getFacadeAccessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Request.php;f21;14;5;17;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getFacadeAccessor()&#xA;&#xA;Description&#xA;     Get the registered name of the component.;;d4,15;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="ResetCommand;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\ResetCommand.php;f0;9;1;93;;;;vpos;;vCommand;;c;;r;;d0,10;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\ResetCommand.php;f11;40;5;45;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct(Migrator $migrator)&#xA;&#xA;Description&#xA;     Create a new migration rollback command instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Migrations\Migrator $migrator;;d4,41;;b1,0;;m\Illuminate\Database\Migrations\Migrator $migrator;;p">
					<treenode node="migrator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\ResetCommand.php;f41;40;50;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fire;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\ResetCommand.php;f11;52;5;76;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    fire()&#xA;&#xA;Description&#xA;     Execute the console command.;;d4,53;;b1,0;;m">
				</treenode>
				<treenode node="getOptions;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\ResetCommand.php;f14;83;5;92;;;;vpos;;varray;;r&#xA;Definition&#xA;    getOptions()&#xA;&#xA;Description&#xA;     Get the console command options.;;d4,84;;b2,0;;m">
				</treenode>
				<treenode node="description;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\ResetCommand.php;f14;25;26;25;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="migrator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\ResetCommand.php;f14;32;23;32;;;;vpos;;v;;r&#xA;Description&#xA;     The migrator instance.;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\ResetCommand.php;f14;18;19;18;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="Response;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Response.php;f0;7;1;18;;;;vpos;;vFacade;;c;;r&#xA;Definition&#xA;    class Response extends Facade&#xA;&#xA;Description&#xA;      see \Illuminate\Contracts\Routing\ResponseFactory;;d0,8;;b0,0;;m">
				<treenode node="getFacadeAccessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Response.php;f21;14;5;17;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getFacadeAccessor()&#xA;&#xA;Description&#xA;     Get the registered name of the component.;;d4,15;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="RollbackCommand;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\RollbackCommand.php;f0;9;1;87;;;;vpos;;vCommand;;c;;r;;d0,10;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\RollbackCommand.php;f11;40;5;45;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct(Migrator $migrator)&#xA;&#xA;Description&#xA;     Create a new migration rollback command instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Migrations\Migrator $migrator;;d4,41;;b1,0;;m\Illuminate\Database\Migrations\Migrator $migrator;;p">
					<treenode node="migrator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\RollbackCommand.php;f41;40;50;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fire;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\RollbackCommand.php;f11;52;5;70;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    fire()&#xA;&#xA;Description&#xA;     Execute the console command.;;d4,53;;b1,0;;m">
				</treenode>
				<treenode node="getOptions;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\RollbackCommand.php;f14;77;5;86;;;;vpos;;varray;;r&#xA;Definition&#xA;    getOptions()&#xA;&#xA;Description&#xA;     Get the console command options.;;d4,78;;b2,0;;m">
				</treenode>
				<treenode node="description;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\RollbackCommand.php;f14;25;26;25;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="migrator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\RollbackCommand.php;f14;32;23;32;;;;vpos;;v;;r&#xA;Description&#xA;     The migrator instance.;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\RollbackCommand.php;f14;18;19;18;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="Route;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Route.php;f0;7;1;18;;;;vpos;;vFacade;;c;;r&#xA;Definition&#xA;    class Route extends Facade&#xA;&#xA;Description&#xA;      see \Illuminate\Routing\Router;;d0,8;;b0,0;;m">
				<treenode node="getFacadeAccessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Route.php;f21;14;5;17;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getFacadeAccessor()&#xA;&#xA;Description&#xA;     Get the registered name of the component.;;d4,15;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="RuntimeException;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Exception\RuntimeException.php;f0;18;30;18;;;;vpos;;v;;r&#xA;Description&#xA;     Base RuntimeException for the Translation component.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="Schema;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Schema.php;f0;7;1;29;;;;vpos;;vFacade;;c;;r&#xA;Definition&#xA;    class Schema extends Facade&#xA;&#xA;Description&#xA;      see \Illuminate\Database\Schema\Builder;;d0,8;;b0,0;;m">
				<treenode node="connection;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Schema.php;f18;15;5;18;;;;vpos;;v;;r&#xA;Definition&#xA;    connection($name)&#xA;&#xA;Description&#xA;     Get a schema builder instance for a connection.&#xA;&#xA;Parameters:&#xA;    string $name;;d4,16;;b1,5;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Schema.php;f38;15;43;15;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getFacadeAccessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Schema.php;f21;25;5;28;;;;vpos;;v;;r&#xA;Definition&#xA;    getFacadeAccessor()&#xA;&#xA;Description&#xA;     Get a schema builder instance for the default connection.;;d4,26;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="SeedCommand;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Seeds\SeedCommand.php;f0;9;1;102;;;;vpos;;vCommand;;c;;r;;d0,10;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Seeds\SeedCommand.php;f11;40;5;45;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct(Resolver $resolver)&#xA;&#xA;Description&#xA;     Create a new database seed command instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\ConnectionResolverInterface $resolver;;d4,41;;b1,0;;m\Illuminate\Database\ConnectionResolverInterface $resolver;;p">
					<treenode node="resolver;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Seeds\SeedCommand.php;f41;40;50;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fire;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Seeds\SeedCommand.php;f11;52;5;61;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    fire()&#xA;&#xA;Description&#xA;     Execute the console command.;;d4,53;;b1,0;;m">
				</treenode>
				<treenode node="getDatabase;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Seeds\SeedCommand.php;f14;80;5;85;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getDatabase()&#xA;&#xA;Description&#xA;     Get the name of the database connection to use.;;d4,81;;b2,0;;m">
				</treenode>
				<treenode node="getOptions;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Seeds\SeedCommand.php;f14;92;5;101;;;;vpos;;varray;;r&#xA;Definition&#xA;    getOptions()&#xA;&#xA;Description&#xA;     Get the console command options.;;d4,93;;b2,0;;m">
				</treenode>
				<treenode node="getSeeder;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Seeds\SeedCommand.php;f14;68;5;73;;;;vpos;;v;;r&#xA;Definition&#xA;    getSeeder()&#xA;&#xA;Description&#xA;     Get a seeder instance from the container.;;d4,69;;b2,0;;m">
				</treenode>
				<treenode node="description;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Seeds\SeedCommand.php;f14;25;26;25;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Seeds\SeedCommand.php;f14;18;19;18;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="resolver;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Seeds\SeedCommand.php;f14;32;23;32;;;;vpos;;v;;r&#xA;Description&#xA;     The connection resolver instance.;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="Seeder;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Seeder.php;f0;7;1;96;;;;vpos;;v;;r;;d0,8;;b0,0;;m">
				<treenode node="call;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Seeder.php;f11;39;5;46;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    call($class)&#xA;&#xA;Description&#xA;     Seed the given connection from the given path.&#xA;&#xA;Parameters:&#xA;    string $class;;d4,40;;b1,0;;mstring $class;;p">
					<treenode node="class;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Seeder.php;f25;39;31;39;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="resolve;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Seeder.php;f14;54;5;69;;;;vpos;;v;;r&#xA;Definition&#xA;    resolve($class)&#xA;&#xA;Description&#xA;     Resolve an instance of the given seeder class.&#xA;&#xA;Parameters:&#xA;    string $class;;d4,55;;b2,0;;mstring $class;;p">
					<treenode node="class;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Seeder.php;f31;54;37;54;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="run;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Seeder.php;f11;28;5;31;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    run()&#xA;&#xA;Description&#xA;     Run the database seeds.;;d4,29;;b1,0;;m">
				</treenode>
				<treenode node="setCommand;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Seeder.php;f11;90;5;95;;;;vpos;;v;;r&#xA;Definition&#xA;    setCommand(Command $command)&#xA;&#xA;Description&#xA;     Set the console command instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Console\Command $command;;d4,91;;b1,0;;m\Illuminate\Console\Command $command;;p">
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Seeder.php;f39;90;47;90;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setContainer;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Seeder.php;f11;77;5;82;;;;vpos;;v;;r&#xA;Definition&#xA;    setContainer(Container $container)&#xA;&#xA;Description&#xA;     Set the IoC container instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Container\Container $container;;d4,78;;b1,0;;m\Illuminate\Container\Container $container;;p">
					<treenode node="container;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Seeder.php;f43;77;53;77;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Seeder.php;f14;21;22;21;;;;vpos;;v;;r&#xA;Description&#xA;     The console command instance.;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="container;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Seeder.php;f14;14;24;14;;;;vpos;;v;;r&#xA;Description&#xA;     The container instance.;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="SeederMakeCommand;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Seeds\SeederMakeCommand.php;f0;8;1;95;;;;vpos;;vGeneratorCommand;;c;;r;;d0,9;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Seeds\SeederMakeCommand.php;f11;45;5;50;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct(Filesystem $files, Composer $composer)&#xA;&#xA;Description&#xA;     Create a new command instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Filesystem\Filesystem $files&#xA;    \Illuminate\Foundation\Composer $composer;;d4,46;;b1,0;;m\Illuminate\Filesystem\Filesystem $files;;p\Illuminate\Foundation\Composer $composer;;p">
					<treenode node="composer;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Seeds\SeederMakeCommand.php;f60;45;69;45;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="files;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Seeds\SeederMakeCommand.php;f43;45;49;45;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fire;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Seeds\SeederMakeCommand.php;f11;57;5;62;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    fire()&#xA;&#xA;Description&#xA;     Execute the console command.;;d4,58;;b1,0;;m">
				</treenode>
				<treenode node="getPath;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Seeds\SeederMakeCommand.php;f14;80;5;83;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getPath($name)&#xA;&#xA;Description&#xA;     Get the destination class path.&#xA;&#xA;Parameters:&#xA;    string $name;;d4,81;;b2,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Seeds\SeederMakeCommand.php;f31;80;36;80;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getStub;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Seeds\SeederMakeCommand.php;f14;69;5;72;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getStub()&#xA;&#xA;Description&#xA;     Get the stub file for the generator.;;d4,70;;b2,0;;m">
				</treenode>
				<treenode node="parseName;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Seeds\SeederMakeCommand.php;f14;91;5;94;;;;vpos;;vstring;;r&#xA;Definition&#xA;    parseName($name)&#xA;&#xA;Description&#xA;     Parse the name and format according to the root namespace.&#xA;&#xA;Parameters:&#xA;    string $name;;d4,92;;b2,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Seeds\SeederMakeCommand.php;f33;91;38;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="composer;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Seeds\SeederMakeCommand.php;f14;36;23;36;;;;vpos;;v;;r&#xA;Description&#xA;     The Composer instance.;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="description;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Seeds\SeederMakeCommand.php;f14;22;26;22;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Seeds\SeederMakeCommand.php;f14;15;19;15;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Seeds\SeederMakeCommand.php;f14;29;19;29;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="SeedServiceProvider;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\SeedServiceProvider.php;f0;8;1;68;;;;vpos;;vServiceProvider;;c;;r;;d0,9;;b0,0;;m">
				<treenode node="provides;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\SeedServiceProvider.php;f11;64;5;67;;;;vpos;;varray;;r&#xA;Definition&#xA;    provides()&#xA;&#xA;Description&#xA;     Get the services provided by the provider.;;d4,65;;b1,0;;m">
				</treenode>
				<treenode node="register;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\SeedServiceProvider.php;f11;22;5;33;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    register()&#xA;&#xA;Description&#xA;     Register the service provider.;;d4,23;;b1,0;;m">
				</treenode>
				<treenode node="registerMakeCommand;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\SeedServiceProvider.php;f14;52;5;57;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    registerMakeCommand()&#xA;&#xA;Description&#xA;     Register the seeder generator command.;;d4,53;;b2,0;;m">
				</treenode>
				<treenode node="registerSeedCommand;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\SeedServiceProvider.php;f14;40;5;45;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    registerSeedCommand()&#xA;&#xA;Description&#xA;     Register the seed console command.;;d4,41;;b2,0;;m">
				</treenode>
				<treenode node="defer;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\SeedServiceProvider.php;f14;15;20;15;;;;vposbool;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="ServiceProvider;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ServiceProvider.php;f9;6;1;235;;;;vpos;;v;;r;;d0,7;;b0,0;;m">
				<treenode node="__call;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ServiceProvider.php;f11;227;5;234;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    __call($method, $parameters)&#xA;&#xA;Description&#xA;     Dynamically handle missing method calls.&#xA;&#xA;Parameters:&#xA;    string $method&#xA;    array $parameters;;d4,228;;b1,0;;mstring $method;;parray $parameters;;p">
					<treenode node="method;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ServiceProvider.php;f27;227;34;227;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ServiceProvider.php;f36;227;47;227;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ServiceProvider.php;f11;42;5;45;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct($app)&#xA;&#xA;Description&#xA;     Create a new service provider instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Contracts\Foundation\Application $app;;d4,43;;b1,0;;m\Illuminate\Contracts\Foundation\Application $app;;p">
					<treenode node="app;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ServiceProvider.php;f32;42;36;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="commands;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ServiceProvider.php;f11;166;5;178;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    commands($commands)&#xA;&#xA;Description&#xA;     Register the package's custom Artisan commands.&#xA;&#xA;Parameters:&#xA;    array|mixed $commands;;d4,167;;b1,0;;marray|mixed $commands;;p">
					<treenode node="commands;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ServiceProvider.php;f29;166;38;166;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compiles;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ServiceProvider.php;f18;215;5;218;;;;vpos;;varray;;r&#xA;Definition&#xA;    compiles()&#xA;&#xA;Description&#xA;     Get a list of files that should be compiled for the package.;;d4,216;;b1,5;;m">
				</treenode>
				<treenode node="isDeferred;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ServiceProvider.php;f11;205;5;208;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isDeferred()&#xA;&#xA;Description&#xA;     Determine if the provider is deferred.;;d4,206;;b1,0;;m">
				</treenode>
				<treenode node="loadTranslationsFrom;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ServiceProvider.php;f14;91;5;94;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    loadTranslationsFrom($path, $namespace)&#xA;&#xA;Description&#xA;     Register a translation file namespace.&#xA;&#xA;Parameters:&#xA;    string $path&#xA;    string $namespace;;d4,92;;b2,0;;mstring $path;;pstring $namespace;;p">
					<treenode node="namespace;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ServiceProvider.php;f51;91;61;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ServiceProvider.php;f44;91;49;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="loadViewsFrom;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ServiceProvider.php;f14;75;5;82;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    loadViewsFrom($path, $namespace)&#xA;&#xA;Description&#xA;     Register a view file namespace.&#xA;&#xA;Parameters:&#xA;    string $path&#xA;    string $namespace;;d4,76;;b2,0;;mstring $path;;pstring $namespace;;p">
					<treenode node="namespace;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ServiceProvider.php;f44;75;54;75;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ServiceProvider.php;f37;75;42;75;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mergeConfigFrom;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ServiceProvider.php;f14;61;5;66;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    mergeConfigFrom($path, $key)&#xA;&#xA;Description&#xA;     Merge the given configuration with the existing configuration.&#xA;&#xA;Parameters:&#xA;    string $path&#xA;    string $key;;d4,62;;b2,0;;mstring $path;;pstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ServiceProvider.php;f46;61;50;61;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ServiceProvider.php;f39;61;44;61;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="pathsToPublish;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ServiceProvider.php;f18;129;5;158;;;;vpos;;varray;;r&#xA;Definition&#xA;    pathsToPublish($provider = null, $group = null)&#xA;&#xA;Description&#xA;     Get the paths to publish.&#xA;&#xA;Parameters:&#xA;    string $provider&#xA;    string $group;;d4,130;;b1,5;;mstring $provider;;pstring $group;;p">
					<treenode node="group;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ServiceProvider.php;f60;129;66;129;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="provider;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ServiceProvider.php;f42;129;51;129;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="provides;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ServiceProvider.php;f11;185;5;188;;;;vpos;;varray;;r&#xA;Definition&#xA;    provides()&#xA;&#xA;Description&#xA;     Get the services provided by the provider.;;d4,186;;b1,0;;m">
				</treenode>
				<treenode node="publishes;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ServiceProvider.php;f14;103;5;120;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    publishes(array $paths, $group = null)&#xA;&#xA;Description&#xA;     Register paths to be published by the publish command.&#xA;&#xA;Parameters:&#xA;    array $paths&#xA;    string $group;;d4,104;;b2,0;;marray $paths;;pstring $group;;p">
					<treenode node="group;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ServiceProvider.php;f47;103;53;103;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="paths;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ServiceProvider.php;f39;103;45;103;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="register;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ServiceProvider.php;f20;52;39;52;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Register the service provider.;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="when;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ServiceProvider.php;f11;195;5;198;;;;vpos;;varray;;r&#xA;Definition&#xA;    when()&#xA;&#xA;Description&#xA;     Get the events that trigger this service provider to register.;;d4,196;;b1,0;;m">
				</treenode>
				<treenode node="app;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ServiceProvider.php;f14;13;18;13;;;;vpos;;v;;r&#xA;Description&#xA;     The application instance.;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="defer;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ServiceProvider.php;f14;20;20;20;;;;vposbool;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="publishes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ServiceProvider.php;f21;27;31;27;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="publishGroups;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ServiceProvider.php;f21;34;35;34;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="Session;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Session.php;f0;8;1;19;;;;vpos;;vFacade;;c;;r&#xA;Definition&#xA;    class Session extends Facade&#xA;&#xA;Description&#xA;      see \Illuminate\Session\SessionManager;;d0,9;;b0,0;;m">
				<treenode node="getFacadeAccessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Session.php;f21;15;5;18;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getFacadeAccessor()&#xA;&#xA;Description&#xA;     Get the registered name of the component.;;d4,16;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="Sodium;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\other\ide_stubs\libsodium.php;f4;51;5;88;;;;vpos;;v;;r;;d4,52;;b0,0;;m">
				<treenode node="randombytes_buf;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\other\ide_stubs\libsodium.php;f22;61;9;64;;;;vpos;;vstring;;r&#xA;Definition&#xA;    randombytes_buf($length)&#xA;&#xA;Description&#xA;     Generate a string of random bytes /dev/urandom&#xA;&#xA;Parameters:&#xA;    int $length;;d8,62;;b1,5;;mint $length;;p">
					<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\other\ide_stubs\libsodium.php;f47;61;54;61;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="randombytes_random16;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\other\ide_stubs\libsodium.php;f22;72;9;75;;;;vpos;;vint;;r&#xA;Definition&#xA;    randombytes_random16()&#xA;&#xA;Description&#xA;     Generate a 16-bit integer /dev/urandom;;d8,73;;b1,5;;m">
				</treenode>
				<treenode node="randombytes_uniform;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\other\ide_stubs\libsodium.php;f22;84;9;87;;;;vpos;;vint;;r&#xA;Definition&#xA;    randombytes_uniform($upperBoundNonInclusive = 0)&#xA;&#xA;Description&#xA;     Generate an unbiased random integer between 0 and a specified value /dev/urandom&#xA;&#xA;Parameters:&#xA;    int $upperBoundNonInclusive;;d8,85;;b1,5;;mint $upperBoundNonInclusive;;p">
					<treenode node="upperBoundNonInclusive;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\other\ide_stubs\libsodium.php;f51;84;74;84;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="SoftDeletingScope;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletingScope.php;f0;4;1;154;;;;vpos;;vScopeInterface;;c;;r;;d0,5;;b0,0;;m">
				<treenode node="addForceDelete;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletingScope.php;f14;87;5;92;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    addForceDelete(Builder $builder)&#xA;&#xA;Description&#xA;     Add the force delete extension to the builder.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $builder;;d4,88;;b2,0;;m\Illuminate\Database\Eloquent\Builder $builder;;p">
					<treenode node="builder;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletingScope.php;f46;87;54;87;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addOnlyTrashed;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletingScope.php;f14;130;5;141;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    addOnlyTrashed(Builder $builder)&#xA;&#xA;Description&#xA;     Add the only-trashed extension to the builder.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $builder;;d4,131;;b2,0;;m\Illuminate\Database\Eloquent\Builder $builder;;p">
					<treenode node="builder;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletingScope.php;f46;130;54;130;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addRestore;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletingScope.php;f14;100;5;107;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    addRestore(Builder $builder)&#xA;&#xA;Description&#xA;     Add the restore extension to the builder.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $builder;;d4,101;;b2,0;;m\Illuminate\Database\Eloquent\Builder $builder;;p">
					<treenode node="builder;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletingScope.php;f42;100;50;100;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addWithTrashed;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletingScope.php;f14;115;5;122;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    addWithTrashed(Builder $builder)&#xA;&#xA;Description&#xA;     Add the with-trashed extension to the builder.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $builder;;d4,116;;b2,0;;m\Illuminate\Database\Eloquent\Builder $builder;;p">
					<treenode node="builder;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletingScope.php;f46;115;54;115;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="apply;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletingScope.php;f11;20;5;25;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    apply(Builder $builder, Model $model)&#xA;&#xA;Description&#xA;     Apply the scope to a given Eloquent query builder.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $builder&#xA;    \Illuminate\Database\Eloquent\Model $model;;d4,21;;b1,0;;m\Illuminate\Database\Eloquent\Builder $builder;;p\Illuminate\Database\Eloquent\Model $model;;p">
					<treenode node="builder;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletingScope.php;f34;20;42;20;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletingScope.php;f50;20;56;20;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="extend;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletingScope.php;f11;51;5;64;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    extend(Builder $builder)&#xA;&#xA;Description&#xA;     Extend the query builder with the needed functions.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $builder;;d4,52;;b1,0;;m\Illuminate\Database\Eloquent\Builder $builder;;p">
					<treenode node="builder;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletingScope.php;f35;51;43;51;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getDeletedAtColumn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletingScope.php;f14;72;5;79;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getDeletedAtColumn(Builder $builder)&#xA;&#xA;Description&#xA;     Get the &quot;deleted at&quot; column for the builder.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $builder;;d4,73;;b2,0;;m\Illuminate\Database\Eloquent\Builder $builder;;p">
					<treenode node="builder;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletingScope.php;f50;72;58;72;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isSoftDeleteConstraint;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletingScope.php;f14;150;5;153;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isSoftDeleteConstraint(array $where, $column)&#xA;&#xA;Description&#xA;     Determine if the given where clause is a soft delete constraint.&#xA;&#xA;Parameters:&#xA;    array $where&#xA;    string $column;;d4,151;;b2,0;;marray $where;;pstring $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletingScope.php;f60;150;67;150;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="where;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletingScope.php;f52;150;58;150;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="remove;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletingScope.php;f11;34;5;43;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    remove(Builder $builder, Model $model)&#xA;&#xA;Description&#xA;     Remove the scope from the given Eloquent query builder.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Eloquent\Builder $builder&#xA;    \Illuminate\Database\Eloquent\Model $model;;d4,35;;b1,0;;m\Illuminate\Database\Eloquent\Builder $builder;;p\Illuminate\Database\Eloquent\Model $model;;p">
					<treenode node="builder;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletingScope.php;f35;34;43;34;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletingScope.php;f51;34;57;34;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="extensions;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletingScope.php;f14;11;25;11;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="SQLiteConnection;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\SQLiteConnection.php;f0;9;1;50;;;;vpos;;vConnection;;c;;r;;d0,10;;b0,0;;m">
				<treenode node="getDefaultPostProcessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\SQLiteConnection.php;f14;36;5;39;;;;vpos;;v;;r&#xA;Definition&#xA;    getDefaultPostProcessor()&#xA;&#xA;Description&#xA;     Get the default post processor instance.;;d4,37;;b2,0;;m">
				</treenode>
				<treenode node="getDefaultQueryGrammar;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\SQLiteConnection.php;f14;16;5;19;;;;vpos;;v;;r&#xA;Definition&#xA;    getDefaultQueryGrammar()&#xA;&#xA;Description&#xA;     Get the default query grammar instance.;;d4,17;;b2,0;;m">
				</treenode>
				<treenode node="getDefaultSchemaGrammar;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\SQLiteConnection.php;f14;26;5;29;;;;vpos;;v;;r&#xA;Definition&#xA;    getDefaultSchemaGrammar()&#xA;&#xA;Description&#xA;     Get the default schema grammar instance.;;d4,27;;b2,0;;m">
				</treenode>
				<treenode node="getDoctrineDriver;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\SQLiteConnection.php;f14;46;5;49;;;;vpos;;v;;r&#xA;Definition&#xA;    getDoctrineDriver()&#xA;&#xA;Description&#xA;     Get the Doctrine DBAL driver.;;d4,47;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="SQLiteConnector;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\SQLiteConnector.php;f0;6;1;38;;;;vpos;;vConnector;;cConnectorInterface;;c;;r;;d0,7;;b0,0;;m">
				<treenode node="connect;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\SQLiteConnector.php;f11;16;5;37;;;;vpos;;v;;r&#xA;Definition&#xA;    connect(array $config)&#xA;&#xA;Description&#xA;     Establish a database connection.&#xA;&#xA;Parameters:&#xA;    array $config;;d4,17;;b1,0;;marray $config;;p">
					<treenode node="config;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\SQLiteConnector.php;f34;16;41;16;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="SQLiteGrammar;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f0;8;1;603;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SQLiteGrammar.php;f0;6;1;127;;;;vpos;;vGrammar;;c;;r;;d0,9;;b0,0;;m">
				<treenode node="addForeignKeys;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f14;74;5;96;;;;vpos;;vstring;;r&#xA;Definition&#xA;    addForeignKeys(Blueprint $blueprint)&#xA;&#xA;Description&#xA;     Get the foreign key syntax for a table creation statement.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;&#xA;Return:&#xA;   |null;;d4,75;;b2,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f48;74;58;74;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addPrimaryKeys;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f14;124;5;133;;;;vpos;;vstring;;r&#xA;Definition&#xA;    addPrimaryKeys(Blueprint $blueprint)&#xA;&#xA;Description&#xA;     Get the primary key syntax for a table creation statement.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;&#xA;Return:&#xA;   |null;;d4,125;;b2,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f48;124;58;124;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileAdd;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f11;142;5;155;;;;vpos;;varray;;r&#xA;Definition&#xA;    compileAdd(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile alter table commands for adding columns.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,143;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f41;142;51;142;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f60;142;68;142;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileColumnExists;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f11;40;5;43;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileColumnExists($table)&#xA;&#xA;Description&#xA;     Compile the query to determine the list of columns.&#xA;&#xA;Parameters:&#xA;    string $table;;d4,41;;b1,0;;mstring $table;;p">
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f40;40;46;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileCreate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f11;52;5;66;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileCreate(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a create table command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,53;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f44;52;54;52;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f63;52;71;52;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileDrop;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f11;208;5;211;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileDrop(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a drop table command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,209;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f42;208;52;208;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f61;208;69;208;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileDropColumn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f11;233;5;246;;;;vpos;;varray;;r&#xA;Definition&#xA;    compileDropColumn(Blueprint $blueprint, Fluent $command, Connection $connection)&#xA;&#xA;Description&#xA;     Compile a drop column command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command&#xA;    \Illuminate\Database\Connection $connection;;d4,234;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p\Illuminate\Database\Connection $connection;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f48;233;58;233;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f67;233;75;233;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="connection;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f88;233;99;233;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileDropIfExists;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f11;220;5;223;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileDropIfExists(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a drop table (if exists) command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,221;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f50;220;60;220;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f69;220;77;220;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileDropIndex;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f11;267;5;270;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileDropIndex(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a drop index command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,268;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f47;267;57;267;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f66;267;74;267;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileDropUnique;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f11;255;5;258;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileDropUnique(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a drop unique key command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,256;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f48;255;58;255;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f67;255;75;255;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileForeign;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f11;196;5;199;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileForeign(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a foreign key command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,197;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f45;196;55;196;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f64;196;72;196;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileIndex;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f11;180;5;187;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileIndex(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a plain index key command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,181;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f43;180;53;180;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f62;180;70;180;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileInsert;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SQLiteGrammar.php;f11;26;5;58;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileInsert(Builder $query, array $values)&#xA;&#xA;Description&#xA;     Compile an insert statement into SQL.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $values;;d4,27;;b1,0;;m\Illuminate\Database\Query\Builder $query;;parray $values;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SQLiteGrammar.php;f42;26;48;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SQLiteGrammar.php;f56;26;63;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileRename;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f11;279;5;284;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileRename(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a rename table command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,280;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f44;279;54;279;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f63;279;71;279;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileTableExists;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f11;29;5;32;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileTableExists()&#xA;&#xA;Description&#xA;     Compile the query to determine if a table exists.;;d4,30;;b1,0;;m">
				</treenode>
				<treenode node="compileTruncate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SQLiteGrammar.php;f11;66;5;73;;;;vpos;;varray;;r&#xA;Definition&#xA;    compileTruncate(Builder $query)&#xA;&#xA;Description&#xA;     Compile a truncate table statement into SQL.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query;;d4,67;;b1,0;;m\Illuminate\Database\Query\Builder $query;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SQLiteGrammar.php;f44;66;50;66;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileUnique;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f11;164;5;171;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileUnique(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a unique key command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,165;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f44;164;54;164;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f63;164;71;164;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dateBasedWhere;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SQLiteGrammar.php;f14;119;5;126;;;;vpos;;vstring;;r&#xA;Definition&#xA;    dateBasedWhere($type, Builder $query, $where)&#xA;&#xA;Description&#xA;     Compile a date based where clause.&#xA;&#xA;Parameters:&#xA;    string $type&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $where;;d4,120;;b2,0;;mstring $type;;p\Illuminate\Database\Query\Builder $query;;parray $where;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SQLiteGrammar.php;f53;119;59;119;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SQLiteGrammar.php;f38;119;43;119;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="where;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SQLiteGrammar.php;f61;119;67;119;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getForeignKey;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f14;104;5;116;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getForeignKey($foreign)&#xA;&#xA;Description&#xA;     Get the SQL for the foreign key.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $foreign;;d4,105;;b2,0;;m\Illuminate\Support\Fluent $foreign;;p">
					<treenode node="foreign;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f37;104;45;104;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="modifyDefault;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f14;583;5;588;;;;vpos;;vstring;;r&#xA;Definition&#xA;    modifyDefault(Blueprint $blueprint, Fluent $column)&#xA;&#xA;Description&#xA;     Get the SQL for a default column modifier.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $column&#xA;&#xA;Return:&#xA;   |null;;d4,584;;b2,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $column;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f47;583;57;583;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f66;583;73;583;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="modifyIncrement;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f14;597;5;602;;;;vpos;;vstring;;r&#xA;Definition&#xA;    modifyIncrement(Blueprint $blueprint, Fluent $column)&#xA;&#xA;Description&#xA;     Get the SQL for an auto-increment column modifier.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $column&#xA;&#xA;Return:&#xA;   |null;;d4,598;;b2,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $column;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f49;597;59;597;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f68;597;75;597;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="modifyNullable;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f14;571;5;574;;;;vpos;;vstring;;r&#xA;Definition&#xA;    modifyNullable(Blueprint $blueprint, Fluent $column)&#xA;&#xA;Description&#xA;     Get the SQL for a nullable column modifier.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $column&#xA;&#xA;Return:&#xA;   |null;;d4,572;;b2,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $column;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f48;571;58;571;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f67;571;74;571;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeBigInteger;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f14;358;5;361;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeBigInteger(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a big integer type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,359;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f45;358;52;358;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeBinary;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f14;559;5;562;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeBinary(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a binary type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,560;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f41;559;48;559;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeBoolean;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f14;435;5;438;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeBoolean(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a boolean type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,436;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f42;435;49;435;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeChar;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f14;292;5;295;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeChar(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a char type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,293;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f39;292;46;292;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeDate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f14;479;5;482;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeDate(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a date type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,480;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f39;479;46;479;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeDateTime;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f14;490;5;493;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeDateTime(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a date-time type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,491;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f43;490;50;490;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeDateTimeTz;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f14;504;5;507;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeDateTimeTz(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a date-time type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,505;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f45;504;52;504;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeDecimal;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f14;424;5;427;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeDecimal(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a decimal type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,425;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f42;424;49;424;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeDouble;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f14;413;5;416;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeDouble(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a double type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,414;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f41;413;48;413;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeEnum;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f14;446;5;449;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeEnum(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for an enum type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,447;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f39;446;46;446;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeFloat;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f14;402;5;405;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeFloat(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a float type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,403;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f40;402;47;402;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeInteger;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f14;347;5;350;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeInteger(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a integer type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,348;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f42;347;49;347;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeJson;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f14;457;5;460;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeJson(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a json type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,458;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f39;457;46;457;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeJsonb;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f14;468;5;471;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeJsonb(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a jsonb type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,469;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f40;468;47;468;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeLongText;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f14;336;5;339;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeLongText(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a long text type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,337;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f43;336;50;336;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeMediumInteger;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f14;369;5;372;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeMediumInteger(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a medium integer type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,370;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f48;369;55;369;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeMediumText;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f14;325;5;328;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeMediumText(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a medium text type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,326;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f45;325;52;325;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeSmallInteger;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f14;391;5;394;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeSmallInteger(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a small integer type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,392;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f47;391;54;391;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeString;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f14;303;5;306;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeString(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a string type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,304;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f41;303;48;303;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeText;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f14;314;5;317;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeText(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a text type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,315;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f39;314;46;314;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeTime;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f14;515;5;518;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeTime(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a time type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,516;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f39;515;46;515;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeTimestamp;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f14;537;5;540;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeTimestamp(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a timestamp type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,538;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f44;537;51;537;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeTimestampTz;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f14;548;5;551;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeTimestampTz(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a timestamp type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,549;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f46;548;53;548;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeTimeTz;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f14;526;5;529;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeTimeTz(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a time type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,527;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f41;526;48;526;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeTinyInteger;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f14;380;5;383;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeTinyInteger(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a tiny integer type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,381;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f46;380;53;380;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereDay;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SQLiteGrammar.php;f14;82;5;85;;;;vpos;;vstring;;r&#xA;Definition&#xA;    whereDay(Builder $query, $where)&#xA;&#xA;Description&#xA;     Compile a &quot;where day&quot; clause.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $where;;d4,83;;b2,0;;m\Illuminate\Database\Query\Builder $query;;parray $where;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SQLiteGrammar.php;f40;82;46;82;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="where;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SQLiteGrammar.php;f48;82;54;82;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereMonth;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SQLiteGrammar.php;f14;94;5;97;;;;vpos;;vstring;;r&#xA;Definition&#xA;    whereMonth(Builder $query, $where)&#xA;&#xA;Description&#xA;     Compile a &quot;where month&quot; clause.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $where;;d4,95;;b2,0;;m\Illuminate\Database\Query\Builder $query;;parray $where;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SQLiteGrammar.php;f42;94;48;94;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="where;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SQLiteGrammar.php;f50;94;56;94;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="whereYear;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SQLiteGrammar.php;f14;106;5;109;;;;vpos;;vstring;;r&#xA;Definition&#xA;    whereYear(Builder $query, $where)&#xA;&#xA;Description&#xA;     Compile a &quot;where year&quot; clause.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $where;;d4,107;;b2,0;;m\Illuminate\Database\Query\Builder $query;;parray $where;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SQLiteGrammar.php;f41;106;47;106;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="where;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SQLiteGrammar.php;f49;106;55;106;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="modifiers;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f14;15;24;15;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="operators;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SQLiteGrammar.php;f14;13;24;13;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="serials;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php;f14;22;22;22;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="SQLiteProcessor;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\SQLiteProcessor.php;f0;4;1;22;;;;vpos;;vProcessor;;c;;r;;d0,5;;b0,0;;m">
				<treenode node="processColumnListing;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\SQLiteProcessor.php;f11;12;5;21;;;;vpos;;varray;;r&#xA;Definition&#xA;    processColumnListing($results)&#xA;&#xA;Description&#xA;     Process the results of a column listing query.&#xA;&#xA;Parameters:&#xA;    array $results;;d4,13;;b1,0;;marray $results;;p">
					<treenode node="results;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\SQLiteProcessor.php;f41;12;49;12;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="SqlServerConnection;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\SqlServerConnection.php;f0;12;1;94;;;;vpos;;vConnection;;c;;r;;d0,13;;b0,0;;m">
				<treenode node="getDefaultPostProcessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\SqlServerConnection.php;f14;80;5;83;;;;vpos;;v;;r&#xA;Definition&#xA;    getDefaultPostProcessor()&#xA;&#xA;Description&#xA;     Get the default post processor instance.;;d4,81;;b2,0;;m">
				</treenode>
				<treenode node="getDefaultQueryGrammar;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\SqlServerConnection.php;f14;60;5;63;;;;vpos;;v;;r&#xA;Definition&#xA;    getDefaultQueryGrammar()&#xA;&#xA;Description&#xA;     Get the default query grammar instance.;;d4,61;;b2,0;;m">
				</treenode>
				<treenode node="getDefaultSchemaGrammar;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\SqlServerConnection.php;f14;70;5;73;;;;vpos;;v;;r&#xA;Definition&#xA;    getDefaultSchemaGrammar()&#xA;&#xA;Description&#xA;     Get the default schema grammar instance.;;d4,71;;b2,0;;m">
				</treenode>
				<treenode node="getDoctrineDriver;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\SqlServerConnection.php;f14;90;5;93;;;;vpos;;v;;r&#xA;Definition&#xA;    getDoctrineDriver()&#xA;&#xA;Description&#xA;     Get the Doctrine DBAL Driver.;;d4,91;;b2,0;;m">
				</treenode>
				<treenode node="transaction;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\SqlServerConnection.php;f11;22;5;53;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    transaction(Closure $callback)&#xA;&#xA;Description&#xA;     Execute a Closure within a transaction.&#xA;&#xA;Parameters:&#xA;    \Closure $callback;;d4,23;;b1,0;;m\Closure $callback;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\SqlServerConnection.php;f40;22;49;22;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="SqlServerConnector;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\SqlServerConnector.php;f0;7;1;136;;;;vpos;;vConnector;;cConnectorInterface;;c;;r;;d0,8;;b0,0;;m">
				<treenode node="buildConnectString;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\SqlServerConnector.php;f14;102;5;109;;;;vpos;;vstring;;r&#xA;Definition&#xA;    buildConnectString($driver, array $arguments)&#xA;&#xA;Description&#xA;     Build a connection string from the given arguments.&#xA;&#xA;Parameters:&#xA;    string $driver&#xA;    array $arguments;;d4,103;;b2,0;;mstring $driver;;parray $arguments;;p">
					<treenode node="arguments;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\SqlServerConnector.php;f57;102;67;102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="driver;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\SqlServerConnector.php;f42;102;49;102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="buildHostString;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\SqlServerConnector.php;f14;118;5;125;;;;vpos;;vstring;;r&#xA;Definition&#xA;    buildHostString(array $config, $separator)&#xA;&#xA;Description&#xA;     Build a host string from the given configuration.&#xA;&#xA;Parameters:&#xA;    array $config&#xA;    string $separator;;d4,119;;b2,0;;marray $config;;pstring $separator;;p">
					<treenode node="config;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\SqlServerConnector.php;f45;118;52;118;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="separator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\SqlServerConnector.php;f54;118;64;118;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="connect;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\SqlServerConnector.php;f11;27;5;32;;;;vpos;;v;;r&#xA;Definition&#xA;    connect(array $config)&#xA;&#xA;Description&#xA;     Establish a database connection.&#xA;&#xA;Parameters:&#xA;    array $config;;d4,28;;b1,0;;marray $config;;p">
					<treenode node="config;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\SqlServerConnector.php;f34;27;41;27;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getAvailableDrivers;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\SqlServerConnector.php;f14;132;5;135;;;;vpos;;varray;;r&#xA;Definition&#xA;    getAvailableDrivers()&#xA;&#xA;Description&#xA;     Get the available PDO drivers.;;d4,133;;b2,0;;m">
				</treenode>
				<treenode node="getDblibDsn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\SqlServerConnector.php;f14;58;5;70;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getDblibDsn(array $config)&#xA;&#xA;Description&#xA;     Get the DSN string for a DbLib connection.&#xA;&#xA;Parameters:&#xA;    array $config;;d4,59;;b2,0;;marray $config;;p">
					<treenode node="config;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\SqlServerConnector.php;f41;58;48;58;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getDsn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\SqlServerConnector.php;f14;40;5;50;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getDsn(array $config)&#xA;&#xA;Description&#xA;     Create a DSN string from a configuration.&#xA;&#xA;Parameters:&#xA;    array $config;;d4,41;;b2,0;;marray $config;;p">
					<treenode node="config;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\SqlServerConnector.php;f36;40;43;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getSqlSrvDsn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\SqlServerConnector.php;f14;78;5;93;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getSqlSrvDsn(array $config)&#xA;&#xA;Description&#xA;     Get the DSN string for a SqlSrv connection.&#xA;&#xA;Parameters:&#xA;    array $config;;d4,79;;b2,0;;marray $config;;p">
					<treenode node="config;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\SqlServerConnector.php;f42;78;49;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\SqlServerConnector.php;f14;14;22;14;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="SqlServerGrammar;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f0;7;1;550;;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SqlServerGrammar.php;f0;6;1;225;;;;vpos;;vGrammar;;c;;r;;d0,8;;b0,0;;m">
				<treenode node="compileAdd;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f11;67;5;74;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileAdd(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a create table command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,68;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f41;67;51;67;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f60;67;68;67;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileAnsiOffset;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SqlServerGrammar.php;f14;93;5;122;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileAnsiOffset(Builder $query, $components)&#xA;&#xA;Description&#xA;     Create a full ANSI offset clause for the query.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $components;;d4,94;;b2,0;;m\Illuminate\Database\Query\Builder $query;;parray $components;;p">
					<treenode node="components;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SqlServerGrammar.php;f57;93;68;93;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SqlServerGrammar.php;f49;93;55;93;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileColumnExists;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f11;39;5;44;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileColumnExists($table)&#xA;&#xA;Description&#xA;     Compile the query to determine the list of columns.&#xA;&#xA;Parameters:&#xA;    string $table;;d4,40;;b1,0;;mstring $table;;p">
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f40;39;46;39;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileColumns;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SqlServerGrammar.php;f14;46;5;62;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileColumns(Builder $query, $columns)&#xA;&#xA;Description&#xA;     Compile the &quot;select *&quot; portion of the query.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    array $columns;;d4,47;;b2,0;;m\Illuminate\Database\Query\Builder $query;;parray $columns;;p">
					<treenode node="columns;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SqlServerGrammar.php;f54;46;62;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SqlServerGrammar.php;f46;46;52;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileCreate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f11;53;5;58;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileCreate(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a create table command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,54;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f44;53;54;53;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f63;53;71;53;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileDrop;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f11;131;5;134;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileDrop(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a drop table command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,132;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f42;131;52;131;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f61;131;69;131;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileDropColumn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f11;155;5;162;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileDropColumn(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a drop column command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,156;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f48;155;58;155;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f67;155;75;155;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileDropForeign;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f11;213;5;218;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileDropForeign(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a drop foreign key command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,214;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f49;213;59;213;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f68;213;76;213;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileDropIfExists;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f11;143;5;146;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileDropIfExists(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a drop table (if exists) command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,144;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f50;143;60;143;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f69;143;77;143;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileDropIndex;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f11;199;5;204;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileDropIndex(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a drop index command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,200;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f47;199;57;199;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f66;199;74;199;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileDropPrimary;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f11;171;5;176;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileDropPrimary(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a drop primary key command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,172;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f49;171;59;171;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f68;171;76;171;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileDropUnique;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f11;185;5;190;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileDropUnique(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a drop unique key command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,186;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f48;185;58;185;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f67;185;75;185;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileFrom;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SqlServerGrammar.php;f14;71;5;84;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileFrom(Builder $query, $table)&#xA;&#xA;Description&#xA;     Compile the &quot;from&quot; portion of the query.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    string $table;;d4,72;;b2,0;;m\Illuminate\Database\Query\Builder $query;;pstring $table;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SqlServerGrammar.php;f43;71;49;71;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SqlServerGrammar.php;f51;71;57;71;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileIndex;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f11;115;5;122;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileIndex(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a plain index key command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,116;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f43;115;53;115;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f62;115;70;115;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileLimit;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SqlServerGrammar.php;f14;173;5;176;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileLimit(Builder $query, $limit)&#xA;&#xA;Description&#xA;     Compile the &quot;limit&quot; portions of the query.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    int $limit;;d4,174;;b2,0;;m\Illuminate\Database\Query\Builder $query;;pint $limit;;p">
					<treenode node="limit;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SqlServerGrammar.php;f52;173;58;173;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SqlServerGrammar.php;f44;173;50;173;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileOffset;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SqlServerGrammar.php;f14;185;5;188;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileOffset(Builder $query, $offset)&#xA;&#xA;Description&#xA;     Compile the &quot;offset&quot; portions of the query.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    int $offset;;d4,186;;b2,0;;m\Illuminate\Database\Query\Builder $query;;pint $offset;;p">
					<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SqlServerGrammar.php;f53;185;60;185;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SqlServerGrammar.php;f45;185;51;185;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileOver;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SqlServerGrammar.php;f14;130;5;133;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileOver($orderings)&#xA;&#xA;Description&#xA;     Compile the over statement for a table expression.&#xA;&#xA;Parameters:&#xA;    string $orderings;;d4,131;;b2,0;;mstring $orderings;;p">
					<treenode node="orderings;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SqlServerGrammar.php;f35;130;45;130;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compilePrimary;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f11;83;5;90;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compilePrimary(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a primary key command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,84;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f45;83;55;83;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f64;83;72;83;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileRename;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f11;227;5;232;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileRename(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a rename table command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,228;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f44;227;54;227;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f63;227;71;227;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileRowConstraint;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SqlServerGrammar.php;f14;141;5;152;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileRowConstraint($query)&#xA;&#xA;Description&#xA;     Compile the limit / offset row constraint for a query.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query;;d4,142;;b2,0;;m\Illuminate\Database\Query\Builder $query;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SqlServerGrammar.php;f44;141;50;141;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileSelect;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SqlServerGrammar.php;f11;25;5;37;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileSelect(Builder $query)&#xA;&#xA;Description&#xA;     Compile a select query into SQL.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query;;d4,26;;b1,0;;m\Illuminate\Database\Query\Builder $query;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SqlServerGrammar.php;f42;25;48;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileTableExists;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f11;28;5;31;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileTableExists()&#xA;&#xA;Description&#xA;     Compile the query to determine if a table exists.;;d4,29;;b1,0;;m">
				</treenode>
				<treenode node="compileTableExpression;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SqlServerGrammar.php;f14;161;5;164;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileTableExpression($sql, $constraint)&#xA;&#xA;Description&#xA;     Compile a common table expression for a query.&#xA;&#xA;Parameters:&#xA;    string $sql&#xA;    string $constraint;;d4,162;;b2,0;;mstring $sql;;pstring $constraint;;p">
					<treenode node="constraint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SqlServerGrammar.php;f52;161;63;161;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sql;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SqlServerGrammar.php;f46;161;50;161;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileTruncate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SqlServerGrammar.php;f11;196;5;199;;;;vpos;;varray;;r&#xA;Definition&#xA;    compileTruncate(Builder $query)&#xA;&#xA;Description&#xA;     Compile a truncate table statement into SQL.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query;;d4,197;;b1,0;;m\Illuminate\Database\Query\Builder $query;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SqlServerGrammar.php;f44;196;50;196;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileUnique;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f11;99;5;106;;;;vpos;;vstring;;r&#xA;Definition&#xA;    compileUnique(Blueprint $blueprint, Fluent $command)&#xA;&#xA;Description&#xA;     Compile a unique key command.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $command;;d4,100;;b1,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $command;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f44;99;54;99;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f63;99;71;99;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getDateFormat;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SqlServerGrammar.php;f11;206;5;209;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getDateFormat()&#xA;&#xA;Description&#xA;     Get the format for database stored dates.;;d4,207;;b1,0;;m">
				</treenode>
				<treenode node="modifyDefault;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f14;530;5;535;;;;vpos;;vstring;;r&#xA;Definition&#xA;    modifyDefault(Blueprint $blueprint, Fluent $column)&#xA;&#xA;Description&#xA;     Get the SQL for a default column modifier.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $column&#xA;&#xA;Return:&#xA;   |null;;d4,531;;b2,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $column;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f47;530;57;530;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f66;530;73;530;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="modifyIncrement;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f14;544;5;549;;;;vpos;;vstring;;r&#xA;Definition&#xA;    modifyIncrement(Blueprint $blueprint, Fluent $column)&#xA;&#xA;Description&#xA;     Get the SQL for an auto-increment column modifier.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $column&#xA;&#xA;Return:&#xA;   |null;;d4,545;;b2,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $column;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f49;544;59;544;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f68;544;75;544;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="modifyNullable;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f14;518;5;521;;;;vpos;;vstring;;r&#xA;Definition&#xA;    modifyNullable(Blueprint $blueprint, Fluent $column)&#xA;&#xA;Description&#xA;     Get the SQL for a nullable column modifier.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Schema\Blueprint $blueprint&#xA;    \Illuminate\Support\Fluent $column&#xA;&#xA;Return:&#xA;   |null;;d4,519;;b2,0;;m\Illuminate\Database\Schema\Blueprint $blueprint;;p\Illuminate\Support\Fluent $column;;p">
					<treenode node="blueprint;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f48;518;58;518;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f67;518;74;518;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeBigInteger;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f14;306;5;309;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeBigInteger(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a big integer type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,307;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f45;306;52;306;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeBinary;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f14;506;5;509;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeBinary(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a binary type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,507;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f41;506;48;506;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeBoolean;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f14;383;5;386;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeBoolean(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a boolean type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,384;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f42;383;49;383;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeChar;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f14;240;5;243;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeChar(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a char type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,241;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f39;240;46;240;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeDate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f14;427;5;430;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeDate(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a date type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,428;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f39;427;46;427;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeDateTime;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f14;438;5;441;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeDateTime(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a date-time type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,439;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f43;438;50;438;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeDateTimeTz;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f14;449;5;452;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeDateTimeTz(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a date-time type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,450;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f45;449;52;449;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeDecimal;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f14;372;5;375;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeDecimal(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a decimal type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,373;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f42;372;49;372;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeDouble;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f14;361;5;364;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeDouble(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a double type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,362;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f41;361;48;361;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeEnum;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f14;394;5;397;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeEnum(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for an enum type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,395;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f39;394;46;394;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeFloat;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f14;350;5;353;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeFloat(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a float type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,351;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f40;350;47;350;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeInteger;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f14;295;5;298;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeInteger(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a integer type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,296;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f42;295;49;295;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeJson;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f14;405;5;408;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeJson(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a json type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,406;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f39;405;46;405;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeJsonb;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f14;416;5;419;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeJsonb(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a jsonb type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,417;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f40;416;47;416;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeLongText;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f14;284;5;287;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeLongText(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a long text type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,285;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f43;284;50;284;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeMediumInteger;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f14;317;5;320;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeMediumInteger(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a medium integer type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,318;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f48;317;55;317;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeMediumText;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f14;273;5;276;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeMediumText(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a medium text type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,274;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f45;273;52;273;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeSmallInteger;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f14;339;5;342;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeSmallInteger(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a small integer type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,340;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f47;339;54;339;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeString;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f14;251;5;254;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeString(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a string type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,252;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f41;251;48;251;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeText;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f14;262;5;265;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeText(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a text type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,263;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f39;262;46;262;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeTime;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f14;460;5;463;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeTime(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a time type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,461;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f39;460;46;460;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeTimestamp;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f14;482;5;485;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeTimestamp(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a timestamp type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,483;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f44;482;51;482;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeTimestampTz;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f14;495;5;498;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeTimestampTz(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a timestamp type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,496;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f46;495;53;495;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeTimeTz;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f14;471;5;474;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeTimeTz(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a time type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,472;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f41;471;48;471;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeTinyInteger;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f14;328;5;331;;;;vpos;;vstring;;r&#xA;Definition&#xA;    typeTinyInteger(Fluent $column)&#xA;&#xA;Description&#xA;     Create the column definition for a tiny integer type.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Support\Fluent $column;;d4,329;;b2,0;;m\Illuminate\Support\Fluent $column;;p">
					<treenode node="column;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f46;328;53;328;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="wrapValue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SqlServerGrammar.php;f14;217;5;224;;;;vpos;;vstring;;r&#xA;Definition&#xA;    wrapValue($value)&#xA;&#xA;Description&#xA;     Wrap a single string in keyword identifiers.&#xA;&#xA;Parameters:&#xA;    string $value;;d4,218;;b2,0;;mstring $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SqlServerGrammar.php;f33;217;39;217;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="modifiers;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f14;14;24;14;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="operators;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SqlServerGrammar.php;f14;13;24;13;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="serials;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php;f14;21;22;21;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="SqlServerProcessor;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\SqlServerProcessor.php;f0;6;1;40;;;;vpos;;vProcessor;;c;;r;;d0,7;;b0,0;;m">
				<treenode node="processColumnListing;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\SqlServerProcessor.php;f11;32;5;39;;;;vpos;;varray;;r&#xA;Definition&#xA;    processColumnListing($results)&#xA;&#xA;Description&#xA;     Process the results of a column listing query.&#xA;&#xA;Parameters:&#xA;    array $results;;d4,33;;b1,0;;marray $results;;p">
					<treenode node="results;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\SqlServerProcessor.php;f41;32;49;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="processInsertGetId;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\SqlServerProcessor.php;f11;17;5;24;;;;vpos;;vint;;r&#xA;Definition&#xA;    processInsertGetId(Builder $query, $sql, $values, $sequence = null)&#xA;&#xA;Description&#xA;     Process an &quot;insert get ID&quot; query.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Query\Builder $query&#xA;    string $sql&#xA;    array $values&#xA;    string $sequence;;d4,18;;b1,0;;m\Illuminate\Database\Query\Builder $query;;pstring $sql;;parray $values;;pstring $sequence;;p">
					<treenode node="query;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\SqlServerProcessor.php;f47;17;53;17;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sequence;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\SqlServerProcessor.php;f70;17;79;17;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sql;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\SqlServerProcessor.php;f55;17;59;17;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\SqlServerProcessor.php;f61;17;68;17;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="StaleResource;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorCacheTest.php;f0;295;1;310;;;;vpos;;vSelfCheckingResourceInterface;;c;;r;;d0,296;;b0,0;;m">
				<treenode node="__toString;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorCacheTest.php;f11;306;5;309;;;;vpos;;v;;r;;d4,307;;b1,0;;m">
				</treenode>
				<treenode node="getResource;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorCacheTest.php;f11;302;5;304;;;;vpos;;v;;r;;d4,303;;b1,0;;m">
				</treenode>
				<treenode node="isFresh;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorCacheTest.php;f11;297;5;300;;;;vpos;;v;;r;;d4,298;;b1,0;;mtimestamp;;p">
					<treenode node="timestamp;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorCacheTest.php;f28;297;38;297;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="StaticStringy;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f0;4;1;978;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
				<treenode node="at;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;687;5;690;;;;vpos;;vstring;;r&#xA;Definition&#xA;    at($str, $index, $encoding = null)&#xA;&#xA;Description&#xA;     Returns the character at $index, with indexes starting at 0.&#xA;&#xA;Parameters:&#xA;    string $str - The string from which to get the char&#xA;    int $index - Position of the character&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   The character at $index;;d4,688;;b1,5;;mstring $str;;pint $index;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f44;687;53;687;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="index;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f36;687;42;687;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f30;687;34;687;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="camelize;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;51;5;54;;;;vpos;;vstring;;r&#xA;Definition&#xA;    camelize($str, $encoding = null)&#xA;&#xA;Description&#xA;     Returns a camelCase version of the string. Trims surrounding spaces, capitalizes letters following digits, spaces, dashes and underscores, and removes spaces, dashes, as well as underscores.&#xA;&#xA;Parameters:&#xA;    string $str - String to convert to camelCase&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   String in camelCase;;d4,52;;b1,5;;mstring $str;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f42;51;51;51;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f36;51;40;51;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="chars;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;13;5;16;;;;vpos;;varray;;r&#xA;Definition&#xA;    chars($str, $encoding = null)&#xA;&#xA;Description&#xA;     Returns an array consisting of the characters in the string.&#xA;&#xA;Parameters:&#xA;    string $str - String for which to return the chars&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   An array of string chars;;d4,14;;b1,5;;mstring $str;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f39;13;48;13;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f33;13;37;13;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="collapseWhitespace;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;177;5;180;;;;vpos;;vstring;;r&#xA;Definition&#xA;    collapseWhitespace($str, $encoding = null)&#xA;&#xA;Description&#xA;     Trims the string and replaces consecutive whitespace characters with a single space. This includes tabs and newline characters, as well as multibyte whitespace such as the thin space and ideographic space.&#xA;&#xA;Parameters:&#xA;    string $str - The string to cleanup whitespace&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   The trimmed string with condensed whitespace;;d4,178;;b1,5;;mstring $str;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f52;177;61;177;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f46;177;50;177;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="contains;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;396;5;401;;;;vpos;;vbool;;r&#xA;Definition&#xA;    contains($haystack, $needle, $caseSensitive = true,&#xA;                                    $encoding = null)&#xA;&#xA;Description&#xA;     Returns true if the string contains $needle, false otherwise. By default, the comparison is case-sensitive, but can be made insensitive by setting $caseSensitive to false.&#xA;&#xA;Parameters:&#xA;    string $haystack - String being checked&#xA;    string $needle - Substring to look for&#xA;    bool $caseSensitive - Whether or not to enforce case-sensitivity&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   Whether or not $haystack contains $needle;;d4,398;;b1,5;;mstring $haystack;;pstring $needle;;pbool $caseSensitive;;pstring $encoding;;p">
					<treenode node="caseSensitive;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f56;396;70;396;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f36;397;45;397;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="haystack;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f36;396;45;396;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="needle;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f47;396;54;396;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="containsAll;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;432;5;437;;;;vpos;;vbool;;r&#xA;Definition&#xA;    containsAll($haystack, $needles,&#xA;                                       $caseSensitive = true, $encoding = null)&#xA;&#xA;Description&#xA;     Returns true if the string contains all $needles, false otherwise. By default, the comparison is case-sensitive, but can be made insensitive by setting $caseSensitive to false.&#xA;&#xA;Parameters:&#xA;    string $haystack - String being checked&#xA;    array $needles - Substrings to look for&#xA;    bool $caseSensitive - Whether or not to enforce case-sensitivity&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   Whether or not $haystack contains all $needles;;d4,434;;b1,5;;mstring $haystack;;parray $needles;;pbool $caseSensitive;;pstring $encoding;;p">
					<treenode node="caseSensitive;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f39;433;53;433;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f62;433;71;433;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="haystack;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f39;432;48;432;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="needles;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f50;432;58;432;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="containsAny;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;414;5;419;;;;vpos;;vbool;;r&#xA;Definition&#xA;    containsAny($haystack, $needles,&#xA;                                       $caseSensitive = true, $encoding = null)&#xA;&#xA;Description&#xA;     Returns true if the string contains any $needles, false otherwise. By default, the comparison is case-sensitive, but can be made insensitive by setting $caseSensitive to false.&#xA;&#xA;Parameters:&#xA;    string $haystack - String being checked&#xA;    array $needles - Substrings to look for&#xA;    bool $caseSensitive - Whether or not to enforce case-sensitivity&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   Whether or not $haystack contains any $needles;;d4,416;;b1,5;;mstring $haystack;;parray $needles;;pbool $caseSensitive;;pstring $encoding;;p">
					<treenode node="caseSensitive;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f39;415;53;415;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f62;415;71;415;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="haystack;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f39;414;48;414;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="needles;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f50;414;58;414;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="countSubstr;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;911;5;916;;;;vpos;;vint;;r&#xA;Definition&#xA;    countSubstr($str, $substring, $caseSensitive = true,&#xA;                                       $encoding = null)&#xA;&#xA;Description&#xA;     Returns the number of occurrences of $substring in the given string. By default, the comparison is case-sensitive, but can be made insensitive by setting $caseSensitive to false.&#xA;&#xA;Parameters:&#xA;    string $str - The string to search through&#xA;    string $substring - The substring to search for&#xA;    bool $caseSensitive - Whether or not to enforce case-sensitivity&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   The number of $substring occurrences;;d4,913;;b1,5;;mstring $str;;pstring $substring;;pbool $caseSensitive;;pstring $encoding;;p">
					<treenode node="caseSensitive;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f57;911;71;911;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f39;912;48;912;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f39;911;43;911;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f45;911;55;911;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dasherize;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;79;5;82;;;;vpos;;vstring;;r&#xA;Definition&#xA;    dasherize($str, $encoding = null)&#xA;&#xA;Description&#xA;     Returns a lowercase and trimmed string separated by dashes. Dashes are inserted before uppercase characters (with the exception of the first character of the string), and in place of spaces as well as underscores.&#xA;&#xA;Parameters:&#xA;    string $str - String to convert&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   Dasherized string;;d4,80;;b1,5;;mstring $str;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f43;79;52;79;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f37;79;41;79;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="delimit;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;110;5;113;;;;vpos;;vstring;;r&#xA;Definition&#xA;    delimit($str, $delimiter, $encoding = null)&#xA;&#xA;Description&#xA;     Returns a lowercase and trimmed string separated by the given delimiter. Delimiters are inserted before uppercase characters (with the exception of the first character of the string), and in place of spaces, dashes, and underscores. Alpha delimiters are not converted to lowercase.&#xA;&#xA;Parameters:&#xA;    string $str - String to convert&#xA;    string $delimiter - Sequence used to separate parts of the string&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   String with delimiter;;d4,111;;b1,5;;mstring $str;;pstring $delimiter;;pstring $encoding;;p">
					<treenode node="delimiter;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f41;110;51;110;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f53;110;62;110;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f35;110;39;110;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="endsWith;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;297;5;302;;;;vpos;;vbool;;r&#xA;Definition&#xA;    endsWith($str, $substring, $caseSensitive = true,&#xA;                                    $encoding = null)&#xA;&#xA;Description&#xA;     Returns true if the string ends with $substring, false otherwise. By default, the comparison is case-sensitive, but can be made insensitive by setting $caseSensitive to false.&#xA;&#xA;Parameters:&#xA;    string $str - String to check the end of&#xA;    string $substring - The substring to look for&#xA;    bool $caseSensitive - Whether or not to enforce case-sensitivity&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   Whether or not $str ends with $substring;;d4,299;;b1,5;;mstring $str;;pstring $substring;;pbool $caseSensitive;;pstring $encoding;;p">
					<treenode node="caseSensitive;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f54;297;68;297;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f36;298;45;298;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f36;297;40;297;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f42;297;52;297;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="ensureLeft;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;727;5;730;;;;vpos;;vstring;;r&#xA;Definition&#xA;    ensureLeft($str, $substring, $encoding = null)&#xA;&#xA;Description&#xA;     Ensures that the string begins with $substring. If it doesn't, it's prepended.&#xA;&#xA;Parameters:&#xA;    string $str - The string to modify&#xA;    string $substring - The substring to add if not present&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   The string prefixed by the $substring;;d4,728;;b1,5;;mstring $str;;pstring $substring;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f56;727;65;727;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f38;727;42;727;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f44;727;54;727;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="ensureRight;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;741;5;744;;;;vpos;;vstring;;r&#xA;Definition&#xA;    ensureRight($str, $substring, $encoding = null)&#xA;&#xA;Description&#xA;     Ensures that the string begins with $substring. If it doesn't, it's appended.&#xA;&#xA;Parameters:&#xA;    string $str - The string to modify&#xA;    string $substring - The substring to add if not present&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   The string suffixed by the $substring;;d4,742;;b1,5;;mstring $str;;pstring $substring;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f57;741;66;741;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f39;741;43;741;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f45;741;55;741;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="first;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;700;5;703;;;;vpos;;vstring;;r&#xA;Definition&#xA;    first($str, $n, $encoding = null)&#xA;&#xA;Description&#xA;     Returns the first $n characters of the string.&#xA;&#xA;Parameters:&#xA;    string $str - The string from which to get the substring&#xA;    int $n - Number of chars to retrieve from the start&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   The first $n characters;;d4,701;;b1,5;;mstring $str;;pint $n;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f43;700;52;700;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="n;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f39;700;41;700;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f33;700;37;700;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hasLowerCase;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;780;5;783;;;;vpos;;vbool;;r&#xA;Definition&#xA;    hasLowerCase($str, $encoding = null)&#xA;&#xA;Description&#xA;     Returns true if the string contains a lower case char, false otherwise.&#xA;&#xA;Parameters:&#xA;    string $str - String to check&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   Whether or not $str contains a lower case character;;d4,781;;b1,5;;mstring $str;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f46;780;55;780;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f40;780;44;780;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hasUpperCase;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;793;5;796;;;;vpos;;vbool;;r&#xA;Definition&#xA;    hasUpperCase($str, $encoding = null)&#xA;&#xA;Description&#xA;     Returns true if the string contains an upper case char, false otherwise.&#xA;&#xA;Parameters:&#xA;    string $str - String to check&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   Whether or not $str contains an upper case character;;d4,794;;b1,5;;mstring $str;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f46;793;55;793;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f40;793;44;793;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="htmlDecode;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;974;5;977;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    htmlDecode($str, $flags = ENT_COMPAT, $encoding = null)&#xA;&#xA;Description&#xA;     Convert all HTML entities to their applicable characters.&#xA;&#xA;Parameters:&#xA;    string $str - The string to decode&#xA;    int|null $flags - See http://php&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   Object with the resulting $str after being html decoded;;d4,975;;b1,5;;mstring $str;;pint|null $flags;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f65;974;74;974;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="flags;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f44;974;50;974;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f38;974;42;974;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="htmlEncode;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;961;5;964;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    htmlEncode($str, $flags = ENT_COMPAT, $encoding = null)&#xA;&#xA;Description&#xA;     Convert all applicable characters to HTML entities.&#xA;&#xA;Parameters:&#xA;    string $str - The string to encode&#xA;    int|null $flags - See http://php&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   Object with the resulting $str after being html encoded;;d4,962;;b1,5;;mstring $str;;pint|null $flags;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f65;961;74;961;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="flags;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f44;961;50;961;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f38;961;42;961;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="humanize;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;150;5;153;;;;vpos;;vstring;;r&#xA;Definition&#xA;    humanize($str, $encoding = null)&#xA;&#xA;Description&#xA;     Capitalizes the first word of the string, replaces underscores with spaces, and strips '_id'.&#xA;&#xA;Parameters:&#xA;    string $str - String to humanize&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   A humanized string;;d4,151;;b1,5;;mstring $str;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f42;150;51;150;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f36;150;40;150;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="indexOf;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;449;5;454;;;;vpos;;vint;;r&#xA;Definition&#xA;    indexOf($haystack, $needle, $offset = 0,&#xA;                                   $encoding = null)&#xA;&#xA;Description&#xA;     Returns the index of the first occurrence of $needle in the string, and false if not found. Accepts an optional offset from which to begin the search.&#xA;&#xA;Parameters:&#xA;    string $haystack - String to search&#xA;    string $needle - Substring to look for&#xA;    int $offset - Offset from which to search&#xA;&#xA;Return:&#xA;   |bool The occurrence's index if found, otherwise false;;d4,451;;b1,5;;mhaystack;;pneedle;;poffset;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f35;450;44;450;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="haystack;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f35;449;44;449;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="needle;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f46;449;53;449;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f55;449;62;449;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="indexOfLast;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;466;5;471;;;;vpos;;vint;;r&#xA;Definition&#xA;    indexOfLast($haystack, $needle, $offset = 0,&#xA;                                       $encoding = null)&#xA;&#xA;Description&#xA;     Returns the index of the last occurrence of $needle in the string, and false if not found. Accepts an optional offset from which to begin the search.&#xA;&#xA;Parameters:&#xA;    string $haystack - String to search&#xA;    string $needle - Substring to look for&#xA;    int $offset - Offset from which to search&#xA;&#xA;Return:&#xA;   |bool The last occurrence's index if found, otherwise false;;d4,468;;b1,5;;mhaystack;;pneedle;;poffset;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f39;467;48;467;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="haystack;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f39;466;48;466;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="needle;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f50;466;57;466;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f59;466;66;466;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="insert;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;494;5;498;;;;vpos;;vstring;;r&#xA;Definition&#xA;    insert($str, $substring, $index, $encoding = null)&#xA;&#xA;Description&#xA;     Inserts $substring into the string at the $index provided.&#xA;&#xA;Parameters:&#xA;    string $str - String to insert into&#xA;    string $substring - String to be inserted&#xA;    int $index - The index at which to insert the substring&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   The resulting string after the insertion;;d4,495;;b1,5;;mstring $str;;pstring $substring;;pint $index;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f60;494;69;494;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="index;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f52;494;58;494;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f34;494;38;494;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f40;494;50;494;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isAlpha;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;806;5;809;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isAlpha($str, $encoding = null)&#xA;&#xA;Description&#xA;     Returns true if the string contains only alphabetic chars, false otherwise.&#xA;&#xA;Parameters:&#xA;    string $str - String to check&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   Whether or not $str contains only alphabetic chars;;d4,807;;b1,5;;mstring $str;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f41;806;50;806;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f35;806;39;806;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isAlphanumeric;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;819;5;822;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isAlphanumeric($str, $encoding = null)&#xA;&#xA;Description&#xA;     Returns true if the string contains only alphabetic and numeric chars, false otherwise.&#xA;&#xA;Parameters:&#xA;    string $str - String to check&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   Whether or not $str contains only alphanumeric chars;;d4,820;;b1,5;;mstring $str;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f48;819;57;819;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f42;819;46;819;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isBlank;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;832;5;835;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isBlank($str, $encoding = null)&#xA;&#xA;Description&#xA;     Returns true if the string contains only whitespace chars, false otherwise.&#xA;&#xA;Parameters:&#xA;    string $str - String to check&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   Whether or not $str contains only whitespace characters;;d4,833;;b1,5;;mstring $str;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f41;832;50;832;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f35;832;39;832;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isHexadecimal;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;895;5;898;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isHexadecimal($str, $encoding = null)&#xA;&#xA;Description&#xA;     Returns true if the string contains only hexadecimal chars, false otherwise.&#xA;&#xA;Parameters:&#xA;    string $str - String to check&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   Whether or not $str contains only hexadecimal characters;;d4,896;;b1,5;;mstring $str;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f47;895;56;895;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f41;895;45;895;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isJson;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;844;5;847;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isJson($str, $encoding = null)&#xA;&#xA;Description&#xA;     Returns true if the string is JSON, false otherwise.&#xA;&#xA;Parameters:&#xA;    string $str - String to check&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   Whether or not $str is JSON;;d4,845;;b1,5;;mstring $str;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f40;844;49;844;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f34;844;38;844;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isLowerCase;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;857;5;860;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isLowerCase($str, $encoding = null)&#xA;&#xA;Description&#xA;     Returns true if the string contains only lower case chars, false otherwise.&#xA;&#xA;Parameters:&#xA;    string $str - String to check&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   Whether or not $str contains only lower case characters;;d4,858;;b1,5;;mstring $str;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f45;857;54;857;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f39;857;43;857;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isSerialized;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;869;5;872;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isSerialized($str, $encoding = null)&#xA;&#xA;Description&#xA;     Returns true if the string is serialized, false otherwise.&#xA;&#xA;Parameters:&#xA;    string $str - String to check&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   Whether or not $str is serialized;;d4,870;;b1,5;;mstring $str;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f46;869;55;869;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f40;869;44;869;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isUpperCase;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;882;5;885;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isUpperCase($str, $encoding = null)&#xA;&#xA;Description&#xA;     Returns true if the string contains only upper case chars, false otherwise.&#xA;&#xA;Parameters:&#xA;    string $str - String to check&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   Whether or not $str contains only upper case characters;;d4,883;;b1,5;;mstring $str;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f45;882;54;882;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f39;882;43;882;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="last;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;713;5;716;;;;vpos;;vstring;;r&#xA;Definition&#xA;    last($str, $n, $encoding = null)&#xA;&#xA;Description&#xA;     Returns the last $n characters of the string.&#xA;&#xA;Parameters:&#xA;    string $str - The string from which to get the substring&#xA;    int $n - Number of chars to retrieve from the end&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   The last $n characters;;d4,714;;b1,5;;mstring $str;;pint $n;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f42;713;51;713;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="n;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f38;713;40;713;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f32;713;36;713;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="length;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;658;5;661;;;;vpos;;vint;;r&#xA;Definition&#xA;    length($str, $encoding = null)&#xA;&#xA;Description&#xA;     Returns the length of the string. An alias for PHP's mb_strlen() function.&#xA;&#xA;Parameters:&#xA;    string $str - The string to get the length of&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   The number of characters in $str given the encoding;;d4,659;;b1,5;;mstring $str;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f40;658;49;658;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f34;658;38;658;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="longestCommonPrefix;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;615;5;619;;;;vpos;;vstring;;r&#xA;Definition&#xA;    longestCommonPrefix($str, $otherStr, $encoding = null)&#xA;&#xA;Description&#xA;     Returns the longest common prefix between the string and $otherStr.&#xA;&#xA;Parameters:&#xA;    string $str - First string for comparison&#xA;    string $otherStr - Second string for comparison&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   The longest common prefix;;d4,616;;b1,5;;mstring $str;;pstring $otherStr;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f64;615;73;615;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="otherStr;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f53;615;62;615;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f47;615;51;615;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="longestCommonSubstring;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;644;5;649;;;;vpos;;vstring;;r&#xA;Definition&#xA;    longestCommonSubstring($str, $otherStr,&#xA;                                                  $encoding = null)&#xA;&#xA;Description&#xA;     Returns the longest common substring between the string and $otherStr. In the case of ties, it returns that which occurs first.&#xA;&#xA;Parameters:&#xA;    string $str - First string for comparison&#xA;    string $otherStr - Second string for comparison&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   The longest common substring;;d4,646;;b1,5;;mstring $str;;pstring $otherStr;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f50;645;59;645;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="otherStr;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f56;644;65;644;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f50;644;54;644;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="longestCommonSuffix;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;629;5;633;;;;vpos;;vstring;;r&#xA;Definition&#xA;    longestCommonSuffix($str, $otherStr, $encoding = null)&#xA;&#xA;Description&#xA;     Returns the longest common suffix between the string and $otherStr.&#xA;&#xA;Parameters:&#xA;    string $str - First string for comparison&#xA;    string $otherStr - Second string for comparison&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   The longest common suffix;;d4,630;;b1,5;;mstring $str;;pstring $otherStr;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f64;629;73;629;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="otherStr;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f53;629;62;629;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f47;629;51;629;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="lowerCaseFirst;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;37;5;40;;;;vpos;;vstring;;r&#xA;Definition&#xA;    lowerCaseFirst($str, $encoding = null)&#xA;&#xA;Description&#xA;     Converts the first character of the supplied string to lower case.&#xA;&#xA;Parameters:&#xA;    string $str - String to modify&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   String with the first character being lower case;;d4,38;;b1,5;;mstring $str;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f48;37;57;37;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f42;37;46;37;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="pad;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;213;5;218;;;;vpos;;vstring;;r&#xA;Definition&#xA;    pad($str, $length, $padStr = ' ', $padType = 'right',&#xA;                               $encoding = null)&#xA;&#xA;Description&#xA;     Pads the string to a given length with $padStr. If length is less than or equal to the length of the string, no padding takes places. The default string used for padding is a space, and the default type (one of 'left', 'right', 'both') is 'right'. Throws an InvalidArgumentException if $padType isn't one of those 3 values.&#xA;&#xA;Parameters:&#xA;    string $str - String to pad&#xA;    int $length - Desired string length after padding&#xA;    string $padStr - String used to pad, defaults to space&#xA;    string $padType - One of 'left', 'right', 'both'&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   The padded string;;d4,215;;b1,5;;mstring $str;;pint $length;;pstring $padStr;;pstring $padType;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f31;214;40;214;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f37;213;44;213;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="padStr;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f46;213;53;213;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="padType;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f61;213;69;213;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f31;213;35;213;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="padBoth;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;262;5;266;;;;vpos;;vstring;;r&#xA;Definition&#xA;    padBoth($str, $length, $padStr = ' ', $encoding = null)&#xA;&#xA;Description&#xA;     Returns a new string of a given length such that both sides of the string are padded. Alias for pad() with a $padType of 'both'.&#xA;&#xA;Parameters:&#xA;    string $str - String to pad&#xA;    int $length - Desired string length after padding&#xA;    string $padStr - String used to pad, defaults to space&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   The padded string;;d4,263;;b1,5;;mstring $str;;pint $length;;pstring $padStr;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f65;262;74;262;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f41;262;48;262;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="padStr;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f50;262;57;262;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f35;262;39;262;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="padLeft;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;230;5;234;;;;vpos;;vstring;;r&#xA;Definition&#xA;    padLeft($str, $length, $padStr = ' ', $encoding = null)&#xA;&#xA;Description&#xA;     Returns a new string of a given length such that the beginning of the string is padded. Alias for pad() with a $padType of 'left'.&#xA;&#xA;Parameters:&#xA;    string $str - String to pad&#xA;    int $length - Desired string length after padding&#xA;    string $padStr - String used to pad, defaults to space&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   The padded string;;d4,231;;b1,5;;mstring $str;;pint $length;;pstring $padStr;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f65;230;74;230;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f41;230;48;230;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="padStr;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f50;230;57;230;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f35;230;39;230;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="padRight;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;246;5;250;;;;vpos;;vstring;;r&#xA;Definition&#xA;    padRight($str, $length, $padStr = ' ', $encoding = null)&#xA;&#xA;Description&#xA;     Returns a new string of a given length such that the end of the string is padded. Alias for pad() with a $padType of 'right'.&#xA;&#xA;Parameters:&#xA;    string $str - String to pad&#xA;    int $length - Desired string length after padding&#xA;    string $padStr - String used to pad, defaults to space&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   The padded string;;d4,247;;b1,5;;mstring $str;;pint $length;;pstring $padStr;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f66;246;75;246;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f42;246;49;246;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="padStr;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f51;246;58;246;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f36;246;40;246;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="regexReplace;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;946;5;951;;;;vpos;;vstring;;r&#xA;Definition&#xA;    regexReplace($str, $pattern, $replacement,&#xA;                                        $options = 'msr', $encoding = null)&#xA;&#xA;Description&#xA;     Replaces all occurrences of $pattern in $str by $replacement. An alias for mb_ereg_replace(). Note that the 'i' option with multibyte patterns in mb_ereg_replace() requires PHP 5.4+. This is due to a lack of support in the bundled version of Oniguruma in PHP 5.3.&#xA;&#xA;Parameters:&#xA;    string $str - The haystack to search through&#xA;    string $pattern - The regular expression pattern&#xA;    string $replacement - The string to replace with&#xA;    string $options - Matching conditions to be used&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   The resulting string after the replacements;;d4,948;;b1,5;;mstring $str;;pstring $pattern;;pstring $replacement;;pstring $options;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f58;947;67;947;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f40;947;48;947;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="pattern;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f46;946;54;946;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="replacement;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f56;946;68;946;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f40;946;44;946;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="removeLeft;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;754;5;757;;;;vpos;;vstring;;r&#xA;Definition&#xA;    removeLeft($str, $substring, $encoding = null)&#xA;&#xA;Description&#xA;     Returns a new string with the prefix $substring removed, if present.&#xA;&#xA;Parameters:&#xA;    string $str - String from which to remove the prefix&#xA;    string $substring - The prefix to remove&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   The string without the prefix $substring;;d4,755;;b1,5;;mstring $str;;pstring $substring;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f56;754;65;754;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f38;754;42;754;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f44;754;54;754;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="removeRight;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;767;5;770;;;;vpos;;vstring;;r&#xA;Definition&#xA;    removeRight($str, $substring, $encoding = null)&#xA;&#xA;Description&#xA;     Returns a new string with the suffix $substring removed, if present.&#xA;&#xA;Parameters:&#xA;    string $str - String from which to remove the suffix&#xA;    string $substring - The suffix to remove&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   The string without the suffix $substring;;d4,768;;b1,5;;mstring $str;;pstring $substring;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f57;767;66;767;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f39;767;43;767;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f45;767;55;767;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="replace;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;927;5;931;;;;vpos;;vstring;;r&#xA;Definition&#xA;    replace($str, $search, $replacement, $encoding = null)&#xA;&#xA;Description&#xA;     Replaces all occurrences of $search in $str by $replacement.&#xA;&#xA;Parameters:&#xA;    string $str - The haystack to search through&#xA;    string $search - The needle to search for&#xA;    string $replacement - The string to replace with&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   The resulting string after the replacements;;d4,928;;b1,5;;mstring $str;;pstring $search;;pstring $replacement;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f64;927;73;927;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="replacement;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f50;927;62;927;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="search;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f41;927;48;927;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f35;927;39;927;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="reverse;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;544;5;547;;;;vpos;;vstring;;r&#xA;Definition&#xA;    reverse($str, $encoding = null)&#xA;&#xA;Description&#xA;     Returns a reversed string. A multibyte version of strrev().&#xA;&#xA;Parameters:&#xA;    string $str - String to reverse&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   The reversed string;;d4,545;;b1,5;;mstring $str;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f41;544;50;544;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f35;544;39;544;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="safeTruncate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;530;5;535;;;;vpos;;vstring;;r&#xA;Definition&#xA;    safeTruncate($str, $length, $substring = '',&#xA;                                        $encoding = null)&#xA;&#xA;Description&#xA;     Truncates the string to a given length, while ensuring that it does not split words. If $substring is provided, and truncating occurs, the string is further truncated so that the substring may be appended without exceeding the desired length.&#xA;&#xA;Parameters:&#xA;    string $str - String to truncate&#xA;    int $length - Desired length of the truncated string&#xA;    string $substring - The substring to append if it can fit&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   The resulting string after truncating;;d4,532;;b1,5;;mstring $str;;pint $length;;pstring $substring;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f40;531;49;531;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f46;530;53;530;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f40;530;44;530;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f55;530;65;530;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="shuffle;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;557;5;560;;;;vpos;;vstring;;r&#xA;Definition&#xA;    shuffle($str, $encoding = null)&#xA;&#xA;Description&#xA;     A multibyte str_shuffle() function. It returns a string with its characters in random order.&#xA;&#xA;Parameters:&#xA;    string $str - String to shuffle&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   The shuffled string;;d4,558;;b1,5;;mstring $str;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f41;557;50;557;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f35;557;39;557;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="slugify;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;380;5;383;;;;vpos;;vstring;;r&#xA;Definition&#xA;    slugify($str, $replacement = '-')&#xA;&#xA;Description&#xA;     Converts the string into an URL slug. This includes replacing non-ASCII characters with their closest ASCII equivalents, removing remaining non-ASCII and non-alphanumeric characters, and replacing whitespace with $replacement. The replacement defaults to a single dash, and the string is also converted to lowercase.&#xA;&#xA;Parameters:&#xA;    string $str - Text to transform into an URL slug&#xA;    string $replacement - The string used to replace whitespace&#xA;&#xA;Return:&#xA;   The corresponding URL slug;;d4,381;;b1,5;;mstring $str;;pstring $replacement;;p">
					<treenode node="replacement;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f41;380;53;380;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f35;380;39;380;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="startsWith;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;279;5;284;;;;vpos;;vbool;;r&#xA;Definition&#xA;    startsWith($str, $substring, $caseSensitive = true,&#xA;                                      $encoding = null)&#xA;&#xA;Description&#xA;     Returns true if the string begins with $substring, false otherwise. By default, the comparison is case-sensitive, but can be made insensitive by setting $caseSensitive to false.&#xA;&#xA;Parameters:&#xA;    string $str - String to check the start of&#xA;    string $substring - The substring to look for&#xA;    bool $caseSensitive - Whether or not to enforce case-sensitivity&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   Whether or not $str starts with $substring;;d4,281;;b1,5;;mstring $str;;pstring $substring;;pbool $caseSensitive;;pstring $encoding;;p">
					<treenode node="caseSensitive;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f56;279;70;279;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f38;280;47;280;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f38;279;42;279;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f44;279;54;279;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="substr;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;674;5;677;;;;vpos;;vstring;;r&#xA;Definition&#xA;    substr($str, $start, $length = null, $encoding = null)&#xA;&#xA;Description&#xA;     Returns the substring beginning at $start with the specified $length. It differs from the mb_substr() function in that providing a $length of null will return the rest of the string, rather than an empty string.&#xA;&#xA;Parameters:&#xA;    string $str - The string to get the length of&#xA;    int $start - Position of the first character to use&#xA;    int $length - Maximum number of characters used&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   The substring of $str;;d4,675;;b1,5;;mstring $str;;pint $start;;pint $length;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f64;674;73;674;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f48;674;55;674;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="start;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f40;674;46;674;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f34;674;38;674;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="surround;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;480;5;483;;;;vpos;;vstring;;r&#xA;Definition&#xA;    surround($str, $substring)&#xA;&#xA;Description&#xA;     Surrounds a string with the given substring.&#xA;&#xA;Parameters:&#xA;    string $str - The string to surround&#xA;    string $substring - The substring to add to both sides&#xA;&#xA;Return:&#xA;   The string with the substring prepended and appended;;d4,481;;b1,5;;mstring $str;;pstring $substring;;p">
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f36;480;40;480;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f42;480;52;480;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="swapCase;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;122;5;125;;;;vpos;;vstring;;r&#xA;Definition&#xA;    swapCase($str, $encoding = null)&#xA;&#xA;Description&#xA;     Returns a case swapped version of the string.&#xA;&#xA;Parameters:&#xA;    string $str - String to swap case&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   String with each character's case swapped;;d4,123;;b1,5;;mstring $str;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f42;122;51;122;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f36;122;40;122;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="tidy;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;163;5;166;;;;vpos;;vstring;;r&#xA;Definition&#xA;    tidy($str)&#xA;&#xA;Description&#xA;     Returns a string with smart quotes, ellipsis characters, and dashes from Windows-1252 (commonly used in Word documents) replaced by their ASCII equivalents.&#xA;&#xA;Parameters:&#xA;    string $str - String to remove special chars&#xA;&#xA;Return:&#xA;   String with those characters removed;;d4,164;;b1,5;;mstring $str;;p">
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f32;163;36;163;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="titleize;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;137;5;140;;;;vpos;;vstring;;r&#xA;Definition&#xA;    titleize($str, $ignore = null, $encoding = null)&#xA;&#xA;Description&#xA;     Returns a trimmed string with the first letter of each word capitalized. Ignores the case of other letters, preserving any acronyms. Also accepts an array, $ignore, allowing you to list words not to be capitalized.&#xA;&#xA;Parameters:&#xA;    string $str - String to titleize&#xA;    string $encoding - The character encoding&#xA;    array $ignore - An array of words not to capitalize&#xA;&#xA;Return:&#xA;   Titleized string;;d4,138;;b1,5;;mstring $str;;pstring $encoding;;parray $ignore;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f58;137;67;137;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="ignore;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f42;137;49;137;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f36;137;40;137;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="toAscii;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;192;5;195;;;;vpos;;vstring;;r&#xA;Definition&#xA;    toAscii($str, $removeUnsupported = true)&#xA;&#xA;Description&#xA;     Returns an ASCII version of the string. A set of non-ASCII characters are replaced with their closest ASCII counterparts, and the rest are removed unless instructed otherwise.&#xA;&#xA;Parameters:&#xA;    string $str - A string with non-ASCII characters&#xA;    bool $removeUnsupported - Whether or not to remove the&#xA;&#xA;Return:&#xA;   A string containing only ASCII characters;;d4,193;;b1,5;;mstring $str;;pbool $removeUnsupported;;p">
					<treenode node="removeUnsupported;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f41;192;59;192;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f35;192;39;192;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="toLowerCase;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;339;5;342;;;;vpos;;vstring;;r&#xA;Definition&#xA;    toLowerCase($str, $encoding = null)&#xA;&#xA;Description&#xA;     Converts all characters in the string to lowercase. An alias for PHP's mb_strtolower().&#xA;&#xA;Parameters:&#xA;    string $str - String to convert case&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   The lowercase string;;d4,340;;b1,5;;mstring $str;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f45;339;54;339;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f39;339;43;339;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="toSpaces;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;312;5;315;;;;vpos;;vstring;;r&#xA;Definition&#xA;    toSpaces($str, $tabLength = 4)&#xA;&#xA;Description&#xA;     Converts each tab in the string to some number of spaces, as defined by $tabLength. By default, each tab is converted to 4 consecutive spaces.&#xA;&#xA;Parameters:&#xA;    string $str - String to convert tabs to spaces&#xA;    int $tabLength - Number of spaces to replace each tab with&#xA;&#xA;Return:&#xA;   String with tabs switched to spaces;;d4,313;;b1,5;;mstring $str;;pint $tabLength;;p">
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f36;312;40;312;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="tabLength;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f42;312;52;312;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="toTabs;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;326;5;329;;;;vpos;;vstring;;r&#xA;Definition&#xA;    toTabs($str, $tabLength = 4)&#xA;&#xA;Description&#xA;     Converts each occurrence of some consecutive number of spaces, as defined by $tabLength, to a tab. By default, each 4 consecutive spaces are converted to a tab.&#xA;&#xA;Parameters:&#xA;    string $str - String to convert spaces to tabs&#xA;    int $tabLength - Number of spaces to replace with a tab&#xA;&#xA;Return:&#xA;   String with spaces switched to tabs;;d4,327;;b1,5;;mstring $str;;pint $tabLength;;p">
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f34;326;38;326;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="tabLength;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f40;326;50;326;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="toTitleCase;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;351;5;354;;;;vpos;;vstring;;r&#xA;Definition&#xA;    toTitleCase($str, $encoding = null)&#xA;&#xA;Description&#xA;     Converts the first character of each word in the string to uppercase.&#xA;&#xA;Parameters:&#xA;    string $str - String to convert case&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   The title-cased string;;d4,352;;b1,5;;mstring $str;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f45;351;54;351;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f39;351;43;351;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="toUpperCase;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;364;5;367;;;;vpos;;vstring;;r&#xA;Definition&#xA;    toUpperCase($str, $encoding = null)&#xA;&#xA;Description&#xA;     Converts all characters in the string to uppercase. An alias for PHP's mb_strtoupper().&#xA;&#xA;Parameters:&#xA;    string $str - String to convert case&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   The uppercase string;;d4,365;;b1,5;;mstring $str;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f45;364;54;364;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f39;364;43;364;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="trim;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;572;5;575;;;;vpos;;vstring;;r&#xA;Definition&#xA;    trim($str, $chars = null, $encoding = null)&#xA;&#xA;Description&#xA;     Returns a string with whitespace removed from the start and end of the string. Supports the removal of unicode whitespace. Accepts an optional string of characters to strip instead of the defaults.&#xA;&#xA;Parameters:&#xA;    string $str - String to trim&#xA;    string $chars - Optional string of characters to strip&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   Trimmed $str;;d4,573;;b1,5;;mstring $str;;pstring $chars;;pstring $encoding;;p">
					<treenode node="chars;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f38;572;44;572;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f53;572;62;572;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f32;572;36;572;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="trimLeft;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;587;5;590;;;;vpos;;vstring;;r&#xA;Definition&#xA;    trimLeft($str, $chars = null, $encoding = null)&#xA;&#xA;Description&#xA;     Returns a string with whitespace removed from the start of the string. Supports the removal of unicode whitespace. Accepts an optional string of characters to strip instead of the defaults.&#xA;&#xA;Parameters:&#xA;    string $str - String to trim&#xA;    string $chars - Optional string of characters to strip&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   Trimmed $str;;d4,588;;b1,5;;mstring $str;;pstring $chars;;pstring $encoding;;p">
					<treenode node="chars;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f42;587;48;587;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f57;587;66;587;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f36;587;40;587;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="trimRight;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;602;5;605;;;;vpos;;vstring;;r&#xA;Definition&#xA;    trimRight($str, $chars = null, $encoding = null)&#xA;&#xA;Description&#xA;     Returns a string with whitespace removed from the end of the string. Supports the removal of unicode whitespace. Accepts an optional string of characters to strip instead of the defaults.&#xA;&#xA;Parameters:&#xA;    string $str - String to trim&#xA;    string $chars - Optional string of characters to strip&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   Trimmed $str;;d4,603;;b1,5;;mstring $str;;pstring $chars;;pstring $encoding;;p">
					<treenode node="chars;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f43;602;49;602;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f58;602;67;602;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f37;602;41;602;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="truncate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;511;5;516;;;;vpos;;vstring;;r&#xA;Definition&#xA;    truncate($str, $length, $substring = '',&#xA;                                    $encoding = null)&#xA;&#xA;Description&#xA;     Truncates the string to a given length. If $substring is provided, and truncating occurs, the string is further truncated so that the substring may be appended without exceeding the desired length.&#xA;&#xA;Parameters:&#xA;    string $str - String to truncate&#xA;    int $length - Desired length of the truncated string&#xA;    string $substring - The substring to append if it can fit&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   The resulting string after truncating;;d4,513;;b1,5;;mstring $str;;pint $length;;pstring $substring;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f36;512;45;512;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f42;511;49;511;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f36;511;40;511;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f51;511;61;511;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="underscored;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;94;5;97;;;;vpos;;vstring;;r&#xA;Definition&#xA;    underscored($str, $encoding = null)&#xA;&#xA;Description&#xA;     Returns a lowercase and trimmed string separated by underscores. Underscores are inserted before uppercase characters (with the exception of the first character of the string), and in place of spaces as well as dashes.&#xA;&#xA;Parameters:&#xA;    string $str - String to convert&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   Underscored string;;d4,95;;b1,5;;mstring $str;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f45;94;54;94;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f39;94;43;94;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="upperCamelize;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;65;5;68;;;;vpos;;vstring;;r&#xA;Definition&#xA;    upperCamelize($str, $encoding = null)&#xA;&#xA;Description&#xA;     Returns an UpperCamelCase version of the supplied string. It trims surrounding spaces, capitalizes letters following digits, spaces, dashes and underscores, and removes spaces, dashes, underscores.&#xA;&#xA;Parameters:&#xA;    string $str - String to convert to UpperCamelCase&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   String in UpperCamelCase;;d4,66;;b1,5;;mstring $str;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f47;65;56;65;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f41;65;45;65;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="upperCaseFirst;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f18;25;5;28;;;;vpos;;vstring;;r&#xA;Definition&#xA;    upperCaseFirst($str, $encoding = null)&#xA;&#xA;Description&#xA;     Converts the first character of the supplied string to upper case.&#xA;&#xA;Parameters:&#xA;    string $str - String to modify&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   String with the first character being upper case;;d4,26;;b1,5;;mstring $str;;pstring $encoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f48;25;57;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php;f42;25;46;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="StaticStringyTestCase;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f0;6;1;709;;;;vpos;;vCommonTest;;c;;r;;d0,7;;b0,0;;m">
				<treenode node="testAt;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;490;5;495;;;;vpos;;v;;r&#xA;Definition&#xA;    testAt($expected, $str, $index, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider atProvider();;d4,491;;b1,0;;mexpected;;pstr;;pindex;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f52;490;61;490;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f27;490;36;490;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="index;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f44;490;50;490;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f38;490;42;490;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testCamelize;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;62;5;67;;;;vpos;;v;;r&#xA;Definition&#xA;    testCamelize($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider camelizeProvider();;d4,63;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f50;62;59;62;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f33;62;42;62;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f44;62;48;62;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testChars;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;29;5;37;;;;vpos;;v;;r&#xA;Definition&#xA;    testChars($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider charsProvider();;d4,30;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f47;29;56;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f30;29;39;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f41;29;45;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testCollapseWhitespace;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;143;5;148;;;;vpos;;v;;r&#xA;Definition&#xA;    testCollapseWhitespace($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider collapseWhitespaceProvider();;d4,144;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f60;143;69;143;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f43;143;52;143;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f54;143;58;143;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testContains;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;297;5;303;;;;vpos;;v;;r&#xA;Definition&#xA;    testContains($expected, $haystack, $needle,&#xA;                                 $caseSensitive = true, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider containsProvider();;d4,299;;b1,0;;mexpected;;phaystack;;pneedle;;pcaseSensitive;;pencoding;;p">
					<treenode node="caseSensitive;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f33;298;47;298;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f56;298;65;298;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f33;297;42;297;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="haystack;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f44;297;53;297;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="needle;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f55;297;62;297;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testContainsAll;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;319;5;325;;;;vpos;;v;;r&#xA;Definition&#xA;    testContainsAll($expected, $haystack, $needles,&#xA;                                    $caseSensitive = true, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider containsAllProvider();;d4,321;;b1,0;;mexpected;;phaystack;;pneedles;;pcaseSensitive;;pencoding;;p">
					<treenode node="caseSensitive;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f36;320;50;320;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f59;320;68;320;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f36;319;45;319;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="haystack;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f47;319;56;319;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="needles;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f58;319;66;319;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testcontainsAny;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;308;5;314;;;;vpos;;v;;r&#xA;Definition&#xA;    testcontainsAny($expected, $haystack, $needles,&#xA;                                    $caseSensitive = true, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider containsAnyProvider();;d4,310;;b1,0;;mexpected;;phaystack;;pneedles;;pcaseSensitive;;pencoding;;p">
					<treenode node="caseSensitive;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f36;309;50;309;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f59;309;68;309;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f36;308;45;308;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="haystack;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f47;308;56;308;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="needles;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f58;308;66;308;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testCountSubstr;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;660;5;666;;;;vpos;;v;;r&#xA;Definition&#xA;    testCountSubstr($expected, $str, $substring,&#xA;                                    $caseSensitive = true, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider countSubstrProvider();;d4,662;;b1,0;;mexpected;;pstr;;psubstring;;pcaseSensitive;;pencoding;;p">
					<treenode node="caseSensitive;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f36;661;50;661;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f59;661;68;661;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f36;660;45;660;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f47;660;51;660;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f53;660;63;660;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testDasherize;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;82;5;87;;;;vpos;;v;;r&#xA;Definition&#xA;    testDasherize($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider dasherizeProvider();;d4,83;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f51;82;60;82;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f34;82;43;82;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f45;82;49;82;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testEndsWith;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;226;5;232;;;;vpos;;v;;r&#xA;Definition&#xA;    testEndsWith($expected, $str, $substring,&#xA;                                 $caseSensitive = true, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider endsWithProvider();;d4,228;;b1,0;;mexpected;;pstr;;psubstring;;pcaseSensitive;;pencoding;;p">
					<treenode node="caseSensitive;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f33;227;47;227;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f56;227;65;227;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f33;226;42;226;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f44;226;48;226;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f50;226;60;226;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testEnsureLeft;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;520;5;525;;;;vpos;;v;;r&#xA;Definition&#xA;    testEnsureLeft($expected, $str, $substring, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider ensureLeftProvider();;d4,521;;b1,0;;mexpected;;pstr;;psubstring;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f64;520;73;520;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f35;520;44;520;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f46;520;50;520;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f52;520;62;520;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testEnsureRight;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;530;5;535;;;;vpos;;v;;r&#xA;Definition&#xA;    testEnsureRight($expected, $str, $substring, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider ensureRightProvider();;d4,531;;b1,0;;mexpected;;pstr;;psubstring;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f65;530;74;530;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f36;530;45;530;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f47;530;51;530;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f53;530;63;530;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testFirst;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;500;5;505;;;;vpos;;v;;r&#xA;Definition&#xA;    testFirst($expected, $str, $n, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider firstProvider();;d4,501;;b1,0;;mexpected;;pstr;;pn;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f51;500;60;500;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f30;500;39;500;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="n;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f47;500;49;500;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f41;500;45;500;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testHasLowerCase;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;610;5;615;;;;vpos;;v;;r&#xA;Definition&#xA;    testHasLowerCase($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider hasLowerCaseProvider();;d4,611;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f54;610;63;610;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f37;610;46;610;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f48;610;52;610;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testHasUpperCase;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;640;5;645;;;;vpos;;v;;r&#xA;Definition&#xA;    testHasUpperCase($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider hasUpperCaseProvider();;d4,641;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f54;640;63;640;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f37;640;46;640;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f48;640;52;640;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testHtmlDecode;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;703;5;708;;;;vpos;;v;;r&#xA;Definition&#xA;    testHtmlDecode($expected, $str, $flags = ENT_COMPAT, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider htmlDecodeProvider();;d4,704;;b1,0;;mexpected;;pstr;;pflags;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f73;703;82;703;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f35;703;44;703;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="flags;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f52;703;58;703;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f46;703;50;703;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testHtmlEncode;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;693;5;698;;;;vpos;;v;;r&#xA;Definition&#xA;    testHtmlEncode($expected, $str, $flags = ENT_COMPAT, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider htmlEncodeProvider();;d4,694;;b1,0;;mexpected;;pstr;;pflags;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f73;693;82;693;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f35;693;44;693;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="flags;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f52;693;58;693;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f46;693;50;693;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testHumanize;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;123;5;128;;;;vpos;;v;;r&#xA;Definition&#xA;    testHumanize($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider humanizeProvider();;d4,124;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f50;123;59;123;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f33;123;42;123;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f44;123;48;123;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testIndexOf;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;11;5;15;;;;vpos;;v;;r&#xA;Definition&#xA;    testIndexOf($expected, $str, $subStr, $offset = 0, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider indexOfProvider();;d4,12;;b1,0;;mexpected;;pstr;;psubStr;;poffset;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f71;11;80;11;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f32;11;41;11;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f58;11;65;11;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f43;11;47;11;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="subStr;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f49;11;56;11;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testIndexOfLast;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;20;5;24;;;;vpos;;v;;r&#xA;Definition&#xA;    testIndexOfLast($expected, $str, $subStr, $offset = 0, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider indexOfLastProvider();;d4,21;;b1,0;;mexpected;;pstr;;psubStr;;poffset;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f75;20;84;20;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f36;20;45;20;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f62;20;69;20;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f47;20;51;20;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="subStr;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f53;20;60;20;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testInsert;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;340;5;346;;;;vpos;;v;;r&#xA;Definition&#xA;    testInsert($expected, $str, $substring, $index,&#xA;                               $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider insertProvider();;d4,342;;b1,0;;mexpected;;pstr;;psubstring;;pindex;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f31;341;40;341;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f31;340;40;340;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="index;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f60;340;66;340;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f42;340;46;340;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f48;340;58;340;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testIsAlpha;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;560;5;565;;;;vpos;;v;;r&#xA;Definition&#xA;    testIsAlpha($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider isAlphaProvider();;d4,561;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f49;560;58;560;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f32;560;41;560;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f43;560;47;560;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testIsAlphanumeric;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;570;5;575;;;;vpos;;v;;r&#xA;Definition&#xA;    testIsAlphanumeric($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider isAlphanumericProvider();;d4,571;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f56;570;65;570;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f39;570;48;570;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f50;570;54;570;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testIsBlank;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;580;5;585;;;;vpos;;v;;r&#xA;Definition&#xA;    testIsBlank($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider isBlankProvider();;d4,581;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f49;580;58;580;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f32;580;41;580;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f43;580;47;580;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testIsHexadecimal;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;650;5;655;;;;vpos;;v;;r&#xA;Definition&#xA;    testIsHexadecimal($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider isHexadecimalProvider();;d4,651;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f55;650;64;650;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f38;650;47;650;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f49;650;53;650;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testIsJson;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;590;5;595;;;;vpos;;v;;r&#xA;Definition&#xA;    testIsJson($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider isJsonProvider();;d4,591;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f48;590;57;590;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f31;590;40;590;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f42;590;46;590;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testIsLowerCase;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;600;5;605;;;;vpos;;v;;r&#xA;Definition&#xA;    testIsLowerCase($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider isLowerCaseProvider();;d4,601;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f53;600;62;600;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f36;600;45;600;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f47;600;51;600;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testIsSerialized;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;620;5;625;;;;vpos;;v;;r&#xA;Definition&#xA;    testIsSerialized($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider isSerializedProvider();;d4,621;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f54;620;63;620;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f37;620;46;620;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f48;620;52;620;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testIsUpperCase;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;630;5;635;;;;vpos;;v;;r&#xA;Definition&#xA;    testIsUpperCase($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider isUpperCaseProvider();;d4,631;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f53;630;62;630;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f36;630;45;630;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f47;630;51;630;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testLast;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;510;5;515;;;;vpos;;v;;r&#xA;Definition&#xA;    testLast($expected, $str, $n, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider lastProvider();;d4,511;;b1,0;;mexpected;;pstr;;pn;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f50;510;59;510;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f29;510;38;510;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="n;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f46;510;48;510;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f40;510;44;510;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testLength;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;469;5;474;;;;vpos;;v;;r&#xA;Definition&#xA;    testLength($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider lengthProvider();;d4,470;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f48;469;57;469;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f31;469;40;469;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f42;469;46;469;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testLongestCommonPrefix;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;436;5;442;;;;vpos;;v;;r&#xA;Definition&#xA;    testLongestCommonPrefix($expected, $str, $otherStr,&#xA;                                            $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider longestCommonPrefixProvider();;d4,438;;b1,0;;mexpected;;pstr;;potherStr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f44;437;53;437;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f44;436;53;436;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="otherStr;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f61;436;70;436;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f55;436;59;436;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testLongestCommonSubstring;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;458;5;464;;;;vpos;;v;;r&#xA;Definition&#xA;    testLongestCommonSubstring($expected, $str, $otherStr,&#xA;                                               $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider longestCommonSubstringProvider();;d4,460;;b1,0;;mexpected;;pstr;;potherStr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f47;459;56;459;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f47;458;56;458;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="otherStr;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f64;458;73;458;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f58;458;62;458;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testLongestCommonSuffix;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;447;5;453;;;;vpos;;v;;r&#xA;Definition&#xA;    testLongestCommonSuffix($expected, $str, $otherStr,&#xA;                                            $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider longestCommonSuffixProvider();;d4,449;;b1,0;;mexpected;;pstr;;potherStr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f44;448;53;448;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f44;447;53;447;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="otherStr;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f61;447;70;447;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f55;447;59;447;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testLowerCaseFirst;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;52;5;57;;;;vpos;;v;;r&#xA;Definition&#xA;    testLowerCaseFirst($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider lowerCaseFirstProvider();;d4,53;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f56;52;65;52;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f39;52;48;52;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f50;52;54;52;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testPad;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;163;5;169;;;;vpos;;v;;r&#xA;Definition&#xA;    testPad($expected, $str, $length, $padStr = ' ',&#xA;                            $padType = 'right', $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider padProvider();;d4,165;;b1,0;;mexpected;;pstr;;plength;;ppadStr;;ppadType;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f48;164;57;164;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f28;163;37;163;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f45;163;52;163;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="padStr;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f54;163;61;163;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="padType;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f28;164;36;164;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f39;163;43;163;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testPadBoth;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;204;5;210;;;;vpos;;v;;r&#xA;Definition&#xA;    testPadBoth($expected, $str, $length, $padStr = ' ',&#xA;                                $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider padBothProvider();;d4,206;;b1,0;;mexpected;;pstr;;plength;;ppadStr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f32;205;41;205;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f32;204;41;204;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f49;204;56;204;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="padStr;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f58;204;65;204;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f43;204;47;204;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testPadException;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;174;5;177;;;;vpos;;v;;r&#xA;Definition&#xA;    testPadException()&#xA;&#xA;Description&#xA;      expectedException \InvalidArgumentException;;d4,175;;b1,0;;m">
				</treenode>
				<treenode node="testPadLeft;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;182;5;188;;;;vpos;;v;;r&#xA;Definition&#xA;    testPadLeft($expected, $str, $length, $padStr = ' ',&#xA;                                $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider padLeftProvider();;d4,184;;b1,0;;mexpected;;pstr;;plength;;ppadStr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f32;183;41;183;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f32;182;41;182;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f49;182;56;182;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="padStr;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f58;182;65;182;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f43;182;47;182;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testPadRight;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;193;5;199;;;;vpos;;v;;r&#xA;Definition&#xA;    testPadRight($expected, $str, $length, $padStr = ' ',&#xA;                                 $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider padRightProvider();;d4,195;;b1,0;;mexpected;;pstr;;plength;;ppadStr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f33;194;42;194;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f33;193;42;193;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f50;193;57;193;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="padStr;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f59;193;66;193;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f44;193;48;193;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testRegexReplace;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;682;5;688;;;;vpos;;v;;r&#xA;Definition&#xA;    testRegexReplace($expected, $str, $pattern, $replacement,&#xA;                                     $options = 'msr', $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider regexReplaceProvider();;d4,684;;b1,0;;mexpected;;pstr;;ppattern;;preplacement;;poptions;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f55;683;64;683;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f37;682;46;682;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f37;683;45;683;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="pattern;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f54;682;62;682;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="replacement;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f64;682;76;682;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f48;682;52;682;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testRemoveLeft;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;540;5;545;;;;vpos;;v;;r&#xA;Definition&#xA;    testRemoveLeft($expected, $str, $substring, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider removeLeftProvider();;d4,541;;b1,0;;mexpected;;pstr;;psubstring;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f64;540;73;540;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f35;540;44;540;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f46;540;50;540;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f52;540;62;540;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testRemoveRight;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;550;5;555;;;;vpos;;v;;r&#xA;Definition&#xA;    testRemoveRight($expected, $str, $substring, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider removeRightProvider();;d4,551;;b1,0;;mexpected;;pstr;;psubstring;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f65;550;74;550;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f36;550;45;550;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f47;550;51;550;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f53;550;63;550;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testReplace;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;671;5;677;;;;vpos;;v;;r&#xA;Definition&#xA;    testReplace($expected, $str, $search, $replacement,&#xA;                                $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider replaceProvider();;d4,673;;b1,0;;mexpected;;pstr;;psearch;;preplacement;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f32;672;41;672;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f32;671;41;671;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="replacement;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f58;671;70;671;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="search;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f49;671;56;671;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f43;671;47;671;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testReverse;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;373;5;378;;;;vpos;;v;;r&#xA;Definition&#xA;    testReverse($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider reverseProvider();;d4,374;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f49;373;58;373;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f32;373;41;373;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f43;373;47;373;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testSafeTruncate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;362;5;368;;;;vpos;;v;;r&#xA;Definition&#xA;    testSafeTruncate($expected, $str, $length, $substring = '',&#xA;                                     $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider safeTruncateProvider();;d4,364;;b1,0;;mexpected;;pstr;;plength;;psubstring;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f37;363;46;363;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f37;362;46;362;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f54;362;61;362;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f48;362;52;362;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f63;362;73;362;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testShuffle;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;383;5;399;;;;vpos;;v;;r&#xA;Definition&#xA;    testShuffle($str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider shuffleProvider();;d4,384;;b1,0;;mstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f38;383;47;383;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f32;383;36;383;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testSlugify;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;287;5;292;;;;vpos;;v;;r&#xA;Definition&#xA;    testSlugify($expected, $str, $replacement = '-')&#xA;&#xA;Description&#xA;      dataProvider slugifyProvider();;d4,288;;b1,0;;mexpected;;pstr;;preplacement;;p">
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f32;287;41;287;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="replacement;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f49;287;61;287;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f43;287;47;287;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testStartsWith;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;215;5;221;;;;vpos;;v;;r&#xA;Definition&#xA;    testStartsWith($expected, $str, $substring,&#xA;                                   $caseSensitive = true, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider startsWithProvider();;d4,217;;b1,0;;mexpected;;pstr;;psubstring;;pcaseSensitive;;pencoding;;p">
					<treenode node="caseSensitive;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f35;216;49;216;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f58;216;67;216;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f35;215;44;215;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f46;215;50;215;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f52;215;62;215;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testSubstr;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;479;5;485;;;;vpos;;v;;r&#xA;Definition&#xA;    testSubstr($expected, $str, $start, $length = null,&#xA;                               $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider substrProvider();;d4,481;;b1,0;;mexpected;;pstr;;pstart;;plength;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f31;480;40;480;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f31;479;40;479;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f56;479;63;479;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="start;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f48;479;54;479;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f42;479;46;479;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testSurround;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;330;5;335;;;;vpos;;v;;r&#xA;Definition&#xA;    testSurround($expected, $str, $substring)&#xA;&#xA;Description&#xA;      dataProvider surroundProvider();;d4,331;;b1,0;;mexpected;;pstr;;psubstring;;p">
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f33;330;42;330;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f44;330;48;330;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f50;330;60;330;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testSwapCase;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;102;5;107;;;;vpos;;v;;r&#xA;Definition&#xA;    testSwapCase($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider swapCaseProvider();;d4,103;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f50;102;59;102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f33;102;42;102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f44;102;48;102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testTidy;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;133;5;138;;;;vpos;;v;;r&#xA;Definition&#xA;    testTidy($expected, $str)&#xA;&#xA;Description&#xA;      dataProvider tidyProvider();;d4,134;;b1,0;;mexpected;;pstr;;p">
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f29;133;38;133;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f40;133;44;133;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testTitleize;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;112;5;118;;;;vpos;;v;;r&#xA;Definition&#xA;    testTitleize($expected, $str, $ignore = null,&#xA;                                 $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider titleizeProvider();;d4,114;;b1,0;;mexpected;;pstr;;pignore;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f33;113;42;113;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f33;112;42;112;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="ignore;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f50;112;57;112;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f44;112;48;112;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testToAscii;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;153;5;158;;;;vpos;;v;;r&#xA;Definition&#xA;    testToAscii($expected, $str, $removeUnsupported = true)&#xA;&#xA;Description&#xA;      dataProvider toAsciiProvider();;d4,154;;b1,0;;mexpected;;pstr;;premoveUnsupported;;p">
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f32;153;41;153;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="removeUnsupported;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f49;153;67;153;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f43;153;47;153;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testToLowerCase;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;257;5;262;;;;vpos;;v;;r&#xA;Definition&#xA;    testToLowerCase($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider toLowerCaseProvider();;d4,258;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f53;257;62;257;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f36;257;45;257;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f47;257;51;257;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testToSpaces;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;237;5;242;;;;vpos;;v;;r&#xA;Definition&#xA;    testToSpaces($expected, $str, $tabLength = 4)&#xA;&#xA;Description&#xA;      dataProvider toSpacesProvider();;d4,238;;b1,0;;mexpected;;pstr;;ptabLength;;p">
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f33;237;42;237;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f44;237;48;237;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="tabLength;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f50;237;60;237;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testToTabs;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;247;5;252;;;;vpos;;v;;r&#xA;Definition&#xA;    testToTabs($expected, $str, $tabLength = 4)&#xA;&#xA;Description&#xA;      dataProvider toTabsProvider();;d4,248;;b1,0;;mexpected;;pstr;;ptabLength;;p">
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f31;247;40;247;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f42;247;46;247;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="tabLength;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f48;247;58;247;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testToTitleCase;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;267;5;272;;;;vpos;;v;;r&#xA;Definition&#xA;    testToTitleCase($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider toTitleCaseProvider();;d4,268;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f53;267;62;267;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f36;267;45;267;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f47;267;51;267;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testToUpperCase;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;277;5;282;;;;vpos;;v;;r&#xA;Definition&#xA;    testToUpperCase($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider toUpperCaseProvider();;d4,278;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f53;277;62;277;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f36;277;45;277;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f47;277;51;277;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testTrim;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;404;5;409;;;;vpos;;v;;r&#xA;Definition&#xA;    testTrim($expected, $str, $chars = null, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider trimProvider();;d4,405;;b1,0;;mexpected;;pstr;;pchars;;pencoding;;p">
					<treenode node="chars;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f46;404;52;404;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f61;404;70;404;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f29;404;38;404;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f40;404;44;404;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testTrimLeft;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;414;5;420;;;;vpos;;v;;r&#xA;Definition&#xA;    testTrimLeft($expected, $str, $chars = null,&#xA;                                 $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider trimLeftProvider();;d4,416;;b1,0;;mexpected;;pstr;;pchars;;pencoding;;p">
					<treenode node="chars;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f50;414;56;414;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f33;415;42;415;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f33;414;42;414;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f44;414;48;414;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testTrimRight;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;425;5;431;;;;vpos;;v;;r&#xA;Definition&#xA;    testTrimRight($expected, $str, $chars = null,&#xA;                                  $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider trimRightProvider();;d4,427;;b1,0;;mexpected;;pstr;;pchars;;pencoding;;p">
					<treenode node="chars;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f51;425;57;425;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f34;426;43;426;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f34;425;43;425;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f45;425;49;425;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testTruncate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;351;5;357;;;;vpos;;v;;r&#xA;Definition&#xA;    testTruncate($expected, $str, $length, $substring = '',&#xA;                                 $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider truncateProvider();;d4,353;;b1,0;;mexpected;;pstr;;plength;;psubstring;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f33;352;42;352;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f33;351;42;351;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f50;351;57;351;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f44;351;48;351;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f59;351;69;351;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testUnderscored;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;92;5;97;;;;vpos;;v;;r&#xA;Definition&#xA;    testUnderscored($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider underscoredProvider();;d4,93;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f53;92;62;92;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f36;92;45;92;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f47;92;51;92;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testUpperCamelize;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;72;5;77;;;;vpos;;v;;r&#xA;Definition&#xA;    testUpperCamelize($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider upperCamelizeProvider();;d4,73;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f55;72;64;72;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f38;72;47;72;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f49;72;53;72;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testUpperCaseFirst;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f11;42;5;47;;;;vpos;;v;;r&#xA;Definition&#xA;    testUpperCaseFirst($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider upperCaseFirstProvider();;d4,43;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f56;42;65;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f39;42;48;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php;f50;42;54;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="StatusCommand;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\StatusCommand.php;f0;6;1;77;;;;vpos;;vBaseCommand;;c;;r;;d0,7;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\StatusCommand.php;f11;35;5;40;;;;vpos;;v;;r&#xA;Definition&#xA;    __construct(Migrator $migrator)&#xA;&#xA;Description&#xA;     Create a new migration rollback command instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Database\Migrations\Migrator $migrator;;d4,36;;b1,0;;m\Illuminate\Database\Migrations\Migrator $migrator;;p">
					<treenode node="migrator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\StatusCommand.php;f41;35;50;35;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fire;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\StatusCommand.php;f11;47;5;66;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    fire()&#xA;&#xA;Description&#xA;     Execute the console command.;;d4,48;;b1,0;;m">
				</treenode>
				<treenode node="getAllMigrationFiles;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\StatusCommand.php;f14;73;5;76;;;;vpos;;varray;;r&#xA;Definition&#xA;    getAllMigrationFiles()&#xA;&#xA;Description&#xA;     Get all of the migration files.;;d4,74;;b2,0;;m">
				</treenode>
				<treenode node="description;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\StatusCommand.php;f14;20;26;20;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="migrator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\StatusCommand.php;f14;27;23;27;;;;vpos;;v;;r&#xA;Description&#xA;     The migrator instance.;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\StatusCommand.php;f14;13;19;13;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="Storage;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Storage.php;f0;7;1;18;;;;vpos;;vFacade;;c;;r&#xA;Definition&#xA;    class Storage extends Facade&#xA;&#xA;Description&#xA;      see \Illuminate\Filesystem\FilesystemManager;;d0,8;;b0,0;;m">
				<treenode node="getFacadeAccessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Storage.php;f21;14;5;17;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getFacadeAccessor()&#xA;&#xA;Description&#xA;     Get the registered name of the component.;;d4,15;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="Str;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f0;7;1;442;;;;vpos;;v;;r;;d0,8;;b0,0;;m">
				<treenode node="ascii;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f18;38;5;41;;;;vpos;;vstring;;r&#xA;Definition&#xA;    ascii($value)&#xA;&#xA;Description&#xA;     Transliterate a UTF-8 value to ASCII.&#xA;&#xA;Parameters:&#xA;    string $value;;d4,39;;b1,5;;mstring $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f33;38;39;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="camel;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f18;49;5;56;;;;vpos;;vstring;;r&#xA;Definition&#xA;    camel($value)&#xA;&#xA;Description&#xA;     Convert a value to camel case.&#xA;&#xA;Parameters:&#xA;    string $value;;d4,50;;b1,5;;mstring $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f33;49;39;49;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="contains;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f18;65;5;74;;;;vpos;;vbool;;r&#xA;Definition&#xA;    contains($haystack, $needles)&#xA;&#xA;Description&#xA;     Determine if a given string contains a given substring.&#xA;&#xA;Parameters:&#xA;    string $haystack&#xA;    string|array $needles;;d4,66;;b1,5;;mstring $haystack;;pstring|array $needles;;p">
					<treenode node="haystack;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f36;65;45;65;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="needles;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f47;65;55;65;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="endsWith;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f18;83;5;92;;;;vpos;;vbool;;r&#xA;Definition&#xA;    endsWith($haystack, $needles)&#xA;&#xA;Description&#xA;     Determine if a given string ends with a given substring.&#xA;&#xA;Parameters:&#xA;    string $haystack&#xA;    string|array $needles;;d4,84;;b1,5;;mstring $haystack;;pstring|array $needles;;p">
					<treenode node="haystack;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f36;83;45;83;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="needles;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f47;83;55;83;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="equals;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f18;271;5;298;;;;vpos;;vbool;;r&#xA;Definition&#xA;    equals($knownString, $userInput)&#xA;&#xA;Description&#xA;     Compares two strings using a constant-time algorithm.&#xA;&#xA;Parameters:&#xA;    string $knownString&#xA;    string $userInput;;d4,272;;b1,5;;mstring $knownString;;pstring $userInput;;p">
					<treenode node="knownString;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f34;271;46;271;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="userInput;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f48;271;58;271;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="finish;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f18;101;5;106;;;;vpos;;vstring;;r&#xA;Definition&#xA;    finish($value, $cap)&#xA;&#xA;Description&#xA;     Cap a string with a single instance of a given value.&#xA;&#xA;Parameters:&#xA;    string $value&#xA;    string $cap;;d4,102;;b1,5;;mstring $value;;pstring $cap;;p">
					<treenode node="cap;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f42;101;46;101;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f34;101;40;101;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="is;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f18;115;5;129;;;;vpos;;vbool;;r&#xA;Definition&#xA;    is($pattern, $value)&#xA;&#xA;Description&#xA;     Determine if a given string matches a given pattern.&#xA;&#xA;Parameters:&#xA;    string $pattern&#xA;    string $value;;d4,116;;b1,5;;mstring $pattern;;pstring $value;;p">
					<treenode node="pattern;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f30;115;38;115;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f40;115;46;115;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="length;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f18;137;5;140;;;;vpos;;vint;;r&#xA;Definition&#xA;    length($value)&#xA;&#xA;Description&#xA;     Return the length of the given string.&#xA;&#xA;Parameters:&#xA;    string $value;;d4,138;;b1,5;;mstring $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f34;137;40;137;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="limit;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f18;150;5;157;;;;vpos;;vstring;;r&#xA;Definition&#xA;    limit($value, $limit = 100, $end = '...')&#xA;&#xA;Description&#xA;     Limit the number of characters in a string.&#xA;&#xA;Parameters:&#xA;    string $value&#xA;    int $limit&#xA;    string $end;;d4,151;;b1,5;;mstring $value;;pint $limit;;pstring $end;;p">
					<treenode node="end;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f55;150;59;150;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="limit;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f41;150;47;150;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f33;150;39;150;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="lower;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f18;165;5;168;;;;vpos;;vstring;;r&#xA;Definition&#xA;    lower($value)&#xA;&#xA;Description&#xA;     Convert the given string to lower-case.&#xA;&#xA;Parameters:&#xA;    string $value;;d4,166;;b1,5;;mstring $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f33;165;39;165;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="parseCallback;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f18;196;5;199;;;;vpos;;varray;;r&#xA;Definition&#xA;    parseCallback($callback, $default)&#xA;&#xA;Description&#xA;     Parse a Class method style callback into class and method.&#xA;&#xA;Parameters:&#xA;    string $callback&#xA;    string $default;;d4,197;;b1,5;;mstring $callback;;pstring $default;;p">
					<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f41;196;50;196;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="default;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f52;196;60;196;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="plural;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f18;208;5;211;;;;vpos;;vstring;;r&#xA;Definition&#xA;    plural($value, $count = 2)&#xA;&#xA;Description&#xA;     Get the plural form of an English word.&#xA;&#xA;Parameters:&#xA;    string $value&#xA;    int $count;;d4,209;;b1,5;;mstring $value;;pint $count;;p">
					<treenode node="count;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f42;208;48;208;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f34;208;40;208;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="quickRandom;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f18;253;5;258;;;;vpos;;vstring;;r&#xA;Definition&#xA;    quickRandom($length = 16)&#xA;&#xA;Description&#xA;     Generate a &quot;random&quot; alpha-numeric string.&#xA;&#xA;Parameters:&#xA;    int $length;;d4,254;;b1,5;;mint $length;;p">
					<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f39;253;46;253;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="random;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f18;219;5;232;;;;vpos;;vstring;;r&#xA;Definition&#xA;    random($length = 16)&#xA;&#xA;Description&#xA;     Generate a more truly &quot;random&quot; alpha-numeric string.&#xA;&#xA;Parameters:&#xA;    int $length;;d4,220;;b1,5;;mint $length;;p">
					<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f34;219;41;219;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="randomBytes;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f18;240;5;243;;;;vpos;;vstring;;r&#xA;Definition&#xA;    randomBytes($length = 16)&#xA;&#xA;Description&#xA;     Generate a more truly &quot;random&quot; bytes.&#xA;&#xA;Parameters:&#xA;    int $length;;d4,241;;b1,5;;mint $length;;p">
					<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f39;240;46;240;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="singular;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f18;328;5;331;;;;vpos;;vstring;;r&#xA;Definition&#xA;    singular($value)&#xA;&#xA;Description&#xA;     Get the singular form of an English word.&#xA;&#xA;Parameters:&#xA;    string $value;;d4,329;;b1,5;;mstring $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f36;328;42;328;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="slug;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f18;340;5;356;;;;vpos;;vstring;;r&#xA;Definition&#xA;    slug($title, $separator = '-')&#xA;&#xA;Description&#xA;     Generate a URL friendly &quot;slug&quot; from a given string.&#xA;&#xA;Parameters:&#xA;    string $title&#xA;    string $separator;;d4,341;;b1,5;;mstring $title;;pstring $separator;;p">
					<treenode node="separator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f40;340;50;340;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="title;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f32;340;38;340;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="snake;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f18;365;5;380;;;;vpos;;vstring;;r&#xA;Definition&#xA;    snake($value, $delimiter = '_')&#xA;&#xA;Description&#xA;     Convert a string to snake case.&#xA;&#xA;Parameters:&#xA;    string $value&#xA;    string $delimiter;;d4,366;;b1,5;;mstring $value;;pstring $delimiter;;p">
					<treenode node="delimiter;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f41;365;51;365;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f33;365;39;365;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="startsWith;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f18;389;5;398;;;;vpos;;vbool;;r&#xA;Definition&#xA;    startsWith($haystack, $needles)&#xA;&#xA;Description&#xA;     Determine if a given string starts with a given substring.&#xA;&#xA;Parameters:&#xA;    string $haystack&#xA;    string|array $needles;;d4,390;;b1,5;;mstring $haystack;;pstring|array $needles;;p">
					<treenode node="haystack;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f38;389;47;389;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="needles;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f49;389;57;389;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="studly;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f18;406;5;417;;;;vpos;;vstring;;r&#xA;Definition&#xA;    studly($value)&#xA;&#xA;Description&#xA;     Convert a value to studly caps case.&#xA;&#xA;Parameters:&#xA;    string $value;;d4,407;;b1,5;;mstring $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f34;406;40;406;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="substr;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f18;427;5;430;;;;vpos;;vstring;;r&#xA;Definition&#xA;    substr($string, $start, $length = null)&#xA;&#xA;Description&#xA;     Returns the portion of string specified by the start and length parameters.&#xA;&#xA;Parameters:&#xA;    string $string&#xA;    int $start&#xA;    int|null $length;;d4,428;;b1,5;;mstring $string;;pint $start;;pint|null $length;;p">
					<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f51;427;58;427;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="start;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f43;427;49;427;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="string;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f34;427;41;427;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="title;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f18;317;5;320;;;;vpos;;vstring;;r&#xA;Definition&#xA;    title($value)&#xA;&#xA;Description&#xA;     Convert the given string to title case.&#xA;&#xA;Parameters:&#xA;    string $value;;d4,318;;b1,5;;mstring $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f33;317;39;317;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="ucfirst;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f18;438;5;441;;;;vpos;;vstring;;r&#xA;Definition&#xA;    ucfirst($string)&#xA;&#xA;Description&#xA;     Make a string's first character uppercase.&#xA;&#xA;Parameters:&#xA;    string $string;;d4,439;;b1,5;;mstring $string;;p">
					<treenode node="string;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f35;438;42;438;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="upper;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f18;306;5;309;;;;vpos;;vstring;;r&#xA;Definition&#xA;    upper($value)&#xA;&#xA;Description&#xA;     Convert the given string to upper-case.&#xA;&#xA;Parameters:&#xA;    string $value;;d4,307;;b1,5;;mstring $value;;p">
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f33;306;39;306;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="words;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f18;178;5;187;;;;vpos;;vstring;;r&#xA;Definition&#xA;    words($value, $words = 100, $end = '...')&#xA;&#xA;Description&#xA;     Limit the number of words in a string.&#xA;&#xA;Parameters:&#xA;    string $value&#xA;    int $words&#xA;    string $end;;d4,179;;b1,5;;mstring $value;;pint $words;;pstring $end;;p">
					<treenode node="end;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f55;178;59;178;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f33;178;39;178;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="words;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f41;178;47;178;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="camelCache;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f21;23;32;23;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="snakeCache;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f21;16;32;16;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="studlyCache;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php;f21;30;33;30;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="StringClass;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f0;535;1;548;;;;vpos;;v;;r;;d0,536;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;539;5;542;;;;vpos;;v;;r;;d4,540;;b1,0;;mstr;;p">
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f32;539;36;539;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__toString;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;544;5;547;;;;vpos;;v;;r;;d4,545;;b1,0;;m">
				</treenode>
				<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f14;537;18;537;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="Stringy;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f0;4;24;4;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="StringyTestCase;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f0;6;1;993;;;;vpos;;vCommonTest;;c;;r;;d0,7;;b0,0;;m">
				<treenode node="offsetExistsProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;106;5;116;;;;vpos;;v;;r;;d4,107;;b1,0;;m">
				</treenode>
				<treenode node="testAt;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;730;5;737;;;;vpos;;v;;r&#xA;Definition&#xA;    testAt($expected, $str, $index, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider atProvider();;d4,731;;b1,0;;mexpected;;pstr;;pindex;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f52;730;61;730;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f27;730;36;730;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="index;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f44;730;50;730;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f38;730;42;730;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testCamelize;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;211;5;218;;;;vpos;;v;;r&#xA;Definition&#xA;    testCamelize($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider camelizeProvider();;d4,212;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f50;211;59;211;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f33;211;42;211;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f44;211;48;211;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testChaining;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;63;5;69;;;;vpos;;v;;r;;d4,64;;b1,0;;m">
				</treenode>
				<treenode node="testChars;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;176;5;184;;;;vpos;;v;;r&#xA;Definition&#xA;    testChars($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider charsProvider();;d4,177;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f47;176;56;176;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f30;176;39;176;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f41;176;45;176;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testCollapseWhitespace;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;320;5;327;;;;vpos;;v;;r&#xA;Definition&#xA;    testCollapseWhitespace($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider collapseWhitespaceProvider();;d4,321;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f60;320;69;320;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f43;320;52;320;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f54;320;58;320;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testConstruct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;8;5;14;;;;vpos;;v;;r;;d4,9;;b1,0;;m">
				</treenode>
				<treenode node="testConstructWithArray;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;19;5;23;;;;vpos;;v;;r&#xA;Definition&#xA;    testConstructWithArray()&#xA;&#xA;Description&#xA;      expectedException InvalidArgumentException;;d4,20;;b1,0;;m">
				</treenode>
				<treenode node="testContains;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;503;5;511;;;;vpos;;v;;r&#xA;Definition&#xA;    testContains($expected, $haystack, $needle,&#xA;                                 $caseSensitive = true, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider containsProvider();;d4,505;;b1,0;;mexpected;;phaystack;;pneedle;;pcaseSensitive;;pencoding;;p">
					<treenode node="caseSensitive;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f33;504;47;504;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f56;504;65;504;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f33;503;42;503;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="haystack;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f44;503;53;503;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="needle;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f55;503;62;503;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testContainsAll;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;529;5;537;;;;vpos;;v;;r&#xA;Definition&#xA;    testContainsAll($expected, $haystack, $needles,&#xA;                                    $caseSensitive = true, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider containsAllProvider();;d4,531;;b1,0;;mexpected;;phaystack;;pneedles;;pcaseSensitive;;pencoding;;p">
					<treenode node="caseSensitive;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f36;530;50;530;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f59;530;68;530;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f36;529;45;529;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="haystack;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f47;529;56;529;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="needles;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f58;529;66;529;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testcontainsAny;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;516;5;524;;;;vpos;;v;;r&#xA;Definition&#xA;    testcontainsAny($expected, $haystack, $needles,&#xA;                                    $caseSensitive = true, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider containsAnyProvider();;d4,518;;b1,0;;mexpected;;phaystack;;pneedles;;pcaseSensitive;;pencoding;;p">
					<treenode node="caseSensitive;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f36;517;50;517;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f59;517;68;517;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f36;516;45;516;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="haystack;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f47;516;56;516;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="needles;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f58;516;66;516;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testCount;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;71;5;76;;;;vpos;;v;;r;;d4,72;;b1,0;;m">
				</treenode>
				<treenode node="testCountSubstr;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;934;5;942;;;;vpos;;v;;r&#xA;Definition&#xA;    testCountSubstr($expected, $str, $substring,&#xA;                                    $caseSensitive = true, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider countSubstrProvider();;d4,936;;b1,0;;mexpected;;pstr;;psubstring;;pcaseSensitive;;pencoding;;p">
					<treenode node="caseSensitive;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f36;935;50;935;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f59;935;68;935;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f36;934;45;934;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f47;934;51;934;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f53;934;63;934;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testCreate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;55;5;61;;;;vpos;;v;;r;;d4,56;;b1,0;;m">
				</treenode>
				<treenode node="testDasherize;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;235;5;242;;;;vpos;;v;;r&#xA;Definition&#xA;    testDasherize($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider dasherizeProvider();;d4,236;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f51;235;60;235;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f34;235;43;235;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f45;235;49;235;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testDelimit;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;259;5;266;;;;vpos;;v;;r&#xA;Definition&#xA;    testDelimit($expected, $str, $delimiter, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider delimitProvider();;d4,260;;b1,0;;mexpected;;pstr;;pdelimiter;;pencoding;;p">
					<treenode node="delimiter;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f49;259;59;259;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f61;259;70;259;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f32;259;41;259;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f43;259;47;259;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testEndsWith;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;418;5;426;;;;vpos;;v;;r&#xA;Definition&#xA;    testEndsWith($expected, $str, $substring,&#xA;                                 $caseSensitive = true, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider endsWithProvider();;d4,420;;b1,0;;mexpected;;pstr;;psubstring;;pcaseSensitive;;pencoding;;p">
					<treenode node="caseSensitive;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f33;419;47;419;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f56;419;65;419;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f33;418;42;418;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f44;418;48;418;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f50;418;60;418;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testEnsureLeft;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;766;5;773;;;;vpos;;v;;r&#xA;Definition&#xA;    testEnsureLeft($expected, $str, $substring, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider ensureLeftProvider();;d4,767;;b1,0;;mexpected;;pstr;;psubstring;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f64;766;73;766;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f35;766;44;766;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f46;766;50;766;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f52;766;62;766;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testEnsureRight;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;778;5;785;;;;vpos;;v;;r&#xA;Definition&#xA;    testEnsureRight($expected, $str, $substring, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider ensureRightProvider();;d4,779;;b1,0;;mexpected;;pstr;;psubstring;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f65;778;74;778;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f36;778;45;778;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f47;778;51;778;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f53;778;63;778;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testFirst;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;742;5;749;;;;vpos;;v;;r&#xA;Definition&#xA;    testFirst($expected, $str, $n, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider firstProvider();;d4,743;;b1,0;;mexpected;;pstr;;pn;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f51;742;60;742;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f30;742;39;742;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="n;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f47;742;49;742;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f41;742;45;742;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testGetIterator;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;78;5;94;;;;vpos;;v;;r;;d4,79;;b1,0;;m">
				</treenode>
				<treenode node="testHasLowerCase;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;874;5;881;;;;vpos;;v;;r&#xA;Definition&#xA;    testHasLowerCase($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider hasLowerCaseProvider();;d4,875;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f54;874;63;874;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f37;874;46;874;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f48;874;52;874;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testHasUpperCase;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;910;5;917;;;;vpos;;v;;r&#xA;Definition&#xA;    testHasUpperCase($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider hasUpperCaseProvider();;d4,911;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f54;910;63;910;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f37;910;46;910;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f48;910;52;910;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testHtmlDecode;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;985;5;992;;;;vpos;;v;;r&#xA;Definition&#xA;    testHtmlDecode($expected, $str, $flags = ENT_COMPAT, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider htmlDecodeProvider();;d4,986;;b1,0;;mexpected;;pstr;;pflags;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f73;985;82;985;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f35;985;44;985;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="flags;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f52;985;58;985;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f46;985;50;985;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testHtmlEncode;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;973;5;980;;;;vpos;;v;;r&#xA;Definition&#xA;    testHtmlEncode($expected, $str, $flags = ENT_COMPAT, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider htmlEncodeProvider();;d4,974;;b1,0;;mexpected;;pstr;;pflags;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f73;973;82;973;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f35;973;44;973;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="flags;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f52;973;58;973;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f46;973;50;973;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testHumanize;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;296;5;303;;;;vpos;;v;;r&#xA;Definition&#xA;    testHumanize($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider humanizeProvider();;d4,297;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f50;296;59;296;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f33;296;42;296;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f44;296;48;296;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testIndexOf;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;158;5;162;;;;vpos;;v;;r&#xA;Definition&#xA;    testIndexOf($expected, $str, $subStr, $offset = 0, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider indexOfProvider();;d4,159;;b1,0;;mexpected;;pstr;;psubStr;;poffset;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f71;158;80;158;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f32;158;41;158;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f58;158;65;158;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f43;158;47;158;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="subStr;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f49;158;56;158;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testIndexOfLast;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;167;5;171;;;;vpos;;v;;r&#xA;Definition&#xA;    testIndexOfLast($expected, $str, $subStr, $offset = 0, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider indexOfLastProvider();;d4,168;;b1,0;;mexpected;;pstr;;psubStr;;poffset;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f75;167;84;167;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f36;167;45;167;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f62;167;69;167;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f47;167;51;167;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="subStr;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f53;167;60;167;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testInsert;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;554;5;562;;;;vpos;;v;;r&#xA;Definition&#xA;    testInsert($expected, $str, $substring, $index,&#xA;                               $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider insertProvider();;d4,556;;b1,0;;mexpected;;pstr;;psubstring;;pindex;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f31;555;40;555;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f31;554;40;554;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="index;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f60;554;66;554;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f42;554;46;554;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f48;554;58;554;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testIsAlpha;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;814;5;821;;;;vpos;;v;;r&#xA;Definition&#xA;    testIsAlpha($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider isAlphaProvider();;d4,815;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f49;814;58;814;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f32;814;41;814;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f43;814;47;814;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testIsAlphanumeric;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;826;5;833;;;;vpos;;v;;r&#xA;Definition&#xA;    testIsAlphanumeric($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider isAlphanumericProvider();;d4,827;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f56;826;65;826;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f39;826;48;826;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f50;826;54;826;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testIsBlank;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;838;5;845;;;;vpos;;v;;r&#xA;Definition&#xA;    testIsBlank($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider isBlankProvider();;d4,839;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f49;838;58;838;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f32;838;41;838;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f43;838;47;838;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testIsHexadecimal;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;922;5;929;;;;vpos;;v;;r&#xA;Definition&#xA;    testIsHexadecimal($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider isHexadecimalProvider();;d4,923;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f55;922;64;922;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f38;922;47;922;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f49;922;53;922;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testIsJson;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;850;5;857;;;;vpos;;v;;r&#xA;Definition&#xA;    testIsJson($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider isJsonProvider();;d4,851;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f48;850;57;850;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f31;850;40;850;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f42;850;46;850;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testIsLowerCase;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;862;5;869;;;;vpos;;v;;r&#xA;Definition&#xA;    testIsLowerCase($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider isLowerCaseProvider();;d4,863;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f53;862;62;862;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f36;862;45;862;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f47;862;51;862;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testIsSerialized;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;886;5;893;;;;vpos;;v;;r&#xA;Definition&#xA;    testIsSerialized($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider isSerializedProvider();;d4,887;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f54;886;63;886;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f37;886;46;886;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f48;886;52;886;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testIsUpperCase;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;898;5;905;;;;vpos;;v;;r&#xA;Definition&#xA;    testIsUpperCase($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider isUpperCaseProvider();;d4,899;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f53;898;62;898;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f36;898;45;898;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f47;898;51;898;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testLast;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;754;5;761;;;;vpos;;v;;r&#xA;Definition&#xA;    testLast($expected, $str, $n, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider lastProvider();;d4,755;;b1,0;;mexpected;;pstr;;pn;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f50;754;59;754;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f29;754;38;754;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="n;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f46;754;48;754;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f40;754;44;754;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testLength;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;705;5;712;;;;vpos;;v;;r&#xA;Definition&#xA;    testLength($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider lengthProvider();;d4,706;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f48;705;57;705;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f31;705;40;705;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f42;705;46;705;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testLongestCommonPrefix;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;666;5;674;;;;vpos;;v;;r&#xA;Definition&#xA;    testLongestCommonPrefix($expected, $str, $otherStr,&#xA;                                            $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider longestCommonPrefixProvider();;d4,668;;b1,0;;mexpected;;pstr;;potherStr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f44;667;53;667;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f44;666;53;666;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="otherStr;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f61;666;70;666;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f55;666;59;666;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testLongestCommonSubstring;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;692;5;700;;;;vpos;;v;;r&#xA;Definition&#xA;    testLongestCommonSubstring($expected, $str, $otherStr,&#xA;                                               $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider longestCommonSubstringProvider();;d4,694;;b1,0;;mexpected;;pstr;;potherStr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f47;693;56;693;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f47;692;56;692;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="otherStr;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f64;692;73;692;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f58;692;62;692;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testLongestCommonSuffix;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;679;5;687;;;;vpos;;v;;r&#xA;Definition&#xA;    testLongestCommonSuffix($expected, $str, $otherStr,&#xA;                                            $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider longestCommonSuffixProvider();;d4,681;;b1,0;;mexpected;;pstr;;potherStr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f44;680;53;680;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f44;679;53;679;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="otherStr;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f61;679;70;679;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f55;679;59;679;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testLowerCaseFirst;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;199;5;206;;;;vpos;;v;;r&#xA;Definition&#xA;    testLowerCaseFirst($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider lowerCaseFirstProvider();;d4,200;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f56;199;65;199;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f39;199;48;199;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f50;199;54;199;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testMissingToString;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;28;5;33;;;;vpos;;v;;r&#xA;Definition&#xA;    testMissingToString()&#xA;&#xA;Description&#xA;      expectedException InvalidArgumentException;;d4,29;;b1,0;;m">
				</treenode>
				<treenode node="testOffsetExists;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;99;5;104;;;;vpos;;v;;r&#xA;Definition&#xA;    testOffsetExists($expected, $offset)&#xA;&#xA;Description&#xA;      dataProvider offsetExistsProvider();;d4,100;;b1,0;;mexpected;;poffset;;p">
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f37;99;46;99;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f48;99;55;99;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testOffsetGet;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;118;5;126;;;;vpos;;v;;r;;d4,119;;b1,0;;m">
				</treenode>
				<treenode node="testOffsetGetOutOfBounds;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;131;5;135;;;;vpos;;v;;r&#xA;Definition&#xA;    testOffsetGetOutOfBounds()&#xA;&#xA;Description&#xA;      expectedException \OutOfBoundsException;;d4,132;;b1,0;;m">
				</treenode>
				<treenode node="testOffsetSet;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;140;5;144;;;;vpos;;v;;r&#xA;Definition&#xA;    testOffsetSet()&#xA;&#xA;Description&#xA;      expectedException \Exception;;d4,141;;b1,0;;m">
				</treenode>
				<treenode node="testOffsetUnset;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;149;5;153;;;;vpos;;v;;r&#xA;Definition&#xA;    testOffsetUnset()&#xA;&#xA;Description&#xA;      expectedException \Exception;;d4,150;;b1,0;;m">
				</treenode>
				<treenode node="testPad;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;344;5;352;;;;vpos;;v;;r&#xA;Definition&#xA;    testPad($expected, $str, $length, $padStr = ' ',&#xA;                            $padType = 'right', $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider padProvider();;d4,346;;b1,0;;mexpected;;pstr;;plength;;ppadStr;;ppadType;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f48;345;57;345;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f28;344;37;344;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f45;344;52;344;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="padStr;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f54;344;61;344;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="padType;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f28;345;36;345;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f39;344;43;344;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testPadBoth;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;392;5;400;;;;vpos;;v;;r&#xA;Definition&#xA;    testPadBoth($expected, $str, $length, $padStr = ' ',&#xA;                                $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider padBothProvider();;d4,394;;b1,0;;mexpected;;pstr;;plength;;ppadStr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f32;393;41;393;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f32;392;41;392;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f49;392;56;392;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="padStr;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f58;392;65;392;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f43;392;47;392;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testPadException;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;357;5;361;;;;vpos;;v;;r&#xA;Definition&#xA;    testPadException()&#xA;&#xA;Description&#xA;      expectedException \InvalidArgumentException;;d4,358;;b1,0;;m">
				</treenode>
				<treenode node="testPadLeft;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;366;5;374;;;;vpos;;v;;r&#xA;Definition&#xA;    testPadLeft($expected, $str, $length, $padStr = ' ',&#xA;                                $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider padLeftProvider();;d4,368;;b1,0;;mexpected;;pstr;;plength;;ppadStr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f32;367;41;367;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f32;366;41;366;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f49;366;56;366;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="padStr;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f58;366;65;366;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f43;366;47;366;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testPadRight;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;379;5;387;;;;vpos;;v;;r&#xA;Definition&#xA;    testPadRight($expected, $str, $length, $padStr = ' ',&#xA;                                 $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider padRightProvider();;d4,381;;b1,0;;mexpected;;pstr;;plength;;ppadStr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f33;380;42;380;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f33;379;42;379;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f50;379;57;379;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="padStr;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f59;379;66;379;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f44;379;48;379;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testregexReplace;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;960;5;968;;;;vpos;;v;;r&#xA;Definition&#xA;    testregexReplace($expected, $str, $pattern, $replacement,&#xA;                                     $options = 'msr', $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider regexReplaceProvider();;d4,962;;b1,0;;mexpected;;pstr;;ppattern;;preplacement;;poptions;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f55;961;64;961;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f37;960;46;960;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f37;961;45;961;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="pattern;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f54;960;62;960;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="replacement;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f64;960;76;960;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f48;960;52;960;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testRemoveLeft;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;790;5;797;;;;vpos;;v;;r&#xA;Definition&#xA;    testRemoveLeft($expected, $str, $substring, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider removeLeftProvider();;d4,791;;b1,0;;mexpected;;pstr;;psubstring;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f64;790;73;790;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f35;790;44;790;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f46;790;50;790;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f52;790;62;790;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testRemoveRight;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;802;5;809;;;;vpos;;v;;r&#xA;Definition&#xA;    testRemoveRight($expected, $str, $substring, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider removeRightProvider();;d4,803;;b1,0;;mexpected;;pstr;;psubstring;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f65;802;74;802;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f36;802;45;802;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f47;802;51;802;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f53;802;63;802;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testReplace;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;947;5;955;;;;vpos;;v;;r&#xA;Definition&#xA;    testReplace($expected, $str, $search, $replacement,&#xA;                                $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider replaceProvider();;d4,949;;b1,0;;mexpected;;pstr;;psearch;;preplacement;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f32;948;41;948;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f32;947;41;947;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="replacement;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f58;947;70;947;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="search;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f49;947;56;947;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f43;947;47;947;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testReverse;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;593;5;600;;;;vpos;;v;;r&#xA;Definition&#xA;    testReverse($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider reverseProvider();;d4,594;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f49;593;58;593;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f32;593;41;593;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f43;593;47;593;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testSafeTruncate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;580;5;588;;;;vpos;;v;;r&#xA;Definition&#xA;    testSafeTruncate($expected, $str, $length, $substring = '',&#xA;                                     $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider safeTruncateProvider();;d4,582;;b1,0;;mexpected;;pstr;;plength;;psubstring;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f37;581;46;581;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f37;580;46;580;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f54;580;61;580;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f48;580;52;580;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f63;580;73;580;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testShuffle;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;605;5;623;;;;vpos;;v;;r&#xA;Definition&#xA;    testShuffle($str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider shuffleProvider();;d4,606;;b1,0;;mstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f38;605;47;605;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f32;605;36;605;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testSlugify;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;491;5;498;;;;vpos;;v;;r&#xA;Definition&#xA;    testSlugify($expected, $str, $replacement = '-')&#xA;&#xA;Description&#xA;      dataProvider slugifyProvider();;d4,492;;b1,0;;mexpected;;pstr;;preplacement;;p">
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f32;491;41;491;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="replacement;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f49;491;61;491;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f43;491;47;491;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testStartsWith;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;405;5;413;;;;vpos;;v;;r&#xA;Definition&#xA;    testStartsWith($expected, $str, $substring,&#xA;                                   $caseSensitive = true, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider startsWithProvider();;d4,407;;b1,0;;mexpected;;pstr;;psubstring;;pcaseSensitive;;pencoding;;p">
					<treenode node="caseSensitive;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f35;406;49;406;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f58;406;67;406;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f35;405;44;405;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f46;405;50;405;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f52;405;62;405;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testSubstr;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;717;5;725;;;;vpos;;v;;r&#xA;Definition&#xA;    testSubstr($expected, $str, $start, $length = null,&#xA;                               $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider substrProvider();;d4,719;;b1,0;;mexpected;;pstr;;pstart;;plength;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f31;718;40;718;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f31;717;40;717;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f56;717;63;717;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="start;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f48;717;54;717;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f42;717;46;717;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testSurround;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;542;5;549;;;;vpos;;v;;r&#xA;Definition&#xA;    testSurround($expected, $str, $substring)&#xA;&#xA;Description&#xA;      dataProvider surroundProvider();;d4,543;;b1,0;;mexpected;;pstr;;psubstring;;p">
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f33;542;42;542;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f44;542;48;542;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f50;542;60;542;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testSwapCase;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;271;5;278;;;;vpos;;v;;r&#xA;Definition&#xA;    testSwapCase($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider swapCaseProvider();;d4,272;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f50;271;59;271;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f33;271;42;271;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f44;271;48;271;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testTidy;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;308;5;315;;;;vpos;;v;;r&#xA;Definition&#xA;    testTidy($expected, $str)&#xA;&#xA;Description&#xA;      dataProvider tidyProvider();;d4,309;;b1,0;;mexpected;;pstr;;p">
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f29;308;38;308;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f40;308;44;308;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testTitleize;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;283;5;291;;;;vpos;;v;;r&#xA;Definition&#xA;    testTitleize($expected, $str, $ignore = null,&#xA;                                 $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider titleizeProvider();;d4,285;;b1,0;;mexpected;;pstr;;pignore;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f33;284;42;284;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f33;283;42;283;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="ignore;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f50;283;57;283;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f44;283;48;283;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testToAscii;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;332;5;339;;;;vpos;;v;;r&#xA;Definition&#xA;    testToAscii($expected, $str, $removeUnsupported = true)&#xA;&#xA;Description&#xA;      dataProvider toAsciiProvider();;d4,333;;b1,0;;mexpected;;pstr;;premoveUnsupported;;p">
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f32;332;41;332;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="removeUnsupported;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f49;332;67;332;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f43;332;47;332;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testToLowerCase;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;455;5;462;;;;vpos;;v;;r&#xA;Definition&#xA;    testToLowerCase($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider toLowerCaseProvider();;d4,456;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f53;455;62;455;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f36;455;45;455;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f47;455;51;455;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testToSpaces;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;431;5;438;;;;vpos;;v;;r&#xA;Definition&#xA;    testToSpaces($expected, $str, $tabLength = 4)&#xA;&#xA;Description&#xA;      dataProvider toSpacesProvider();;d4,432;;b1,0;;mexpected;;pstr;;ptabLength;;p">
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f33;431;42;431;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f44;431;48;431;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="tabLength;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f50;431;60;431;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testToString;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;38;5;41;;;;vpos;;v;;r&#xA;Definition&#xA;    testToString($expected, $str)&#xA;&#xA;Description&#xA;      dataProvider toStringProvider();;d4,39;;b1,0;;mexpected;;pstr;;p">
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f33;38;42;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f44;38;48;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testToTabs;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;443;5;450;;;;vpos;;v;;r&#xA;Definition&#xA;    testToTabs($expected, $str, $tabLength = 4)&#xA;&#xA;Description&#xA;      dataProvider toTabsProvider();;d4,444;;b1,0;;mexpected;;pstr;;ptabLength;;p">
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f31;443;40;443;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f42;443;46;443;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="tabLength;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f48;443;58;443;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testToTitleCase;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;467;5;474;;;;vpos;;v;;r&#xA;Definition&#xA;    testToTitleCase($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider toTitleCaseProvider();;d4,468;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f53;467;62;467;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f36;467;45;467;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f47;467;51;467;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testToUpperCase;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;479;5;486;;;;vpos;;v;;r&#xA;Definition&#xA;    testToUpperCase($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider toUpperCaseProvider();;d4,480;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f53;479;62;479;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f36;479;45;479;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f47;479;51;479;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testTrim;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;628;5;635;;;;vpos;;v;;r&#xA;Definition&#xA;    testTrim($expected, $str, $chars = null, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider trimProvider();;d4,629;;b1,0;;mexpected;;pstr;;pchars;;pencoding;;p">
					<treenode node="chars;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f46;628;52;628;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f61;628;70;628;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f29;628;38;628;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f40;628;44;628;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testTrimLeft;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;640;5;648;;;;vpos;;v;;r&#xA;Definition&#xA;    testTrimLeft($expected, $str, $chars = null,&#xA;                                 $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider trimLeftProvider();;d4,642;;b1,0;;mexpected;;pstr;;pchars;;pencoding;;p">
					<treenode node="chars;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f50;640;56;640;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f33;641;42;641;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f33;640;42;640;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f44;640;48;640;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testTrimRight;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;653;5;661;;;;vpos;;v;;r&#xA;Definition&#xA;    testTrimRight($expected, $str, $chars = null,&#xA;                                  $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider trimRightProvider();;d4,655;;b1,0;;mexpected;;pstr;;pchars;;pencoding;;p">
					<treenode node="chars;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f51;653;57;653;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f34;654;43;654;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f34;653;43;653;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f45;653;49;653;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testTruncate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;567;5;575;;;;vpos;;v;;r&#xA;Definition&#xA;    testTruncate($expected, $str, $length, $substring = '',&#xA;                                 $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider truncateProvider();;d4,569;;b1,0;;mexpected;;pstr;;plength;;psubstring;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f33;568;42;568;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f33;567;42;567;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f50;567;57;567;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f44;567;48;567;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f59;567;69;567;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testUnderscored;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;247;5;254;;;;vpos;;v;;r&#xA;Definition&#xA;    testUnderscored($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider underscoredProvider();;d4,248;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f53;247;62;247;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f36;247;45;247;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f47;247;51;247;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testUpperCamelize;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;223;5;230;;;;vpos;;v;;r&#xA;Definition&#xA;    testUpperCamelize($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider upperCamelizeProvider();;d4,224;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f55;223;64;223;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f38;223;47;223;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f49;223;53;223;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testUpperCaseFirst;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;189;5;194;;;;vpos;;v;;r&#xA;Definition&#xA;    testUpperCaseFirst($expected, $str, $encoding = null)&#xA;&#xA;Description&#xA;      dataProvider upperCaseFirstProvider();;d4,190;;b1,0;;mexpected;;pstr;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f56;189;65;189;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f39;189;48;189;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f50;189;54;189;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="toStringProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php;f11;43;5;53;;;;vpos;;v;;r;;d4,44;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TargetOperation;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\TargetOperation.php;f0;23;1;68;;;;vpos;;vAbstractOperation;;c;;r&#xA;Definition&#xA;    class TargetOperation extends AbstractOperation&#xA;&#xA;Description&#xA;     Target operation between two catalogues: intersection = source ∩ target = {x: x ∈ source ∧ x ∈ target} all = intersection ∪ (target ∖ intersection) = target new = all ∖ source = {x: x ∈ target ∧ x ∉ source} obsolete = source ∖ all = source ∖ target = {x: x ∈ source ∧ x ∉ target} Basically, the result contains messages from the target catalogue.;;d0,24;;b0,0;;m">
				<treenode node="processDomain;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\TargetOperation.php;f14;28;5;67;;;;vpos;;v;;r&#xA;Definition&#xA;    processDomain($domain)&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,29;;b2,0;;mdomain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\TargetOperation.php;f37;28;44;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="TargetOperationTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Catalogue\TargetOperationTest.php;f0;17;1;81;;;;vpos;;vAbstractOperationTest;;c;;r;;d0,18;;b0,0;;m">
				<treenode node="createOperation;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Catalogue\TargetOperationTest.php;f14;77;5;80;;;;vpos;;v;;r;;d4,78;;b2,0;;msource;;ptarget;;p">
					<treenode node="source;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Catalogue\TargetOperationTest.php;f65;77;72;77;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="target;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Catalogue\TargetOperationTest.php;f100;77;107;77;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testGetMessagesFromSingleDomain;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Catalogue\TargetOperationTest.php;f11;19;5;40;;;;vpos;;v;;r;;d4,20;;b1,0;;m">
				</treenode>
				<treenode node="testGetResultFromSingleDomain;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Catalogue\TargetOperationTest.php;f11;42;5;53;;;;vpos;;v;;r;;d4,43;;b1,0;;m">
				</treenode>
				<treenode node="testGetResultWithMetadata;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Catalogue\TargetOperationTest.php;f11;55;5;75;;;;vpos;;v;;r;;d4,56;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TranslationDataCollector;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollector\TranslationDataCollector.php;f0;22;1;166;;;;vpos;;vDataCollector;;cLateDataCollectorInterface;;c;;r&#xA;Definition&#xA;    class TranslationDataCollector extends DataCollector implements LateDataCollectorInterface&#xA;&#xA;Description&#xA;      author Abdellatif Ait boudad &lt;a.aitboudad gmail.com&gt;;;d0,23;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollector\TranslationDataCollector.php;f11;26;5;29;;;;vpos;;v;;r;;d4,27;;b1,0;;mtranslator;;p">
					<treenode node="translator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollector\TranslationDataCollector.php;f56;26;67;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="collect;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollector\TranslationDataCollector.php;f11;50;5;52;;;;vpos;;v;;r&#xA;Definition&#xA;    collect(Request $request, Response $response, \Exception $exception = null)&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,51;;b1,0;;mrequest;;presponse;;pexception;;p">
					<treenode node="exception;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollector\TranslationDataCollector.php;f77;50;87;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="request;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollector\TranslationDataCollector.php;f36;50;44;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="response;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollector\TranslationDataCollector.php;f55;50;64;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="computeCount;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollector\TranslationDataCollector.php;f12;137;5;150;;;;vpos;;v;;r;;d4,138;;b3,0;;mmessages;;p">
					<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollector\TranslationDataCollector.php;f34;137;43;137;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getCountDefines;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollector\TranslationDataCollector.php;f11;89;5;92;;;;vpos;;vint;;r&#xA;Definition&#xA;    getCountDefines()&#xA;&#xA;Description&#xA;     ;;d4,90;;b1,0;;m">
				</treenode>
				<treenode node="getCountFallbacks;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollector\TranslationDataCollector.php;f11;81;5;84;;;;vpos;;vint;;r&#xA;Definition&#xA;    getCountFallbacks()&#xA;&#xA;Description&#xA;     ;;d4,82;;b1,0;;m">
				</treenode>
				<treenode node="getCountMissings;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollector\TranslationDataCollector.php;f11;73;5;76;;;;vpos;;vint;;r&#xA;Definition&#xA;    getCountMissings()&#xA;&#xA;Description&#xA;     ;;d4,74;;b1,0;;m">
				</treenode>
				<treenode node="getFallbackLocales;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollector\TranslationDataCollector.php;f11;99;5;102;;;;vpos;;v;;r;;d4,100;;b1,0;;m">
				</treenode>
				<treenode node="getLocale;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollector\TranslationDataCollector.php;f11;94;5;97;;;;vpos;;v;;r;;d4,95;;b1,0;;m">
				</treenode>
				<treenode node="getMessages;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollector\TranslationDataCollector.php;f11;65;5;68;;;;vpos;;varray;;r&#xA;Definition&#xA;    getMessages()&#xA;&#xA;Description&#xA;     ;;d4,66;;b1,0;;m">
				</treenode>
				<treenode node="getName;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollector\TranslationDataCollector.php;f11;107;5;110;;;;vpos;;v;;r&#xA;Definition&#xA;    getName()&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,108;;b1,0;;m">
				</treenode>
				<treenode node="lateCollect;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollector\TranslationDataCollector.php;f11;34;5;45;;;;vpos;;v;;r&#xA;Definition&#xA;    lateCollect()&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,35;;b1,0;;m">
				</treenode>
				<treenode node="reset;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollector\TranslationDataCollector.php;f11;57;5;60;;;;vpos;;v;;r&#xA;Definition&#xA;    reset()&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,58;;b1,0;;m">
				</treenode>
				<treenode node="sanitizeCollectedMessages;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollector\TranslationDataCollector.php;f12;112;5;135;;;;vpos;;v;;r;;d4,113;;b3,0;;mmessages;;p">
					<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollector\TranslationDataCollector.php;f47;112;56;112;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="sanitizeString;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollector\TranslationDataCollector.php;f12;152;5;165;;;;vpos;;v;;r;;d4,153;;b3,0;;mstring;;plength;;p">
					<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollector\TranslationDataCollector.php;f45;152;52;152;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="string;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollector\TranslationDataCollector.php;f36;152;43;152;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="translator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollector\TranslationDataCollector.php;f12;24;23;24;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
			</treenode>
			<treenode node="TranslationDataCollectorTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\DataCollector\TranslationDataCollectorTest.php;f0;17;1;149;;;;vpos;;vTestCase;;c;;r;;d0,18;;b0,0;;m">
				<treenode node="getTranslator;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\DataCollector\TranslationDataCollectorTest.php;f12;139;5;148;;;;vpos;;v;;r;;d4,140;;b3,0;;m">
				</treenode>
				<treenode node="setUp;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\DataCollector\TranslationDataCollectorTest.php;f14;19;5;24;;;;vpos;;v;;r;;d4,20;;b2,0;;m">
				</treenode>
				<treenode node="testCollect;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\DataCollector\TranslationDataCollectorTest.php;f11;40;5;137;;;;vpos;;v;;r;;d4,41;;b1,0;;m">
				</treenode>
				<treenode node="testCollectEmptyMessages;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\DataCollector\TranslationDataCollectorTest.php;f11;26;5;38;;;;vpos;;v;;r;;d4,27;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TranslationDumperPass;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DependencyInjection\TranslationDumperPass.php;f0;20;1;43;;;;vpos;;vCompilerPassInterface;;c;;r&#xA;Definition&#xA;    class TranslationDumperPass implements CompilerPassInterface&#xA;&#xA;Description&#xA;     Adds tagged translation.formatter services to translation writer.;;d0,21;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DependencyInjection\TranslationDumperPass.php;f11;25;5;29;;;;vpos;;v;;r;;d4,26;;b1,0;;mwriterServiceId;;pdumperTag;;p">
					<treenode node="dumperTag;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DependencyInjection\TranslationDumperPass.php;f87;25;97;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="writerServiceId;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DependencyInjection\TranslationDumperPass.php;f39;25;55;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="process;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DependencyInjection\TranslationDumperPass.php;f11;31;5;42;;;;vpos;;v;;r;;d4,32;;b1,0;;mcontainer;;p">
					<treenode node="container;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DependencyInjection\TranslationDumperPass.php;f45;31;55;31;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dumperTag;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DependencyInjection\TranslationDumperPass.php;f12;23;22;23;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="writerServiceId;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DependencyInjection\TranslationDumperPass.php;f12;22;28;22;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
			</treenode>
			<treenode node="TranslationDumperPassTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\DependencyInjection\TranslationDumperPassTest.php;f0;18;1;47;;;;vpos;;vTestCase;;c;;r;;d0,19;;b0,0;;m">
				<treenode node="testProcess;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\DependencyInjection\TranslationDumperPassTest.php;f11;20;5;31;;;;vpos;;v;;r;;d4,21;;b1,0;;m">
				</treenode>
				<treenode node="testProcessNoDefinitionFound;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\DependencyInjection\TranslationDumperPassTest.php;f11;33;5;46;;;;vpos;;v;;r;;d4,34;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TranslationExtractorPass;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DependencyInjection\TranslationExtractorPass.php;f0;21;1;48;;;;vpos;;vCompilerPassInterface;;c;;r&#xA;Definition&#xA;    class TranslationExtractorPass implements CompilerPassInterface&#xA;&#xA;Description&#xA;     Adds tagged translation.extractor services to translation extractor.;;d0,22;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DependencyInjection\TranslationExtractorPass.php;f11;26;5;30;;;;vpos;;v;;r;;d4,27;;b1,0;;mextractorServiceId;;pextractorTag;;p">
					<treenode node="extractorServiceId;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DependencyInjection\TranslationExtractorPass.php;f39;26;58;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="extractorTag;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DependencyInjection\TranslationExtractorPass.php;f93;26;106;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="process;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DependencyInjection\TranslationExtractorPass.php;f11;32;5;47;;;;vpos;;v;;r;;d4,33;;b1,0;;mcontainer;;p">
					<treenode node="container;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DependencyInjection\TranslationExtractorPass.php;f45;32;55;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="extractorServiceId;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DependencyInjection\TranslationExtractorPass.php;f12;23;31;23;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="extractorTag;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DependencyInjection\TranslationExtractorPass.php;f12;24;25;24;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
			</treenode>
			<treenode node="TranslationExtractorPassTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\DependencyInjection\TranslationExtractorPassTest.php;f0;18;1;65;;;;vpos;;vTestCase;;c;;r;;d0,19;;b0,0;;m">
				<treenode node="testProcess;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\DependencyInjection\TranslationExtractorPassTest.php;f11;20;5;31;;;;vpos;;v;;r;;d4,21;;b1,0;;m">
				</treenode>
				<treenode node="testProcessMissingAlias;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\DependencyInjection\TranslationExtractorPassTest.php;f11;52;5;64;;;;vpos;;v;;r&#xA;Definition&#xA;    testProcessMissingAlias()&#xA;&#xA;Description&#xA;      expectedException \Symfony\Component\DependencyInjection\Exception\RuntimeException;;d4,53;;b1,0;;m">
				</treenode>
				<treenode node="testProcessNoDefinitionFound;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\DependencyInjection\TranslationExtractorPassTest.php;f11;33;5;46;;;;vpos;;v;;r;;d4,34;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TranslationPassTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\DependencyInjection\TranslationPassTest.php;f0;20;1;56;;;;vpos;;vTestCase;;c;;r;;d0,21;;b0,0;;m">
				<treenode node="testValidCollector;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\DependencyInjection\TranslationPassTest.php;f11;22;5;55;;;;vpos;;v;;r;;d4,23;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TranslationReader;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Reader\TranslationReader.php;f0;22;1;62;;;;vpos;;vTranslationReaderInterface;;c;;r&#xA;Definition&#xA;    class TranslationReader implements TranslationReaderInterface&#xA;&#xA;Description&#xA;     TranslationReader reads translation messages from translation files.;;d0,23;;b0,0;;m">
				<treenode node="addLoader;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Reader\TranslationReader.php;f11;37;5;40;;;;vpos;;v;;r&#xA;Definition&#xA;    addLoader($format, LoaderInterface $loader)&#xA;&#xA;Description&#xA;     Adds a loader to the translation extractor.&#xA;&#xA;Parameters:&#xA;    string $format - The format of the loader&#xA;    LoaderInterface $loader;;d4,38;;b1,0;;mstring $format;;pLoaderInterface $loader;;p">
					<treenode node="format;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Reader\TranslationReader.php;f30;37;37;37;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="loader;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Reader\TranslationReader.php;f55;37;62;37;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="read;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Reader\TranslationReader.php;f11;45;5;61;;;;vpos;;v;;r&#xA;Definition&#xA;    read($directory, MessageCatalogue $catalogue)&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,46;;b1,0;;mdirectory;;pcatalogue;;p">
					<treenode node="catalogue;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Reader\TranslationReader.php;f54;45;64;45;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="directory;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Reader\TranslationReader.php;f25;45;35;45;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="loaders;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Reader\TranslationReader.php;f12;29;20;29;;;;vposarray;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
			</treenode>
			<treenode node="TranslationWriter;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Writer\TranslationWriter.php;f0;23;1;86;;;;vpos;;vTranslationWriterInterface;;c;;r&#xA;Definition&#xA;    class TranslationWriter implements TranslationWriterInterface&#xA;&#xA;Description&#xA;     TranslationWriter writes translation messages.;;d0,24;;b0,0;;m">
				<treenode node="addDumper;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Writer\TranslationWriter.php;f11;33;5;36;;;;vpos;;v;;r&#xA;Definition&#xA;    addDumper($format, DumperInterface $dumper)&#xA;&#xA;Description&#xA;     Adds a dumper to the writer.&#xA;&#xA;Parameters:&#xA;    string $format - The format of the dumper&#xA;    DumperInterface $dumper - The dumper;;d4,34;;b1,0;;mstring $format;;pDumperInterface $dumper;;p">
					<treenode node="dumper;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Writer\TranslationWriter.php;f55;33;62;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="format;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Writer\TranslationWriter.php;f30;33;37;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="disableBackup;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Writer\TranslationWriter.php;f11;41;5;49;;;;vpos;;v;;r&#xA;Definition&#xA;    disableBackup()&#xA;&#xA;Description&#xA;     Disables dumper backup.;;d4,42;;b1,0;;m">
				</treenode>
				<treenode node="getFormats;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Writer\TranslationWriter.php;f11;56;5;59;;;;vpos;;varray;;r&#xA;Definition&#xA;    getFormats()&#xA;&#xA;Description&#xA;     Obtains the list of supported formats.;;d4,57;;b1,0;;m">
				</treenode>
				<treenode node="write;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Writer\TranslationWriter.php;f11;70;5;85;;;;vpos;;v;;r&#xA;Definition&#xA;    write(MessageCatalogue $catalogue, $format, $options = array())&#xA;&#xA;Description&#xA;     Writes translation from the catalogue according to the selected format.&#xA;&#xA;Parameters:&#xA;    MessageCatalogue $catalogue - The message catalogue to write&#xA;    string $format - The format to use to dump the messages&#xA;    array $options - Options that are passed to the dumper;;d4,71;;b1,0;;mMessageCatalogue $catalogue;;pstring $format;;parray $options;;p">
					<treenode node="catalogue;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Writer\TranslationWriter.php;f43;70;53;70;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="format;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Writer\TranslationWriter.php;f55;70;62;70;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Writer\TranslationWriter.php;f64;70;72;70;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dumpers;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Writer\TranslationWriter.php;f12;25;20;25;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
			</treenode>
			<treenode node="TranslationWriterTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Writer\TranslationWriterTest.php;f0;18;1;44;;;;vpos;;vTestCase;;c;;r;;d0,19;;b0,0;;m">
				<treenode node="testDisableBackup;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Writer\TranslationWriterTest.php;f11;32;5;43;;;;vpos;;v;;r;;d4,33;;b1,0;;m">
				</treenode>
				<treenode node="testWrite;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Writer\TranslationWriterTest.php;f11;20;5;30;;;;vpos;;v;;r;;d4,21;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Translator;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f0;28;1;436;;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Translator.php;f0;6;36;6;;;;vpos;;vTranslatorInterface;;cTranslatorBagInterface;;c;;r&#xA;Definition&#xA;    class Translator implements TranslatorInterface, TranslatorBagInterface&#xA;&#xA;Description&#xA;      author Fabien Potencier &lt;fabien symfony.com&gt;;;d0,29;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f11;78;5;89;;;;vpos;;v;;r&#xA;Definition&#xA;    __construct(?string $locale, MessageFormatterInterface $formatter = null, string $cacheDir = null, bool $debug = false)&#xA;&#xA;Description&#xA;      throws InvalidArgumentException If a locale contains invalid characters;;d4,79;;b1,0;;mlocale;;pformatter;;pcacheDir;;pdebug;;p">
					<treenode node="cacheDir;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f101;78;110;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="debug;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f124;78;130;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="formatter;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f75;78;85;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f40;78;47;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addLoader;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f11;102;5;105;;;;vpos;;v;;r&#xA;Definition&#xA;    addLoader($format, LoaderInterface $loader)&#xA;&#xA;Description&#xA;     Adds a Loader.&#xA;&#xA;Parameters:&#xA;    string $format - The name of the loader (&#xA;    LoaderInterface $loader - A LoaderInterface instance;;d4,103;;b1,0;;mstring $format;;pLoaderInterface $loader;;p">
					<treenode node="format;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f30;102;37;102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="loader;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f55;102;62;102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addResource;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f11;117;5;132;;;;vpos;;v;;r&#xA;Definition&#xA;    addResource($format, $resource, $locale, $domain = null)&#xA;&#xA;Description&#xA;     Adds a Resource.&#xA;&#xA;Parameters:&#xA;    string $format - The name of the loader (&#xA;    mixed $resource - The resource name&#xA;    string $locale - The locale&#xA;    string $domain - The domain;;d4,118;;b1,0;;mstring $format;;pmixed $resource;;pstring $locale;;pstring $domain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f61;117;68;117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="format;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f32;117;39;117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f52;117;59;117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="resource;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f41;117;50;117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="assertValidLocale;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f14;417;5;422;;;;vpos;;v;;r&#xA;Definition&#xA;    assertValidLocale($locale)&#xA;&#xA;Description&#xA;     Asserts that the locale is valid, throws an Exception if not.&#xA;&#xA;Parameters:&#xA;    string $locale - Locale to tests;;d4,418;;b2,0;;mstring $locale;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f41;417;48;417;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="computeFallbackLocales;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f14;392;5;408;;;;vpos;;v;;r;;d4,393;;b2,0;;mlocale;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f46;392;53;392;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="doLoadCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f12;360;45;360;;;;vpos;;v;;r;;d-1,-1;;b3,0;;mlocale;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f37;360;44;360;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dumpCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f12;300;72;300;;;;vpos;;v;;r;;d-1,-1;;b3,0;;mlocale;;pcache;;p">
					<treenode node="cache;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f65;300;71;300;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f35;300;42;300;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f11;223;5;236;;;;vpos;;v;;r&#xA;Definition&#xA;    getCatalogue($locale = null)&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,224;;b1,0;;mlocale;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f33;223;40;223;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getCatalogueCachePath;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f12;355;5;358;;;;vpos;;v;;r;;d4,356;;b3,0;;mlocale;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f43;355;50;355;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getConfigCacheFactory;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f12;428;44;428;;;;vpos;;v;;r&#xA;Description&#xA;     Provides the ConfigCache factory implementation, falling back to a default implementation if necessary.;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="getFallbackContent;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f12;325;68;325;;;;vpos;;v;;r;;d-1,-1;;b3,0;;mcatalogue;;p">
					<treenode node="catalogue;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f57;325;67;325;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getFallbackLocales;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f11;175;5;178;;;;vpos;;varray;;r&#xA;Definition&#xA;    getFallbackLocales()&#xA;&#xA;Description&#xA;     Gets the fallback locales.&#xA;&#xA;Return:&#xA;   $locales The fallback locales;;d4,176;;b1,0;;m">
				</treenode>
				<treenode node="getLoaders;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f14;243;5;246;;;;vpos;;varray;;r&#xA;Definition&#xA;    getLoaders()&#xA;&#xA;Description&#xA;     Gets the loaders.&#xA;&#xA;Return:&#xA;   LoaderInterface[];;d4,244;;b2,0;;m">
				</treenode>
				<treenode node="getLocale;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f11;146;5;149;;;;vpos;;v;;r&#xA;Definition&#xA;    getLocale()&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,147;;b1,0;;m">
				</treenode>
				<treenode node="initializeCacheCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f12;277;61;277;;;;vpos;;v;;r;;d-1,-1;;b3,0;;mlocale;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f53;277;60;277;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="initializeCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f14;263;5;275;;;;vpos;;v;;r&#xA;Definition&#xA;    initializeCatalogue($locale)&#xA;&#xA;Description&#xA;     &#xA;&#xA;Parameters:&#xA;    string $locale;;d4,264;;b2,0;;mstring $locale;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f43;263;50;263;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="loadCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f14;251;5;258;;;;vpos;;v;;r&#xA;Definition&#xA;    loadCatalogue($locale)&#xA;&#xA;Description&#xA;     &#xA;&#xA;Parameters:&#xA;    string $locale;;d4,252;;b2,0;;mstring $locale;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f37;251;44;251;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="loadFallbackCatalogues;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f12;374;52;374;;;;vpos;;v;;r;;d-1,-1;;b3,0;;mlocale;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f44;374;51;374;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setConfigCacheFactory;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f11;91;5;94;;;;vpos;;v;;r;;d4,92;;b1,0;;mconfigCacheFactory;;p">
					<treenode node="configCacheFactory;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f70;91;89;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setFallbackLocales;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f11;158;5;168;;;;vpos;;v;;r&#xA;Definition&#xA;    setFallbackLocales(array $locales)&#xA;&#xA;Description&#xA;     Sets the fallback locales.&#xA;&#xA;Parameters:&#xA;    array $locales - The fallback locales;;d4,159;;b1,0;;marray $locales;;p">
					<treenode node="locales;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f45;158;53;158;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setLocale;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f11;137;5;141;;;;vpos;;v;;r&#xA;Definition&#xA;    setLocale($locale)&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,138;;b1,0;;mlocale;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f30;137;37;137;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="trans;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f11;183;5;190;;;;vpos;;v;;r&#xA;Definition&#xA;    trans($id, array $parameters = array(), $domain = null, $locale = null)&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,184;;b1,0;;mid;;pparameters;;pdomain;;plocale;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f60;183;67;183;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f26;183;29;183;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f76;183;83;183;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f37;183;48;183;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="transChoice;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f11;195;5;218;;;;vpos;;v;;r&#xA;Definition&#xA;    transChoice($id, $number, array $parameters = array(), $domain = null, $locale = null)&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,196;;b1,0;;mid;;pnumber;;pparameters;;pdomain;;plocale;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f75;195;82;195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f32;195;35;195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f91;195;98;195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="number;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f37;195;44;195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f52;195;63;195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="cache;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f8;285;14;285;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="cacheDir;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f12;63;21;63;;;;vposstring;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="catalogue;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f29;330;39;330;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="catalogues;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f14;33;25;33;;;;vposMessageCatalogueInterface;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="configCacheFactory;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f12;73;31;73;;;;vposConfigCacheFactoryInterface;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="content;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f8;305;16;305;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="current;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f8;328;16;328;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="currentSuffix;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f12;334;26;334;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="debug;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f12;68;18;68;;;;vposbool;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="fallback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f12;332;21;332;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="fallbackCatalogue;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f8;330;26;330;;;;vposMessageCatalogue;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="fallbackContent;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f8;303;24;303;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="fallbackLocales;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f12;43;28;43;;;;vposarray;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="fallbackSuffix;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f12;333;27;333;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="formatter;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f12;58;22;58;;;;vposMessageFormatterInterface;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="loaders;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f12;48;20;48;;;;vposLoaderInterface;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f12;38;19;38;;;;vposstring;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="replacementPattern;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f8;329;27;329;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="resource;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f50;365;59;365;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="resources;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f12;53;22;53;;;;vposarray;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php;f18;279;23;279;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="TranslatorCacheTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorCacheTest.php;f0;20;1;293;;;;vpos;;vTestCase;;c;;r;;d0,21;;b0,0;;m">
				<treenode node="createFailingLoader;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorCacheTest.php;f12;284;5;292;;;;vpos;;vLoaderInterface;;r&#xA;Definition&#xA;    createFailingLoader()&#xA;&#xA;Description&#xA;     ;;d4,285;;b3,0;;m">
				</treenode>
				<treenode node="deleteTmpDir;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorCacheTest.php;f14;35;5;53;;;;vpos;;v;;r;;d4,36;;b2,0;;m">
				</treenode>
				<treenode node="getCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorCacheTest.php;f14;263;5;274;;;;vpos;;v;;r;;d4,264;;b2,0;;mlocale;;pmessages;;presources;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorCacheTest.php;f36;263;43;263;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorCacheTest.php;f45;263;54;263;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="resources;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorCacheTest.php;f56;263;66;263;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="runForDebugAndProduction;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorCacheTest.php;f11;276;5;279;;;;vpos;;v;;r;;d4,277;;b1,0;;m">
				</treenode>
				<treenode node="setUp;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorCacheTest.php;f14;24;5;28;;;;vpos;;v;;r;;d4,25;;b2,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorCacheTest.php;f14;30;5;33;;;;vpos;;v;;r;;d4,31;;b2,0;;m">
				</treenode>
				<treenode node="testCatalogueIsReloadedWhenResourcesAreNoLongerFresh;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorCacheTest.php;f11;77;5;116;;;;vpos;;v;;r;;d4,78;;b1,0;;m">
				</treenode>
				<treenode node="testDifferentCacheFilesAreUsedForDifferentSetsOfFallbackLocales;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorCacheTest.php;f11;162;5;190;;;;vpos;;v;;r;;d4,163;;b1,0;;m">
				</treenode>
				<treenode node="testDifferentTranslatorsForSameLocaleDoNotOverwriteEachOthersCache;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorCacheTest.php;f11;121;5;149;;;;vpos;;v;;r&#xA;Definition&#xA;    testDifferentTranslatorsForSameLocaleDoNotOverwriteEachOthersCache($debug)&#xA;&#xA;Description&#xA;      dataProvider runForDebugAndProduction;;d4,122;;b1,0;;mdebug;;p">
					<treenode node="debug;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorCacheTest.php;f87;121;93;121;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testGeneratedCacheFilesAreOnlyBelongRequestedLocales;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorCacheTest.php;f11;151;5;160;;;;vpos;;v;;r;;d4,152;;b1,0;;m">
				</treenode>
				<treenode node="testPrimaryAndFallbackCataloguesContainTheSameMessagesRegardlessOfCaching;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorCacheTest.php;f11;192;5;238;;;;vpos;;v;;r;;d4,193;;b1,0;;m">
				</treenode>
				<treenode node="testRefreshCacheWhenResourcesAreNoLongerFresh;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorCacheTest.php;f11;240;5;261;;;;vpos;;v;;r;;d4,241;;b1,0;;m">
				</treenode>
				<treenode node="testThatACacheIsUsed;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorCacheTest.php;f11;58;5;75;;;;vpos;;v;;r&#xA;Definition&#xA;    testThatACacheIsUsed($debug)&#xA;&#xA;Description&#xA;      dataProvider runForDebugAndProduction;;d4,59;;b1,0;;mdebug;;p">
					<treenode node="debug;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorCacheTest.php;f41;58;47;58;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="tmpDir;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorCacheTest.php;f14;22;21;22;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="TranslatorPass;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DependencyInjection\TranslatorPass.php;f0;18;1;78;;;;vpos;;vCompilerPassInterface;;c;;r;;d0,19;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DependencyInjection\TranslatorPass.php;f11;26;5;33;;;;vpos;;v;;r;;d4,27;;b1,0;;mtranslatorServiceId;;preaderServiceId;;ploaderTag;;pdebugCommandServiceId;;pupdateCommandServiceId;;p">
					<treenode node="debugCommandServiceId;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DependencyInjection\TranslatorPass.php;f181;26;203;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="loaderTag;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DependencyInjection\TranslatorPass.php;f139;26;149;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="readerServiceId;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DependencyInjection\TranslatorPass.php;f91;26;107;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="translatorServiceId;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DependencyInjection\TranslatorPass.php;f39;26;59;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="updateCommandServiceId;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DependencyInjection\TranslatorPass.php;f250;26;273;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="process;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DependencyInjection\TranslatorPass.php;f11;35;5;77;;;;vpos;;v;;r;;d4,36;;b1,0;;mcontainer;;p">
					<treenode node="container;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DependencyInjection\TranslatorPass.php;f45;35;55;35;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="debugCommandServiceId;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DependencyInjection\TranslatorPass.php;f12;23;34;23;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="loaderTag;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DependencyInjection\TranslatorPass.php;f12;22;22;22;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="readerServiceId;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DependencyInjection\TranslatorPass.php;f12;21;28;21;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="translatorServiceId;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DependencyInjection\TranslatorPass.php;f12;20;32;20;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="updateCommandServiceId;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DependencyInjection\TranslatorPass.php;f12;24;35;24;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
			</treenode>
			<treenode node="TranslatorTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f0;18;1;533;;;;vpos;;vTestCase;;c;;r;;d0,19;;b0,0;;m">
				<treenode node="getFlattenedTransTests;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;420;5;441;;;;vpos;;v;;r;;d4,421;;b1,0;;m">
				</treenode>
				<treenode node="getInvalidLocalesTests;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;469;5;484;;;;vpos;;v;;r;;d4,470;;b1,0;;m">
				</treenode>
				<treenode node="getTransChoiceTests;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;443;5;467;;;;vpos;;v;;r;;d4,444;;b1,0;;m">
				</treenode>
				<treenode node="getTransFileTests;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;396;5;409;;;;vpos;;v;;r;;d4,397;;b1,0;;m">
				</treenode>
				<treenode node="getTransTests;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;411;5;418;;;;vpos;;v;;r;;d4,412;;b1,0;;m">
				</treenode>
				<treenode node="getValidLocalesTests;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;486;5;501;;;;vpos;;v;;r;;d4,487;;b1,0;;m">
				</treenode>
				<treenode node="testAddResourceAfterTrans;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;192;5;204;;;;vpos;;v;;r;;d4,193;;b1,0;;m">
				</treenode>
				<treenode node="testAddResourceInvalidLocales;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;175;5;179;;;;vpos;;v;;r&#xA;Definition&#xA;    testAddResourceInvalidLocales($locale)&#xA;&#xA;Description&#xA;      dataProvider      getInvalidLocalesTests;;d4,176;;b1,0;;mlocale;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f50;175;57;175;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testAddResourceValidLocales;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;184;5;190;;;;vpos;;v;;r&#xA;Definition&#xA;    testAddResourceValidLocales($locale)&#xA;&#xA;Description&#xA;      dataProvider getValidLocalesTests;;d4,185;;b1,0;;mlocale;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f48;184;55;184;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testConstructorInvalidLocale;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;24;5;27;;;;vpos;;v;;r&#xA;Definition&#xA;    testConstructorInvalidLocale($locale)&#xA;&#xA;Description&#xA;      dataProvider      getInvalidLocalesTests;;d4,25;;b1,0;;mlocale;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f49;24;56;24;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testConstructorValidLocale;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;32;5;37;;;;vpos;;v;;r&#xA;Definition&#xA;    testConstructorValidLocale($locale)&#xA;&#xA;Description&#xA;      dataProvider getValidLocalesTests;;d4,33;;b1,0;;mlocale;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f47;32;54;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testConstructorWithoutLocale;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;39;5;44;;;;vpos;;v;;r;;d4,40;;b1,0;;m">
				</treenode>
				<treenode node="testFallbackCatalogueResources;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;287;5;305;;;;vpos;;v;;r;;d4,288;;b1,0;;m">
				</treenode>
				<treenode node="testFlattenedTrans;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;348;5;355;;;;vpos;;v;;r&#xA;Definition&#xA;    testFlattenedTrans($expected, $messages, $id)&#xA;&#xA;Description&#xA;      dataProvider getFlattenedTransTests;;d4,349;;b1,0;;mexpected;;pmessages;;pid;;p">
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f39;348;48;348;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f61;348;64;348;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f50;348;59;348;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testGetCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;77;5;85;;;;vpos;;v;;r;;d4,78;;b1,0;;m">
				</treenode>
				<treenode node="testGetCatalogueReturnsConsolidatedCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;87;5;109;;;;vpos;;v;;r;;d4,88;;b1,0;;m">
				</treenode>
				<treenode node="testNestedFallbackCatalogueWhenUsingMultipleLocales;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;277;5;285;;;;vpos;;v;;r;;d4,278;;b1,0;;m">
				</treenode>
				<treenode node="testSetFallbackInvalidLocales;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;143;5;147;;;;vpos;;v;;r&#xA;Definition&#xA;    testSetFallbackInvalidLocales($locale)&#xA;&#xA;Description&#xA;      dataProvider      getInvalidLocalesTests;;d4,144;;b1,0;;mlocale;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f50;143;57;143;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testSetFallbackLocales;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;111;5;123;;;;vpos;;v;;r;;d4,112;;b1,0;;m">
				</treenode>
				<treenode node="testSetFallbackLocalesMultiple;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;125;5;137;;;;vpos;;v;;r;;d4,126;;b1,0;;m">
				</treenode>
				<treenode node="testSetFallbackValidLocales;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;152;5;158;;;;vpos;;v;;r&#xA;Definition&#xA;    testSetFallbackValidLocales($locale)&#xA;&#xA;Description&#xA;      dataProvider getValidLocalesTests;;d4,153;;b1,0;;mlocale;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f48;152;55;152;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testSetGetLocale;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;46;5;54;;;;vpos;;v;;r;;d4,47;;b1,0;;m">
				</treenode>
				<treenode node="testSetInvalidLocale;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;60;5;64;;;;vpos;;v;;r&#xA;Definition&#xA;    testSetInvalidLocale($locale)&#xA;&#xA;Description&#xA;      dataProvider      getInvalidLocalesTests;;d4,61;;b1,0;;mlocale;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f41;60;48;60;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testSetValidLocale;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;69;5;75;;;;vpos;;v;;r&#xA;Definition&#xA;    testSetValidLocale($locale)&#xA;&#xA;Description&#xA;      dataProvider getValidLocalesTests;;d4,70;;b1,0;;mlocale;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f39;69;46;69;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testTrans;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;310;5;317;;;;vpos;;v;;r&#xA;Definition&#xA;    testTrans($expected, $id, $translation, $parameters, $locale, $domain)&#xA;&#xA;Description&#xA;      dataProvider getTransTests;;d4,311;;b1,0;;mexpected;;pid;;ptranslation;;pparameters;;plocale;;pdomain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f82;310;89;310;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f30;310;39;310;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f41;310;44;310;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f73;310;80;310;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f60;310;71;310;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="translation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f46;310;58;310;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testTransChoice;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;360;5;367;;;;vpos;;v;;r&#xA;Definition&#xA;    testTransChoice($expected, $id, $translation, $number, $parameters, $locale, $domain)&#xA;&#xA;Description&#xA;      dataProvider getTransChoiceTests;;d4,361;;b1,0;;mexpected;;pid;;ptranslation;;pnumber;;pparameters;;plocale;;pdomain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f97;360;104;360;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f36;360;45;360;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f47;360;50;360;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f88;360;95;360;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="number;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f66;360;73;360;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f75;360;86;360;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="translation;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f52;360;64;360;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testTransChoiceFallback;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;503;5;511;;;;vpos;;v;;r;;d4,504;;b1,0;;m">
				</treenode>
				<treenode node="testTransChoiceFallbackBis;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;513;5;521;;;;vpos;;v;;r;;d4,514;;b1,0;;m">
				</treenode>
				<treenode node="testTransChoiceFallbackWithNoTranslation;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;523;5;532;;;;vpos;;v;;r;;d4,524;;b1,0;;m">
				</treenode>
				<treenode node="testTransChoiceInvalidLocale;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;373;5;380;;;;vpos;;v;;r&#xA;Definition&#xA;    testTransChoiceInvalidLocale($locale)&#xA;&#xA;Description&#xA;      dataProvider      getInvalidLocalesTests;;d4,374;;b1,0;;mlocale;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f49;373;56;373;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testTransChoiceValidLocale;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;385;5;394;;;;vpos;;v;;r&#xA;Definition&#xA;    testTransChoiceValidLocale($locale)&#xA;&#xA;Description&#xA;      dataProvider      getValidLocalesTests;;d4,386;;b1,0;;mlocale;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f47;385;54;385;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testTransInvalidLocale;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;323;5;330;;;;vpos;;v;;r&#xA;Definition&#xA;    testTransInvalidLocale($locale)&#xA;&#xA;Description&#xA;      dataProvider      getInvalidLocalesTests;;d4,324;;b1,0;;mlocale;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f43;323;50;323;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testTransNonExistentWithFallback;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;258;5;264;;;;vpos;;v;;r;;d4,259;;b1,0;;m">
				</treenode>
				<treenode node="testTransValidLocale;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;335;5;343;;;;vpos;;v;;r&#xA;Definition&#xA;    testTransValidLocale($locale)&#xA;&#xA;Description&#xA;      dataProvider      getValidLocalesTests;;d4,336;;b1,0;;mlocale;;p">
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f41;335;48;335;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testTransWithFallbackLocale;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;160;5;169;;;;vpos;;v;;r;;d4,161;;b1,0;;m">
				</treenode>
				<treenode node="testTransWithFallbackLocaleBis;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;236;5;243;;;;vpos;;v;;r;;d4,237;;b1,0;;m">
				</treenode>
				<treenode node="testTransWithFallbackLocaleFile;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;225;5;234;;;;vpos;;v;;r&#xA;Definition&#xA;    testTransWithFallbackLocaleFile($format, $loader)&#xA;&#xA;Description&#xA;      dataProvider getTransFileTests;;d4,226;;b1,0;;mformat;;ploader;;p">
					<treenode node="format;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f52;225;59;225;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="loader;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f61;225;68;225;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testTransWithFallbackLocaleTer;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;245;5;256;;;;vpos;;v;;r;;d4,246;;b1,0;;m">
				</treenode>
				<treenode node="testTransWithoutFallbackLocaleFile;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;210;5;220;;;;vpos;;v;;r&#xA;Definition&#xA;    testTransWithoutFallbackLocaleFile($format, $loader)&#xA;&#xA;Description&#xA;      dataProvider      getTransFileTests;;d4,211;;b1,0;;mformat;;ploader;;p">
					<treenode node="format;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f55;210;62;210;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="loader;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f64;210;71;210;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testWhenAResourceHasNoRegisteredLoader;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php;f11;269;5;275;;;;vpos;;v;;r&#xA;Definition&#xA;    testWhenAResourceHasNoRegisteredLoader()&#xA;&#xA;Description&#xA;      expectedException \Symfony\Component\Translation\Exception\RuntimeException;;d4,270;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TypeError;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\error_polyfill.php;f8;38;9;46;;;;vpos;;vError;;cException;;c;;r;;d8,44;;b0,0;;m">
			</treenode>
			<treenode node="UnauthorizedException;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\UnauthorizedException.php;f0;6;1;9;;;;vpos;;vRuntimeException;;c;;r;;d0,7;;b0,0;;m">
			</treenode>
			<treenode node="URL;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\URL.php;f0;7;1;18;;;;vpos;;vFacade;;c;;r&#xA;Definition&#xA;    class URL extends Facade&#xA;&#xA;Description&#xA;      see \Illuminate\Routing\UrlGenerator;;d0,8;;b0,0;;m">
				<treenode node="getFacadeAccessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\URL.php;f21;14;5;17;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getFacadeAccessor()&#xA;&#xA;Description&#xA;     Get the registered name of the component.;;d4,15;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="User;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\app\models\User.php;f0;4;1;11;;;;vpos;;vModel;;c;;r;;d25,4;;b0,0;;m">
				<treenode node="articles;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\app\models\User.php;f8;8;2;10;;;;vpos;;v;;r;;d28,8;;b1,0;;m">
					<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\app\models\User.php;f9;9;14;9;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fillable;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\app\models\Article.php;f11;6;20;6;;D:\OSPanel\domains\localhost\eloquent\app\models\User.php;f11;6;20;6;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\app\models\Article.php;f11;5;17;5;;D:\OSPanel\domains\localhost\eloquent\app\models\User.php;f11;5;17;5;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="Users;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\app\controllers\Users.php;f0;6;1;18;;;;vpos;;v;;r;;d12,6;;b0,0;;m">
				<treenode node="create_user;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\app\controllers\Users.php;f15;7;2;13;;;;vpos;;v;;r;;d44,7;;b1,5;;mname;;p">
					<treenode node="arr;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\app\controllers\Users.php;f2;8;6;8;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\app\controllers\Users.php;f37;7;42;7;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="user;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\app\controllers\Users.php;f2;11;7;11;;;;vposstatic;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="show_users;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\app\controllers\Users.php;f15;14;2;17;;;;vpos;;v;;r;;d38,14;;b1,5;;m">
					<treenode node="users;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\app\controllers\Users.php;f2;15;8;15;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="ValidationException;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\ValidationException.php;f0;7;1;46;;;;vpos;;vRuntimeException;;c;;r;;d0,8;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\ValidationException.php;f11;22;5;25;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __construct(MessageProvider $provider)&#xA;&#xA;Description&#xA;     Create a new validation exception instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Contracts\Support\MessageProvider $provider;;d4,23;;b1,0;;m\Illuminate\Contracts\Support\MessageProvider $provider;;p">
					<treenode node="provider;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\ValidationException.php;f48;22;57;22;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="errors;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\ValidationException.php;f11;32;5;35;;;;vpos;;v;;r&#xA;Definition&#xA;    errors()&#xA;&#xA;Description&#xA;     Get the validation error message provider.;;d4,33;;b1,0;;m">
				</treenode>
				<treenode node="getMessageProvider;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\ValidationException.php;f11;42;5;45;;;;vpos;;v;;r&#xA;Definition&#xA;    getMessageProvider()&#xA;&#xA;Description&#xA;     Get the validation error message provider.;;d4,43;;b1,0;;m">
				</treenode>
				<treenode node="provider;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\ValidationException.php;f14;14;23;14;;;;vpos;;v;;r&#xA;Description&#xA;     The message provider implementation.;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="Validator;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Validator.php;f0;7;1;18;;;;vpos;;vFacade;;c;;r&#xA;Definition&#xA;    class Validator extends Facade&#xA;&#xA;Description&#xA;      see \Illuminate\Validation\Factory;;d0,8;;b0,0;;m">
				<treenode node="getFacadeAccessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Validator.php;f21;14;5;17;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getFacadeAccessor()&#xA;&#xA;Description&#xA;     Get the registered name of the component.;;d4,15;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="View;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\View.php;f0;7;1;18;;;;vpos;;vFacade;;c;;r&#xA;Definition&#xA;    class View extends Facade&#xA;&#xA;Description&#xA;      see \Illuminate\View\Factory;;d0,8;;b0,0;;m">
				<treenode node="getFacadeAccessor;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\View.php;f21;14;5;17;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getFacadeAccessor()&#xA;&#xA;Description&#xA;     Get the registered name of the component.;;d4,15;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="ViewErrorBag;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ViewErrorBag.php;f0;7;1;106;;;;vpos;;vCountable;;c;;r;;d0,8;;b0,0;;m">
				<treenode node="__call;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ViewErrorBag.php;f11;79;5;82;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    __call($method, $parameters)&#xA;&#xA;Description&#xA;     Dynamically call methods on the default bag.&#xA;&#xA;Parameters:&#xA;    string $method&#xA;    array $parameters;;d4,80;;b1,0;;mstring $method;;parray $parameters;;p">
					<treenode node="method;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ViewErrorBag.php;f27;79;34;79;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ViewErrorBag.php;f36;79;47;79;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__get;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ViewErrorBag.php;f11;90;5;93;;;;vpos;;v;;r&#xA;Definition&#xA;    __get($key)&#xA;&#xA;Description&#xA;     Dynamically access a view error bag.&#xA;&#xA;Parameters:&#xA;    string $key;;d4,91;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ViewErrorBag.php;f26;90;30;90;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__set;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ViewErrorBag.php;f11;102;5;105;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    __set($key, $value)&#xA;&#xA;Description&#xA;     Dynamically set a view error bag.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    \Illuminate\Contracts\Support\MessageBag $value;;d4,103;;b1,0;;mstring $key;;p\Illuminate\Contracts\Support\MessageBag $value;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ViewErrorBag.php;f26;102;30;102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ViewErrorBag.php;f32;102;38;102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="count;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ViewErrorBag.php;f11;67;5;70;;;;vpos;;vint;;r&#xA;Definition&#xA;    count()&#xA;&#xA;Description&#xA;     Get the number of messages in the default bag.;;d4,68;;b1,0;;m">
				</treenode>
				<treenode node="getBag;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ViewErrorBag.php;f11;33;5;36;;;;vpos;;v;;r&#xA;Definition&#xA;    getBag($key)&#xA;&#xA;Description&#xA;     Get a MessageBag instance from the bags.&#xA;&#xA;Parameters:&#xA;    string $key;;d4,34;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ViewErrorBag.php;f27;33;31;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getBags;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ViewErrorBag.php;f11;43;5;46;;;;vpos;;varray;;r&#xA;Definition&#xA;    getBags()&#xA;&#xA;Description&#xA;     Get all the bags.;;d4,44;;b1,0;;m">
				</treenode>
				<treenode node="hasBag;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ViewErrorBag.php;f11;22;5;25;;;;vpos;;vbool;;r&#xA;Definition&#xA;    hasBag($key = 'default')&#xA;&#xA;Description&#xA;     Checks if a named MessageBag exists in the bags.&#xA;&#xA;Parameters:&#xA;    string $key;;d4,23;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ViewErrorBag.php;f27;22;31;22;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="put;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ViewErrorBag.php;f11;55;5;60;;;;vpos;;v;;r&#xA;Definition&#xA;    put($key, MessageBagContract $bag)&#xA;&#xA;Description&#xA;     Add a new MessageBag instance to the bags.&#xA;&#xA;Parameters:&#xA;    string $key&#xA;    \Illuminate\Contracts\Support\MessageBag $bag;;d4,56;;b1,0;;mstring $key;;p\Illuminate\Contracts\Support\MessageBag $bag;;p">
					<treenode node="bag;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ViewErrorBag.php;f49;55;53;55;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ViewErrorBag.php;f24;55;28;55;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="bags;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ViewErrorBag.php;f14;14;19;14;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="XliffFileDumper;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\XliffFileDumper.php;f0;21;1;199;;;;vpos;;vFileDumper;;c;;r&#xA;Definition&#xA;    class XliffFileDumper extends FileDumper&#xA;&#xA;Description&#xA;     XliffFileDumper generates xliff files from a message catalogue.;;d0,22;;b0,0;;m">
				<treenode node="dumpXliff1;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\XliffFileDumper.php;f12;57;5;129;;;;vpos;;v;;r;;d4,58;;b3,0;;mdefaultLocale;;pmessages;;pdomain;;poptions;;p">
					<treenode node="defaultLocale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\XliffFileDumper.php;f32;57;46;57;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\XliffFileDumper.php;f76;57;83;57;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\XliffFileDumper.php;f65;57;74;57;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\XliffFileDumper.php;f91;57;99;57;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dumpXliff2;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\XliffFileDumper.php;f12;131;5;187;;;;vpos;;v;;r;;d4,132;;b3,0;;mdefaultLocale;;pmessages;;pdomain;;poptions;;p">
					<treenode node="defaultLocale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\XliffFileDumper.php;f32;131;46;131;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\XliffFileDumper.php;f76;131;83;131;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\XliffFileDumper.php;f65;131;74;131;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\XliffFileDumper.php;f91;131;99;131;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="formatCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\XliffFileDumper.php;f11;26;5;47;;;;vpos;;v;;r&#xA;Definition&#xA;    formatCatalogue(MessageCatalogue $messages, $domain, array $options = array())&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,27;;b1,0;;mmessages;;pdomain;;poptions;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\XliffFileDumper.php;f64;26;71;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\XliffFileDumper.php;f53;26;62;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\XliffFileDumper.php;f79;26;87;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getExtension;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\XliffFileDumper.php;f14;52;5;55;;;;vpos;;v;;r&#xA;Definition&#xA;    getExtension()&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,53;;b2,0;;m">
				</treenode>
				<treenode node="hasMetadataArrayInfo;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\XliffFileDumper.php;f12;195;5;198;;;;vpos;;vbool;;r&#xA;Definition&#xA;    hasMetadataArrayInfo($key, $metadata = null)&#xA;&#xA;Description&#xA;     &#xA;&#xA;Parameters:&#xA;    string $key&#xA;    array|null $metadata;;d4,196;;b3,0;;mstring $key;;parray|null $metadata;;p">
					<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\XliffFileDumper.php;f42;195;46;195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="metadata;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\XliffFileDumper.php;f48;195;57;195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="XliffFileDumperTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\XliffFileDumperTest.php;f0;17;1;114;;;;vpos;;vTestCase;;c;;r;;d0,18;;b0,0;;m">
				<treenode node="testFormatCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\XliffFileDumperTest.php;f11;19;5;36;;;;vpos;;v;;r;;d4,20;;b1,0;;m">
				</treenode>
				<treenode node="testFormatCatalogueWithCustomToolInfo;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\XliffFileDumperTest.php;f11;56;5;72;;;;vpos;;v;;r;;d4,57;;b1,0;;m">
				</treenode>
				<treenode node="testFormatCatalogueWithNotesMetadata;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\XliffFileDumperTest.php;f11;90;5;113;;;;vpos;;v;;r;;d4,91;;b1,0;;m">
				</treenode>
				<treenode node="testFormatCatalogueWithTargetAttributesMetadata;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\XliffFileDumperTest.php;f11;74;5;88;;;;vpos;;v;;r;;d4,75;;b1,0;;m">
				</treenode>
				<treenode node="testFormatCatalogueXliff2;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\XliffFileDumperTest.php;f11;38;5;54;;;;vpos;;v;;r;;d4,39;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="XliffFileLoader;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f0;25;1;313;;;;vpos;;vLoaderInterface;;c;;r&#xA;Definition&#xA;    class XliffFileLoader implements LoaderInterface&#xA;&#xA;Description&#xA;     XliffFileLoader loads translations from XLIFF files.;;d0,26;;b0,0;;m">
				<treenode node="extract;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f12;50;5;68;;;;vpos;;v;;r;;d4,51;;b3,0;;mresource;;pcatalogue;;pdomain;;p">
					<treenode node="catalogue;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f57;50;67;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f69;50;76;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="resource;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f29;50;38;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="extractXliff1;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f12;77;5;115;;;;vpos;;v;;r&#xA;Definition&#xA;    extractXliff1(\DOMDocument $dom, MessageCatalogue $catalogue, string $domain)&#xA;&#xA;Description&#xA;     Extract messages and metadata from DOMDocument into a MessageCatalogue.&#xA;&#xA;Parameters:&#xA;    \DOMDocument $dom - Source to extract messages and metadata&#xA;    MessageCatalogue $catalogue - Catalogue where we'll collect messages and metadata&#xA;    string $domain - The domain;;d4,78;;b3,0;;m\DOMDocument $dom;;pMessageCatalogue $catalogue;;pstring $domain;;p">
					<treenode node="catalogue;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f71;77;81;77;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="dom;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f48;77;52;77;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f90;77;97;77;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="extractXliff2;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f12;117;5;157;;;;vpos;;v;;r;;d4,118;;b3,0;;mdom;;pcatalogue;;pdomain;;p">
					<treenode node="catalogue;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f71;117;81;117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="dom;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f48;117;52;117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f90;117;97;117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fixXmlLocation;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f12;214;73;214;;;;vpos;;v;;r&#xA;Description&#xA;     Internally changes the URI of a dependent xsd to be loaded locally.;;d-1,-1;;b3,0;;mschemaSource;;pxmlUri;;p">
					<treenode node="schemaSource;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f43;214;56;214;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="xmlUri;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f65;214;72;214;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getSchema;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f12;196;5;209;;;;vpos;;v;;r;;d4,197;;b3,0;;mxliffVersion;;p">
					<treenode node="xliffVersion;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f31;196;44;196;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getVersionNumber;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f12;265;56;265;;;;vpos;;v;;r&#xA;Description&#xA;     Gets xliff file version based on the root &quot;version&quot; attribute. Defaults to 1.2 for backwards compatibility.;;d-1,-1;;b3,0;;mdom;;p">
					<treenode node="dom;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f51;265;55;265;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getXmlErrors;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f12;239;55;239;;;;vpos;;v;;r&#xA;Description&#xA;     Returns the XML errors of the internal XML parser.;;d-1,-1;;b3,0;;minternalErrors;;p">
					<treenode node="internalErrors;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f39;239;54;239;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="load;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f11;30;5;48;;;;vpos;;v;;r&#xA;Definition&#xA;    load($resource, $locale, $domain = 'messages')&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,31;;b1,0;;mresource;;plocale;;pdomain;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f45;30;52;30;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f36;30;43;30;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="resource;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f25;30;34;30;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="parseNotesMetadata;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f12;288;103;288;;;;vpos;;v;;r;;d-1,-1;;b3,0;;mnoteElement;;pencoding;;p">
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f86;288;95;288;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="noteElement;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f58;288;70;288;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="utf8ToCharset;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f12;162;76;162;;;;vpos;;v;;r&#xA;Description&#xA;     Convert a UTF8 string to the specified encoding.;;d-1,-1;;b3,0;;mcontent;;pencoding;;p">
					<treenode node="content;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f42;162;50;162;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f59;162;68;162;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="validateSchema;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f12;176;5;194;;;;vpos;;v;;r&#xA;Definition&#xA;    validateSchema(string $file, \DOMDocument $dom, string $schema)&#xA;&#xA;Description&#xA;     Validates and parses the given file into a DOMDocument.;;d4,177;;b3,0;;mfile;;pdom;;pschema;;p">
					<treenode node="dom;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f63;176;67;176;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="file;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f43;176;48;176;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="schema;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f76;176;83;176;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="content;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f39;165;47;165;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="dom;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f17;268;21;268;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="drive;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f8;230;14;230;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f24;164;33;164;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="error;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f40;242;46;242;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="errors;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f8;241;15;241;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="internalErrors;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f35;254;50;254;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="locationstart;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f8;218;22;218;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="namespace;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f12;274;22;274;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="newPath;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f8;216;16;216;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="note;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f12;299;17;299;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="noteAttributes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f12;298;27;298;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="noteElement;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f21;292;33;292;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="notes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f8;290;14;290;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="parts;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f8;217;14;217;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="schemaSource;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f46;233;59;233;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="this;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f39;299;44;299;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="tmpfile;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f12;220;20;220;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="version;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f12;269;20;269;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="xliff;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f56;268;62;268;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="xmlNote;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f33;297;41;297;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="xmlUri;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php;f27;233;34;233;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="XliffFileLoaderTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php;f0;17;1;259;;;;vpos;;vTestCase;;c;;r;;d0,18;;b0,0;;m">
				<treenode node="testDocTypeIsNotAllowed;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php;f11;140;5;144;;;;vpos;;v;;r&#xA;Definition&#xA;    testDocTypeIsNotAllowed()&#xA;&#xA;Description&#xA;      expectedException        \Symfony\Component\Translation\Exception\InvalidResourceException;;d4,141;;b1,0;;m">
				</treenode>
				<treenode node="testEncoding;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php;f11;79;5;87;;;;vpos;;v;;r;;d4,80;;b1,0;;m">
				</treenode>
				<treenode node="testIncompleteResource;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php;f11;71;5;77;;;;vpos;;v;;r;;d4,72;;b1,0;;m">
				</treenode>
				<treenode node="testLoad;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php;f11;19;5;29;;;;vpos;;v;;r;;d4,20;;b1,0;;m">
				</treenode>
				<treenode node="testLoadInvalidResource;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php;f11;101;5;105;;;;vpos;;v;;r&#xA;Definition&#xA;    testLoadInvalidResource()&#xA;&#xA;Description&#xA;      expectedException \Symfony\Component\Translation\Exception\InvalidResourceException;;d4,102;;b1,0;;m">
				</treenode>
				<treenode node="testLoadNonExistingResource;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php;f11;119;5;124;;;;vpos;;v;;r&#xA;Definition&#xA;    testLoadNonExistingResource()&#xA;&#xA;Description&#xA;      expectedException \Symfony\Component\Translation\Exception\NotFoundResourceException;;d4,120;;b1,0;;m">
				</treenode>
				<treenode node="testLoadNotes;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php;f11;161;5;171;;;;vpos;;v;;r;;d4,162;;b1,0;;m">
				</treenode>
				<treenode node="testLoadResourceDoesNotValidate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php;f11;110;5;114;;;;vpos;;v;;r&#xA;Definition&#xA;    testLoadResourceDoesNotValidate()&#xA;&#xA;Description&#xA;      expectedException \Symfony\Component\Translation\Exception\InvalidResourceException;;d4,111;;b1,0;;m">
				</treenode>
				<treenode node="testLoadThrowsAnExceptionIfFileNotLocal;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php;f11;129;5;134;;;;vpos;;v;;r&#xA;Definition&#xA;    testLoadThrowsAnExceptionIfFileNotLocal()&#xA;&#xA;Description&#xA;      expectedException \Symfony\Component\Translation\Exception\InvalidResourceException;;d4,130;;b1,0;;m">
				</treenode>
				<treenode node="testLoadVersion2;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php;f11;173;5;189;;;;vpos;;v;;r;;d4,174;;b1,0;;m">
				</treenode>
				<treenode node="testLoadVersion2WithMultiSegmentUnit;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php;f11;231;5;258;;;;vpos;;v;;r;;d4,232;;b1,0;;m">
				</treenode>
				<treenode node="testLoadVersion2WithNoteMeta;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php;f11;191;5;229;;;;vpos;;v;;r;;d4,192;;b1,0;;m">
				</treenode>
				<treenode node="testLoadWithExternalEntitiesDisabled;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php;f11;49;5;61;;;;vpos;;v;;r;;d4,50;;b1,0;;m">
				</treenode>
				<treenode node="testLoadWithInternalErrorsEnabled;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php;f11;31;5;47;;;;vpos;;v;;r;;d4,32;;b1,0;;m">
				</treenode>
				<treenode node="testLoadWithResname;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php;f11;63;5;69;;;;vpos;;v;;r;;d4,64;;b1,0;;m">
				</treenode>
				<treenode node="testParseEmptyFile;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php;f11;146;5;159;;;;vpos;;v;;r;;d4,147;;b1,0;;m">
				</treenode>
				<treenode node="testTargetAttributesAreStoredCorrectly;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php;f11;89;5;96;;;;vpos;;v;;r;;d4,90;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="XliffLintCommand;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Command\XliffLintCommand.php;f0;26;1;244;;;;vpos;;vCommand;;c;;r&#xA;Definition&#xA;    class XliffLintCommand extends Command&#xA;&#xA;Description&#xA;     Validates XLIFF files syntax and outputs encountered errors.;;d0,27;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Command\XliffLintCommand.php;f11;35;5;41;;;;vpos;;v;;r;;d4,36;;b1,0;;mname;;pdirectoryIteratorProvider;;pisReadableProvider;;p">
					<treenode node="directoryIteratorProvider;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Command\XliffLintCommand.php;f62;35;88;35;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="isReadableProvider;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Command\XliffLintCommand.php;f106;35;125;35;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Command\XliffLintCommand.php;f39;35;44;35;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="configure;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Command\XliffLintCommand.php;f14;46;5;72;;;;vpos;;v;;r&#xA;Definition&#xA;    configure()&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,47;;b2,0;;m">
				</treenode>
				<treenode node="display;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Command\XliffLintCommand.php;f12;130;5;140;;;;vpos;;v;;r;;d4,131;;b3,0;;mio;;pfiles;;p">
					<treenode node="files;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Command\XliffLintCommand.php;f53;130;59;130;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="io;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Command\XliffLintCommand.php;f42;130;45;130;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="displayJson;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Command\XliffLintCommand.php;f12;169;5;183;;;;vpos;;v;;r;;d4,170;;b3,0;;mio;;pfilesInfo;;p">
					<treenode node="filesInfo;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Command\XliffLintCommand.php;f57;169;67;169;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="io;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Command\XliffLintCommand.php;f46;169;49;169;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="displayTxt;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Command\XliffLintCommand.php;f12;142;5;167;;;;vpos;;v;;r;;d4,143;;b3,0;;mio;;pfilesInfo;;p">
					<treenode node="filesInfo;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Command\XliffLintCommand.php;f56;142;66;142;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="io;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Command\XliffLintCommand.php;f45;142;48;142;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="execute;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Command\XliffLintCommand.php;f14;74;5;99;;;;vpos;;v;;r;;d4,75;;b2,0;;minput;;poutput;;p">
					<treenode node="input;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Command\XliffLintCommand.php;f46;74;52;74;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="output;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Command\XliffLintCommand.php;f70;74;77;74;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getDirectoryIterator;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Command\XliffLintCommand.php;f12;216;5;230;;;;vpos;;v;;r;;d4,217;;b3,0;;mdirectory;;p">
					<treenode node="directory;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Command\XliffLintCommand.php;f42;216;52;216;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getFiles;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Command\XliffLintCommand.php;f12;185;5;200;;;;vpos;;v;;r;;d4,186;;b3,0;;mfileOrDirectory;;p">
					<treenode node="fileOrDirectory;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Command\XliffLintCommand.php;f30;185;46;185;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getStdin;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Command\XliffLintCommand.php;f12;202;5;214;;;;vpos;;v;;r;;d4,203;;b3,0;;m">
				</treenode>
				<treenode node="isReadable;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Command\XliffLintCommand.php;f12;232;5;243;;;;vpos;;v;;r;;d4,233;;b3,0;;mfileOrDirectory;;p">
					<treenode node="fileOrDirectory;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Command\XliffLintCommand.php;f32;232;48;232;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="validate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Command\XliffLintCommand.php;f12;101;5;128;;;;vpos;;v;;r;;d4,102;;b3,0;;mcontent;;pfile;;p">
					<treenode node="content;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Command\XliffLintCommand.php;f30;101;38;101;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="file;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Command\XliffLintCommand.php;f40;101;45;101;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="defaultName;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Command\XliffLintCommand.php;f21;28;33;28;;;;vpos;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="directoryIteratorProvider;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Command\XliffLintCommand.php;f12;32;38;32;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="displayCorrectFiles;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Command\XliffLintCommand.php;f12;31;32;31;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="format;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Command\XliffLintCommand.php;f12;30;19;30;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="isReadableProvider;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Command\XliffLintCommand.php;f12;33;31;33;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
			</treenode>
			<treenode node="YamlFileDumper;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\YamlFileDumper.php;f0;23;1;61;;;;vpos;;vFileDumper;;c;;r&#xA;Definition&#xA;    class YamlFileDumper extends FileDumper&#xA;&#xA;Description&#xA;     YamlFileDumper generates yaml files from a message catalogue.;;d0,24;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\YamlFileDumper.php;f11;27;5;30;;;;vpos;;v;;r;;d4,28;;b1,0;;mextension;;p">
					<treenode node="extension;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\YamlFileDumper.php;f39;27;49;27;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="formatCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\YamlFileDumper.php;f11;35;5;52;;;;vpos;;v;;r&#xA;Definition&#xA;    formatCatalogue(MessageCatalogue $messages, $domain, array $options = array())&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,36;;b1,0;;mmessages;;pdomain;;poptions;;p">
					<treenode node="domain;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\YamlFileDumper.php;f64;35;71;35;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\YamlFileDumper.php;f53;35;62;35;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\YamlFileDumper.php;f79;35;87;35;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getExtension;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\YamlFileDumper.php;f14;57;5;60;;;;vpos;;v;;r&#xA;Definition&#xA;    getExtension()&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,58;;b2,0;;m">
				</treenode>
				<treenode node="extension;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\YamlFileDumper.php;f12;25;22;25;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
			</treenode>
			<treenode node="YamlFileDumperTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\YamlFileDumperTest.php;f0;17;1;46;;;;vpos;;vTestCase;;c;;r;;d0,18;;b0,0;;m">
				<treenode node="testLinearFormatCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\YamlFileDumperTest.php;f11;33;5;45;;;;vpos;;v;;r;;d4,34;;b1,0;;m">
				</treenode>
				<treenode node="testTreeFormatCatalogue;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\YamlFileDumperTest.php;f11;19;5;31;;;;vpos;;v;;r;;d4,20;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="YamlFileLoader;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\YamlFileLoader.php;f0;23;1;48;;;;vpos;;vFileLoader;;c;;r&#xA;Definition&#xA;    class YamlFileLoader extends FileLoader&#xA;&#xA;Description&#xA;     YamlFileLoader loads translations from Yaml files.;;d0,24;;b0,0;;m">
				<treenode node="loadResource;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\YamlFileLoader.php;f14;30;5;47;;;;vpos;;v;;r&#xA;Definition&#xA;    loadResource($resource)&#xA;&#xA;Description&#xA;     { inheritdoc};;d4,31;;b2,0;;mresource;;p">
					<treenode node="resource;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\YamlFileLoader.php;f36;30;45;30;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="yamlParser;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\YamlFileLoader.php;f12;25;23;25;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
			</treenode>
			<treenode node="YamlFileLoaderTest;PHP:Class Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\YamlFileLoaderTest.php;f0;17;1;70;;;;vpos;;vTestCase;;c;;r;;d0,18;;b0,0;;m">
				<treenode node="testLoad;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\YamlFileLoaderTest.php;f11;19;5;28;;;;vpos;;v;;r;;d4,20;;b1,0;;m">
				</treenode>
				<treenode node="testLoadDoesNothingIfEmpty;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\YamlFileLoaderTest.php;f11;30;5;39;;;;vpos;;v;;r;;d4,31;;b1,0;;m">
				</treenode>
				<treenode node="testLoadNonExistingResource;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\YamlFileLoaderTest.php;f11;44;5;49;;;;vpos;;v;;r&#xA;Definition&#xA;    testLoadNonExistingResource()&#xA;&#xA;Description&#xA;      expectedException \Symfony\Component\Translation\Exception\NotFoundResourceException;;d4,45;;b1,0;;m">
				</treenode>
				<treenode node="testLoadThrowsAnExceptionIfFileNotLocal;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\YamlFileLoaderTest.php;f11;54;5;59;;;;vpos;;v;;r&#xA;Definition&#xA;    testLoadThrowsAnExceptionIfFileNotLocal()&#xA;&#xA;Description&#xA;      expectedException \Symfony\Component\Translation\Exception\InvalidResourceException;;d4,55;;b1,0;;m">
				</treenode>
				<treenode node="testLoadThrowsAnExceptionIfNotAnArray;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\YamlFileLoaderTest.php;f11;64;5;69;;;;vpos;;v;;r&#xA;Definition&#xA;    testLoadThrowsAnExceptionIfNotAnArray()&#xA;&#xA;Description&#xA;      expectedException \Symfony\Component\Translation\Exception\InvalidResourceException;;d4,65;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="__call;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Traits\Macroable.php;f11;70;5;81;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    __call($method, $parameters)&#xA;&#xA;Description&#xA;     Dynamically handle calls to the class.&#xA;&#xA;Parameters:&#xA;    string $method&#xA;    array $parameters;;d4,71;;b1,0;;mstring $method;;parray $parameters;;p">
				<treenode node="method;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Traits\Macroable.php;f27;70;34;70;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Traits\Macroable.php;f36;70;47;70;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="__callStatic;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Traits\Macroable.php;f18;48;5;59;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    __callStatic($method, $parameters)&#xA;&#xA;Description&#xA;     Dynamically handle calls to the class.&#xA;&#xA;Parameters:&#xA;    string $method&#xA;    array $parameters;;d4,49;;b1,5;;mstring $method;;parray $parameters;;p">
				<treenode node="method;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Traits\Macroable.php;f40;48;47;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="parameters;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Traits\Macroable.php;f49;48;60;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Translator.php;f11;38;5;42;;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;33;5;47;;;;vpos;;v;;r;;d4,39;;b1,0;;mlocale;;pformatter;;pcacheDir;;pdebug;;p">
				<treenode node="cacheDir;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Translator.php;f108;38;117;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="debug;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Translator.php;f126;38;132;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f38;33;47;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="formatter;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Translator.php;f89;38;99;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Translator.php;f32;38;39;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f32;33;36;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="__toString;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;72;5;75;;;;vpos;;vstring;;r&#xA;Definition&#xA;    __toString()&#xA;&#xA;Description&#xA;     Returns the value in $str.&#xA;&#xA;Return:&#xA;   The current value of the $str property;;d4,73;;b1,0;;m">
			</treenode>
			<treenode node="append_config;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;15;5;28;;;;vpos;;varray;;r&#xA;Definition&#xA;    append_config(array $array)&#xA;&#xA;Description&#xA;     Assign high numeric IDs to a config item to force appending.&#xA;&#xA;Parameters:&#xA;    array $array;;d4,16;;b0,0;;marray $array;;p">
				<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f33;15;39;15;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="applyPadding;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f12;663;5;683;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    applyPadding($left = 0, $right = 0, $padStr = ' ')&#xA;&#xA;Description&#xA;     Adds the specified amount of left and right padding to the given string. The default character used is a space.&#xA;&#xA;Parameters:&#xA;    int $left - Length of left padding&#xA;    int $right - Length of right padding&#xA;    string $padStr - String used to pad&#xA;&#xA;Return:&#xA;   String with padding applied;;d4,664;;b3,0;;mint $left;;pint $right;;pstring $padStr;;p">
				<treenode node="left;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f34;663;39;663;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="padStr;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f57;663;64;663;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="right;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f45;663;51;663;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="array_add;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;40;5;43;;;;vpos;;varray;;r&#xA;Definition&#xA;    array_add($array, $key, $value)&#xA;&#xA;Description&#xA;     Add an element to an array using &quot;dot&quot; notation if it doesn't exist.&#xA;&#xA;Parameters:&#xA;    array $array&#xA;    string $key&#xA;    mixed $value;;d4,41;;b0,0;;marray $array;;pstring $key;;pmixed $value;;p">
				<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f23;40;29;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f31;40;35;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f37;40;43;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="array_build;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;54;5;57;;;;vpos;;varray;;r&#xA;Definition&#xA;    array_build($array, callable $callback)&#xA;&#xA;Description&#xA;     Build a new array using a callback.&#xA;&#xA;Parameters:&#xA;    array $array&#xA;    callable $callback;;d4,55;;b0,0;;marray $array;;pcallable $callback;;p">
				<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f25;54;31;54;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f42;54;51;54;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="array_collapse;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;67;5;70;;;;vpos;;varray;;r&#xA;Definition&#xA;    array_collapse($array)&#xA;&#xA;Description&#xA;     Collapse an array of arrays into a single array.&#xA;&#xA;Parameters:&#xA;    \ArrayAccess|array $array;;d4,68;;b0,0;;m\ArrayAccess|array $array;;p">
				<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f28;67;34;67;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="array_divide;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;80;5;83;;;;vpos;;varray;;r&#xA;Definition&#xA;    array_divide($array)&#xA;&#xA;Description&#xA;     Divide an array into two arrays. One with keys and the other with values.&#xA;&#xA;Parameters:&#xA;    array $array;;d4,81;;b0,0;;marray $array;;p">
				<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f26;80;32;80;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="array_dot;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;94;5;97;;;;vpos;;varray;;r&#xA;Definition&#xA;    array_dot($array, $prepend = '')&#xA;&#xA;Description&#xA;     Flatten a multi-dimensional associative array with dots.&#xA;&#xA;Parameters:&#xA;    array $array&#xA;    string $prepend;;d4,95;;b0,0;;marray $array;;pstring $prepend;;p">
				<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f23;94;29;94;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="prepend;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f31;94;39;94;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="array_except;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;108;5;111;;;;vpos;;varray;;r&#xA;Definition&#xA;    array_except($array, $keys)&#xA;&#xA;Description&#xA;     Get all of the given array except for a specified array of items.&#xA;&#xA;Parameters:&#xA;    array $array&#xA;    array|string $keys;;d4,109;;b0,0;;marray $array;;parray|string $keys;;p">
				<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f26;108;32;108;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="keys;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f34;108;39;108;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="array_fetch;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;124;5;127;;;;vpos;;varray;;r&#xA;Definition&#xA;    array_fetch($array, $key)&#xA;&#xA;Description&#xA;     Fetch a flattened array of a nested array element.&#xA;&#xA;Parameters:&#xA;    array $array&#xA;    string $key;;d4,125;;b0,0;;marray $array;;pstring $key;;p">
				<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f25;124;31;124;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f33;124;37;124;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="array_first;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;139;5;142;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    array_first($array, callable $callback, $default = null)&#xA;&#xA;Description&#xA;     Return the first element in an array passing a given truth test.&#xA;&#xA;Parameters:&#xA;    array $array&#xA;    callable $callback&#xA;    mixed $default;;d4,140;;b0,0;;marray $array;;pcallable $callback;;pmixed $default;;p">
				<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f25;139;31;139;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f42;139;51;139;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="default;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f53;139;61;139;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="array_flatten;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;152;5;155;;;;vpos;;varray;;r&#xA;Definition&#xA;    array_flatten($array)&#xA;&#xA;Description&#xA;     Flatten a multi-dimensional array into a single level.&#xA;&#xA;Parameters:&#xA;    array $array;;d4,153;;b0,0;;marray $array;;p">
				<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f27;152;33;152;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="array_forget;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;166;5;169;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    array_forget(&amp;$array, $keys)&#xA;&#xA;Description&#xA;     Remove one or many array items from a given array using &quot;dot&quot; notation.&#xA;&#xA;Parameters:&#xA;    array $array&#xA;    array|string $keys;;d4,167;;b0,0;;marray $array;;parray|string $keys;;p">
				<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f27;166;33;166;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="keys;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f35;166;40;166;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="array_get;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;181;5;184;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    array_get($array, $key, $default = null)&#xA;&#xA;Description&#xA;     Get an item from an array using &quot;dot&quot; notation.&#xA;&#xA;Parameters:&#xA;    array $array&#xA;    string $key&#xA;    mixed $default;;d4,182;;b0,0;;marray $array;;pstring $key;;pmixed $default;;p">
				<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f23;181;29;181;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="default;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f37;181;45;181;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f31;181;35;181;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="array_has;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;195;5;198;;;;vpos;;vbool;;r&#xA;Definition&#xA;    array_has($array, $key)&#xA;&#xA;Description&#xA;     Check if an item exists in an array using &quot;dot&quot; notation.&#xA;&#xA;Parameters:&#xA;    array $array&#xA;    string $key;;d4,196;;b0,0;;marray $array;;pstring $key;;p">
				<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f23;195;29;195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f31;195;35;195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="array_last;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;210;5;213;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    array_last($array, $callback, $default = null)&#xA;&#xA;Description&#xA;     Return the last element in an array passing a given truth test.&#xA;&#xA;Parameters:&#xA;    array $array&#xA;    callable $callback&#xA;    mixed $default;;d4,211;;b0,0;;marray $array;;pcallable $callback;;pmixed $default;;p">
				<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f24;210;30;210;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f32;210;41;210;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="default;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f43;210;51;210;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="array_only;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;224;5;227;;;;vpos;;varray;;r&#xA;Definition&#xA;    array_only($array, $keys)&#xA;&#xA;Description&#xA;     Get a subset of the items from the given array.&#xA;&#xA;Parameters:&#xA;    array $array&#xA;    array|string $keys;;d4,225;;b0,0;;marray $array;;parray|string $keys;;p">
				<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f24;224;30;224;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="keys;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f32;224;37;224;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="array_pluck;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;239;5;242;;;;vpos;;varray;;r&#xA;Definition&#xA;    array_pluck($array, $value, $key = null)&#xA;&#xA;Description&#xA;     Pluck an array of values from an array.&#xA;&#xA;Parameters:&#xA;    array $array&#xA;    string|array $value&#xA;    string|array|null $key;;d4,240;;b0,0;;marray $array;;pstring|array $value;;pstring|array|null $key;;p">
				<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f25;239;31;239;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f41;239;45;239;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f33;239;39;239;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="array_prepend;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;254;5;257;;;;vpos;;varray;;r&#xA;Definition&#xA;    array_prepend($array, $value, $key = null)&#xA;&#xA;Description&#xA;     Push an item onto the beginning of an array.&#xA;&#xA;Parameters:&#xA;    array $array&#xA;    mixed $value&#xA;    mixed $key;;d4,255;;b0,0;;marray $array;;pmixed $value;;pmixed $key;;p">
				<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f27;254;33;254;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f43;254;47;254;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f35;254;41;254;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="array_pull;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;269;5;272;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    array_pull(&amp;$array, $key, $default = null)&#xA;&#xA;Description&#xA;     Get a value from the array, and remove it.&#xA;&#xA;Parameters:&#xA;    array $array&#xA;    string $key&#xA;    mixed $default;;d4,270;;b0,0;;marray $array;;pstring $key;;pmixed $default;;p">
				<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f25;269;31;269;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="default;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f39;269;47;269;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f33;269;37;269;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="array_set;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;286;5;289;;;;vpos;;varray;;r&#xA;Definition&#xA;    array_set(&amp;$array, $key, $value)&#xA;&#xA;Description&#xA;     Set an array item to a given value using &quot;dot&quot; notation.&#xA;&#xA;Parameters:&#xA;    array $array&#xA;    string $key&#xA;    mixed $value;;d4,287;;b0,0;;marray $array;;pstring $key;;pmixed $value;;p">
				<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f24;286;30;286;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f32;286;36;286;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f38;286;44;286;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="array_sort;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;300;5;303;;;;vpos;;varray;;r&#xA;Definition&#xA;    array_sort($array, callable $callback)&#xA;&#xA;Description&#xA;     Sort the array using the given callback.&#xA;&#xA;Parameters:&#xA;    array $array&#xA;    callable $callback;;d4,301;;b0,0;;marray $array;;pcallable $callback;;p">
				<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f24;300;30;300;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f41;300;50;300;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="array_sort_recursive;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;313;5;316;;;;vpos;;varray;;r&#xA;Definition&#xA;    array_sort_recursive($array)&#xA;&#xA;Description&#xA;     Recursively sort an array by keys and values.&#xA;&#xA;Parameters:&#xA;    array $array;;d4,314;;b0,0;;marray $array;;p">
				<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f34;313;40;313;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="array_where;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;327;5;330;;;;vpos;;varray;;r&#xA;Definition&#xA;    array_where($array, callable $callback)&#xA;&#xA;Description&#xA;     Filter the array using the given callback.&#xA;&#xA;Parameters:&#xA;    array $array&#xA;    callable $callback;;d4,328;;b0,0;;marray $array;;pcallable $callback;;p">
				<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f25;327;31;327;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f42;327;51;327;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="at;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;1235;5;1238;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    at($index)&#xA;&#xA;Description&#xA;     Returns the character at $index, with indexes starting at 0.&#xA;&#xA;Parameters:&#xA;    int $index - Position of the character&#xA;&#xA;Return:&#xA;   The character at $index;;d4,1236;;b1,0;;mint $index;;p">
				<treenode node="index;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f23;1235;29;1235;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="bootSoftDeletes;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletes.php;f18;18;5;21;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    bootSoftDeletes()&#xA;&#xA;Description&#xA;     Boot the soft deleting trait for a model.;;d4,19;;b1,5;;m">
			</treenode>
			<treenode node="camel_case;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;340;5;343;;;;vpos;;vstring;;r&#xA;Definition&#xA;    camel_case($value)&#xA;&#xA;Description&#xA;     Convert a value to camel case.&#xA;&#xA;Parameters:&#xA;    string $value;;d4,341;;b0,0;;mstring $value;;p">
				<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f24;340;30;340;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="camelize;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;234;5;256;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    camelize()&#xA;&#xA;Description&#xA;     Returns a camelCase version of the string. Trims surrounding spaces, capitalizes letters following digits, spaces, dashes and underscores, and removes spaces, dashes, as well as underscores.&#xA;&#xA;Return:&#xA;   Object with $str in camelCase;;d4,235;;b1,0;;m">
			</treenode>
			<treenode node="chars;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;185;5;193;;;;vpos;;varray;;r&#xA;Definition&#xA;    chars()&#xA;&#xA;Description&#xA;     Returns an array consisting of the characters in the string.&#xA;&#xA;Return:&#xA;   An array of string chars;;d4,186;;b1,0;;m">
			</treenode>
			<treenode node="charsArray;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f14;451;5;579;;;;vpos;;varray;;r&#xA;Definition&#xA;    charsArray()&#xA;&#xA;Description&#xA;     Returns the replacements for the toAscii() method.&#xA;&#xA;Return:&#xA;   An array of replacements;;d4,452;;b2,0;;m">
			</treenode>
			<treenode node="class_basename;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;353;5;358;;;;vpos;;vstring;;r&#xA;Definition&#xA;    class_basename($class)&#xA;&#xA;Description&#xA;     Get the class &quot;basename&quot; of the given object / class.&#xA;&#xA;Parameters:&#xA;    string|object $class;;d4,354;;b0,0;;mstring|object $class;;p">
				<treenode node="class;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f28;353;34;353;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="class_uses_recursive;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;368;5;377;;;;vpos;;varray;;r&#xA;Definition&#xA;    class_uses_recursive($class)&#xA;&#xA;Description&#xA;     Returns all traits used by a class, its subclasses and trait of their traits.&#xA;&#xA;Parameters:&#xA;    string $class;;d4,369;;b0,0;;mstring $class;;p">
				<treenode node="class;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f34;368;40;368;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="collapseWhitespace;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;417;5;420;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    collapseWhitespace()&#xA;&#xA;Description&#xA;     Trims the string and replaces consecutive whitespace characters with a single space. This includes tabs and newline characters, as well as multibyte whitespace such as the thin space and ideographic space.&#xA;&#xA;Return:&#xA;   Object with a trimmed $str and condensed whitespace;;d4,418;;b1,0;;m">
			</treenode>
			<treenode node="collect;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;387;5;390;;;;vpos;;v;;r&#xA;Definition&#xA;    collect($value = null)&#xA;&#xA;Description&#xA;     Create a collection from the given value.&#xA;&#xA;Parameters:&#xA;    mixed $value;;d4,388;;b0,0;;mmixed $value;;p">
				<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f21;387;27;387;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="composerRequire3b10a079ec8d2bc977567e54cd3f0130;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\autoload_real.php;f0;62;1;69;;;;vpos;;v;;r;;d0,63;;b0,0;;mfileIdentifier;;pfile;;p">
				<treenode node="file;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\autoload_real.php;f74;62;79;62;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="fileIdentifier;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\autoload_real.php;f57;62;72;62;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="contains;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;833;5;842;;;;vpos;;vbool;;r&#xA;Definition&#xA;    contains($needle, $caseSensitive = true)&#xA;&#xA;Description&#xA;     Returns true if the string contains $needle, false otherwise. By default the comparison is case-sensitive, but can be made insensitive by setting $caseSensitive to false.&#xA;&#xA;Parameters:&#xA;    string $needle - Substring to look for&#xA;    bool $caseSensitive - Whether or not to enforce case-sensitivity&#xA;&#xA;Return:&#xA;   Whether or not $str contains $needle;;d4,834;;b1,0;;mstring $needle;;pbool $caseSensitive;;p">
				<treenode node="caseSensitive;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f38;833;52;833;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="needle;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f29;833;36;833;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="containsAll;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;877;5;890;;;;vpos;;vbool;;r&#xA;Definition&#xA;    containsAll($needles, $caseSensitive = true)&#xA;&#xA;Description&#xA;     Returns true if the string contains all $needles, false otherwise. By default the comparison is case-sensitive, but can be made insensitive by setting $caseSensitive to false.&#xA;&#xA;Parameters:&#xA;    array $needles - Substrings to look for&#xA;    bool $caseSensitive - Whether or not to enforce case-sensitivity&#xA;&#xA;Return:&#xA;   Whether or not $str contains $needle;;d4,878;;b1,0;;marray $needles;;pbool $caseSensitive;;p">
				<treenode node="caseSensitive;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f42;877;56;877;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="needles;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f32;877;40;877;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="containsAny;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;853;5;866;;;;vpos;;vbool;;r&#xA;Definition&#xA;    containsAny($needles, $caseSensitive = true)&#xA;&#xA;Description&#xA;     Returns true if the string contains any $needles, false otherwise. By default the comparison is case-sensitive, but can be made insensitive by setting $caseSensitive to false.&#xA;&#xA;Parameters:&#xA;    array $needles - Substrings to look for&#xA;    bool $caseSensitive - Whether or not to enforce case-sensitivity&#xA;&#xA;Return:&#xA;   Whether or not $str contains $needle;;d4,854;;b1,0;;marray $needles;;pbool $caseSensitive;;p">
				<treenode node="caseSensitive;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f42;853;56;853;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="needles;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f32;853;40;853;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="count;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;92;5;95;;;;vpos;;vint;;r&#xA;Definition&#xA;    count()&#xA;&#xA;Description&#xA;     Returns the length of the string, implementing the countable interface.&#xA;&#xA;Return:&#xA;   The number of characters in the string, given the encoding;;d4,93;;b1,0;;m">
			</treenode>
			<treenode node="countSubstr;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;1486;5;1496;;;;vpos;;vint;;r&#xA;Definition&#xA;    countSubstr($substring, $caseSensitive = true)&#xA;&#xA;Description&#xA;     Returns the number of occurrences of $substring in the given string. By default, the comparison is case-sensitive, but can be made insensitive by setting $caseSensitive to false.&#xA;&#xA;Parameters:&#xA;    string $substring - The substring to search for&#xA;    bool $caseSensitive - Whether or not to enforce case-sensitivity&#xA;&#xA;Return:&#xA;   The number of $substring occurrences;;d4,1487;;b1,0;;mstring $substring;;pbool $caseSensitive;;p">
				<treenode node="caseSensitive;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f44;1486;58;1486;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f32;1486;42;1486;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="create;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f18;62;5;65;;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Create.php;f4;14;5;17;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    create($str, $encoding = null)&#xA;&#xA;Description&#xA;     Creates a Stringy object and assigns both str and encoding properties the supplied values. $str is cast to a string prior to assignment, and if $encoding is not specified, it defaults to mb_internal_encoding(). It then returns the initialized object. Throws an InvalidArgumentException if the first argument is an array or object without a __toString method.&#xA;&#xA;Parameters:&#xA;    mixed $str - Value to modify, after being cast to string&#xA;    string $encoding - The character encoding&#xA;&#xA;Return:&#xA;   A Stringy object;;d4,63;;b1,5;;mmixed $str;;pstring $encoding;;p">
				<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f40;62;49;62;;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Create.php;f26;14;35;14;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f34;62;38;62;;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Create.php;f20;14;24;14;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="dasherize;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;277;5;280;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    dasherize()&#xA;&#xA;Description&#xA;     Returns a lowercase and trimmed string separated by dashes. Dashes are inserted before uppercase characters (with the exception of the first character of the string), and in place of spaces as well as underscores.&#xA;&#xA;Return:&#xA;   Object with a dasherized $str;;d4,278;;b1,0;;m">
			</treenode>
			<treenode node="data_get;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;402;5;435;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    data_get($target, $key, $default = null)&#xA;&#xA;Description&#xA;     Get an item from an array or object using &quot;dot&quot; notation.&#xA;&#xA;Parameters:&#xA;    mixed $target&#xA;    string|array $key&#xA;    mixed $default;;d4,403;;b0,0;;mmixed $target;;pstring|array $key;;pmixed $default;;p">
				<treenode node="default;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f37;402;45;402;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f31;402;35;402;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="target;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f22;402;29;402;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="dd;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;445;5;452;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    dd()&#xA;&#xA;Description&#xA;     Dump the passed variables and end the script.&#xA;&#xA;Parameters:&#xA;    mixed;;d4,446;;b0,0;;m">
			</treenode>
			<treenode node="delimit;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;304;5;317;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    delimit($delimiter)&#xA;&#xA;Description&#xA;     Returns a lowercase and trimmed string separated by the given delimiter. Delimiters are inserted before uppercase characters (with the exception of the first character of the string), and in place of spaces, dashes, and underscores. Alpha delimiters are not converted to lowercase.&#xA;&#xA;Parameters:&#xA;    string $delimiter - Sequence used to separate parts of the string&#xA;&#xA;Return:&#xA;   Object with a delimited $str;;d4,305;;b1,0;;mstring $delimiter;;p">
				<treenode node="delimiter;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f28;304;38;304;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="e;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;462;5;469;;;;vpos;;vstring;;r&#xA;Definition&#xA;    e($value)&#xA;&#xA;Description&#xA;     Escape HTML entities in a string.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Contracts\Support\Htmlable|string $value;;d4,463;;b0,0;;m\Illuminate\Contracts\Support\Htmlable|string $value;;p">
				<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f15;462;21;462;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="ends_with;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;480;5;483;;;;vpos;;vbool;;r&#xA;Definition&#xA;    ends_with($haystack, $needles)&#xA;&#xA;Description&#xA;     Determine if a given string ends with a given substring.&#xA;&#xA;Parameters:&#xA;    string $haystack&#xA;    string|array $needles;;d4,481;;b0,0;;mstring $haystack;;pstring|array $needles;;p">
				<treenode node="haystack;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f23;480;32;480;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="needles;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f34;480;42;480;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="endsWith;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;717;5;731;;;;vpos;;vbool;;r&#xA;Definition&#xA;    endsWith($substring, $caseSensitive = true)&#xA;&#xA;Description&#xA;     Returns true if the string ends with $substring, false otherwise. By default, the comparison is case-sensitive, but can be made insensitive by setting $caseSensitive to false.&#xA;&#xA;Parameters:&#xA;    string $substring - The substring to look for&#xA;    bool $caseSensitive - Whether or not to enforce case-sensitivity&#xA;&#xA;Return:&#xA;   Whether or not $str ends with $substring;;d4,718;;b1,0;;mstring $substring;;pbool $caseSensitive;;p">
				<treenode node="caseSensitive;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f41;717;55;717;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f29;717;39;717;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="ensureLeft;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;1285;5;1294;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    ensureLeft($substring)&#xA;&#xA;Description&#xA;     Ensures that the string begins with $substring. If it doesn't, it's prepended.&#xA;&#xA;Parameters:&#xA;    string $substring - The substring to add if not present&#xA;&#xA;Return:&#xA;   Object with its $str prefixed by the $substring;;d4,1286;;b1,0;;mstring $substring;;p">
				<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f31;1285;41;1285;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="ensureRight;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;1303;5;1312;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    ensureRight($substring)&#xA;&#xA;Description&#xA;     Ensures that the string begins with $substring. If it doesn't, it's appended.&#xA;&#xA;Parameters:&#xA;    string $substring - The substring to add if not present&#xA;&#xA;Return:&#xA;   Object with its $str suffixed by the $substring;;d4,1304;;b1,0;;mstring $substring;;p">
				<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f32;1303;42;1303;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="first;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;1246;5;1257;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    first($n)&#xA;&#xA;Description&#xA;     Returns the first $n characters of the string.&#xA;&#xA;Parameters:&#xA;    int $n - Number of characters to retrieve from the start&#xA;&#xA;Return:&#xA;   Object with its $str being the first $n chars;;d4,1247;;b1,0;;mint $n;;p">
				<treenode node="n;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f26;1246;28;1246;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="forceDelete;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletes.php;f11;28;5;35;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    forceDelete()&#xA;&#xA;Description&#xA;     Force a hard delete on a soft deleted model.;;d4,29;;b1,0;;m">
			</treenode>
			<treenode node="get;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Translator.php;f18;29;5;36;;;;vpos;;vstatic;;r&#xA;Definition&#xA;    get($locale = null)&#xA;&#xA;Description&#xA;     Return a singleton instance of Translator.&#xA;&#xA;Parameters:&#xA;    string|null $locale - optional initial locale (&quot;en&quot; - english by default);;d4,30;;b1,5;;mstring|null $locale;;p">
				<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Translator.php;f31;29;38;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="getContainer;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Traits\CapsuleManagerTrait.php;f11;53;5;56;;;;vpos;;v;;r&#xA;Definition&#xA;    getContainer()&#xA;&#xA;Description&#xA;     Get the IoC container instance.;;d4,54;;b1,0;;m">
			</treenode>
			<treenode node="getDeletedAtColumn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletes.php;f11;154;5;157;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getDeletedAtColumn()&#xA;&#xA;Description&#xA;     Get the name of the &quot;deleted at&quot; column.;;d4,155;;b1,0;;m">
			</treenode>
			<treenode node="getEncoding;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;82;5;85;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getEncoding()&#xA;&#xA;Description&#xA;     Returns the encoding used by the Stringy object.&#xA;&#xA;Return:&#xA;   The current value of the $encoding property;;d4,83;;b1,0;;m">
			</treenode>
			<treenode node="getIterator;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;105;5;108;;;;vpos;;v;;r&#xA;Definition&#xA;    getIterator()&#xA;&#xA;Description&#xA;     Returns a new ArrayIterator, thus implementing the IteratorAggregate interface. The ArrayIterator's constructor is passed an array of chars in the multibyte string. This enables the use of foreach with instances of Stringy\Stringy.;;d4,106;;b1,0;;m">
			</treenode>
			<treenode node="getMessages;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Translator.php;f11;115;5;118;;;;vpos;;varray;;r&#xA;Definition&#xA;    getMessages($locale = null)&#xA;&#xA;Description&#xA;     Get messages of a locale, if none given, return all the languages.&#xA;&#xA;Parameters:&#xA;    string|null $locale;;d4,116;;b1,0;;mstring|null $locale;;p">
				<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Translator.php;f32;115;39;115;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="getQualifiedDeletedAtColumn;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletes.php;f11;164;5;167;;;;vpos;;vstring;;r&#xA;Definition&#xA;    getQualifiedDeletedAtColumn()&#xA;&#xA;Description&#xA;     Get the fully qualified &quot;deleted at&quot; column.;;d4,165;;b1,0;;m">
			</treenode>
			<treenode node="hasLowerCase;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;1373;5;1376;;;;vpos;;vbool;;r&#xA;Definition&#xA;    hasLowerCase()&#xA;&#xA;Description&#xA;     Returns true if the string contains a lower case char, false otherwise.&#xA;&#xA;Return:&#xA;   Whether or not the string contains a lower case character;;d4,1374;;b1,0;;m">
			</treenode>
			<treenode node="hasMacro;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Traits\Macroable.php;f18;34;5;37;;;;vpos;;vbool;;r&#xA;Definition&#xA;    hasMacro($name)&#xA;&#xA;Description&#xA;     Checks if macro is registered.&#xA;&#xA;Parameters:&#xA;    string $name;;d4,35;;b1,5;;mstring $name;;p">
				<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Traits\Macroable.php;f36;34;41;34;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="hasUpperCase;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;1384;5;1387;;;;vpos;;vbool;;r&#xA;Definition&#xA;    hasUpperCase()&#xA;&#xA;Description&#xA;     Returns true if the string contains an upper case char, false otherwise.&#xA;&#xA;Return:&#xA;   Whether or not the string contains an upper case character;;d4,1385;;b1,0;;m">
			</treenode>
			<treenode node="head;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;493;5;496;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    head($array)&#xA;&#xA;Description&#xA;     Get the first element of an array. Useful for method chaining.&#xA;&#xA;Parameters:&#xA;    array $array;;d4,494;;b0,0;;marray $array;;p">
				<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f18;493;24;493;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="htmlDecode;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;1551;5;1556;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    htmlDecode($flags = ENT_COMPAT)&#xA;&#xA;Description&#xA;     Convert all HTML entities to their applicable characters.&#xA;&#xA;Parameters:&#xA;    int|null $flags - See http://php&#xA;&#xA;Return:&#xA;   Object with the resulting $str after being html decoded;;d4,1552;;b1,0;;mint|null $flags;;p">
				<treenode node="flags;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f31;1551;37;1551;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="htmlEncode;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;1538;5;1543;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    htmlEncode($flags = ENT_COMPAT)&#xA;&#xA;Description&#xA;     Convert all applicable characters to HTML entities.&#xA;&#xA;Parameters:&#xA;    int|null $flags - See http://php&#xA;&#xA;Return:&#xA;   Object with the resulting $str after being html encoded;;d4,1539;;b1,0;;mint|null $flags;;p">
				<treenode node="flags;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f31;1538;37;1538;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="humanize;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;379;5;384;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    humanize()&#xA;&#xA;Description&#xA;     Capitalizes the first word of the string, replaces underscores with spaces, and strips '_id'.&#xA;&#xA;Return:&#xA;   Object with a humanized $str;;d4,380;;b1,0;;m">
			</treenode>
			<treenode node="includeFile;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f0;441;1;444;;;;vpos;;v;;r&#xA;Definition&#xA;    includeFile($file)&#xA;&#xA;Description&#xA;     Scope isolated include.;;d0,442;;b0,0;;mfile;;p">
				<treenode node="file;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php;f21;441;26;441;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="indexOf;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;901;5;905;;;;vpos;;vint;;r&#xA;Definition&#xA;    indexOf($needle, $offset = 0)&#xA;&#xA;Description&#xA;     Returns the index of the first occurrence of $needle in the string, and false if not found. Accepts an optional offset from which to begin the search.&#xA;&#xA;Parameters:&#xA;    string $needle - Substring to look for&#xA;    int $offset - Offset from which to search&#xA;&#xA;Return:&#xA;   |bool The occurrence's index if found, otherwise false;;d4,902;;b1,0;;mstring $needle;;pint $offset;;p">
				<treenode node="needle;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f28;901;35;901;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f37;901;44;901;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="indexOfLast;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;916;5;920;;;;vpos;;vint;;r&#xA;Definition&#xA;    indexOfLast($needle, $offset = 0)&#xA;&#xA;Description&#xA;     Returns the index of the last occurrence of $needle in the string, and false if not found. Accepts an optional offset from which to begin the search.&#xA;&#xA;Parameters:&#xA;    string $needle - Substring to look for&#xA;    int $offset - Offset from which to search&#xA;&#xA;Return:&#xA;   |bool The last occurrence's index if found, otherwise false;;d4,917;;b1,0;;mstring $needle;;pint $offset;;p">
				<treenode node="needle;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f32;916;39;916;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f41;916;48;916;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="insert;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;943;5;957;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    insert($substring, $index)&#xA;&#xA;Description&#xA;     Inserts $substring into the string at the $index provided.&#xA;&#xA;Parameters:&#xA;    string $substring - String to be inserted&#xA;    int $index - The index at which to insert the substring&#xA;&#xA;Return:&#xA;   Object with the resulting $str after the insertion;;d4,944;;b1,0;;mstring $substring;;pint $index;;p">
				<treenode node="index;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f39;943;45;943;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f27;943;37;943;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="isAlpha;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;1395;5;1398;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isAlpha()&#xA;&#xA;Description&#xA;     Returns true if the string contains only alphabetic chars, false otherwise.&#xA;&#xA;Return:&#xA;   Whether or not $str contains only alphabetic chars;;d4,1396;;b1,0;;m">
			</treenode>
			<treenode node="isAlphanumeric;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;1406;5;1409;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isAlphanumeric()&#xA;&#xA;Description&#xA;     Returns true if the string contains only alphabetic and numeric chars, false otherwise.&#xA;&#xA;Return:&#xA;   Whether or not $str contains only alphanumeric chars;;d4,1407;;b1,0;;m">
			</treenode>
			<treenode node="isBlank;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;1428;5;1431;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isBlank()&#xA;&#xA;Description&#xA;     Returns true if the string contains only whitespace chars, false otherwise.&#xA;&#xA;Return:&#xA;   Whether or not $str contains only whitespace characters;;d4,1429;;b1,0;;m">
			</treenode>
			<treenode node="isHexadecimal;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;1417;5;1420;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isHexadecimal()&#xA;&#xA;Description&#xA;     Returns true if the string contains only hexadecimal chars, false otherwise.&#xA;&#xA;Return:&#xA;   Whether or not $str contains only hexadecimal chars;;d4,1418;;b1,0;;m">
			</treenode>
			<treenode node="isJson;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;1438;5;1443;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isJson()&#xA;&#xA;Description&#xA;     Returns true if the string is JSON, false otherwise.&#xA;&#xA;Return:&#xA;   Whether or not $str is JSON;;d4,1439;;b1,0;;m">
			</treenode>
			<treenode node="isLowerCase;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;1451;5;1454;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isLowerCase()&#xA;&#xA;Description&#xA;     Returns true if the string contains only lower case chars, false otherwise.&#xA;&#xA;Return:&#xA;   Whether or not $str contains only lower case characters;;d4,1452;;b1,0;;m">
			</treenode>
			<treenode node="isSerialized;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;1472;5;1475;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isSerialized()&#xA;&#xA;Description&#xA;     Returns true if the string is serialized, false otherwise.&#xA;&#xA;Return:&#xA;   Whether or not $str is serialized;;d4,1473;;b1,0;;m">
			</treenode>
			<treenode node="isUpperCase;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;1462;5;1465;;;;vpos;;vbool;;r&#xA;Definition&#xA;    isUpperCase()&#xA;&#xA;Description&#xA;     Returns true if the string contains only lower case chars, false otherwise.&#xA;&#xA;Return:&#xA;   Whether or not $str contains only lower case characters;;d4,1463;;b1,0;;m">
			</treenode>
			<treenode node="last;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;506;5;509;;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;1265;5;1276;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    last($array)&#xA;&#xA;Description&#xA;     Get the last element from an array.&#xA;&#xA;Parameters:&#xA;    array $array;;d4,507;;b0,0;;marray $array;;p">
				<treenode node="array;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f18;506;24;506;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="n;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f25;1265;27;1265;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="length;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;1207;5;1210;;;;vpos;;vint;;r&#xA;Definition&#xA;    length()&#xA;&#xA;Description&#xA;     Returns the length of the string. An alias for PHP's mb_strlen() function.&#xA;&#xA;Return:&#xA;   The number of characters in $str given the encoding;;d4,1208;;b1,0;;m">
			</treenode>
			<treenode node="loadMessagesFromFile;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Translator.php;f14;78;5;85;;;;vpos;;vbool;;r&#xA;Definition&#xA;    loadMessagesFromFile($locale)&#xA;&#xA;Description&#xA;     Init messages language from matching file in Lang directory.&#xA;&#xA;Parameters:&#xA;    string $locale;;d4,79;;b2,0;;mstring $locale;;p">
				<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Translator.php;f44;78;51;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="longestCommonPrefix;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;1109;5;1126;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    longestCommonPrefix($otherStr)&#xA;&#xA;Description&#xA;     Returns the longest common prefix between the string and $otherStr.&#xA;&#xA;Parameters:&#xA;    string $otherStr - Second string for comparison&#xA;&#xA;Return:&#xA;   Object with its $str being the longest common prefix;;d4,1110;;b1,0;;mstring $otherStr;;p">
				<treenode node="otherStr;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f40;1109;49;1109;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="longestCommonSubstring;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;1160;5;1200;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    longestCommonSubstring($otherStr)&#xA;&#xA;Description&#xA;     Returns the longest common substring between the string and $otherStr. In the case of ties, it returns that which occurs first.&#xA;&#xA;Parameters:&#xA;    string $otherStr - Second string for comparison&#xA;&#xA;Return:&#xA;   Object with its $str being the longest common substring;;d4,1161;;b1,0;;mstring $otherStr;;p">
				<treenode node="otherStr;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f43;1160;52;1160;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="longestCommonSuffix;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;1134;5;1151;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    longestCommonSuffix($otherStr)&#xA;&#xA;Description&#xA;     Returns the longest common suffix between the string and $otherStr.&#xA;&#xA;Parameters:&#xA;    string $otherStr - Second string for comparison&#xA;&#xA;Return:&#xA;   Object with its $str being the longest common suffix;;d4,1135;;b1,0;;mstring $otherStr;;p">
				<treenode node="otherStr;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f40;1134;49;1134;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="lowerCaseFirst;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;216;5;225;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    lowerCaseFirst()&#xA;&#xA;Description&#xA;     Converts the first character of the string to lower case.&#xA;&#xA;Return:&#xA;   Object with the first character of $str being lower case;;d4,217;;b1,0;;m">
			</treenode>
			<treenode node="macro;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Traits\Macroable.php;f18;23;5;26;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    macro($name, callable $macro)&#xA;&#xA;Description&#xA;     Register a custom macro.&#xA;&#xA;Parameters:&#xA;    string $name&#xA;    callable $macro;;d4,24;;b1,5;;mstring $name;;pcallable $macro;;p">
				<treenode node="macro;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Traits\Macroable.php;f49;23;55;23;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Traits\Macroable.php;f33;23;38;23;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="matchesPattern;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f12;1356;5;1365;;;;vpos;;vbool;;r&#xA;Definition&#xA;    matchesPattern($pattern)&#xA;&#xA;Description&#xA;     Returns true if $str matches the supplied pattern, false otherwise.&#xA;&#xA;Parameters:&#xA;    string $pattern - Regex pattern to match against&#xA;&#xA;Return:&#xA;   Whether or not $str matches the pattern;;d4,1357;;b3,0;;mstring $pattern;;p">
				<treenode node="pattern;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f36;1356;44;1356;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_check_encoding;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;28;120;28;;;;vpos;;v;;r;;d62,28;;b0,0;;mvar;;pencoding;;p">
				<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f44;28;53;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="var;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f31;28;35;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_chr;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;55;83;55;;;;vpos;;v;;r;;d40,55;;b0,0;;mcode;;penc;;p">
				<treenode node="code;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f20;55;25;55;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="enc;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f27;55;31;55;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_convert_case;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;23;109;23;;;;vpos;;v;;r;;d53,23;;b0,0;;ms;;pmode;;penc;;p">
				<treenode node="enc;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f40;23;44;23;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="mode;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f33;23;38;23;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="s;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f29;23;31;23;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_convert_encoding;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;18;115;18;;;;vpos;;v;;r;;d56,18;;b0,0;;ms;;pto;;pfrom;;p">
				<treenode node="from;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f42;18;47;18;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="s;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f33;18;35;18;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="to;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f37;18;40;18;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_convert_variables;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;51;230;51;;;;vpos;;v;;r;;d134,51;;b0,0;;mtoEncoding;;pfromEncoding;;pa;;pb;;pc;;pd;;pe;;pf;;p">
				<treenode node="a;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f63;51;65;51;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="b;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f75;51;77;51;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="c;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f87;51;89;51;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="d;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f99;51;101;51;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="e;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f111;51;113;51;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="f;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f123;51;125;51;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="fromEncoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f47;51;60;51;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="toEncoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f34;51;45;51;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_decode_mimeheader;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;19;86;19;;;;vpos;;v;;r;;d38,19;;b0,0;;ms;;p">
				<treenode node="s;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f34;19;36;19;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_decode_numericentity;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;21;131;21;;;;vpos;;v;;r;;d64,21;;b0,0;;ms;;pconvmap;;penc;;p">
				<treenode node="convmap;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f41;21;49;21;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="enc;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f51;21;55;21;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="s;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f37;21;39;21;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_detect_encoding;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;29;149;29;;;;vpos;;v;;r;;d77,29;;b0,0;;mstr;;pencodingList;;pstrict;;p">
				<treenode node="encodingList;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f38;29;51;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f32;29;36;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="strict;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f60;29;67;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_detect_order;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;30;105;30;;;;vpos;;v;;r;;d51,30;;b0,0;;mencodingList;;p">
				<treenode node="encodingList;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f29;30;42;30;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_encode_mimeheader;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;20;190;20;;;;vpos;;v;;r;;d104,20;;b0,0;;ms;;pcharset;;ptransferEnc;;plf;;pindent;;p">
				<treenode node="charset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f38;20;46;20;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="indent;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f88;20;95;20;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="lf;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f76;20;79;20;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="s;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f34;20;36;20;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="transferEnc;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f55;20;67;20;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_encode_numericentity;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;22;157;22;;;;vpos;;v;;r;;d81,22;;b0,0;;ms;;pconvmap;;penc;;pis_hex;;p">
				<treenode node="convmap;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f41;22;49;22;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="enc;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f51;22;55;22;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="is_hex;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f64;22;71;22;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="s;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f37;22;39;22;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_encoding_aliases;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;27;98;27;;;;vpos;;v;;r;;d44,27;;b0,0;;mencoding;;p">
				<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f33;27;42;27;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_get_info;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;45;82;45;;;;vpos;;v;;r;;d40,45;;b0,0;;mtype;;p">
				<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f25;45;30;45;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_http_input;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;50;83;50;;;;vpos;;v;;r;;d39,50;;b0,0;;mtype;;p">
				<treenode node="type;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f27;50;32;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_http_output;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;46;85;46;;;;vpos;;v;;r;;d41,46;;b0,0;;menc;;p">
				<treenode node="enc;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f28;46;32;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_internal_encoding;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;24;97;24;;;;vpos;;v;;r;;d47,24;;b0,0;;menc;;p">
				<treenode node="enc;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f34;24;38;24;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_language;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;25;81;25;;;;vpos;;v;;r;;d39,25;;b0,0;;mlang;;p">
				<treenode node="lang;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f25;25;30;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_list_encodings;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;26;76;26;;;;vpos;;v;;r;;d33,26;;b0,0;;m">
			</treenode>
			<treenode node="mb_ord;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;54;77;54;;;;vpos;;v;;r;;d37,54;;b0,0;;ms;;penc;;p">
				<treenode node="enc;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f24;54;28;54;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="s;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f20;54;22;54;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_output_handler;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;49;112;49;;;;vpos;;v;;r;;d51,49;;b0,0;;mcontents;;pstatus;;p">
				<treenode node="contents;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f31;49;40;49;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="status;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f42;49;49;49;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_parse_str;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;31;77;31;;;;vpos;;v;;r;;d50,31;;b0,0;;ms;;presult;;p">
				<treenode node="result;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f31;31;38;31;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="s;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f26;31;28;31;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_scrub;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;56;140;56;;;;vpos;;v;;r;;d39,56;;b0,0;;ms;;penc;;p">
				<treenode node="enc;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f26;56;30;56;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="s;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f22;56;24;56;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_stripos;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;38;125;38;;;;vpos;;v;;r;;d63,38;;b0,0;;ms;;pneedle;;poffset;;penc;;p">
				<treenode node="enc;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f50;38;54;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="needle;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f28;38;35;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f37;38;44;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="s;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f24;38;26;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_stristr;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;39;125;39;;;;vpos;;v;;r;;d65,39;;b0,0;;ms;;pneedle;;ppart;;penc;;p">
				<treenode node="enc;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f52;39;56;39;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="needle;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f28;39;35;39;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="part;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f37;39;42;39;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="s;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f24;39;26;39;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_strlen;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;32;83;32;;;;vpos;;v;;r;;d40,32;;b0,0;;ms;;penc;;p">
				<treenode node="enc;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f27;32;31;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="s;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f23;32;25;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_strpos;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;33;123;33;;;;vpos;;v;;r;;d62,33;;b0,0;;ms;;pneedle;;poffset;;penc;;p">
				<treenode node="enc;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f49;33;53;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="needle;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f27;33;34;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f36;33;43;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="s;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f23;33;25;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_strrchr;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;40;125;40;;;;vpos;;v;;r;;d65,40;;b0,0;;ms;;pneedle;;ppart;;penc;;p">
				<treenode node="enc;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f52;40;56;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="needle;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f28;40;35;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="part;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f37;40;42;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="s;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f24;40;26;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_strrichr;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;41;127;41;;;;vpos;;v;;r;;d66,41;;b0,0;;ms;;pneedle;;ppart;;penc;;p">
				<treenode node="enc;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f53;41;57;41;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="needle;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f29;41;36;41;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="part;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f38;41;43;41;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="s;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f25;41;27;41;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_strripos;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;42;127;42;;;;vpos;;v;;r;;d64,42;;b0,0;;ms;;pneedle;;poffset;;penc;;p">
				<treenode node="enc;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f51;42;55;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="needle;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f29;42;36;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f38;42;45;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="s;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f25;42;27;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_strrpos;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;43;125;43;;;;vpos;;v;;r;;d63,43;;b0,0;;ms;;pneedle;;poffset;;penc;;p">
				<treenode node="enc;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f50;43;54;43;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="needle;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f28;43;35;43;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f37;43;44;43;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="s;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f24;43;26;43;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_strstr;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;44;123;44;;;;vpos;;v;;r;;d64,44;;b0,0;;ms;;pneedle;;ppart;;penc;;p">
				<treenode node="enc;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f51;44;55;44;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="needle;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f27;44;34;44;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="part;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f36;44;41;44;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="s;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f23;44;25;44;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_strtolower;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;34;91;34;;;;vpos;;v;;r;;d44,34;;b0,0;;ms;;penc;;p">
				<treenode node="enc;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f31;34;35;34;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="s;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f27;34;29;34;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_strtoupper;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;35;91;35;;;;vpos;;v;;r;;d44,35;;b0,0;;ms;;penc;;p">
				<treenode node="enc;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f31;35;35;35;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="s;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f27;35;29;35;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_strwidth;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;47;87;47;;;;vpos;;v;;r;;d42,47;;b0,0;;ms;;penc;;p">
				<treenode node="enc;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f29;47;33;47;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="s;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f25;47;27;47;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_substitute_character;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;36;105;36;;;;vpos;;v;;r;;d51,36;;b0,0;;mchar;;p">
				<treenode node="char;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f37;36;42;36;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_substr;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;37;130;37;;;;vpos;;v;;r;;d70,37;;b0,0;;ms;;pstart;;plength;;penc;;p">
				<treenode node="enc;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f57;37;61;37;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f35;37;42;37;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="s;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f23;37;25;37;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="start;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f27;37;33;37;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_substr_count;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;48;127;48;;;;vpos;;v;;r;;d62,48;;b0,0;;mhaystack;;pneedle;;penc;;p">
				<treenode node="enc;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f49;48;53;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="haystack;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f29;48;38;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="needle;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php;f40;48;47;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="object_get;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;521;5;536;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    object_get($object, $key, $default = null)&#xA;&#xA;Description&#xA;     Get an item from an object using &quot;dot&quot; notation.&#xA;&#xA;Parameters:&#xA;    object $object&#xA;    string $key&#xA;    mixed $default;;d4,522;;b0,0;;mobject $object;;pstring $key;;pmixed $default;;p">
				<treenode node="default;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f39;521;47;521;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="key;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f33;521;37;521;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="object;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f24;521;31;521;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="offsetExists;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;118;5;128;;;;vpos;;vboolean;;r&#xA;Definition&#xA;    offsetExists($offset)&#xA;&#xA;Description&#xA;     Returns whether or not a character exists at an index. Offsets may be negative to count from the last character in the string. Implements part of the ArrayAccess interface.&#xA;&#xA;Parameters:&#xA;    mixed $offset - The index to check&#xA;&#xA;Return:&#xA;   Whether or not the index exists;;d4,119;;b1,0;;mmixed $offset;;p">
				<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f33;118;40;118;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="offsetGet;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;141;5;151;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    offsetGet($offset)&#xA;&#xA;Description&#xA;     Returns the character at the given index. Offsets may be negative to count from the last character in the string. Implements part of the ArrayAccess interface, and throws an OutOfBoundsException if the index does not exist.&#xA;&#xA;Parameters:&#xA;    mixed $offset - The index from which to retrieve the char&#xA;&#xA;Return:&#xA;   The character at the specified index;;d4,142;;b1,0;;mmixed $offset;;p">
				<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f30;141;37;141;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="offsetSet;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;161;5;165;;;;vpos;;v;;r&#xA;Definition&#xA;    offsetSet($offset, $value)&#xA;&#xA;Description&#xA;     Implements part of the ArrayAccess interface, but throws an exception when called. This maintains the immutability of Stringy objects.&#xA;&#xA;Parameters:&#xA;    mixed $offset - The index of the character&#xA;    mixed $value - Value to set;;d4,162;;b1,0;;mmixed $offset;;pmixed $value;;p">
				<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f30;161;37;161;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f39;161;45;161;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="offsetUnset;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;174;5;178;;;;vpos;;v;;r&#xA;Definition&#xA;    offsetUnset($offset)&#xA;&#xA;Description&#xA;     Implements part of the ArrayAccess interface, but throws an exception when called. This maintains the immutability of Stringy objects.&#xA;&#xA;Parameters:&#xA;    mixed $offset - The index of the character;;d4,175;;b1,0;;mmixed $offset;;p">
				<treenode node="offset;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f32;174;39;174;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="onlyTrashed;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletes.php;f18;118;5;125;;;;vpos;;v;;r&#xA;Definition&#xA;    onlyTrashed()&#xA;&#xA;Description&#xA;     Get a new query builder that only includes soft deletes.;;d4,119;;b1,5;;m">
			</treenode>
			<treenode node="pad;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;595;5;610;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    pad($length, $padStr = ' ', $padType = 'right')&#xA;&#xA;Description&#xA;     Pads the string to a given length with $padStr. If length is less than or equal to the length of the string, no padding takes places. The default string used for padding is a space, and the default type (one of 'left', 'right', 'both') is 'right'. Throws an InvalidArgumentException if $padType isn't one of those 3 values.&#xA;&#xA;Parameters:&#xA;    int $length - Desired string length after padding&#xA;    string $padStr - String used to pad, defaults to space&#xA;    string $padType - One of 'left', 'right', 'both'&#xA;&#xA;Return:&#xA;   Object with a padded $str;;d4,596;;b1,0;;mint $length;;pstring $padStr;;pstring $padType;;p">
				<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f24;595;31;595;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="padStr;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f33;595;40;595;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="padType;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f48;595;56;595;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="padBoth;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;646;5;652;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    padBoth($length, $padStr = ' ')&#xA;&#xA;Description&#xA;     Returns a new string of a given length such that both sides of the string are padded. Alias for pad() with a $padType of 'both'.&#xA;&#xA;Parameters:&#xA;    int $length - Desired string length after padding&#xA;    string $padStr - String used to pad, defaults to space&#xA;&#xA;Return:&#xA;   String with padding applied;;d4,647;;b1,0;;mint $length;;pstring $padStr;;p">
				<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f28;646;35;646;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="padStr;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f37;646;44;646;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="padLeft;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;620;5;623;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    padLeft($length, $padStr = ' ')&#xA;&#xA;Description&#xA;     Returns a new string of a given length such that the beginning of the string is padded. Alias for pad() with a $padType of 'left'.&#xA;&#xA;Parameters:&#xA;    int $length - Desired string length after padding&#xA;    string $padStr - String used to pad, defaults to space&#xA;&#xA;Return:&#xA;   String with left padding;;d4,621;;b1,0;;mint $length;;pstring $padStr;;p">
				<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f28;620;35;620;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="padStr;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f37;620;44;620;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="padRight;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;633;5;636;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    padRight($length, $padStr = ' ')&#xA;&#xA;Description&#xA;     Returns a new string of a given length such that the end of the string is padded. Alias for pad() with a $padType of 'right'.&#xA;&#xA;Parameters:&#xA;    int $length - Desired string length after padding&#xA;    string $padStr - String used to pad, defaults to space&#xA;&#xA;Return:&#xA;   String with right padding;;d4,634;;b1,0;;mint $length;;pstring $padStr;;p">
				<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f29;633;36;633;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="padStr;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f38;633;45;633;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="performDeleteOnModel;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletes.php;f14;42;5;49;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    performDeleteOnModel()&#xA;&#xA;Description&#xA;     Perform the actual delete query on this model instance.;;d4,43;;b2,0;;m">
			</treenode>
			<treenode node="preg_replace_sub;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;548;5;555;;;;vpos;;vstring;;r&#xA;Definition&#xA;    preg_replace_sub($pattern, &amp;$replacements, $subject)&#xA;&#xA;Description&#xA;     Replace a given pattern with each value in the array in sequentially.&#xA;&#xA;Parameters:&#xA;    string $pattern&#xA;    array $replacements&#xA;    string $subject;;d4,549;;b0,0;;mstring $pattern;;parray $replacements;;pstring $subject;;p">
				<treenode node="pattern;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f30;548;38;548;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="replacements;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f41;548;54;548;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="subject;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f56;548;64;548;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="random_bytes;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\random_bytes_openssl.php;f0;41;1;85;;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\random_bytes_mcrypt.php;f4;41;5;75;;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\random_bytes_libsodium_legacy.php;f4;42;5;90;;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\random_bytes_libsodium.php;f4;42;5;86;;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\random_bytes_dev_urandom.php;f4;46;5;148;;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\random_bytes_com_dotnet.php;f4;40;5;86;;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\random.php;f8;232;9;238;;;;vpos;;vstring;;r&#xA;Definition&#xA;    random_bytes($bytes)&#xA;&#xA;Description&#xA;     Since openssl_random_pseudo_bytes() uses openssl's RAND_pseudo_bytes() API, which has been marked as deprecated by the OpenSSL team, this is our last resort before failure.&#xA;&#xA;Parameters:&#xA;    int $bytes;;d0,42;;b0,0;;mint $bytes;;p">
				<treenode node="bytes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\random_bytes_openssl.php;f22;41;28;41;;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\random_bytes_mcrypt.php;f26;41;32;41;;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\random_bytes_libsodium_legacy.php;f26;42;32;42;;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\random_bytes_libsodium.php;f26;42;32;42;;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\random_bytes_dev_urandom.php;f26;46;32;46;;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\random_bytes_com_dotnet.php;f26;40;32;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\random.php;f30;232;37;232;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="random_int;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\random_int.php;f4;40;5;188;;;;vpos;;vint;;r&#xA;Definition&#xA;    random_int($min, $max)&#xA;&#xA;Description&#xA;     Fetch a random integer between $min and $max inclusive&#xA;&#xA;Parameters:&#xA;    int $min&#xA;    int $max;;d4,41;;b0,0;;mint $min;;pint $max;;p">
				<treenode node="max;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\random_int.php;f30;40;34;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="min;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\random_int.php;f24;40;28;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="randombytes_buf;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\other\ide_stubs\libsodium.php;f8;17;9;22;;;;vpos;;vstring;;r&#xA;Definition&#xA;    randombytes_buf(&#xA;            $length&#xA;        )&#xA;&#xA;Description&#xA;     Generate a string of random bytes /dev/urandom&#xA;&#xA;Parameters:&#xA;    int $length;;d8,20;;b0,0;;mint $length;;p">
				<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\other\ide_stubs\libsodium.php;f12;18;19;18;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="randombytes_random16;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\other\ide_stubs\libsodium.php;f8;30;9;33;;;;vpos;;vint;;r&#xA;Definition&#xA;    randombytes_random16()&#xA;&#xA;Description&#xA;     Generate a 16-bit integer /dev/urandom;;d8,31;;b0,0;;m">
			</treenode>
			<treenode node="randombytes_uniform;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\other\ide_stubs\libsodium.php;f8;42;9;47;;;;vpos;;vint;;r&#xA;Definition&#xA;    randombytes_uniform(&#xA;            $upperBoundNonInclusive&#xA;        )&#xA;&#xA;Description&#xA;     Generate an unbiased random integer between 0 and a specified value /dev/urandom&#xA;&#xA;Parameters:&#xA;    int $upperBoundNonInclusive;;d8,45;;b0,0;;mint $upperBoundNonInclusive;;p">
				<treenode node="upperBoundNonInclusive;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\other\ide_stubs\libsodium.php;f12;43;35;43;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="RandomCompat_intval;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\cast_to_int.php;f4;46;5;72;;;;vpos;;vfloat;;r&#xA;Definition&#xA;    RandomCompat_intval($number, $fail_open = false)&#xA;&#xA;Description&#xA;     Cast to an integer if we can, safely.&#xA;&#xA;Parameters:&#xA;    int|float $number - The number we want to convert to an int&#xA;    boolean $fail_open - Set to true to not throw an exception&#xA;&#xA;Return:&#xA;   |int;;d4,47;;b0,0;;mint|float $number;;pboolean $fail_open;;p">
				<treenode node="fail_open;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\cast_to_int.php;f42;46;52;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="number;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\cast_to_int.php;f33;46;40;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="RandomCompat_strlen;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\byte_safe_strings.php;f8;45;9;76;;;;vpos;;vint;;r&#xA;Definition&#xA;    RandomCompat_strlen($binary_string)&#xA;        {&#xA;            if (!is_string($binary_string)) {&#xA;                throw new TypeError(&#xA;                    'RandomCompat_strlen() expects a string'&#xA;                );s&#xA;            }&#xA;&#xA;            return (int) mb_strlen($binary_string, '8bit');s&#xA;        }&#xA;&#xA;    } else {&#xA;        /**&#xA;         * strlen() implementation that isn't brittle to mbstring.func_overload&#xA;         *&#xA;         * This version just used the default strlen()&#xA;         *&#xA;         * @param string $binary_string&#xA;         *&#xA;         * @throws TypeError&#xA;         *&#xA;         * @return int&#xA;         */&#xA;        function RandomCompat_strlen($binary_string)&#xA;&#xA;Description&#xA;     strlen() implementation that isn't brittle to mbstring.func_overload&#xA;&#xA;Parameters:&#xA;    string $binary_string;;d8,69;;b0,0;;mbinary_string;;pbinary_string;;p">
				<treenode node="binary_string;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\byte_safe_strings.php;f37;45;51;45;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="RandomCompat_substr;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\byte_safe_strings.php;f8;101;9;178;;;;vpos;;vstring;;r&#xA;Definition&#xA;    RandomCompat_substr($binary_string, $start, $length = null)&#xA;        {&#xA;            if (!is_string($binary_string)) {&#xA;                throw new TypeError(&#xA;                    'RandomCompat_substr(): First argument should be a string'&#xA;                );s&#xA;            }&#xA;&#xA;            if (!is_int($start)) {&#xA;                throw new TypeError(&#xA;                    'RandomCompat_substr(): Second argument should be an integer'&#xA;                );s&#xA;            }&#xA;&#xA;            if ($length === null) {&#xA;                /**&#xA;                 * mb_substr($str, 0, NULL, '8bit') returns an empty string on&#xA;                 * PHP 5.3, so we have to find the length ourselves.&#xA;                 */&#xA;                $length = RandomCompat_strlen($binary_string) - $start;s&#xA;            } elseif (!is_int($length)) {&#xA;                throw new TypeError(&#xA;                    'RandomCompat_substr(): Third argument should be an integer, or omitted'&#xA;                );s&#xA;            }&#xA;&#xA;            // Consistency with PHP's behavior&#xA;            if ($start === RandomCompat_strlen($binary_string) &amp;&amp; $length === 0) {&#xA;                return '';s&#xA;            }&#xA;            if ($start &gt; RandomCompat_strlen($binary_string)) {&#xA;                return '';s&#xA;            }&#xA;&#xA;            return (string) mb_substr($binary_string, $start, $length, '8bit');s&#xA;        }&#xA;&#xA;    } else {&#xA;&#xA;        /**&#xA;         * substr() implementation that isn't brittle to mbstring.func_overload&#xA;         *&#xA;         * This version just uses the default substr()&#xA;         *&#xA;         * @param string $binary_string&#xA;         * @param int $start&#xA;         * @param int $length (optional)&#xA;         *&#xA;         * @throws TypeError&#xA;         *&#xA;         * @return string&#xA;         */&#xA;        function RandomCompat_substr($binary_string, $start, $length = null)&#xA;&#xA;Description&#xA;     substr() implementation that isn't brittle to mbstring.func_overload&#xA;&#xA;Parameters:&#xA;    string $binary_string&#xA;    int $start&#xA;    int $length - (optional);;d8,154;;b0,0;;mbinary_string;;pstart;;plength;;pbinary_string;;pstart;;plength;;p">
				<treenode node="binary_string;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\byte_safe_strings.php;f37;101;51;101;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\byte_safe_strings.php;f61;101;68;101;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="start;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\byte_safe_strings.php;f53;101;59;101;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="regexReplace;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;1521;5;1530;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    regexReplace($pattern, $replacement, $options = 'msr')&#xA;&#xA;Description&#xA;     Replaces all occurrences of $pattern in $str by $replacement. An alias for mb_ereg_replace(). Note that the 'i' option with multibyte patterns in mb_ereg_replace() requires PHP 5.4+. This is due to a lack of support in the bundled version of Oniguruma in PHP 5.3.&#xA;&#xA;Parameters:&#xA;    string $pattern - The regular expression pattern&#xA;    string $replacement - The string to replace with&#xA;    string $options - Matching conditions to be used&#xA;&#xA;Return:&#xA;   Object with the resulting $str after the replacements;;d4,1522;;b1,0;;mstring $pattern;;pstring $replacement;;pstring $options;;p">
				<treenode node="options;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f57;1521;65;1521;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="pattern;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f33;1521;41;1521;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="replacement;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f43;1521;55;1521;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="removeLeft;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;1320;5;1330;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    removeLeft($substring)&#xA;&#xA;Description&#xA;     Returns a new string with the prefix $substring removed, if present.&#xA;&#xA;Parameters:&#xA;    string $substring - The prefix to remove&#xA;&#xA;Return:&#xA;   Object having a $str without the prefix $substring;;d4,1321;;b1,0;;mstring $substring;;p">
				<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f31;1320;41;1320;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="removeRight;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;1338;5;1348;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    removeRight($substring)&#xA;&#xA;Description&#xA;     Returns a new string with the suffix $substring removed, if present.&#xA;&#xA;Parameters:&#xA;    string $substring - The suffix to remove&#xA;&#xA;Return:&#xA;   Object having a $str without the suffix $substring;;d4,1339;;b1,0;;mstring $substring;;p">
				<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f32;1338;42;1338;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="replace;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;1505;5;1508;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    replace($search, $replacement)&#xA;&#xA;Description&#xA;     Replaces all occurrences of $search in $str by $replacement.&#xA;&#xA;Parameters:&#xA;    string $search - The needle to search for&#xA;    string $replacement - The string to replace with&#xA;&#xA;Return:&#xA;   Object with the resulting $str after the replacements;;d4,1506;;b1,0;;mstring $search;;pstring $replacement;;p">
				<treenode node="replacement;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f37;1505;49;1505;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="search;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f28;1505;35;1505;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="resetMessages;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Translator.php;f11;53;5;69;;;;vpos;;vbool;;r&#xA;Definition&#xA;    resetMessages($locale = null)&#xA;&#xA;Description&#xA;     Reset messages of a locale (all locale if no locale passed). Remove custom messages and reload initial messages from matching file in Lang directory.&#xA;&#xA;Parameters:&#xA;    string|null $locale;;d4,54;;b1,0;;mstring|null $locale;;p">
				<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Translator.php;f34;53;41;53;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="restore;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletes.php;f11;70;5;91;;;;vpos;;vbool;;r&#xA;Definition&#xA;    restore()&#xA;&#xA;Description&#xA;     Restore a soft-deleted model instance.&#xA;&#xA;Return:&#xA;   |null;;d4,71;;b1,0;;m">
			</treenode>
			<treenode node="restored;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletes.php;f18;144;5;147;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    restored($callback)&#xA;&#xA;Description&#xA;     Register a restored model event with the dispatcher.&#xA;&#xA;Parameters:&#xA;    \Closure|string $callback;;d4,145;;b1,5;;m\Closure|string $callback;;p">
				<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletes.php;f36;144;45;144;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="restoring;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletes.php;f18;133;5;136;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    restoring($callback)&#xA;&#xA;Description&#xA;     Register a restoring model event with the dispatcher.&#xA;&#xA;Parameters:&#xA;    \Closure|string $callback;;d4,134;;b1,5;;m\Closure|string $callback;;p">
				<treenode node="callback;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletes.php;f37;133;46;133;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="reverse;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;1026;5;1037;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    reverse()&#xA;&#xA;Description&#xA;     Returns a reversed string. A multibyte version of strrev().&#xA;&#xA;Return:&#xA;   Object with a reversed $str;;d4,1027;;b1,0;;m">
			</treenode>
			<treenode node="runSoftDelete;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletes.php;f14;56;5;63;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    runSoftDelete()&#xA;&#xA;Description&#xA;     Perform the actual delete query on this model instance.;;d4,57;;b2,0;;m">
			</treenode>
			<treenode node="safeTruncate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;995;5;1019;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    safeTruncate($length, $substring = '')&#xA;&#xA;Description&#xA;     Truncates the string to a given length, while ensuring that it does not split words. If $substring is provided, and truncating occurs, the string is further truncated so that the substring may be appended without exceeding the desired length.&#xA;&#xA;Parameters:&#xA;    int $length - Desired length of the truncated string&#xA;    string $substring - The substring to append if it can fit&#xA;&#xA;Return:&#xA;   Object with the resulting $str after truncating;;d4,996;;b1,0;;mint $length;;pstring $substring;;p">
				<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f33;995;40;995;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f42;995;52;995;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="setAsGlobal;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Traits\CapsuleManagerTrait.php;f11;43;5;46;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setAsGlobal()&#xA;&#xA;Description&#xA;     Make this capsule instance available globally.;;d4,44;;b1,0;;m">
			</treenode>
			<treenode node="setContainer;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Traits\CapsuleManagerTrait.php;f11;64;5;67;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setContainer(Container $container)&#xA;&#xA;Description&#xA;     Set the IoC container instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Contracts\Container\Container $container;;d4,65;;b1,0;;m\Illuminate\Contracts\Container\Container $container;;p">
				<treenode node="container;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Traits\CapsuleManagerTrait.php;f43;64;53;64;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="setLocale;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Translator.php;f11;127;5;141;;;;vpos;;vbool;;r&#xA;Definition&#xA;    setLocale($locale)&#xA;&#xA;Description&#xA;     Set the current translator locale and indicate if the source locale file exists&#xA;&#xA;Parameters:&#xA;    string $locale - locale ex;;d4,128;;b1,0;;mstring $locale;;p">
				<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Translator.php;f30;127;37;127;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="setMessages;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Translator.php;f11;95;5;105;;;;vpos;;v;;r&#xA;Definition&#xA;    setMessages($locale, $messages)&#xA;&#xA;Description&#xA;     Set messages of a locale and take file first if present.&#xA;&#xA;Parameters:&#xA;    string $locale&#xA;    array $messages;;d4,96;;b1,0;;mstring $locale;;parray $messages;;p">
				<treenode node="locale;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Translator.php;f32;95;39;95;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Translator.php;f41;95;50;95;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="setupContainer;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Traits\CapsuleManagerTrait.php;f14;29;5;36;;;;vpos;;vvoid;;r&#xA;Definition&#xA;    setupContainer(Container $container)&#xA;&#xA;Description&#xA;     Setup the IoC container instance.&#xA;&#xA;Parameters:&#xA;    \Illuminate\Contracts\Container\Container $container;;d4,30;;b2,0;;m\Illuminate\Contracts\Container\Container $container;;p">
				<treenode node="container;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Traits\CapsuleManagerTrait.php;f48;29;58;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="shuffle;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;1045;5;1056;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    shuffle()&#xA;&#xA;Description&#xA;     A multibyte str_shuffle() function. It returns a string with its characters in random order.&#xA;&#xA;Return:&#xA;   Object with a shuffled $str;;d4,1046;;b1,0;;m">
			</treenode>
			<treenode node="slugify;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;812;5;822;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    slugify($replacement = '-')&#xA;&#xA;Description&#xA;     Converts the string into an URL slug. This includes replacing non-ASCII characters with their closest ASCII equivalents, removing remaining non-ASCII and non-alphanumeric characters, and replacing whitespace with $replacement. The replacement defaults to a single dash, and the string is also converted to lowercase.&#xA;&#xA;Parameters:&#xA;    string $replacement - The string used to replace whitespace&#xA;&#xA;Return:&#xA;   Object whose $str has been converted to an URL slug;;d4,813;;b1,0;;mstring $replacement;;p">
				<treenode node="replacement;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f28;812;40;812;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="snake_case;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;566;5;569;;;;vpos;;vstring;;r&#xA;Definition&#xA;    snake_case($value, $delimiter = '_')&#xA;&#xA;Description&#xA;     Convert a string to snake case.&#xA;&#xA;Parameters:&#xA;    string $value&#xA;    string $delimiter;;d4,567;;b0,0;;mstring $value;;pstring $delimiter;;p">
				<treenode node="delimiter;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f32;566;42;566;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f24;566;30;566;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="starts_with;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;580;5;583;;;;vpos;;vbool;;r&#xA;Definition&#xA;    starts_with($haystack, $needles)&#xA;&#xA;Description&#xA;     Determine if a given string starts with a given substring.&#xA;&#xA;Parameters:&#xA;    string $haystack&#xA;    string|array $needles;;d4,581;;b0,0;;mstring $haystack;;pstring|array $needles;;p">
				<treenode node="haystack;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f25;580;34;580;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="needles;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f36;580;44;580;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="startsWith;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;694;5;706;;;;vpos;;vbool;;r&#xA;Definition&#xA;    startsWith($substring, $caseSensitive = true)&#xA;&#xA;Description&#xA;     Returns true if the string begins with $substring, false otherwise. By default, the comparison is case-sensitive, but can be made insensitive by setting $caseSensitive to false.&#xA;&#xA;Parameters:&#xA;    string $substring - The substring to look for&#xA;    bool $caseSensitive - Whether or not to enforce case-sensitivity&#xA;&#xA;Return:&#xA;   Whether or not $str starts with $substring;;d4,695;;b1,0;;mstring $substring;;pbool $caseSensitive;;p">
				<treenode node="caseSensitive;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f43;694;57;694;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f31;694;41;694;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="str_contains;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;594;5;597;;;;vpos;;vbool;;r&#xA;Definition&#xA;    str_contains($haystack, $needles)&#xA;&#xA;Description&#xA;     Determine if a given string contains a given substring.&#xA;&#xA;Parameters:&#xA;    string $haystack&#xA;    string|array $needles;;d4,595;;b0,0;;mstring $haystack;;pstring|array $needles;;p">
				<treenode node="haystack;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f26;594;35;594;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="needles;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f37;594;45;594;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="str_finish;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;608;5;611;;;;vpos;;vstring;;r&#xA;Definition&#xA;    str_finish($value, $cap)&#xA;&#xA;Description&#xA;     Cap a string with a single instance of a given value.&#xA;&#xA;Parameters:&#xA;    string $value&#xA;    string $cap;;d4,609;;b0,0;;mstring $value;;pstring $cap;;p">
				<treenode node="cap;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f32;608;36;608;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f24;608;30;608;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="str_is;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;622;5;625;;;;vpos;;vbool;;r&#xA;Definition&#xA;    str_is($pattern, $value)&#xA;&#xA;Description&#xA;     Determine if a given string matches a given pattern.&#xA;&#xA;Parameters:&#xA;    string $pattern&#xA;    string $value;;d4,623;;b0,0;;mstring $pattern;;pstring $value;;p">
				<treenode node="pattern;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f20;622;28;622;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f30;622;36;622;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="str_limit;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;637;5;640;;;;vpos;;vstring;;r&#xA;Definition&#xA;    str_limit($value, $limit = 100, $end = '...')&#xA;&#xA;Description&#xA;     Limit the number of characters in a string.&#xA;&#xA;Parameters:&#xA;    string $value&#xA;    int $limit&#xA;    string $end;;d4,638;;b0,0;;mstring $value;;pint $limit;;pstring $end;;p">
				<treenode node="end;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f45;637;49;637;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="limit;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f31;637;37;637;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f23;637;29;637;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="str_plural;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;651;5;654;;;;vpos;;vstring;;r&#xA;Definition&#xA;    str_plural($value, $count = 2)&#xA;&#xA;Description&#xA;     Get the plural form of an English word.&#xA;&#xA;Parameters:&#xA;    string $value&#xA;    int $count;;d4,652;;b0,0;;mstring $value;;pint $count;;p">
				<treenode node="count;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f32;651;38;651;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f24;651;30;651;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="str_random;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;666;5;669;;;;vpos;;vstring;;r&#xA;Definition&#xA;    str_random($length = 16)&#xA;&#xA;Description&#xA;     Generate a more truly &quot;random&quot; alpha-numeric string.&#xA;&#xA;Parameters:&#xA;    int $length;;d4,667;;b0,0;;mint $length;;p">
				<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f24;666;31;666;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="str_replace_array;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;681;5;688;;;;vpos;;vstring;;r&#xA;Definition&#xA;    str_replace_array($search, array $replace, $subject)&#xA;&#xA;Description&#xA;     Replace a given value in the string sequentially with an array.&#xA;&#xA;Parameters:&#xA;    string $search&#xA;    array $replace&#xA;    string $subject;;d4,682;;b0,0;;mstring $search;;parray $replace;;pstring $subject;;p">
				<treenode node="replace;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f46;681;54;681;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="search;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f31;681;38;681;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="subject;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f56;681;64;681;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="str_singular;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;698;5;701;;;;vpos;;vstring;;r&#xA;Definition&#xA;    str_singular($value)&#xA;&#xA;Description&#xA;     Get the singular form of an English word.&#xA;&#xA;Parameters:&#xA;    string $value;;d4,699;;b0,0;;mstring $value;;p">
				<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f26;698;32;698;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="str_slug;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;712;5;715;;;;vpos;;vstring;;r&#xA;Definition&#xA;    str_slug($title, $separator = '-')&#xA;&#xA;Description&#xA;     Generate a URL friendly &quot;slug&quot; from a given string.&#xA;&#xA;Parameters:&#xA;    string $title&#xA;    string $separator;;d4,713;;b0,0;;mstring $title;;pstring $separator;;p">
				<treenode node="separator;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f30;712;40;712;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="title;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f22;712;28;712;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="Stringy;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CreateTest.php;f4;4;20;4;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="studly_case;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;725;5;728;;;;vpos;;vstring;;r&#xA;Definition&#xA;    studly_case($value)&#xA;&#xA;Description&#xA;     Convert a value to studly caps case.&#xA;&#xA;Parameters:&#xA;    string $value;;d4,726;;b0,0;;mstring $value;;p">
				<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f25;725;31;725;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="substr;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;1221;5;1227;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    substr($start, $length = null)&#xA;&#xA;Description&#xA;     Returns the substring beginning at $start with the specified $length. It differs from the mb_substr() function in that providing a $length of null will return the rest of the string, rather than an empty string.&#xA;&#xA;Parameters:&#xA;    int $start - Position of the first character to use&#xA;    int $length - Maximum number of characters used&#xA;&#xA;Return:&#xA;   Object with its $str being the substring;;d4,1222;;b1,0;;mint $start;;pint $length;;p">
				<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f35;1221;42;1221;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="start;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f27;1221;33;1221;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="surround;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;929;5;934;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    surround($substring)&#xA;&#xA;Description&#xA;     Surrounds $str with the given substring.&#xA;&#xA;Parameters:&#xA;    string $substring - The substring to add to both sides&#xA;&#xA;Return:&#xA;   Object whose $str had the substring both prepended and;;d4,930;;b1,0;;mstring $substring;;p">
				<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f29;929;39;929;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="swapCase;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;324;5;342;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    swapCase()&#xA;&#xA;Description&#xA;     Returns a case swapped version of the string.&#xA;&#xA;Return:&#xA;   Object whose $str has each character's case swapped;;d4,325;;b1,0;;m">
			</treenode>
			<treenode node="tidy;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;393;5;408;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    tidy()&#xA;&#xA;Description&#xA;     Returns a string with smart quotes, ellipsis characters, and dashes from Windows-1252 (commonly used in Word documents) replaced by their ASCII equivalents.&#xA;&#xA;Return:&#xA;   Object whose $str has those characters removed;;d4,394;;b1,0;;m">
			</treenode>
			<treenode node="title_case;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;738;5;741;;;;vpos;;vstring;;r&#xA;Definition&#xA;    title_case($value)&#xA;&#xA;Description&#xA;     Convert a value to title case.&#xA;&#xA;Parameters:&#xA;    string $value;;d4,739;;b0,0;;mstring $value;;p">
				<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f24;738;30;738;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="titleize;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;352;5;371;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    titleize($ignore = null)&#xA;&#xA;Description&#xA;     Returns a trimmed string with the first letter of each word capitalized. Ignores the case of other letters, preserving any acronyms. Also accepts an array, $ignore, allowing you to list words not to be capitalized.&#xA;&#xA;Parameters:&#xA;    array $ignore - An array of words not to capitalize&#xA;&#xA;Return:&#xA;   Object with a titleized $str;;d4,353;;b1,0;;marray $ignore;;p">
				<treenode node="ignore;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f29;352;36;352;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="toAscii;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;431;5;444;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    toAscii($removeUnsupported = true)&#xA;&#xA;Description&#xA;     Returns an ASCII version of the string. A set of non-ASCII characters are replaced with their closest ASCII counterparts, and the rest are removed unless instructed otherwise.&#xA;&#xA;Parameters:&#xA;    bool $removeUnsupported - Whether or not to remove the&#xA;&#xA;Return:&#xA;   Object whose $str contains only ASCII characters;;d4,432;;b1,0;;mbool $removeUnsupported;;p">
				<treenode node="removeUnsupported;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f28;431;46;431;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="toLowerCase;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;782;5;787;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    toLowerCase()&#xA;&#xA;Description&#xA;     Converts all characters in the string to lowercase. An alias for PHP's mb_strtolower().&#xA;&#xA;Return:&#xA;   Object with all characters of $str being lowercase;;d4,783;;b1,0;;m">
			</treenode>
			<treenode node="toSpaces;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;740;5;746;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    toSpaces($tabLength = 4)&#xA;&#xA;Description&#xA;     Converts each tab in the string to some number of spaces, as defined by $tabLength. By default, each tab is converted to 4 consecutive spaces.&#xA;&#xA;Parameters:&#xA;    int $tabLength - Number of spaces to replace each tab with&#xA;&#xA;Return:&#xA;   Object whose $str has had tabs switched to spaces;;d4,741;;b1,0;;mint $tabLength;;p">
				<treenode node="tabLength;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f29;740;39;740;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="toTabs;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;756;5;762;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    toTabs($tabLength = 4)&#xA;&#xA;Description&#xA;     Converts each occurrence of some consecutive number of spaces, as defined by $tabLength, to a tab. By default, each 4 consecutive spaces are converted to a tab.&#xA;&#xA;Parameters:&#xA;    int $tabLength - Number of spaces to replace with a tab&#xA;&#xA;Return:&#xA;   Object whose $str has had spaces switched to tabs;;d4,757;;b1,0;;mint $tabLength;;p">
				<treenode node="tabLength;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f27;756;37;756;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="toTitleCase;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;769;5;774;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    toTitleCase()&#xA;&#xA;Description&#xA;     Converts the first character of each word in the string to uppercase.&#xA;&#xA;Return:&#xA;   Object with all characters of $str being title-cased;;d4,770;;b1,0;;m">
			</treenode>
			<treenode node="toUpperCase;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;795;5;800;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    toUpperCase()&#xA;&#xA;Description&#xA;     Converts all characters in the string to uppercase. An alias for PHP's mb_strtoupper().&#xA;&#xA;Return:&#xA;   Object with all characters of $str being uppercase;;d4,796;;b1,0;;m">
			</treenode>
			<treenode node="trait_uses_recursive;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;751;5;760;;;;vpos;;varray;;r&#xA;Definition&#xA;    trait_uses_recursive($trait)&#xA;&#xA;Description&#xA;     Returns all traits used by a trait and its traits.&#xA;&#xA;Parameters:&#xA;    string $trait;;d4,752;;b0,0;;mstring $trait;;p">
				<treenode node="trait;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f34;751;40;751;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="trashed;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletes.php;f11;98;5;101;;;;vpos;;vbool;;r&#xA;Definition&#xA;    trashed()&#xA;&#xA;Description&#xA;     Determine if the model instance has been soft-deleted.;;d4,99;;b1,0;;m">
			</treenode>
			<treenode node="trim;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;1066;5;1071;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    trim($chars = null)&#xA;&#xA;Description&#xA;     Returns a string with whitespace removed from the start and end of the string. Supports the removal of unicode whitespace. Accepts an optional string of characters to strip instead of the defaults.&#xA;&#xA;Parameters:&#xA;    string $chars - Optional string of characters to strip&#xA;&#xA;Return:&#xA;   Object with a trimmed $str;;d4,1067;;b1,0;;mstring $chars;;p">
				<treenode node="chars;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f25;1066;31;1066;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="trimLeft;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;1081;5;1086;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    trimLeft($chars = null)&#xA;&#xA;Description&#xA;     Returns a string with whitespace removed from the start of the string. Supports the removal of unicode whitespace. Accepts an optional string of characters to strip instead of the defaults.&#xA;&#xA;Parameters:&#xA;    string $chars - Optional string of characters to strip&#xA;&#xA;Return:&#xA;   Object with a trimmed $str;;d4,1082;;b1,0;;mstring $chars;;p">
				<treenode node="chars;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f29;1081;35;1081;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="trimRight;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;1096;5;1101;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    trimRight($chars = null)&#xA;&#xA;Description&#xA;     Returns a string with whitespace removed from the end of the string. Supports the removal of unicode whitespace. Accepts an optional string of characters to strip instead of the defaults.&#xA;&#xA;Parameters:&#xA;    string $chars - Optional string of characters to strip&#xA;&#xA;Return:&#xA;   Object with a trimmed $str;;d4,1097;;b1,0;;mstring $chars;;p">
				<treenode node="chars;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f30;1096;36;1096;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="truncate;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;968;5;983;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    truncate($length, $substring = '')&#xA;&#xA;Description&#xA;     Truncates the string to a given length. If $substring is provided, and truncating occurs, the string is further truncated so that the substring may be appended without exceeding the desired length.&#xA;&#xA;Parameters:&#xA;    int $length - Desired length of the truncated string&#xA;    string $substring - The substring to append if it can fit&#xA;&#xA;Return:&#xA;   Object with the resulting $str after truncating;;d4,969;;b1,0;;mint $length;;pstring $substring;;p">
				<treenode node="length;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f29;968;36;968;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="substring;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f38;968;48;968;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="underscored;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;290;5;293;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    underscored()&#xA;&#xA;Description&#xA;     Returns a lowercase and trimmed string separated by underscores. Underscores are inserted before uppercase characters (with the exception of the first character of the string), and in place of spaces as well as dashes.&#xA;&#xA;Return:&#xA;   Object with an underscored $str;;d4,291;;b1,0;;m">
			</treenode>
			<treenode node="upperCamelize;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;265;5;268;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    upperCamelize()&#xA;&#xA;Description&#xA;     Returns an UpperCamelCase version of the supplied string. It trims surrounding spaces, capitalizes letters following digits, spaces, dashes and underscores, and removes spaces, dashes, underscores.&#xA;&#xA;Return:&#xA;   Object with $str in UpperCamelCase;;d4,266;;b1,0;;m">
			</treenode>
			<treenode node="upperCaseFirst;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f11;200;5;209;;;;vpos;;vStringy;;r&#xA;Definition&#xA;    upperCaseFirst()&#xA;&#xA;Description&#xA;     Converts the first character of the supplied string to upper case.&#xA;&#xA;Return:&#xA;   Object with the first character of $str being upper case;;d4,201;;b1,0;;m">
			</treenode>
			<treenode node="value;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;770;5;773;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    value($value)&#xA;&#xA;Description&#xA;     Return the default value of the given value.&#xA;&#xA;Parameters:&#xA;    mixed $value;;d4,771;;b0,0;;mmixed $value;;p">
				<treenode node="value;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f19;770;25;770;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="windows_os;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;782;5;785;;;;vpos;;vbool;;r&#xA;Definition&#xA;    windows_os()&#xA;&#xA;Description&#xA;     Determine whether the current envrionment is Windows based.;;d4,783;;b0,0;;m">
			</treenode>
			<treenode node="with;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f4;795;5;798;;;;vpos;;vmixed;;r&#xA;Definition&#xA;    with($object)&#xA;&#xA;Description&#xA;     Return the given object. Useful for chaining.&#xA;&#xA;Parameters:&#xA;    mixed $object;;d4,796;;b0,0;;mmixed $object;;p">
				<treenode node="object;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php;f18;795;25;795;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="withTrashed;PHP:Function Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletes.php;f18;108;5;111;;;;vpos;;v;;r&#xA;Definition&#xA;    withTrashed()&#xA;&#xA;Description&#xA;     Get a new query builder that includes soft deletes.;;d4,109;;b1,5;;m">
			</treenode>
			<treenode node="_tag;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\build.php;f26;26;31;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="archive;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\build.php;f4;38;12;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="argc;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\other\build_phar.php;f4;29;9;29;;;;vpos;;v;;r&#xA;Description&#xA;     If we pass an (optional) path to a private key as a second argument, we will sign the Phar with OpenSSL.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="argv;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\other\build_phar.php;f22;30;27;30;;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\build.php;f13;21;18;21;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="article;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\index.php;f28;18;36;18;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="autoload;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\build.php;f4;73;13;73;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="base;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\build.php;f12;56;17;56;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="baseDir;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\autoload_psr4.php;f0;5;8;5;;D:\OSPanel\domains\localhost\eloquent\vendor\composer\autoload_namespaces.php;f0;5;8;5;;D:\OSPanel\domains\localhost\eloquent\vendor\composer\autoload_files.php;f0;5;8;5;;D:\OSPanel\domains\localhost\eloquent\vendor\composer\autoload_classmap.php;f0;5;8;5;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="branch;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\build.php;f4;43;11;43;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="container;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Traits\CapsuleManagerTrait.php;f14;21;24;21;;;;vpos;;v;;r&#xA;Description&#xA;     The container instance.;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="currentBranch;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\build.php;f0;3;14;3;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="data;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Resources\unidata\upperCase.php;f7;2;12;2;;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Resources\unidata\lowerCase.php;f7;2;12;2;;;;vpos;;v;;r;;d-1,-1;;b0,5;;m">
			</treenode>
			<treenode node="details;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\other\build_phar.php;f12;46;20;46;;;;vpos;;v;;r&#xA;Description&#xA;     Save the corresponding public key to the file;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="directory;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\build.php;f49;53;59;53;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="dist;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\other\build_phar.php;f0;1;5;1;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="dt;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\index.php;f0;9;3;9;;;;vposDatabase;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="e;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\random.php;f35;188;37;188;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="encoding;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f14;19;23;19;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="file;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\build.php;f40;63;45;63;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="filePath;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\build.php;f20;65;29;65;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="files;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\build.php;f12;58;18;58;;;;vposRecursiveIteratorIterator;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="forceDeleting;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletes.php;f14;11;28;11;;;;vposbool;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="instance;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Traits\CapsuleManagerTrait.php;f21;14;30;14;;;;vposobject;;v;;r;;d-1,-1;;b2,5;;m">
			</treenode>
			<treenode node="int;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\psalm-autoload.php;f0;8;4;8;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="macros;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Traits\Macroable.php;f21;14;28;14;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
			</treenode>
			<treenode node="match;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\build.php;f67;4;73;4;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="messages;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Translator.php;f21;20;30;20;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
			</treenode>
			<treenode node="name;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\build.php;f31;63;36;63;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="phar;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\other\build_phar.php;f0;8;5;8;;;;vposPhar;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="pkey;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\other\build_phar.php;f8;38;13;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="pkeyFile;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\other\build_phar.php;f4;34;13;34;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="private;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\other\build_phar.php;f4;36;12;36;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="RandomCompat_basedir;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\random.php;f8;91;29;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="RandomCompat_disabled_classes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\random.php;f8;176;38;176;;;;vpos;;v;;r&#xA;Description&#xA;     This is a Windows-specific fallback, for when the mcrypt extension isn't loaded.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="RandomCompat_open_basedir;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\random.php;f12;94;38;94;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="RandomCompatCOMtest;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\random.php;f16;183;36;183;;;;vposCOM;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="RandomCompatDIR;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\random.php;f0;54;16;54;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="RandomCompatUrandom;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\random.php;f8;90;28;90;;;;vpos;;v;;r&#xA;Description&#xA;     Reading directly from /dev/urandom:;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="RandomCompatversion;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\random.php;f4;33;24;33;;;;vpos;;v;;r&#xA;Description&#xA;     Random_* Compatibility Library for using the new PHP 7 random_* API in PHP 5 projects;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="ref;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\build.php;f28;12;32;12;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="remotes;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\build.php;f0;8;8;8;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="result;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Resources\unidata\upperCase.php;f0;1105;7;1105;;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Resources\unidata\lowerCase.php;f0;1097;7;1097;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="singleton;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Translator.php;f21;13;31;13;;;;vposstatic;;v;;r;;d-1,-1;;b2,5;;m">
			</treenode>
			<treenode node="str;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php;f14;11;18;11;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="tag;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\build.php;f0;21;4;21;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="tags;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\build.php;f0;12;5;12;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="tagsCommand;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\build.php;f0;9;12;9;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="user;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\index.php;f18;16;23;16;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="users;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\index.php;f0;14;6;14;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="vendorDir;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\composer\autoload_psr4.php;f0;4;10;4;;D:\OSPanel\domains\localhost\eloquent\vendor\composer\autoload_namespaces.php;f0;4;10;4;;D:\OSPanel\domains\localhost\eloquent\vendor\composer\autoload_files.php;f0;4;10;4;;D:\OSPanel\domains\localhost\eloquent\vendor\composer\autoload_classmap.php;f0;4;10;4;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="view;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\fixtures\extractor\translation.html.php;f11;1;16;1;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="zip;PHP:Var Name;D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\build.php;f4;49;8;49;;;;vposZipArchive;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
		</phptree>
		<jstree>
		</jstree>
		<scsstree>
		</scsstree>
		<lesstree>
		</lesstree>
	</codestructure><todoblock>
		<todofile name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\PoFileLoader.php">
			<todo name="TODO: this fails when comments or contexts are added" pos="17;89"/>
		</todofile>
	</todoblock>
	<dbgurls>
	</dbgurls>
	<filescache>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Writer\TranslationWriterInterface.php" crc="1380278977"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Writer\TranslationWriter.php" crc="1658479652"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Util\ArrayConverter.php" crc="-1563356747"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Writer\TranslationWriterTest.php" crc="-552112512"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Util\ArrayConverterTest.php" crc="-2135438875"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\YamlFileLoaderTest.php" crc="-223911607"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\XliffFileLoaderTest.php" crc="199449350"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\QtFileLoaderTest.php" crc="-2027909421"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\PoFileLoaderTest.php" crc="-868491489"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\PhpFileLoaderTest.php" crc="-434372180"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\MoFileLoaderTest.php" crc="1220028289"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\LocalizedTestCase.php" crc="426876692"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\JsonFileLoaderTest.php" crc="119813949"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\IniFileLoaderTest.php" crc="1812113618"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\IcuResFileLoaderTest.php" crc="-1297054282"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\IcuDatFileLoaderTest.php" crc="1660143686"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Loader\CsvFileLoaderTest.php" crc="1857564063"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Formatter\MessageFormatterTest.php" crc="1645733379"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\fixtures\resourcebundle\dat\packagelist.txt" crc="-1372690478"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\fixtures\resourcebundle\dat\fr.txt" crc="1289085887"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\fixtures\resourcebundle\dat\en.txt" crc="731553470"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\fixtures\extractor\this.is.a.template.format.engine" crc="0"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\fixtures\extractor\resource.format.engine" crc="0"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\fixtures\resources.php" crc="-986009103"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\fixtures\resources.ini" crc="1187522503"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\fixtures\empty.ini" crc="0"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Extractor\PhpExtractorTest.php" crc="-1840285416"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\YamlFileDumperTest.php" crc="2103528027"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\XliffFileDumperTest.php" crc="1684745506"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\QtFileDumperTest.php" crc="-1974286628"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\PoFileDumperTest.php" crc="850494197"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\PhpFileDumperTest.php" crc="-1392475407"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\MoFileDumperTest.php" crc="-707801093"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\JsonFileDumperTest.php" crc="608124200"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\IniFileDumperTest.php" crc="508488119"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\IcuResFileDumperTest.php" crc="-1889891254"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\FileDumperTest.php" crc="-245174554"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Dumper\CsvFileDumperTest.php" crc="658596206"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\DependencyInjection\TranslationPassTest.php" crc="-520476583"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\DependencyInjection\TranslationExtractorPassTest.php" crc="1807685538"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\DependencyInjection\TranslationDumperPassTest.php" crc="-910934218"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\DataCollector\TranslationDataCollectorTest.php" crc="-290366454"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Catalogue\TargetOperationTest.php" crc="-1174098149"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Catalogue\MergeOperationTest.php" crc="1009079490"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\Catalogue\AbstractOperationTest.php" crc="1004239386"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorTest.php" crc="-392727970"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\TranslatorCacheTest.php" crc="-886134663"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\PluralizationRulesTest.php" crc="558188626"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\MessageSelectorTest.php" crc="-1977999739"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\MessageCatalogueTest.php" crc="121240549"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\LoggingTranslatorTest.php" crc="-319494396"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\IntervalTest.php" crc="969373883"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\IdentityTranslatorTest.php" crc="-1341723471"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Tests\DataCollectorTranslatorTest.php" crc="-673526441"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Reader\TranslationReaderInterface.php" crc="-22392163"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Reader\TranslationReader.php" crc="2132211410"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\YamlFileLoader.php" crc="460604345"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\XliffFileLoader.php" crc="-1420556261"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\QtFileLoader.php" crc="118619642"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\PoFileLoader.php" crc="906691641"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\PhpFileLoader.php" crc="-1578035811"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\MoFileLoader.php" crc="-1253994911"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\LoaderInterface.php" crc="909690542"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\JsonFileLoader.php" crc="-1408101016"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\IniFileLoader.php" crc="-554050894"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\IcuResFileLoader.php" crc="-781021278"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\IcuDatFileLoader.php" crc="592829822"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\FileLoader.php" crc="1749305839"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\CsvFileLoader.php" crc="-1374025281"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Loader\ArrayLoader.php" crc="549783266"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Formatter\MessageFormatterInterface.php" crc="2086047178"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Formatter\MessageFormatter.php" crc="1229960619"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Formatter\ChoiceMessageFormatterInterface.php" crc="2090224617"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpStringTokenParser.php" crc="-313815106"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\PhpExtractor.php" crc="-1029266188"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\ExtractorInterface.php" crc="143639521"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\ChainExtractor.php" crc="-1942369029"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Extractor\AbstractFileExtractor.php" crc="-414668807"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Exception\RuntimeException.php" crc="1317125467"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Exception\NotFoundResourceException.php" crc="-660254649"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Exception\LogicException.php" crc="-1963499197"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Exception\InvalidResourceException.php" crc="-1910835680"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Exception\InvalidArgumentException.php" crc="-2146087106"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Exception\ExceptionInterface.php" crc="184064967"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\YamlFileDumper.php" crc="-581089091"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\XliffFileDumper.php" crc="-487417825"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\QtFileDumper.php" crc="1665640313"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\PoFileDumper.php" crc="1242156810"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\PhpFileDumper.php" crc="992393371"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\MoFileDumper.php" crc="1390134564"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\JsonFileDumper.php" crc="-1727096733"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\IniFileDumper.php" crc="622768866"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\IcuResFileDumper.php" crc="-1700142907"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\FileDumper.php" crc="-1335019717"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\DumperInterface.php" crc="1018884016"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Dumper\CsvFileDumper.php" crc="650213209"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DependencyInjection\TranslatorPass.php" crc="165258147"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DependencyInjection\TranslationExtractorPass.php" crc="-492048772"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DependencyInjection\TranslationDumperPass.php" crc="1207738825"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollector\TranslationDataCollector.php" crc="-254583482"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Command\XliffLintCommand.php" crc="1942089231"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\TargetOperation.php" crc="-175387711"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\OperationInterface.php" crc="-459006463"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\MergeOperation.php" crc="-1952094321"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Catalogue\AbstractOperation.php" crc="1159982321"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\TranslatorInterface.php" crc="-501854355"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\TranslatorBagInterface.php" crc="589148180"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Translator.php" crc="-2069892089"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\PluralizationRules.php" crc="1386802445"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MetadataAwareInterface.php" crc="-1099105003"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageSelector.php" crc="2077676763"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogueInterface.php" crc="763611612"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\MessageCatalogue.php" crc="521782156"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\LoggingTranslator.php" crc="958494496"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\Interval.php" crc="-795568157"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\IdentityTranslator.php" crc="1201575056"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\translation\DataCollectorTranslator.php" crc="949134043"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Resources\unidata\upperCase.php" crc="-112125828"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Resources\unidata\lowerCase.php" crc="-1999466262"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\Mbstring.php" crc="-2073361801"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\symfony\polyfill-mbstring\bootstrap.php" crc="403631936"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\other\ide_stubs\libsodium.php" crc="-923354616"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\other\ide_stubs\com_exception.php" crc="1473005470"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\other\ide_stubs\COM.php" crc="622690044"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\other\build_phar.php" crc="880634859"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\random_int.php" crc="1922638294"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\random_bytes_openssl.php" crc="-1994870660"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\random_bytes_mcrypt.php" crc="-949239208"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\random_bytes_libsodium_legacy.php" crc="1292513123"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\random_bytes_libsodium.php" crc="-723771400"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\random_bytes_dev_urandom.php" crc="1808652398"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\random_bytes_com_dotnet.php" crc="-1453353426"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\random.php" crc="-1367870651"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\error_polyfill.php" crc="-1728127816"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\cast_to_int.php" crc="-1483311973"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\lib\byte_safe_strings.php" crc="-1190475759"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\psalm.xml" crc="1655655137"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\paragonie\random_compat\psalm-autoload.php" crc="-1979140323"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\zh_TW.php" crc="1455059690"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\zh.php" crc="1828494940"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\vi.php" crc="1650518697"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\uz.php" crc="-350682896"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\ur.php" crc="-1127534916"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\uk.php" crc="114322300"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\tr.php" crc="1721544356"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\th.php" crc="-446729994"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\sv.php" crc="-1637275888"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\sr_ME.php" crc="56143810"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\sr_Latn_ME.php" crc="-1445652895"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\sr_Cyrl_ME.php" crc="-1337549694"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\sr_Cyrl.php" crc="638331497"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\sr.php" crc="-891012880"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\sq.php" crc="43620663"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\sl.php" crc="936416197"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\sk.php" crc="-2053284981"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\ru.php" crc="-827508997"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\ro.php" crc="-892420402"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\pt_BR.php" crc="1564289137"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\pt.php" crc="1121615653"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\ps.php" crc="-1031018301"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\pl.php" crc="2006138052"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\no.php" crc="2102389552"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\nl.php" crc="-1262417679"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\ms.php" crc="-382071305"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\mn.php" crc="-1347073096"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\mk.php" crc="2012292969"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\lv.php" crc="153909813"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\lt.php" crc="562269936"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\ko.php" crc="1425268580"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\km.php" crc="-1442664891"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\kk.php" crc="353699846"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\ka.php" crc="1859957902"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\ja.php" crc="217695502"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\it.php" crc="1322790769"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\id.php" crc="1832395109"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\hy.php" crc="1324274630"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\hu.php" crc="-1860933614"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\hr.php" crc="-1022997385"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\he.php" crc="492759745"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\gu.php" crc="-1898199164"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\gl.php" crc="-918578656"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\fr.php" crc="-98854928"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\fo.php" crc="1443812743"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\fi.php" crc="1744245172"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\fa.php" crc="329177474"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\eu.php" crc="1241952635"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\et.php" crc="-303666048"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\es.php" crc="941535627"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\eo.php" crc="-1695869513"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\en.php" crc="1869489875"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\el.php" crc="-218639608"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\dv_MV.php" crc="-1562222475"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\de.php" crc="2003334459"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\da.php" crc="-393143194"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\cy.php" crc="-9841942"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\cs.php" crc="-285736750"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\ca.php" crc="-708413764"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\bn.php" crc="1497964158"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\bg.php" crc="1225294511"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\az.php" crc="2032288284"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\ar_Shakl.php" crc="2134660043"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\ar.php" crc="-1894010436"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Lang\af.php" crc="-1545120579"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Exceptions\InvalidDateException.php" crc="-1198857483"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Translator.php" crc="804887491"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\CarbonInterval.php" crc="-1680001154"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\Carbon\Carbon.php" crc="-1163174171"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\src\JsonSerializable.php" crc="-862382112"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\nesbot\carbon\build.php" crc="-1444565973"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Traits\Macroable.php" crc="-1735795132"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Traits\CapsuleManagerTrait.php" crc="1792995691"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\View.php" crc="1914447781"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Validator.php" crc="-1896805063"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\URL.php" crc="-173227484"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Storage.php" crc="919642749"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Session.php" crc="-1351802146"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Schema.php" crc="-1318450094"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Route.php" crc="2136956578"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Response.php" crc="455310159"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Request.php" crc="638128031"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Redis.php" crc="1036883595"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Redirect.php" crc="1804026999"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Queue.php" crc="-879601005"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Password.php" crc="-1485387196"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Mail.php" crc="-389358108"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Log.php" crc="-1273219298"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Lang.php" crc="-1891454047"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Input.php" crc="-191899830"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Hash.php" crc="1064325926"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Gate.php" crc="-142097614"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\File.php" crc="-246912826"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Facade.php" crc="1455874996"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Event.php" crc="-1526844155"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\DB.php" crc="-1076432229"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Crypt.php" crc="-1844463525"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Cookie.php" crc="1904926564"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Config.php" crc="1144473092"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Cache.php" crc="1165208447"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Bus.php" crc="-2141225326"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Blade.php" crc="-919101068"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Auth.php" crc="156219029"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\Artisan.php" crc="-1253122067"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Facades\App.php" crc="900486626"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Debug\HtmlDumper.php" crc="117107107"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Debug\Dumper.php" crc="928977811"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ViewErrorBag.php" crc="-1206696147"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Str.php" crc="-725743987"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ServiceProvider.php" crc="897965469"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Pluralizer.php" crc="-1888987710"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\NamespacedItemResolver.php" crc="1285969072"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\MessageBag.php" crc="2004787468"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Manager.php" crc="-97156228"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\HtmlString.php" crc="193851173"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\helpers.php" crc="-1887829356"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Fluent.php" crc="1441049466"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Collection.php" crc="326501949"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\ClassLoader.php" crc="331737568"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\Arr.php" crc="-1174012057"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\support\AggregateServiceProvider.php" crc="-1508282677"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SqlServerGrammar.php" crc="991942054"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\SQLiteGrammar.php" crc="-1306454965"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\PostgresGrammar.php" crc="363979092"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\MySqlGrammar.php" crc="1679514629"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Grammars\Grammar.php" crc="-1662120097"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\MySqlBuilder.php" crc="-967439687"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Builder.php" crc="-602889689"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Schema\Blueprint.php" crc="-1764893170"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\SqlServerProcessor.php" crc="-241208722"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\SQLiteProcessor.php" crc="893717105"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\Processor.php" crc="1609599211"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\PostgresProcessor.php" crc="2056864981"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Processors\MySqlProcessor.php" crc="1883207001"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SqlServerGrammar.php" crc="-2062355168"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\SQLiteGrammar.php" crc="221586315"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\PostgresGrammar.php" crc="558056911"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\MySqlGrammar.php" crc="-78388343"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Grammars\Grammar.php" crc="-1894364623"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\JoinClause.php" crc="-1563534683"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Expression.php" crc="1433846148"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Query\Builder.php" crc="-858081549"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migrator.php" crc="1109377126"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationRepositoryInterface.php" crc="-265688232"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\MigrationCreator.php" crc="1560884788"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\Migration.php" crc="-198874486"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Migrations\DatabaseMigrationRepository.php" crc="-1418239988"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Relation.php" crc="-1124997129"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\Pivot.php" crc="-19484605"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphToMany.php" crc="-1929307319"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphTo.php" crc="-24352147"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphPivot.php" crc="-1066459000"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOneOrMany.php" crc="1249829570"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphOne.php" crc="628948280"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\MorphMany.php" crc="2122481234"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOneOrMany.php" crc="-853923301"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasOne.php" crc="1642943430"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasManyThrough.php" crc="1505790123"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\HasMany.php" crc="-447046653"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsToMany.php" crc="-1881676857"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Relations\BelongsTo.php" crc="-1632169672"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletingScope.php" crc="768197308"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\SoftDeletes.php" crc="1709347448"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\ScopeInterface.php" crc="-770979017"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\QueueEntityResolver.php" crc="-676604642"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\ModelNotFoundException.php" crc="13734673"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Model.php" crc="544882586"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\MassAssignmentException.php" crc="-651360631"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\FactoryBuilder.php" crc="1889169191"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Factory.php" crc="1165631044"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Collection.php" crc="-783688443"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Eloquent\Builder.php" crc="1636274790"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Seeds\SeederMakeCommand.php" crc="-494555316"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Seeds\SeedCommand.php" crc="1981211252"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\StatusCommand.php" crc="-378361014"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\RollbackCommand.php" crc="-140622084"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\ResetCommand.php" crc="1349113597"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\RefreshCommand.php" crc="-229874068"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\MigrateMakeCommand.php" crc="-1373363611"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\MigrateCommand.php" crc="82520698"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\InstallCommand.php" crc="-1619184320"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Console\Migrations\BaseCommand.php" crc="1024306705"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\SqlServerConnector.php" crc="526821241"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\SQLiteConnector.php" crc="2091665047"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\PostgresConnector.php" crc="927130309"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\MySqlConnector.php" crc="-983576623"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectorInterface.php" crc="1112672984"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\Connector.php" crc="683387397"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connectors\ConnectionFactory.php" crc="-1711775410"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Capsule\Manager.php" crc="1954066161"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\SqlServerConnection.php" crc="-1228286992"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\SQLiteConnection.php" crc="-750090298"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\SeedServiceProvider.php" crc="-1833030481"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Seeder.php" crc="1516644205"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\QueryException.php" crc="1608402451"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\PostgresConnection.php" crc="-1630760156"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\MySqlConnection.php" crc="-1869899682"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\MigrationServiceProvider.php" crc="-207282154"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Grammar.php" crc="1513756654"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseServiceProvider.php" crc="-1849178022"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\DatabaseManager.php" crc="-396154895"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionResolverInterface.php" crc="-1009592746"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionResolver.php" crc="-1627434594"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\ConnectionInterface.php" crc="-1185136522"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\database\Connection.php" crc="1222575007"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\View\View.php" crc="-1427217408"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\View\Factory.php" crc="-1919833803"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\Validator.php" crc="-1081517982"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\ValidationException.php" crc="776995736"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\ValidatesWhenResolved.php" crc="1349158119"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\UnauthorizedException.php" crc="284813934"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Validation\Factory.php" crc="-2126135247"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\Renderable.php" crc="-564136705"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\MessageProvider.php" crc="-1423923391"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\MessageBag.php" crc="1223430693"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\Jsonable.php" crc="-665759017"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\Htmlable.php" crc="596616427"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Support\Arrayable.php" crc="-679846436"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\UrlRoutable.php" crc="-946762630"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\UrlGenerator.php" crc="-1918141026"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\TerminableMiddleware.php" crc="-1942354878"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\ResponseFactory.php" crc="-1909405391"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\Registrar.php" crc="-835103908"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Routing\Middleware.php" crc="138563490"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Redis\Database.php" crc="-25328661"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\ShouldQueue.php" crc="-20417439"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\ShouldBeQueued.php" crc="1005100397"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\QueueableEntity.php" crc="-470969140"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Queue.php" crc="-1269494200"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Monitor.php" crc="119078921"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Job.php" crc="1755528166"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\Factory.php" crc="-43754660"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\EntityResolver.php" crc="-908961121"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Queue\EntityNotFoundException.php" crc="-596574658"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pipeline\Pipeline.php" crc="737226280"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pipeline\Hub.php" crc="-1304270097"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pagination\Presenter.php" crc="901686884"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pagination\Paginator.php" crc="165445287"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Pagination\LengthAwarePaginator.php" crc="-1903379113"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Mail\MailQueue.php" crc="1189349394"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Mail\Mailer.php" crc="-152763429"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Logging\Log.php" crc="-320782970"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Http\Kernel.php" crc="619967650"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Hashing\Hasher.php" crc="-873877735"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Foundation\Application.php" crc="-58163673"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Filesystem.php" crc="-418450167"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\FileNotFoundException.php" crc="1689240625"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Factory.php" crc="-553636969"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Filesystem\Cloud.php" crc="582289994"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Events\Dispatcher.php" crc="-1474667343"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Encryption\EncryptException.php" crc="1241934492"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Encryption\Encrypter.php" crc="370202630"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Encryption\DecryptException.php" crc="1980641824"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Debug\ExceptionHandler.php" crc="-430594055"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Database\ModelIdentifier.php" crc="253117481"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cookie\QueueingFactory.php" crc="-1782069779"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cookie\Factory.php" crc="-1991294483"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\ContextualBindingBuilder.php" crc="-792354558"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\Container.php" crc="-1616825017"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Container\BindingResolutionException.php" crc="872079726"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Console\Kernel.php" crc="-634602810"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Console\Application.php" crc="1992440003"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Config\Repository.php" crc="476574605"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Store.php" crc="621979397"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Repository.php" crc="1116738612"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Cache\Factory.php" crc="-2135825844"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Bus\SelfHandling.php" crc="160043316"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Bus\QueueingDispatcher.php" crc="1817847751"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Bus\HandlerResolver.php" crc="-2020413685"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Bus\Dispatcher.php" crc="-597321022"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Broadcasting\ShouldBroadcastNow.php" crc="1205979820"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Broadcasting\ShouldBroadcast.php" crc="1278936093"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Broadcasting\Factory.php" crc="-455592870"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Broadcasting\Broadcaster.php" crc="-1099816500"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Access\Gate.php" crc="70688598"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Access\Authorizable.php" crc="109280698"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\UserProvider.php" crc="-1027436302"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Registrar.php" crc="457068107"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\PasswordBroker.php" crc="-586108079"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Guard.php" crc="-542101305"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\CanResetPassword.php" crc="989324084"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\contracts\Auth\Authenticatable.php" crc="-2055010978"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\ContextualBindingBuilder.php" crc="-114197957"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\Container.php" crc="1843584184"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\illuminate\container\BindingResolutionException.php" crc="1929300148"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\doctrine\inflector\lib\Doctrine\Common\Inflector\Inflector.php" crc="1621796250"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StringyTest.php" crc="493677782"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\StaticStringyTest.php" crc="1967267347"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CreateTest.php" crc="593470771"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\tests\CommonTest.php" crc="1847314490"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Stringy.php" crc="1515203459"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\StaticStringy.php" crc="1354079923"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\src\Create.php" crc="614303374"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\danielstjules\stringy\LICENSE.txt" crc="525990675"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\composer\ClassLoader.php" crc="819986669"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\composer\autoload_static.php" crc="1896307438"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\composer\autoload_real.php" crc="95378661"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\composer\autoload_psr4.php" crc="-2119233887"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\composer\autoload_namespaces.php" crc="-685646988"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\composer\autoload_files.php" crc="1100767372"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\composer\autoload_classmap.php" crc="123926709"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\vendor\autoload.php" crc="760686972"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\app\models\Database.php" crc="1742790867"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\index.php" crc="-635749632"/>
		<file name="D:\OSPanel\domains\localhost\eloquent\config.php" crc="-1637331824"/>
	</filescache>
</project>
